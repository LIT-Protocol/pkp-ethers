{"version":3,"file":"ethers.esm.js","sources":["../../../node_modules/bn.js/lib/bn.js","../../logger/src.ts/_version.ts","../../logger/src.ts/index.ts","../../bytes/src.ts/_version.ts","../../bytes/src.ts/index.ts","../../bignumber/src.ts/_version.ts","../../bignumber/src.ts/bignumber.ts","../../bignumber/src.ts/fixednumber.ts","../../properties/src.ts/_version.ts","../../properties/src.ts/index.ts","../../abi/src.ts/_version.ts","../../abi/src.ts/fragments.ts","../../abi/src.ts/coders/abstract-coder.ts","../../../node_modules/js-sha3/src/sha3.js","../../keccak256/src.ts/index.ts","../../rlp/src.ts/_version.ts","../../rlp/src.ts/index.ts","../../address/src.ts/_version.ts","../../address/src.ts/index.ts","../../abi/src.ts/coders/address.ts","../../abi/src.ts/coders/anonymous.ts","../../abi/src.ts/coders/array.ts","../../abi/src.ts/coders/boolean.ts","../../abi/src.ts/coders/bytes.ts","../../abi/src.ts/coders/fixed-bytes.ts","../../abi/src.ts/coders/null.ts","../../constants/src.ts/addresses.ts","../../constants/src.ts/bignumbers.ts","../../constants/src.ts/hashes.ts","../../constants/src.ts/strings.ts","../../constants/src.ts/index.ts","../../abi/src.ts/coders/number.ts","../../strings/src.ts/_version.ts","../../strings/src.ts/utf8.ts","../../strings/src.ts/bytes32.ts","../../strings/src.ts/idna.ts","../../strings/src.ts/index.ts","../../abi/src.ts/coders/string.ts","../../abi/src.ts/coders/tuple.ts","../../abi/src.ts/abi-coder.ts","../../hash/src.ts/id.ts","../../hash/src.ts/_version.ts","../../base64/src.ts/browser-base64.ts","../../base64/src.ts/index.ts","../../hash/src.ts/ens-normalize/decoder.ts","../../hash/src.ts/ens-normalize/include.ts","../../hash/src.ts/ens-normalize/lib.ts","../../hash/src.ts/namehash.ts","../../hash/src.ts/message.ts","../../hash/src.ts/typed-data.ts","../../hash/src.ts/index.ts","../../abi/src.ts/interface.ts","../../abi/src.ts/index.ts","../../abstract-provider/src.ts/_version.ts","../../abstract-provider/src.ts/index.ts","../../abstract-signer/src.ts/_version.ts","../../abstract-signer/src.ts/index.ts","../../../node_modules/minimalistic-assert/index.js","../../../node_modules/inherits/inherits_browser.js","../../../node_modules/inherits/inherits.js","../../../node_modules/hash.js/lib/hash/utils.js","../../../node_modules/hash.js/lib/hash/common.js","../../../node_modules/hash.js/lib/hash/sha/common.js","../../../node_modules/hash.js/lib/hash/sha/1.js","../../../node_modules/hash.js/lib/hash/sha/256.js","../../../node_modules/hash.js/lib/hash/sha/224.js","../../../node_modules/hash.js/lib/hash/sha/512.js","../../../node_modules/hash.js/lib/hash/sha/384.js","../../../node_modules/hash.js/lib/hash/sha.js","../../../node_modules/hash.js/lib/hash/ripemd.js","../../../node_modules/hash.js/lib/hash/hmac.js","../../../node_modules/hash.js/lib/hash.js","../../../node_modules/minimalistic-crypto-utils/lib/utils.js","../../../node_modules/elliptic/lib/elliptic/utils.js","../../../node_modules/elliptic/lib/elliptic/curve/base.js","../../../node_modules/elliptic/lib/elliptic/curve/short.js","../../../node_modules/elliptic/lib/elliptic/curve/index.js","../../../node_modules/elliptic/lib/elliptic/curves.js","../../../node_modules/hmac-drbg/lib/hmac-drbg.js","../../../node_modules/elliptic/lib/elliptic/ec/key.js","../../../node_modules/elliptic/lib/elliptic/ec/signature.js","../../../node_modules/elliptic/lib/elliptic/ec/index.js","../../../node_modules/elliptic/lib/elliptic.js","../../signing-key/lib.esm/elliptic.js","../../signing-key/src.ts/_version.ts","../../signing-key/src.ts/index.ts","../../transactions/src.ts/_version.ts","../../transactions/src.ts/index.ts","../../contracts/src.ts/_version.ts","../../contracts/src.ts/index.ts","../../../.package_node_modules/wallet/@ethersproject/address/src.ts/_version.ts","../../../.package_node_modules/wallet/@ethersproject/address/src.ts/index.ts","../../../.package_node_modules/wallet/@ethersproject/abstract-provider/src.ts/_version.ts","../../../.package_node_modules/wallet/@ethersproject/abstract-provider/src.ts/index.ts","../../../.package_node_modules/wallet/@ethersproject/abstract-signer/src.ts/_version.ts","../../../.package_node_modules/wallet/@ethersproject/abstract-signer/src.ts/index.ts","../../../.package_node_modules/wallet/@ethersproject/bytes/src.ts/_version.ts","../../../.package_node_modules/wallet/@ethersproject/bytes/src.ts/index.ts","../../../.package_node_modules/wallet/@ethersproject/hash/src.ts/id.ts","../../../.package_node_modules/wallet/@ethersproject/hash/src.ts/_version.ts","../../../.package_node_modules/wallet/@ethersproject/hash/src.ts/ens-normalize/decoder.ts","../../../.package_node_modules/wallet/@ethersproject/hash/src.ts/ens-normalize/include.ts","../../../.package_node_modules/wallet/@ethersproject/hash/src.ts/ens-normalize/lib.ts","../../../.package_node_modules/wallet/@ethersproject/hash/src.ts/namehash.ts","../../../.package_node_modules/wallet/@ethersproject/hash/src.ts/message.ts","../../../.package_node_modules/wallet/@ethersproject/hash/src.ts/typed-data.ts","../../../.package_node_modules/wallet/@ethersproject/hash/src.ts/index.ts","../../basex/src.ts/index.ts","../../sha2/src.ts/types.ts","../../sha2/src.ts/_version.ts","../../sha2/src.ts/browser-sha2.ts","../../pbkdf2/src.ts/browser-pbkdf2.ts","../../wordlists/src.ts/_version.ts","../../wordlists/src.ts/wordlist.ts","../../wordlists/src.ts/lang-en.ts","../../wordlists/src.ts/browser-wordlists.ts","../../wordlists/src.ts/index.ts","../../../.package_node_modules/wallet/@ethersproject/hdnode/src.ts/_version.ts","../../../.package_node_modules/wallet/@ethersproject/hdnode/src.ts/index.ts","../../../.package_node_modules/wallet/@ethersproject/keccak256/src.ts/index.ts","../../../.package_node_modules/wallet/@ethersproject/properties/src.ts/_version.ts","../../../.package_node_modules/wallet/@ethersproject/properties/src.ts/index.ts","../../../.package_node_modules/wallet/@ethersproject/random/src.ts/_version.ts","../../../.package_node_modules/wallet/@ethersproject/random/src.ts/browser-random.ts","../../../.package_node_modules/wallet/@ethersproject/random/src.ts/shuffle.ts","../../../.package_node_modules/wallet/@ethersproject/random/src.ts/index.ts","../../../.package_node_modules/wallet/node_modules/minimalistic-assert/index.js","../../../.package_node_modules/wallet/node_modules/minimalistic-crypto-utils/lib/utils.js","../../../.package_node_modules/wallet/node_modules/elliptic/lib/elliptic/utils.js","../../../.package_node_modules/wallet/node_modules/elliptic/lib/elliptic/curve/base.js","../../../.package_node_modules/wallet/node_modules/inherits/inherits_browser.js","../../../.package_node_modules/wallet/node_modules/elliptic/lib/elliptic/curve/short.js","../../../.package_node_modules/wallet/node_modules/elliptic/lib/elliptic/curve/index.js","../../../.package_node_modules/wallet/node_modules/elliptic/lib/elliptic/curves.js","../../../.package_node_modules/wallet/node_modules/hmac-drbg/lib/hmac-drbg.js","../../../.package_node_modules/wallet/node_modules/elliptic/lib/elliptic/ec/key.js","../../../.package_node_modules/wallet/node_modules/elliptic/lib/elliptic/ec/signature.js","../../../.package_node_modules/wallet/node_modules/elliptic/lib/elliptic/ec/index.js","../../../.package_node_modules/wallet/node_modules/elliptic/lib/elliptic.js","../../../.package_node_modules/wallet/@ethersproject/signing-key/lib.esm/elliptic.js","../../../.package_node_modules/wallet/@ethersproject/signing-key/src.ts/_version.ts","../../../.package_node_modules/wallet/@ethersproject/signing-key/src.ts/index.ts","../../../node_modules/aes-js/index.js","../../../.package_node_modules/wallet/@ethersproject/json-wallets/src.ts/_version.ts","../../../.package_node_modules/wallet/@ethersproject/json-wallets/src.ts/utils.ts","../../../.package_node_modules/wallet/@ethersproject/json-wallets/src.ts/crowdsale.ts","../../../.package_node_modules/wallet/@ethersproject/json-wallets/src.ts/inspect.ts","../../../node_modules/scrypt-js/scrypt.js","../../hdnode/src.ts/_version.ts","../../hdnode/src.ts/index.ts","../../random/src.ts/_version.ts","../../random/src.ts/browser-random.ts","../../random/src.ts/shuffle.ts","../../random/src.ts/index.ts","../../../.package_node_modules/wallet/@ethersproject/json-wallets/src.ts/keystore.ts","../../../.package_node_modules/wallet/@ethersproject/json-wallets/src.ts/index.ts","../../../.package_node_modules/wallet/@ethersproject/transactions/src.ts/_version.ts","../../../.package_node_modules/wallet/@ethersproject/transactions/src.ts/index.ts","../../../node_modules/base64-js/index.js","../../../node_modules/buffer/node_modules/ieee754/index.js","../../../node_modules/isarray/index.js","../../../node_modules/buffer/index.js","../../../node_modules/tweetnacl/nacl-fast.js","../../units/src.ts/_version.ts","../../units/src.ts/index.ts","../../networks/src.ts/_version.ts","../../networks/src.ts/index.ts","../../web/src.ts/_version.ts","../../web/src.ts/browser-geturl.ts","../../web/src.ts/index.ts","../../../node_modules/bech32/index.js","../../providers/src.ts/_version.ts","../../providers/src.ts/formatter.ts","../../providers/src.ts/base-provider.ts","../../providers/src.ts/json-rpc-provider.ts","../../providers/src.ts/browser-ws.ts","../../providers/src.ts/websocket-provider.ts","../../providers/src.ts/url-json-rpc-provider.ts","../../providers/src.ts/alchemy-provider.ts","../../providers/src.ts/ankr-provider.ts","../../providers/src.ts/cloudflare-provider.ts","../../providers/src.ts/etherscan-provider.ts","../../providers/src.ts/fallback-provider.ts","../../providers/src.ts/browser-ipc-provider.ts","../../providers/src.ts/infura-provider.ts","../../providers/src.ts/json-rpc-batch-provider.ts","../../providers/src.ts/nodesmith-provider.ts","../../providers/src.ts/pocket-provider.ts","../../providers/src.ts/web3-provider.ts","../../providers/src.ts/index.ts","../../../.package_node_modules/wallet/lit-js-sdk/node_modules/regenerator-runtime/runtime.js","../../../.package_node_modules/wallet/lit-js-sdk/src/lib/uint8arrays.js","../../../.package_node_modules/wallet/lit-js-sdk/src/lib/ecdsa-sdk.js","../../../.package_node_modules/wallet/lit-js-sdk/src/lib/constants.js","../../../.package_node_modules/wallet/lit-js-sdk/src/lib/utils.js","../../../.package_node_modules/wallet/lit-js-sdk/src/lib/bls-sdk.js","../../../.package_node_modules/wallet/lit-js-sdk/src/utils/crypto.js","../../../.package_node_modules/wallet/lit-js-sdk/node_modules/@ethersproject/bignumber/node_modules/bn.js/lib/bn.js","../../../.package_node_modules/wallet/lit-js-sdk/node_modules/@ethersproject/logger/lib.esm/index.js","../../../.package_node_modules/wallet/lit-js-sdk/node_modules/@ethersproject/logger/lib.esm/_version.js","../../../.package_node_modules/wallet/lit-js-sdk/node_modules/@ethersproject/bignumber/lib.esm/bignumber.js","../../../.package_node_modules/wallet/lit-js-sdk/node_modules/@ethersproject/bignumber/lib.esm/_version.js","../../../.package_node_modules/wallet/lit-js-sdk/node_modules/js-sha3/src/sha3.js","../../../.package_node_modules/wallet/lit-js-sdk/node_modules/@ethersproject/address/lib.esm/_version.js","../../../.package_node_modules/wallet/lit-js-sdk/node_modules/@ethersproject/address/lib.esm/index.js","../../../.package_node_modules/wallet/lit-js-sdk/node_modules/@ethersproject/keccak256/lib.esm/index.js","../../../.package_node_modules/wallet/lit-js-sdk/src/utils/eth.js","../../../.package_node_modules/wallet/lit-js-sdk/src/utils/sol.js","../../../.package_node_modules/wallet/lit-js-sdk/src/utils/cosmos.js","../../../.package_node_modules/wallet/lit-js-sdk/src/utils/browser.js","../../../.package_node_modules/wallet/lit-js-sdk/src/utils/lit.js","../../../.package_node_modules/wallet/lit-js-sdk/src/utils/litNodeClient.js","../../../.package_node_modules/wallet/lit-js-sdk/src/version.js","../../../.package_node_modules/wallet/lit-js-sdk/src/index.js","../../../.package_node_modules/wallet/lit-js-sdk/src/utils/frameComms.js","../../../.package_node_modules/wallet/lit-js-sdk/src/utils/init.js","../../../.package_node_modules/wallet/@ethersproject/logger/src.ts/_version.ts","../../../.package_node_modules/wallet/@ethersproject/logger/src.ts/index.ts","../../wallet/src.ts/_version.ts","../../wallet/src.ts/index.ts","../../json-wallets/src.ts/_version.ts","../../json-wallets/src.ts/utils.ts","../../json-wallets/src.ts/crowdsale.ts","../../json-wallets/src.ts/inspect.ts","../../json-wallets/src.ts/keystore.ts","../../json-wallets/src.ts/index.ts","../../solidity/src.ts/_version.ts","../../solidity/src.ts/index.ts","../src.ts/utils.ts","../src.ts/_version.ts","../src.ts/ethers.ts","../src.ts/index.ts"],"sourcesContent":["(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","export const version = \"logger/5.7.0\";\n","\"use strict\";\n\nlet _permanentCensorErrors = false;\nlet _censorErrors = false;\n\nconst LogLevels: { [ name: string ]: number } = { debug: 1, \"default\": 2, info: 2, warning: 3, error: 4, off: 5 };\nlet _logLevel = LogLevels[\"default\"];\n\nimport { version } from \"./_version\";\n\nlet _globalLogger: Logger = null;\n\nfunction _checkNormalize(): string {\n    try {\n        const missing: Array<string> = [ ];\n\n        // Make sure all forms of normalization are supported\n        [\"NFD\", \"NFC\", \"NFKD\", \"NFKC\"].forEach((form) => {\n            try {\n                if (\"test\".normalize(form) !== \"test\") {\n                    throw new Error(\"bad normalize\");\n                };\n            } catch(error) {\n                missing.push(form);\n            }\n        });\n\n        if (missing.length) {\n            throw new Error(\"missing \" + missing.join(\", \"));\n        }\n\n        if (String.fromCharCode(0xe9).normalize(\"NFD\") !== String.fromCharCode(0x65, 0x0301)) {\n            throw new Error(\"broken implementation\")\n        }\n    } catch (error) {\n        return error.message;\n    }\n\n    return null;\n}\n\nconst _normalizeError = _checkNormalize();\n\nexport enum LogLevel {\n    DEBUG    = \"DEBUG\",\n    INFO     = \"INFO\",\n    WARNING  = \"WARNING\",\n    ERROR    = \"ERROR\",\n    OFF      = \"OFF\"\n}\n\n\nexport enum ErrorCode {\n\n    ///////////////////\n    // Generic Errors\n\n    // Unknown Error\n    UNKNOWN_ERROR = \"UNKNOWN_ERROR\",\n\n    // Not Implemented\n    NOT_IMPLEMENTED = \"NOT_IMPLEMENTED\",\n\n    // Unsupported Operation\n    //   - operation\n    UNSUPPORTED_OPERATION = \"UNSUPPORTED_OPERATION\",\n\n    // Network Error (i.e. Ethereum Network, such as an invalid chain ID)\n    //   - event (\"noNetwork\" is not re-thrown in provider.ready; otherwise thrown)\n    NETWORK_ERROR = \"NETWORK_ERROR\",\n\n    // Some sort of bad response from the server\n    SERVER_ERROR = \"SERVER_ERROR\",\n\n    // Timeout\n    TIMEOUT = \"TIMEOUT\",\n\n    ///////////////////\n    // Operational  Errors\n\n    // Buffer Overrun\n    BUFFER_OVERRUN = \"BUFFER_OVERRUN\",\n\n    // Numeric Fault\n    //   - operation: the operation being executed\n    //   - fault: the reason this faulted\n    NUMERIC_FAULT = \"NUMERIC_FAULT\",\n\n\n    ///////////////////\n    // Argument Errors\n\n    // Missing new operator to an object\n    //  - name: The name of the class\n    MISSING_NEW = \"MISSING_NEW\",\n\n    // Invalid argument (e.g. value is incompatible with type) to a function:\n    //   - argument: The argument name that was invalid\n    //   - value: The value of the argument\n    INVALID_ARGUMENT = \"INVALID_ARGUMENT\",\n\n    // Missing argument to a function:\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    MISSING_ARGUMENT = \"MISSING_ARGUMENT\",\n\n    // Too many arguments\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    UNEXPECTED_ARGUMENT = \"UNEXPECTED_ARGUMENT\",\n\n\n    ///////////////////\n    // Blockchain Errors\n\n    // Call exception\n    //  - transaction: the transaction\n    //  - address?: the contract address\n    //  - args?: The arguments passed into the function\n    //  - method?: The Solidity method signature\n    //  - errorSignature?: The EIP848 error signature\n    //  - errorArgs?: The EIP848 error parameters\n    //  - reason: The reason (only for EIP848 \"Error(string)\")\n    CALL_EXCEPTION = \"CALL_EXCEPTION\",\n\n    // Insufficient funds (< value + gasLimit * gasPrice)\n    //   - transaction: the transaction attempted\n    INSUFFICIENT_FUNDS = \"INSUFFICIENT_FUNDS\",\n\n    // Nonce has already been used\n    //   - transaction: the transaction attempted\n    NONCE_EXPIRED = \"NONCE_EXPIRED\",\n\n    // The replacement fee for the transaction is too low\n    //   - transaction: the transaction attempted\n    REPLACEMENT_UNDERPRICED = \"REPLACEMENT_UNDERPRICED\",\n\n    // The gas limit could not be estimated\n    //   - transaction: the transaction passed to estimateGas\n    UNPREDICTABLE_GAS_LIMIT = \"UNPREDICTABLE_GAS_LIMIT\",\n\n    // The transaction was replaced by one with a higher gas price\n    //   - reason: \"cancelled\", \"replaced\" or \"repriced\"\n    //   - cancelled: true if reason == \"cancelled\" or reason == \"replaced\")\n    //   - hash: original transaction hash\n    //   - replacement: the full TransactionsResponse for the replacement\n    //   - receipt: the receipt of the replacement\n    TRANSACTION_REPLACED = \"TRANSACTION_REPLACED\",\n\n\n    ///////////////////\n    // Interaction Errors\n\n    // The user rejected the action, such as signing a message or sending\n    // a transaction\n    ACTION_REJECTED = \"ACTION_REJECTED\",\n};\n\nconst HEX = \"0123456789abcdef\";\n\nexport class Logger {\n    readonly version: string;\n\n    static errors = ErrorCode;\n\n    static levels = LogLevel;\n\n    constructor(version: string) {\n        Object.defineProperty(this, \"version\", {\n            enumerable: true,\n            value: version,\n            writable: false\n        });\n    }\n\n    _log(logLevel: LogLevel, args: Array<any>): void {\n        const level = logLevel.toLowerCase();\n        if (LogLevels[level] == null) {\n            this.throwArgumentError(\"invalid log level name\", \"logLevel\", logLevel);\n        }\n        if (_logLevel > LogLevels[level]) { return; }\n        console.log.apply(console, args);\n    }\n\n    debug(...args: Array<any>): void {\n        this._log(Logger.levels.DEBUG, args);\n    }\n\n    info(...args: Array<any>): void {\n        this._log(Logger.levels.INFO, args);\n    }\n\n    warn(...args: Array<any>): void {\n        this._log(Logger.levels.WARNING, args);\n    }\n\n    makeError(message: string, code?: ErrorCode, params?: any): Error {\n        // Errors are being censored\n        if (_censorErrors) {\n            return this.makeError(\"censored error\", code, { });\n        }\n\n        if (!code) { code = Logger.errors.UNKNOWN_ERROR; }\n        if (!params) { params = {}; }\n\n        const messageDetails: Array<string> = [];\n        Object.keys(params).forEach((key) => {\n            const value = params[key];\n            try {\n                if (value instanceof Uint8Array) {\n                    let hex = \"\";\n                    for (let i = 0; i < value.length; i++) {\n                      hex += HEX[value[i] >> 4];\n                      hex += HEX[value[i] & 0x0f];\n                    }\n                    messageDetails.push(key + \"=Uint8Array(0x\" + hex + \")\");\n                } else {\n                    messageDetails.push(key + \"=\" + JSON.stringify(value));\n                }\n            } catch (error) {\n                messageDetails.push(key + \"=\" + JSON.stringify(params[key].toString()));\n            }\n        });\n        messageDetails.push(`code=${ code }`);\n        messageDetails.push(`version=${ this.version }`);\n\n        const reason = message;\n\n        let url = \"\";\n\n        switch (code) {\n            case ErrorCode.NUMERIC_FAULT: {\n                url = \"NUMERIC_FAULT\";\n                const fault = message;\n\n                switch (fault) {\n                    case \"overflow\": case \"underflow\": case \"division-by-zero\":\n                        url += \"-\" + fault;\n                        break;\n                    case \"negative-power\": case \"negative-width\":\n                        url += \"-unsupported\";\n                        break;\n                    case \"unbound-bitwise-result\":\n                        url += \"-unbound-result\";\n                        break;\n                }\n                break;\n            }\n            case ErrorCode.CALL_EXCEPTION:\n            case ErrorCode.INSUFFICIENT_FUNDS:\n            case ErrorCode.MISSING_NEW:\n            case ErrorCode.NONCE_EXPIRED:\n            case ErrorCode.REPLACEMENT_UNDERPRICED:\n            case ErrorCode.TRANSACTION_REPLACED:\n            case ErrorCode.UNPREDICTABLE_GAS_LIMIT:\n                url = code;\n                break;\n        }\n\n        if (url) {\n            message += \" [ See: https:/\\/links.ethers.org/v5-errors-\" + url + \" ]\";\n        }\n\n        if (messageDetails.length) {\n            message += \" (\" + messageDetails.join(\", \") + \")\";\n        }\n\n        // @TODO: Any??\n        const error: any = new Error(message);\n        error.reason = reason;\n        error.code = code\n\n        Object.keys(params).forEach(function(key) {\n            error[key] = params[key];\n        });\n\n        return error;\n    }\n\n    throwError(message: string, code?: ErrorCode, params?: any): never {\n        throw this.makeError(message, code, params);\n    }\n\n    throwArgumentError(message: string, name: string, value: any): never {\n        return this.throwError(message, Logger.errors.INVALID_ARGUMENT, {\n            argument: name,\n            value: value\n        });\n    }\n\n    assert(condition: any, message: string, code?: ErrorCode, params?: any): void {\n        if (!!condition) { return; }\n        this.throwError(message, code, params);\n    }\n\n    assertArgument(condition: any, message: string, name: string, value: any): void {\n        if (!!condition) { return; }\n        this.throwArgumentError(message, name, value);\n    }\n\n    checkNormalize(message?: string): void {\n        if (message == null) { message = \"platform missing String.prototype.normalize\"; }\n        if (_normalizeError) {\n            this.throwError(\"platform missing String.prototype.normalize\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"String.prototype.normalize\", form: _normalizeError\n            });\n        }\n    }\n\n    checkSafeUint53(value: number, message?: string): void {\n        if (typeof(value) !== \"number\") { return; }\n\n        if (message == null) { message = \"value not safe\"; }\n\n        if (value < 0 || value >= 0x1fffffffffffff) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"out-of-safe-range\",\n                value: value\n            });\n        }\n\n        if (value % 1) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"non-integer\",\n                value: value\n            });\n        }\n    }\n\n    checkArgumentCount(count: number, expectedCount: number, message?: string): void {\n        if (message) {\n            message = \": \" + message;\n        } else {\n            message = \"\";\n        }\n\n        if (count < expectedCount) {\n            this.throwError(\"missing argument\" + message, Logger.errors.MISSING_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n\n        if (count > expectedCount) {\n            this.throwError(\"too many arguments\" + message, Logger.errors.UNEXPECTED_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n    }\n\n    checkNew(target: any, kind: any): void {\n        if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n\n    checkAbstract(target: any, kind: any): void {\n        if (target === kind) {\n            this.throwError(\n                \"cannot instantiate abstract class \" + JSON.stringify(kind.name) + \" directly; use a sub-class\",\n                Logger.errors.UNSUPPORTED_OPERATION,\n                { name: target.name, operation: \"new\" }\n            );\n        } else if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n\n    static globalLogger(): Logger {\n        if (!_globalLogger) { _globalLogger = new Logger(version); }\n        return _globalLogger;\n    }\n\n    static setCensorship(censorship: boolean, permanent?: boolean): void {\n        if (!censorship && permanent) {\n            this.globalLogger().throwError(\"cannot permanently disable censorship\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n\n        if (_permanentCensorErrors) {\n            if (!censorship) { return; }\n            this.globalLogger().throwError(\"error censorship permanent\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n\n        _censorErrors = !!censorship;\n        _permanentCensorErrors = !!permanent;\n    }\n\n    static setLogLevel(logLevel: LogLevel): void {\n        const level = LogLevels[logLevel.toLowerCase()];\n        if (level == null) {\n            Logger.globalLogger().warn(\"invalid log level - \" + logLevel);\n            return;\n        }\n        _logLevel = level;\n    }\n\n    static from(version: string): Logger {\n        return new Logger(version);\n    }\n}\n","export const version = \"bytes/5.7.0\";\n","\"use strict\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n///////////////////////////////\n// Exported Types\n\nexport type Bytes = ArrayLike<number>;\n\nexport type BytesLike = Bytes | string;\n\nexport type DataOptions = {\n    allowMissingPrefix?: boolean;\n    hexPad?: \"left\" | \"right\" | null;\n};\n\nexport interface Hexable {\n    toHexString(): string;\n}\n\n\n/*\nexport interface HexString {\n    length: number;\n    substring: (start: number, end?: number) => string;\n\n    [index: number]: string;\n}\n*/\n\nexport type SignatureLike  = {\n    r: string;\n    s?: string;\n    _vs?: string,\n    recoveryParam?: number;\n    v?: number;\n} | BytesLike;\n\nexport interface Signature {\n    r: string;\n\n    s: string;\n    _vs: string,\n\n    recoveryParam: number;\n    v: number;\n\n    yParityAndS: string\n    compact: string;\n}\n\n///////////////////////////////\n\n\nfunction isHexable(value: any): value is Hexable {\n    return !!(value.toHexString);\n}\n\nfunction addSlice(array: Uint8Array): Uint8Array {\n    if (array.slice) { return array; }\n\n    array.slice = function() {\n        const args = Array.prototype.slice.call(arguments);\n        return addSlice(new Uint8Array(Array.prototype.slice.apply(array, args)));\n    }\n\n    return array;\n}\n\nexport function isBytesLike(value: any): value is BytesLike {\n    return ((isHexString(value) && !(value.length % 2)) || isBytes(value));\n}\n\nfunction isInteger(value: number) {\n    return (typeof(value) === \"number\" && value == value && (value % 1) === 0);\n}\n\nexport function isBytes(value: any): value is Bytes {\n    if (value == null) { return false; }\n\n    if (value.constructor === Uint8Array) { return true; }\n    if (typeof(value) === \"string\") { return false; }\n    if (!isInteger(value.length) || value.length < 0) { return false; }\n\n    for (let i = 0; i < value.length; i++) {\n        const v = value[i];\n        if (!isInteger(v) || v < 0 || v >= 256) { return false; }\n    }\n    return true;\n}\n\n\nexport function arrayify(value: BytesLike | Hexable | number, options?: DataOptions): Uint8Array {\n    if (!options) { options = { }; }\n\n    if (typeof(value) === \"number\") {\n        logger.checkSafeUint53(value, \"invalid arrayify value\");\n\n        const result = [];\n        while (value) {\n            result.unshift(value & 0xff);\n            value = parseInt(String(value / 256));\n        }\n        if (result.length === 0) { result.push(0); }\n\n        return addSlice(new Uint8Array(result));\n    }\n\n    if (options.allowMissingPrefix && typeof(value) === \"string\" && value.substring(0, 2) !== \"0x\") {\n         value = \"0x\" + value;\n    }\n\n    if (isHexable(value)) { value = value.toHexString(); }\n\n    if (isHexString(value)) {\n        let hex = (<string>value).substring(2);\n        if (hex.length % 2) {\n            if (options.hexPad === \"left\") {\n                hex = \"0\" + hex;\n            } else if (options.hexPad === \"right\") {\n                hex += \"0\";\n            } else {\n                logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n            }\n        }\n\n        const result = [];\n        for (let i = 0; i < hex.length; i += 2) {\n            result.push(parseInt(hex.substring(i, i + 2), 16));\n        }\n\n        return addSlice(new Uint8Array(result));\n    }\n\n    if (isBytes(value)) {\n        return addSlice(new Uint8Array(value));\n    }\n\n    return logger.throwArgumentError(\"invalid arrayify value\", \"value\", value);\n}\n\nexport function concat(items: ReadonlyArray<BytesLike>): Uint8Array {\n    const objects = items.map(item => arrayify(item));\n    const length = objects.reduce((accum, item) => (accum + item.length), 0);\n\n    const result = new Uint8Array(length);\n\n    objects.reduce((offset, object) => {\n        result.set(object, offset);\n        return offset + object.length;\n    }, 0);\n\n    return addSlice(result);\n}\n\nexport function stripZeros(value: BytesLike): Uint8Array {\n    let result: Uint8Array = arrayify(value);\n\n    if (result.length === 0) { return result; }\n\n    // Find the first non-zero entry\n    let start = 0;\n    while (start < result.length && result[start] === 0) { start++ }\n\n    // If we started with zeros, strip them\n    if (start) {\n        result = result.slice(start);\n    }\n\n    return result;\n}\n\nexport function zeroPad(value: BytesLike, length: number): Uint8Array {\n    value = arrayify(value);\n\n    if (value.length > length) {\n        logger.throwArgumentError(\"value out of range\", \"value\", arguments[0]);\n    }\n\n    const result = new Uint8Array(length);\n    result.set(value, length - value.length);\n    return addSlice(result);\n}\n\n\nexport function isHexString(value: any, length?: number): boolean {\n    if (typeof(value) !== \"string\" || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n        return false\n    }\n    if (length && value.length !== 2 + 2 * length) { return false; }\n    return true;\n}\n\nconst HexCharacters: string = \"0123456789abcdef\";\n\nexport function hexlify(value: BytesLike | Hexable | number | bigint, options?: DataOptions): string {\n    if (!options) { options = { }; }\n\n    if (typeof(value) === \"number\") {\n        logger.checkSafeUint53(value, \"invalid hexlify value\");\n\n        let hex = \"\";\n        while (value) {\n            hex = HexCharacters[value & 0xf] + hex;\n            value = Math.floor(value / 16);\n        }\n\n        if (hex.length) {\n            if (hex.length % 2) { hex = \"0\" + hex; }\n            return \"0x\" + hex;\n        }\n\n        return \"0x00\";\n    }\n\n    if (typeof(value) === \"bigint\") {\n        value = value.toString(16);\n        if (value.length % 2) { return (\"0x0\" + value); }\n        return \"0x\" + value;\n    }\n\n    if (options.allowMissingPrefix && typeof(value) === \"string\" && value.substring(0, 2) !== \"0x\") {\n         value = \"0x\" + value;\n    }\n\n    if (isHexable(value)) { return value.toHexString(); }\n\n    if (isHexString(value)) {\n        if ((<string>value).length % 2) {\n            if (options.hexPad === \"left\") {\n                value = \"0x0\" + (<string>value).substring(2);\n            } else if (options.hexPad === \"right\") {\n                value += \"0\";\n            } else {\n                logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n            }\n        }\n        return (<string>value).toLowerCase();\n    }\n\n    if (isBytes(value)) {\n        let result = \"0x\";\n        for (let i = 0; i < value.length; i++) {\n             let v = value[i];\n             result += HexCharacters[(v & 0xf0) >> 4] + HexCharacters[v & 0x0f];\n        }\n        return result;\n    }\n\n    return logger.throwArgumentError(\"invalid hexlify value\", \"value\", value);\n}\n\n/*\nfunction unoddify(value: BytesLike | Hexable | number): BytesLike | Hexable | number {\n    if (typeof(value) === \"string\" && value.length % 2 && value.substring(0, 2) === \"0x\") {\n        return \"0x0\" + value.substring(2);\n    }\n    return value;\n}\n*/\nexport function hexDataLength(data: BytesLike) {\n    if (typeof(data) !== \"string\") {\n        data = hexlify(data);\n    } else if (!isHexString(data) || (data.length % 2)) {\n        return null;\n    }\n\n    return (data.length - 2) / 2;\n}\n\nexport function hexDataSlice(data: BytesLike, offset: number, endOffset?: number): string {\n    if (typeof(data) !== \"string\") {\n        data = hexlify(data);\n    } else if (!isHexString(data) || (data.length % 2)) {\n        logger.throwArgumentError(\"invalid hexData\", \"value\", data );\n    }\n\n    offset = 2 + 2 * offset;\n\n    if (endOffset != null) {\n        return \"0x\" + data.substring(offset, 2 + 2 * endOffset);\n    }\n\n    return \"0x\" + data.substring(offset);\n}\n\nexport function hexConcat(items: ReadonlyArray<BytesLike>): string {\n    let result = \"0x\";\n    items.forEach((item) => {\n        result += hexlify(item).substring(2);\n    });\n    return result;\n}\n\nexport function hexValue(value: BytesLike | Hexable | number | bigint): string {\n    const trimmed = hexStripZeros(hexlify(value, { hexPad: \"left\" }));\n    if (trimmed === \"0x\") { return \"0x0\"; }\n    return trimmed;\n}\n\nexport function hexStripZeros(value: BytesLike): string {\n    if (typeof(value) !== \"string\") { value = hexlify(value); }\n\n    if (!isHexString(value)) {\n        logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n    }\n    value = value.substring(2);\n    let offset = 0;\n    while (offset < value.length && value[offset] === \"0\") { offset++; }\n    return \"0x\" + value.substring(offset);\n}\n\nexport function hexZeroPad(value: BytesLike, length: number): string {\n    if (typeof(value) !== \"string\") {\n        value = hexlify(value);\n    } else if (!isHexString(value)) {\n        logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n    }\n\n    if (value.length > 2 * length + 2) {\n        logger.throwArgumentError(\"value out of range\", \"value\", arguments[1]);\n    }\n\n    while (value.length < 2 * length + 2) {\n        value = \"0x0\" + value.substring(2);\n    }\n\n    return value;\n}\n\nexport function splitSignature(signature: SignatureLike): Signature {\n\n    const result = {\n        r: \"0x\",\n        s: \"0x\",\n        _vs: \"0x\",\n        recoveryParam: 0,\n        v: 0,\n        yParityAndS: \"0x\",\n        compact: \"0x\"\n    };\n\n    if (isBytesLike(signature)) {\n        let bytes: Uint8Array = arrayify(signature);\n\n        // Get the r, s and v\n        if (bytes.length === 64) {\n            // EIP-2098; pull the v from the top bit of s and clear it\n            result.v = 27 + (bytes[32] >> 7);\n            bytes[32] &= 0x7f;\n\n            result.r = hexlify(bytes.slice(0, 32));\n            result.s = hexlify(bytes.slice(32, 64));\n\n        } else if (bytes.length === 65) {\n            result.r = hexlify(bytes.slice(0, 32));\n            result.s = hexlify(bytes.slice(32, 64));\n            result.v = bytes[64];\n        } else {\n\n            logger.throwArgumentError(\"invalid signature string\", \"signature\", signature);\n        }\n\n\n        // Allow a recid to be used as the v\n        if (result.v < 27) {\n            if (result.v === 0 || result.v === 1) {\n                result.v += 27;\n            } else {\n                logger.throwArgumentError(\"signature invalid v byte\", \"signature\", signature);\n            }\n        }\n\n        // Compute recoveryParam from v\n        result.recoveryParam = 1 - (result.v % 2);\n\n        // Compute _vs from recoveryParam and s\n        if (result.recoveryParam) { bytes[32] |= 0x80; }\n        result._vs = hexlify(bytes.slice(32, 64))\n\n    } else {\n        result.r = signature.r;\n        result.s = signature.s;\n        result.v = signature.v;\n        result.recoveryParam = signature.recoveryParam;\n        result._vs = signature._vs;\n\n        // If the _vs is available, use it to populate missing s, v and recoveryParam\n        // and verify non-missing s, v and recoveryParam\n        if (result._vs != null) {\n            const vs = zeroPad(arrayify(result._vs), 32);\n            result._vs = hexlify(vs);\n\n            // Set or check the recid\n            const recoveryParam = ((vs[0] >= 128) ? 1: 0);\n            if (result.recoveryParam == null) {\n                result.recoveryParam = recoveryParam;\n            } else if (result.recoveryParam !== recoveryParam) {\n                logger.throwArgumentError(\"signature recoveryParam mismatch _vs\", \"signature\", signature);\n            }\n\n            // Set or check the s\n            vs[0] &= 0x7f;\n            const s = hexlify(vs);\n            if (result.s == null) {\n                result.s = s;\n            } else if (result.s !== s) {\n                logger.throwArgumentError(\"signature v mismatch _vs\", \"signature\", signature);\n            }\n        }\n\n        // Use recid and v to populate each other\n        if (result.recoveryParam == null) {\n            if (result.v == null) {\n                logger.throwArgumentError(\"signature missing v and recoveryParam\", \"signature\", signature);\n            } else if (result.v === 0 || result.v === 1) {\n                result.recoveryParam = result.v;\n            } else {\n                result.recoveryParam = 1 - (result.v % 2);\n            }\n        } else {\n            if (result.v == null) {\n                result.v = 27 + result.recoveryParam;\n            } else {\n                const recId = (result.v === 0 || result.v === 1) ? result.v :(1 - (result.v % 2));\n                if (result.recoveryParam !== recId) {\n                    logger.throwArgumentError(\"signature recoveryParam mismatch v\", \"signature\", signature);\n                }\n            }\n        }\n\n        if (result.r == null || !isHexString(result.r)) {\n            logger.throwArgumentError(\"signature missing or invalid r\", \"signature\", signature);\n        } else {\n            result.r = hexZeroPad(result.r, 32);\n        }\n\n        if (result.s == null || !isHexString(result.s)) {\n            logger.throwArgumentError(\"signature missing or invalid s\", \"signature\", signature);\n        } else {\n            result.s = hexZeroPad(result.s, 32);\n        }\n\n        const vs = arrayify(result.s);\n        if (vs[0] >= 128) {\n            logger.throwArgumentError(\"signature s out of range\", \"signature\", signature);\n        }\n        if (result.recoveryParam) { vs[0] |= 0x80; }\n        const _vs = hexlify(vs);\n\n        if (result._vs) {\n            if (!isHexString(result._vs)) {\n                logger.throwArgumentError(\"signature invalid _vs\", \"signature\", signature);\n            }\n            result._vs = hexZeroPad(result._vs, 32);\n        }\n\n        // Set or check the _vs\n        if (result._vs == null) {\n            result._vs = _vs;\n        } else if (result._vs !== _vs) {\n            logger.throwArgumentError(\"signature _vs mismatch v and s\", \"signature\", signature);\n        }\n    }\n\n    result.yParityAndS = result._vs;\n    result.compact = result.r + result.yParityAndS.substring(2);\n\n    return result;\n}\n\nexport function joinSignature(signature: SignatureLike): string {\n    signature = splitSignature(signature);\n\n    return hexlify(concat([\n         signature.r,\n         signature.s,\n         (signature.recoveryParam ? \"0x1c\": \"0x1b\")\n    ]));\n}\n\n","export const version = \"bignumber/5.7.0\";\n","\"use strict\";\n\n/**\n *  BigNumber\n *\n *  A wrapper around the BN.js object. We use the BN.js library\n *  because it is used by elliptic, so it is required regardless.\n *\n */\n\nimport _BN from \"bn.js\";\nimport BN = _BN.BN;\n\nimport { Bytes, Hexable, hexlify, isBytes, isHexString } from \"@ethersproject/bytes\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nconst _constructorGuard = { };\n\nconst MAX_SAFE = 0x1fffffffffffff;\n\n\nexport type BigNumberish = BigNumber | Bytes | bigint | string | number;\n\nexport function isBigNumberish(value: any): value is BigNumberish {\n    return (value != null) && (\n        BigNumber.isBigNumber(value) ||\n        (typeof(value) === \"number\" && (value % 1) === 0) ||\n        (typeof(value) === \"string\" && !!value.match(/^-?[0-9]+$/)) ||\n        isHexString(value) ||\n        (typeof(value) === \"bigint\") ||\n        isBytes(value)\n    );\n}\n\n// Only warn about passing 10 into radix once\nlet _warnedToStringRadix = false;\n\nexport class BigNumber implements Hexable {\n    readonly _hex: string;\n    readonly _isBigNumber: boolean;\n\n    constructor(constructorGuard: any, hex: string) {\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"cannot call constructor directly; use BigNumber.from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new (BigNumber)\"\n            });\n        }\n\n        this._hex = hex;\n        this._isBigNumber = true;\n\n        Object.freeze(this);\n    }\n\n    fromTwos(value: number): BigNumber {\n        return toBigNumber(toBN(this).fromTwos(value));\n    }\n\n    toTwos(value: number): BigNumber {\n        return toBigNumber(toBN(this).toTwos(value));\n    }\n\n    abs(): BigNumber {\n        if (this._hex[0] === \"-\") {\n            return BigNumber.from(this._hex.substring(1));\n        }\n        return this;\n    }\n\n    add(other: BigNumberish): BigNumber {\n        return toBigNumber(toBN(this).add(toBN(other)));\n    }\n\n    sub(other: BigNumberish): BigNumber {\n        return toBigNumber(toBN(this).sub(toBN(other)));\n    }\n\n    div(other: BigNumberish): BigNumber {\n        const o = BigNumber.from(other);\n        if (o.isZero()) {\n            throwFault(\"division-by-zero\", \"div\");\n        }\n        return toBigNumber(toBN(this).div(toBN(other)));\n    }\n\n    mul(other: BigNumberish): BigNumber {\n        return toBigNumber(toBN(this).mul(toBN(other)));\n    }\n\n    mod(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (value.isNeg()) {\n            throwFault(\"division-by-zero\", \"mod\");\n        }\n        return toBigNumber(toBN(this).umod(value));\n    }\n\n    pow(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (value.isNeg()) {\n            throwFault(\"negative-power\", \"pow\");\n        }\n        return toBigNumber(toBN(this).pow(value));\n    }\n\n    and(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"unbound-bitwise-result\", \"and\");\n        }\n        return toBigNumber(toBN(this).and(value));\n    }\n\n    or(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"unbound-bitwise-result\", \"or\");\n        }\n        return toBigNumber(toBN(this).or(value));\n    }\n\n    xor(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"unbound-bitwise-result\", \"xor\");\n        }\n        return toBigNumber(toBN(this).xor(value));\n    }\n\n    mask(value: number): BigNumber {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"negative-width\", \"mask\");\n        }\n        return toBigNumber(toBN(this).maskn(value));\n    }\n\n    shl(value: number): BigNumber {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"negative-width\", \"shl\");\n        }\n        return toBigNumber(toBN(this).shln(value));\n    }\n\n    shr(value: number): BigNumber {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"negative-width\", \"shr\");\n        }\n        return toBigNumber(toBN(this).shrn(value));\n    }\n\n    eq(other: BigNumberish): boolean {\n        return toBN(this).eq(toBN(other));\n    }\n\n    lt(other: BigNumberish): boolean {\n        return toBN(this).lt(toBN(other));\n    }\n\n    lte(other: BigNumberish): boolean {\n        return toBN(this).lte(toBN(other));\n    }\n\n    gt(other: BigNumberish): boolean {\n        return toBN(this).gt(toBN(other));\n   }\n\n    gte(other: BigNumberish): boolean {\n        return toBN(this).gte(toBN(other));\n    }\n\n    isNegative(): boolean {\n        return (this._hex[0] === \"-\");\n    }\n\n    isZero(): boolean {\n        return toBN(this).isZero();\n    }\n\n    toNumber(): number {\n        try {\n            return toBN(this).toNumber();\n        } catch (error) {\n            throwFault(\"overflow\", \"toNumber\", this.toString());\n        }\n        return null;\n    }\n\n    toBigInt(): bigint {\n        try {\n            return BigInt(this.toString());\n        } catch (e) { }\n\n        return logger.throwError(\"this platform does not support BigInt\", Logger.errors.UNSUPPORTED_OPERATION, {\n            value: this.toString()\n        });\n    }\n\n    toString(): string {\n        // Lots of people expect this, which we do not support, so check (See: #889)\n        if (arguments.length > 0) {\n            if (arguments[0] === 10) {\n                if (!_warnedToStringRadix) {\n                    _warnedToStringRadix = true;\n                    logger.warn(\"BigNumber.toString does not accept any parameters; base-10 is assumed\");\n                }\n            } else if (arguments[0] === 16) {\n                logger.throwError(\"BigNumber.toString does not accept any parameters; use bigNumber.toHexString()\", Logger.errors.UNEXPECTED_ARGUMENT, { });\n            } else {\n                logger.throwError(\"BigNumber.toString does not accept parameters\", Logger.errors.UNEXPECTED_ARGUMENT, { });\n            }\n        }\n        return toBN(this).toString(10);\n    }\n\n    toHexString(): string {\n        return this._hex;\n    }\n\n    toJSON(key?: string): any {\n        return { type: \"BigNumber\", hex: this.toHexString() };\n    }\n\n    static from(value: any): BigNumber {\n        if (value instanceof BigNumber) { return value; }\n\n        if (typeof(value) === \"string\") {\n            if (value.match(/^-?0x[0-9a-f]+$/i)) {\n                return new BigNumber(_constructorGuard, toHex(value));\n            }\n\n            if (value.match(/^-?[0-9]+$/)) {\n                return new BigNumber(_constructorGuard, toHex(new BN(value)));\n            }\n\n            return logger.throwArgumentError(\"invalid BigNumber string\", \"value\", value);\n        }\n\n        if (typeof(value) === \"number\") {\n            if (value % 1) {\n                throwFault(\"underflow\", \"BigNumber.from\", value);\n            }\n\n            if (value >= MAX_SAFE || value <= -MAX_SAFE) {\n                throwFault(\"overflow\", \"BigNumber.from\", value);\n            }\n\n            return BigNumber.from(String(value));\n        }\n\n        const anyValue = <any>value;\n\n        if (typeof(anyValue) === \"bigint\") {\n            return BigNumber.from(anyValue.toString());\n        }\n\n        if (isBytes(anyValue)) {\n            return BigNumber.from(hexlify(anyValue));\n        }\n\n        if (anyValue) {\n\n            // Hexable interface (takes priority)\n            if (anyValue.toHexString) {\n                const hex = anyValue.toHexString();\n                if (typeof(hex) === \"string\") {\n                    return BigNumber.from(hex);\n                }\n\n            } else {\n                // For now, handle legacy JSON-ified values (goes away in v6)\n                let hex = anyValue._hex;\n\n                // New-form JSON\n                if (hex == null && anyValue.type === \"BigNumber\") {\n                    hex = anyValue.hex;\n                }\n\n                if (typeof(hex) === \"string\") {\n                    if (isHexString(hex) || (hex[0] === \"-\" && isHexString(hex.substring(1)))) {\n                        return BigNumber.from(hex);\n                    }\n                }\n            }\n        }\n\n        return logger.throwArgumentError(\"invalid BigNumber value\", \"value\", value);\n    }\n\n    static isBigNumber(value: any): value is BigNumber {\n        return !!(value && value._isBigNumber);\n    }\n}\n\n// Normalize the hex string\nfunction toHex(value: string | BN): string {\n\n    // For BN, call on the hex string\n    if (typeof(value) !== \"string\") {\n        return toHex(value.toString(16));\n    }\n\n    // If negative, prepend the negative sign to the normalized positive value\n    if (value[0] === \"-\") {\n        // Strip off the negative sign\n        value = value.substring(1);\n\n        // Cannot have multiple negative signs (e.g. \"--0x04\")\n        if (value[0] === \"-\") { logger.throwArgumentError(\"invalid hex\", \"value\", value); }\n\n        // Call toHex on the positive component\n        value = toHex(value);\n\n        // Do not allow \"-0x00\"\n        if (value === \"0x00\") { return value; }\n\n        // Negate the value\n        return \"-\" + value;\n    }\n\n    // Add a \"0x\" prefix if missing\n    if (value.substring(0, 2) !== \"0x\") { value = \"0x\" + value; }\n\n    // Normalize zero\n    if (value === \"0x\") { return \"0x00\"; }\n\n    // Make the string even length\n    if (value.length % 2) { value = \"0x0\" + value.substring(2); }\n\n    // Trim to smallest even-length string\n    while (value.length > 4 && value.substring(0, 4) === \"0x00\") {\n        value = \"0x\" + value.substring(4);\n    }\n\n    return value;\n}\n\nfunction toBigNumber(value: BN): BigNumber {\n    return BigNumber.from(toHex(value));\n}\n\nfunction toBN(value: BigNumberish): BN {\n    const hex = BigNumber.from(value).toHexString();\n    if (hex[0] === \"-\") {\n        return (new BN(\"-\" + hex.substring(3), 16));\n    }\n    return new BN(hex.substring(2), 16);\n}\n\nfunction throwFault(fault: string, operation: string, value?: any): never {\n    const params: any = { fault: fault, operation: operation };\n    if (value != null) { params.value = value; }\n\n    return logger.throwError(fault, Logger.errors.NUMERIC_FAULT, params);\n}\n\n// value should have no prefix\nexport function _base36To16(value: string): string {\n    return (new BN(value, 36)).toString(16);\n}\n\n// value should have no prefix\nexport function _base16To36(value: string): string {\n    return (new BN(value, 16)).toString(36);\n}\n","\"use strict\";\n\nimport { arrayify, BytesLike, hexZeroPad, isBytes } from \"@ethersproject/bytes\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { BigNumber, BigNumberish, isBigNumberish } from \"./bignumber\";\n\nconst _constructorGuard = { };\n\nconst Zero = BigNumber.from(0);\nconst NegativeOne = BigNumber.from(-1);\n\nfunction throwFault(message: string, fault: string, operation: string, value?: any): never {\n    const params: any = { fault: fault, operation: operation };\n    if (value !== undefined) { params.value = value; }\n    return logger.throwError(message, Logger.errors.NUMERIC_FAULT, params);\n}\n\n// Constant to pull zeros from for multipliers\nlet zeros = \"0\";\nwhile (zeros.length < 256) { zeros += zeros; }\n\n// Returns a string \"1\" followed by decimal \"0\"s\nfunction getMultiplier(decimals: BigNumberish): string {\n\n    if (typeof(decimals) !== \"number\") {\n        try {\n            decimals = BigNumber.from(decimals).toNumber();\n        } catch (e) { }\n    }\n\n    if (typeof(decimals) === \"number\" && decimals >= 0 && decimals <= 256 && !(decimals % 1)) {\n        return (\"1\" + zeros.substring(0, decimals));\n    }\n\n    return logger.throwArgumentError(\"invalid decimal size\", \"decimals\", decimals);\n}\n\nexport function formatFixed(value: BigNumberish, decimals?: string | BigNumberish): string {\n    if (decimals == null) { decimals = 0; }\n    const multiplier = getMultiplier(decimals);\n\n    // Make sure wei is a big number (convert as necessary)\n    value = BigNumber.from(value);\n\n    const negative = value.lt(Zero);\n    if (negative) { value = value.mul(NegativeOne); }\n\n    let fraction = value.mod(multiplier).toString();\n    while (fraction.length < multiplier.length - 1) { fraction = \"0\" + fraction; }\n\n    // Strip training 0\n    fraction = fraction.match(/^([0-9]*[1-9]|0)(0*)/)[1];\n\n    const whole = value.div(multiplier).toString();\n    if (multiplier.length === 1) {\n        value = whole;\n    } else {\n        value = whole + \".\" + fraction;\n    }\n\n    if (negative) { value = \"-\" + value; }\n\n    return value;\n}\n\nexport function parseFixed(value: string, decimals?: BigNumberish): BigNumber {\n\n    if (decimals == null) { decimals = 0; }\n    const multiplier = getMultiplier(decimals);\n\n    if (typeof(value) !== \"string\" || !value.match(/^-?[0-9.]+$/)) {\n        logger.throwArgumentError(\"invalid decimal value\", \"value\", value);\n    }\n\n    // Is it negative?\n    const negative = (value.substring(0, 1) === \"-\");\n    if (negative) { value = value.substring(1); }\n\n    if (value === \".\") {\n        logger.throwArgumentError(\"missing value\", \"value\", value);\n    }\n\n    // Split it into a whole and fractional part\n    const comps = value.split(\".\");\n    if (comps.length > 2) {\n        logger.throwArgumentError(\"too many decimal points\", \"value\", value);\n    }\n\n    let whole = comps[0], fraction = comps[1];\n    if (!whole) { whole = \"0\"; }\n    if (!fraction) { fraction = \"0\"; }\n\n    // Trim trailing zeros\n    while (fraction[fraction.length - 1] === \"0\") {\n        fraction = fraction.substring(0, fraction.length - 1);\n    }\n\n    // Check the fraction doesn't exceed our decimals size\n    if (fraction.length > multiplier.length - 1) {\n        throwFault(\"fractional component exceeds decimals\", \"underflow\", \"parseFixed\");\n    }\n\n    // If decimals is 0, we have an empty string for fraction\n    if (fraction === \"\") { fraction = \"0\"; }\n\n    // Fully pad the string with zeros to get to wei\n    while (fraction.length < multiplier.length - 1) { fraction += \"0\"; }\n\n    const wholeValue = BigNumber.from(whole);\n    const fractionValue = BigNumber.from(fraction);\n\n    let wei = (wholeValue.mul(multiplier)).add(fractionValue);\n\n    if (negative) { wei = wei.mul(NegativeOne); }\n\n    return wei;\n}\n\n\nexport class FixedFormat {\n    readonly signed: boolean;\n    readonly width: number;\n    readonly decimals: number;\n    readonly name: string;\n    readonly _multiplier: string;\n\n    constructor(constructorGuard: any, signed: boolean, width: number, decimals: number) {\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"cannot use FixedFormat constructor; use FixedFormat.from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new FixedFormat\"\n            });\n        }\n\n        this.signed = signed;\n        this.width = width;\n        this.decimals = decimals;\n\n        this.name = (signed ? \"\": \"u\") + \"fixed\" + String(width) + \"x\" + String(decimals);\n\n        this._multiplier = getMultiplier(decimals);\n\n        Object.freeze(this);\n    }\n\n    static from(value: any): FixedFormat {\n        if (value instanceof FixedFormat) { return value; }\n\n        if (typeof(value) === \"number\") {\n            value = `fixed128x${value}`\n        }\n\n        let signed = true;\n        let width = 128;\n        let decimals = 18;\n\n        if (typeof(value) === \"string\") {\n            if (value === \"fixed\") {\n                // defaults...\n            } else if (value === \"ufixed\") {\n                signed = false;\n            } else {\n                const match = value.match(/^(u?)fixed([0-9]+)x([0-9]+)$/);\n                if (!match) { logger.throwArgumentError(\"invalid fixed format\", \"format\", value); }\n                signed = (match[1] !== \"u\");\n                width = parseInt(match[2]);\n                decimals = parseInt(match[3]);\n            }\n        } else if (value) {\n            const check = (key: string, type: string, defaultValue: any): any => {\n                if (value[key] == null) { return defaultValue; }\n                if (typeof(value[key]) !== type) {\n                    logger.throwArgumentError(\"invalid fixed format (\" + key + \" not \" + type +\")\", \"format.\" + key, value[key]);\n                }\n                return value[key];\n            }\n            signed = check(\"signed\", \"boolean\", signed);\n            width = check(\"width\", \"number\", width);\n            decimals = check(\"decimals\", \"number\", decimals);\n        }\n\n        if (width % 8) {\n            logger.throwArgumentError(\"invalid fixed format width (not byte aligned)\", \"format.width\", width);\n        }\n\n        if (decimals > 80) {\n            logger.throwArgumentError(\"invalid fixed format (decimals too large)\", \"format.decimals\", decimals);\n        }\n\n        return new FixedFormat(_constructorGuard, signed, width, decimals);\n    }\n}\n\nexport class FixedNumber {\n    readonly format: FixedFormat;\n    readonly _hex: string;\n    readonly _value: string;\n\n    readonly _isFixedNumber: boolean;\n\n    constructor(constructorGuard: any, hex: string, value: string, format?: FixedFormat) {\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"cannot use FixedNumber constructor; use FixedNumber.from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new FixedFormat\"\n            });\n        }\n\n        this.format = format;\n        this._hex = hex;\n        this._value = value;\n\n        this._isFixedNumber = true;\n\n        Object.freeze(this);\n    }\n\n    _checkFormat(other: FixedNumber): void {\n        if (this.format.name !== other.format.name) {\n            logger.throwArgumentError(\"incompatible format; use fixedNumber.toFormat\", \"other\", other);\n        }\n    }\n\n    addUnsafe(other: FixedNumber): FixedNumber {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.add(b), this.format.decimals, this.format);\n    }\n\n    subUnsafe(other: FixedNumber): FixedNumber {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.sub(b), this.format.decimals, this.format);\n    }\n\n    mulUnsafe(other: FixedNumber): FixedNumber {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.mul(b).div(this.format._multiplier), this.format.decimals, this.format);\n    }\n\n    divUnsafe(other: FixedNumber): FixedNumber {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.mul(this.format._multiplier).div(b), this.format.decimals, this.format);\n    }\n\n    floor(): FixedNumber {\n        const comps = this.toString().split(\".\");\n        if (comps.length === 1) { comps.push(\"0\"); }\n\n        let result = FixedNumber.from(comps[0], this.format);\n\n        const hasFraction = !comps[1].match(/^(0*)$/);\n        if (this.isNegative() && hasFraction) {\n            result = result.subUnsafe(ONE.toFormat(result.format));\n        }\n\n        return result;\n    }\n\n    ceiling(): FixedNumber {\n        const comps = this.toString().split(\".\");\n        if (comps.length === 1) { comps.push(\"0\"); }\n\n        let result = FixedNumber.from(comps[0], this.format);\n\n        const hasFraction = !comps[1].match(/^(0*)$/);\n        if (!this.isNegative() && hasFraction) {\n            result = result.addUnsafe(ONE.toFormat(result.format));\n        }\n\n        return result;\n    }\n\n    // @TODO: Support other rounding algorithms\n    round(decimals?: number): FixedNumber {\n        if (decimals == null) { decimals = 0; }\n\n        // If we are already in range, we're done\n        const comps = this.toString().split(\".\");\n        if (comps.length === 1) { comps.push(\"0\"); }\n\n        if (decimals < 0 || decimals > 80 || (decimals % 1)) {\n            logger.throwArgumentError(\"invalid decimal count\", \"decimals\", decimals);\n        }\n\n        if (comps[1].length <= decimals) { return this; }\n\n        const factor = FixedNumber.from(\"1\" + zeros.substring(0, decimals), this.format);\n        const bump = BUMP.toFormat(this.format);\n\n        return this.mulUnsafe(factor).addUnsafe(bump).floor().divUnsafe(factor);\n    }\n\n    isZero(): boolean {\n        return (this._value === \"0.0\" || this._value === \"0\");\n    }\n\n    isNegative(): boolean {\n        return (this._value[0] === \"-\");\n    }\n\n    toString(): string { return this._value; }\n\n    toHexString(width?: number): string {\n        if (width == null) { return this._hex; }\n        if (width % 8) { logger.throwArgumentError(\"invalid byte width\", \"width\", width); }\n        const hex = BigNumber.from(this._hex).fromTwos(this.format.width).toTwos(width).toHexString();\n        return hexZeroPad(hex, width / 8);\n    }\n\n    toUnsafeFloat(): number { return parseFloat(this.toString()); }\n\n    toFormat(format: FixedFormat | string): FixedNumber {\n        return FixedNumber.fromString(this._value, format);\n    }\n\n\n    static fromValue(value: BigNumber, decimals?: BigNumberish, format?: FixedFormat | string | number): FixedNumber {\n        // If decimals looks more like a format, and there is no format, shift the parameters\n        if (format == null && decimals != null && !isBigNumberish(decimals)) {\n            format = decimals;\n            decimals = null;\n        }\n\n        if (decimals == null) { decimals = 0; }\n        if (format == null) { format = \"fixed\"; }\n\n        return FixedNumber.fromString(formatFixed(value, decimals), FixedFormat.from(format));\n    }\n\n\n    static fromString(value: string, format?: FixedFormat | string | number): FixedNumber {\n        if (format == null) { format = \"fixed\"; }\n\n        const fixedFormat = FixedFormat.from(format);\n\n        const numeric = parseFixed(value, fixedFormat.decimals);\n\n        if (!fixedFormat.signed && numeric.lt(Zero)) {\n            throwFault(\"unsigned value cannot be negative\", \"overflow\", \"value\", value);\n        }\n\n        let hex: string = null;\n        if (fixedFormat.signed) {\n            hex = numeric.toTwos(fixedFormat.width).toHexString();\n        } else {\n            hex = numeric.toHexString();\n            hex = hexZeroPad(hex, fixedFormat.width / 8);\n        }\n\n        const decimal = formatFixed(numeric, fixedFormat.decimals);\n\n        return new FixedNumber(_constructorGuard, hex, decimal, fixedFormat);\n    }\n\n    static fromBytes(value: BytesLike, format?: FixedFormat | string | number): FixedNumber {\n        if (format == null) { format = \"fixed\"; }\n\n        const fixedFormat = FixedFormat.from(format);\n\n        if (arrayify(value).length > fixedFormat.width / 8) {\n            throw new Error(\"overflow\");\n        }\n\n        let numeric = BigNumber.from(value);\n        if (fixedFormat.signed) { numeric = numeric.fromTwos(fixedFormat.width); }\n\n        const hex = numeric.toTwos((fixedFormat.signed ? 0: 1) + fixedFormat.width).toHexString();\n        const decimal = formatFixed(numeric, fixedFormat.decimals);\n\n        return new FixedNumber(_constructorGuard, hex, decimal, fixedFormat);\n    }\n\n    static from(value: any, format?: FixedFormat | string | number) {\n        if (typeof(value) === \"string\") {\n            return FixedNumber.fromString(value, format);\n        }\n\n        if (isBytes(value)) {\n            return FixedNumber.fromBytes(value, format);\n        }\n\n        try {\n            return FixedNumber.fromValue(value, 0, format);\n        } catch (error) {\n            // Allow NUMERIC_FAULT to bubble up\n            if (error.code !== Logger.errors.INVALID_ARGUMENT) {\n                throw error;\n            }\n        }\n\n        return logger.throwArgumentError(\"invalid FixedNumber value\", \"value\", value);\n    }\n\n    static isFixedNumber(value: any): value is FixedNumber {\n        return !!(value && value._isFixedNumber);\n    }\n}\n\nconst ONE = FixedNumber.from(1);\nconst BUMP = FixedNumber.from(\"0.5\");\n","export const version = \"properties/5.7.0\";\n","\"use strict\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nexport function defineReadOnly<T, K extends keyof T>(object: T, name: K, value: T[K]): void {\n    Object.defineProperty(object, name, {\n        enumerable: true,\n        value: value,\n        writable: false,\n    });\n}\n\n// Crawl up the constructor chain to find a static method\nexport function getStatic<T>(ctor: any, key: string): T {\n    for (let i = 0; i < 32; i++) {\n        if (ctor[key]) { return ctor[key]; }\n        if (!ctor.prototype || typeof(ctor.prototype) !== \"object\") { break; }\n        ctor = Object.getPrototypeOf(ctor.prototype).constructor;\n    }\n    return null;\n}\n\nexport type Deferrable<T> = {\n    [ K in keyof T ]: T[K] | Promise<T[K]>;\n}\n\n\ntype Result = { key: string, value: any};\n\nexport async function resolveProperties<T>(object: Readonly<Deferrable<T>>): Promise<T> {\n    const promises: Array<Promise<Result>> = Object.keys(object).map((key) => {\n        const value = object[<keyof Deferrable<T>>key];\n        return Promise.resolve(value).then((v) => ({ key: key, value: v }));\n    });\n\n    const results = await Promise.all(promises);\n\n    return results.reduce((accum, result) => {\n        accum[<keyof T>(result.key)] = result.value;\n        return accum;\n    }, <T>{ });\n}\n\nexport function checkProperties(object: any, properties: { [ name: string ]: boolean }): void {\n    if (!object || typeof(object) !== \"object\") {\n        logger.throwArgumentError(\"invalid object\", \"object\", object);\n    }\n\n    Object.keys(object).forEach((key) => {\n        if (!properties[key]) {\n            logger.throwArgumentError(\"invalid object key - \" + key, \"transaction:\" + key, object);\n        }\n    });\n}\n\nexport function shallowCopy<T>(object: T): T {\n    const result: any = {};\n    for (const key in object) { result[key] = object[key]; }\n    return result;\n}\n\nconst opaque: { [key: string]: boolean } = { bigint: true, boolean: true, \"function\": true, number: true, string: true };\n\nfunction _isFrozen(object: any): boolean {\n\n    // Opaque objects are not mutable, so safe to copy by assignment\n    if (object === undefined || object === null || opaque[typeof(object)]) { return true; }\n\n    if (Array.isArray(object) || typeof(object) === \"object\") {\n        if (!Object.isFrozen(object)) { return false; }\n\n        const keys = Object.keys(object);\n        for (let i = 0; i < keys.length; i++) {\n            let value: any = null;\n            try {\n                value = object[keys[i]];\n            } catch (error) {\n                // If accessing a value triggers an error, it is a getter\n                // designed to do so (e.g. Result) and is therefore \"frozen\"\n                continue;\n            }\n\n            if (!_isFrozen(value)) { return false; }\n        }\n\n        return true;\n    }\n\n    return logger.throwArgumentError(`Cannot deepCopy ${ typeof(object) }`, \"object\", object);\n}\n\n// Returns a new copy of object, such that no properties may be replaced.\n// New properties may be added only to objects.\nfunction _deepCopy(object: any): any {\n\n    if (_isFrozen(object)) { return object; }\n\n    // Arrays are mutable, so we need to create a copy\n    if (Array.isArray(object)) {\n        return Object.freeze(object.map((item) => deepCopy(item)));\n    }\n\n    if (typeof(object) === \"object\") {\n        const result: { [ key: string ]: any } = {};\n        for (const key in object) {\n            const value = object[key];\n            if (value === undefined) { continue; }\n            defineReadOnly(result, key, deepCopy(value));\n        }\n\n        return result;\n    }\n\n    return logger.throwArgumentError(`Cannot deepCopy ${ typeof(object) }`, \"object\", object);\n}\n\nexport function deepCopy<T>(object: T): T {\n    return _deepCopy(object);\n}\n\nexport class Description<T = any> {\n    constructor(info: { [ K in keyof T ]: T[K] }) {\n        for (const key in info) {\n            (<any>this)[key] = deepCopy(info[key]);\n        }\n    }\n}\n","export const version = \"abi/5.7.0\";\n","\"use strict\";\n\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nexport interface JsonFragmentType {\n    readonly name?: string;\n    readonly indexed?: boolean;\n    readonly type?: string;\n    readonly internalType?: any; // @TODO: in v6 reduce type\n    readonly components?: ReadonlyArray<JsonFragmentType>;\n}\n\nexport interface JsonFragment {\n    readonly name?: string;\n    readonly type?: string;\n\n    readonly anonymous?: boolean;\n\n    readonly payable?: boolean;\n    readonly constant?: boolean;\n    readonly stateMutability?: string;\n\n    readonly inputs?: ReadonlyArray<JsonFragmentType>;\n    readonly outputs?: ReadonlyArray<JsonFragmentType>;\n\n    readonly gas?: string;\n};\n\nconst _constructorGuard = { };\n\n// AST Node parser state\ntype ParseState = {\n    allowArray?: boolean,\n    allowName?: boolean,\n    allowParams?: boolean,\n    allowType?: boolean,\n    readArray?: boolean,\n};\n\n// AST Node\ntype ParseNode = {\n    parent?: any,\n    type?: string,\n    name?: string,\n    state?: ParseState,\n    indexed?: boolean,\n    components?: Array<ParseNode>\n};\n\nlet ModifiersBytes: { [ name: string ]: boolean } = { calldata: true, memory: true, storage: true };\nlet ModifiersNest: { [ name: string ]: boolean } = { calldata: true, memory: true };\nfunction checkModifier(type: string, name: string): boolean {\n    if (type === \"bytes\" || type === \"string\") {\n        if (ModifiersBytes[name]) { return true; }\n    } else if (type === \"address\") {\n        if (name === \"payable\") { return true; }\n    } else if (type.indexOf(\"[\") >= 0 || type === \"tuple\") {\n        if (ModifiersNest[name]) { return true; }\n    }\n    if (ModifiersBytes[name] || name === \"payable\") {\n        logger.throwArgumentError(\"invalid modifier\", \"name\", name);\n    }\n    return false;\n}\n\n// @TODO: Make sure that children of an indexed tuple are marked with a null indexed\nfunction parseParamType(param: string, allowIndexed: boolean): ParseNode {\n\n    let originalParam = param;\n    function throwError(i: number) {\n        logger.throwArgumentError(`unexpected character at position ${ i }`, \"param\", param);\n    }\n    param = param.replace(/\\s/g, \" \");\n\n    function newNode(parent: ParseNode): ParseNode {\n        let node: ParseNode = { type: \"\", name: \"\", parent: parent, state: { allowType: true } };\n        if (allowIndexed) { node.indexed = false; }\n        return node\n    }\n\n    let parent: ParseNode = { type: \"\", name: \"\", state: { allowType: true } };\n    let node = parent;\n\n    for (let i = 0; i < param.length; i++) {\n        let c = param[i];\n        switch (c) {\n            case \"(\":\n                if (node.state.allowType && node.type === \"\") {\n                    node.type = \"tuple\";\n                } else if (!node.state.allowParams) {\n                    throwError(i);\n                }\n                node.state.allowType = false;\n                node.type = verifyType(node.type);\n                node.components = [ newNode(node) ];\n                node = node.components[0];\n                break;\n\n            case \")\":\n                delete node.state;\n\n                if (node.name === \"indexed\") {\n                    if (!allowIndexed) { throwError(i); }\n                    node.indexed = true;\n                    node.name = \"\";\n                }\n\n                if (checkModifier(node.type, node.name)) { node.name = \"\"; }\n\n                node.type = verifyType(node.type);\n\n                let child = node;\n                node = node.parent;\n                if (!node) { throwError(i); }\n                delete child.parent;\n                node.state.allowParams = false;\n                node.state.allowName = true;\n                node.state.allowArray = true;\n                break;\n\n            case \",\":\n                delete node.state;\n\n                if (node.name === \"indexed\") {\n                    if (!allowIndexed) { throwError(i); }\n                    node.indexed = true;\n                    node.name = \"\";\n                }\n\n                if (checkModifier(node.type, node.name)) { node.name = \"\"; }\n\n                node.type = verifyType(node.type);\n\n                let sibling: ParseNode = newNode(node.parent);\n                 //{ type: \"\", name: \"\", parent: node.parent, state: { allowType: true } };\n                node.parent.components.push(sibling);\n                delete node.parent;\n                node = sibling;\n                break;\n\n            // Hit a space...\n            case \" \":\n\n                // If reading type, the type is done and may read a param or name\n                if (node.state.allowType) {\n                    if (node.type !== \"\") {\n                        node.type = verifyType(node.type);\n                        delete node.state.allowType;\n                        node.state.allowName = true;\n                        node.state.allowParams = true;\n                    }\n                }\n\n                // If reading name, the name is done\n                if (node.state.allowName) {\n                    if (node.name !== \"\") {\n                        if (node.name === \"indexed\") {\n                            if (!allowIndexed) { throwError(i); }\n                            if (node.indexed) { throwError(i); }\n                            node.indexed = true;\n                            node.name = \"\";\n                        } else if (checkModifier(node.type, node.name)) {\n                            node.name = \"\";\n                        } else {\n                            node.state.allowName = false;\n                        }\n                    }\n                }\n\n                break;\n\n            case \"[\":\n                if (!node.state.allowArray) { throwError(i); }\n\n                node.type += c;\n\n                node.state.allowArray = false;\n                node.state.allowName = false;\n                node.state.readArray = true;\n                break;\n\n            case \"]\":\n                if (!node.state.readArray) { throwError(i); }\n\n                node.type += c;\n\n                node.state.readArray = false;\n                node.state.allowArray = true;\n                node.state.allowName = true;\n                break;\n\n            default:\n                if (node.state.allowType) {\n                    node.type += c;\n                    node.state.allowParams = true;\n                    node.state.allowArray = true;\n                } else if (node.state.allowName) {\n                    node.name += c;\n                    delete node.state.allowArray;\n                } else if (node.state.readArray) {\n                    node.type += c;\n                } else {\n                    throwError(i);\n               }\n        }\n    }\n\n    if (node.parent) { logger.throwArgumentError(\"unexpected eof\", \"param\", param); }\n\n    delete parent.state;\n\n    if (node.name === \"indexed\") {\n        if (!allowIndexed) { throwError(originalParam.length - 7); }\n        if (node.indexed) { throwError(originalParam.length - 7); }\n        node.indexed = true;\n        node.name = \"\";\n    } else if (checkModifier(node.type, node.name)) {\n        node.name = \"\";\n    }\n\n    parent.type = verifyType(parent.type);\n\n    return parent;\n}\n\nfunction populate(object: any, params: any) {\n    for (let key in params) { defineReadOnly(object, key, params[key]); }\n}\n\nexport const FormatTypes: { [ name: string ]: string } = Object.freeze({\n    // Bare formatting, as is needed for computing a sighash of an event or function\n    sighash: \"sighash\",\n\n    // Human-Readable with Minimal spacing and without names (compact human-readable)\n    minimal: \"minimal\",\n\n    // Human-Readable with nice spacing, including all names\n    full: \"full\",\n\n    // JSON-format a la Solidity\n    json: \"json\"\n});\n\nconst paramTypeArray = new RegExp(/^(.*)\\[([0-9]*)\\]$/);\n\nexport class ParamType {\n\n    // The local name of the parameter (of null if unbound)\n    readonly name: string;\n\n    // The fully qualified type (e.g. \"address\", \"tuple(address)\", \"uint256[3][]\"\n    readonly type: string;\n\n    // The base type (e.g. \"address\", \"tuple\", \"array\")\n    readonly baseType: string;\n\n    // Indexable Paramters ONLY (otherwise null)\n    readonly indexed: boolean;\n\n    // Tuples ONLY: (otherwise null)\n    //  - sub-components\n    readonly components: Array<ParamType>;\n\n    // Arrays ONLY: (otherwise null)\n    //  - length of the array (-1 for dynamic length)\n    //  - child type\n    readonly arrayLength: number;\n    readonly arrayChildren: ParamType;\n\n    readonly _isParamType: boolean;\n\n    constructor(constructorGuard: any, params: any) {\n        if (constructorGuard !== _constructorGuard) { logger.throwError(\"use fromString\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"new ParamType()\"\n        }); }\n        populate(this, params);\n\n        let match = this.type.match(paramTypeArray);\n        if (match) {\n            populate(this, {\n                arrayLength: parseInt(match[2] || \"-1\"),\n                arrayChildren: ParamType.fromObject({\n                    type: match[1],\n                    components: this.components\n                }),\n                baseType: \"array\"\n            });\n        } else {\n            populate(this, {\n                arrayLength: null,\n                arrayChildren: null,\n                baseType: ((this.components != null) ? \"tuple\": this.type)\n            });\n        }\n\n        this._isParamType = true;\n\n        Object.freeze(this);\n    }\n\n    // Format the parameter fragment\n    //   - sighash: \"(uint256,address)\"\n    //   - minimal: \"tuple(uint256,address) indexed\"\n    //   - full:    \"tuple(uint256 foo, address bar) indexed baz\"\n    format(format?: string): string {\n        if (!format) { format = FormatTypes.sighash; }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n\n        if (format === FormatTypes.json) {\n            let result: any = {\n                type: ((this.baseType === \"tuple\") ? \"tuple\": this.type),\n                name: (this.name || undefined)\n            };\n            if (typeof(this.indexed) === \"boolean\") { result.indexed = this.indexed; }\n            if (this.components) {\n                result.components = this.components.map((comp) => JSON.parse(comp.format(format)));\n            }\n            return JSON.stringify(result);\n        }\n\n        let result = \"\";\n\n        // Array\n        if (this.baseType === \"array\") {\n            result += this.arrayChildren.format(format);\n            result += \"[\" + (this.arrayLength < 0 ? \"\": String(this.arrayLength)) + \"]\";\n        } else {\n            if (this.baseType === \"tuple\") {\n                if (format !== FormatTypes.sighash) {\n                    result += this.type;\n                }\n                result += \"(\" + this.components.map(\n                    (comp) => comp.format(format)\n                ).join((format === FormatTypes.full) ? \", \": \",\") + \")\";\n            } else {\n                result += this.type;\n            }\n        }\n\n        if (format !== FormatTypes.sighash) {\n            if (this.indexed === true) { result += \" indexed\"; }\n            if (format === FormatTypes.full && this.name) {\n                result += \" \" + this.name;\n            }\n        }\n\n        return result;\n    }\n\n    static from(value: string | JsonFragmentType | ParamType, allowIndexed?: boolean): ParamType {\n        if (typeof(value) === \"string\") {\n            return ParamType.fromString(value, allowIndexed);\n        }\n        return ParamType.fromObject(value);\n    }\n\n    static fromObject(value: JsonFragmentType | ParamType): ParamType {\n        if (ParamType.isParamType(value)) { return value; }\n\n        return new ParamType(_constructorGuard, {\n            name: (value.name || null),\n            type: verifyType(value.type),\n            indexed: ((value.indexed == null) ? null: !!value.indexed),\n            components: (value.components ? value.components.map(ParamType.fromObject): null)\n        });\n    }\n\n    static fromString(value: string, allowIndexed?: boolean): ParamType {\n        function ParamTypify(node: ParseNode): ParamType {\n            return ParamType.fromObject({\n                name: node.name,\n                type: node.type,\n                indexed: node.indexed,\n                components: node.components\n            });\n        }\n\n        return ParamTypify(parseParamType(value, !!allowIndexed));\n    }\n\n    static isParamType(value: any): value is ParamType {\n        return !!(value != null && value._isParamType);\n    }\n};\n\nfunction parseParams(value: string, allowIndex: boolean): Array<ParamType> {\n    return splitNesting(value).map((param) => ParamType.fromString(param, allowIndex));\n}\n\ntype TypeCheck<T> = { -readonly [ K in keyof T ]: T[K] };\n\ninterface _Fragment {\n    readonly type: string;\n    readonly name: string;\n    readonly inputs: ReadonlyArray<ParamType>;\n}\n\nexport abstract class Fragment {\n\n    readonly type: string;\n    readonly name: string;\n    readonly inputs: Array<ParamType>;\n\n    readonly _isFragment: boolean;\n\n    constructor(constructorGuard: any, params: any) {\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"use a static from method\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new Fragment()\"\n            });\n        }\n        populate(this, params);\n\n        this._isFragment = true;\n\n        Object.freeze(this);\n    }\n\n    abstract format(format?: string): string;\n\n    static from(value: Fragment | JsonFragment | string): Fragment {\n        if (Fragment.isFragment(value)) { return value; }\n\n        if (typeof(value) === \"string\") {\n            return Fragment.fromString(value);\n        }\n\n        return Fragment.fromObject(value);\n    }\n\n    static fromObject(value: Fragment | JsonFragment): Fragment {\n        if (Fragment.isFragment(value)) { return value; }\n\n        switch (value.type) {\n            case \"function\":\n                return FunctionFragment.fromObject(value);\n            case \"event\":\n                return EventFragment.fromObject(value);\n            case \"constructor\":\n                return ConstructorFragment.fromObject(value);\n            case \"error\":\n                return ErrorFragment.fromObject(value);\n            case \"fallback\":\n            case \"receive\":\n                // @TODO: Something? Maybe return a FunctionFragment? A custom DefaultFunctionFragment?\n                return null;\n        }\n\n        return logger.throwArgumentError(\"invalid fragment object\", \"value\", value);\n    }\n\n    static fromString(value: string): Fragment {\n        // Make sure the \"returns\" is surrounded by a space and all whitespace is exactly one space\n        value = value.replace(/\\s/g, \" \");\n        value = value.replace(/\\(/g, \" (\").replace(/\\)/g, \") \").replace(/\\s+/g, \" \");\n        value = value.trim();\n\n        if (value.split(\" \")[0] === \"event\") {\n           return EventFragment.fromString(value.substring(5).trim());\n        } else if (value.split(\" \")[0] === \"function\") {\n            return FunctionFragment.fromString(value.substring(8).trim());\n        } else if (value.split(\"(\")[0].trim() === \"constructor\") {\n            return ConstructorFragment.fromString(value.trim());\n        } else if (value.split(\" \")[0] === \"error\") {\n           return ErrorFragment.fromString(value.substring(5).trim());\n        }\n\n        return logger.throwArgumentError(\"unsupported fragment\", \"value\", value);\n    }\n\n    static isFragment(value: any): value is Fragment {\n        return !!(value && value._isFragment);\n    }\n}\n\ninterface _EventFragment extends _Fragment {\n    readonly anonymous: boolean;\n}\n\nexport class EventFragment extends Fragment {\n    readonly anonymous: boolean;\n\n    format(format?: string): string {\n        if (!format) { format = FormatTypes.sighash; }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n\n        if (format === FormatTypes.json) {\n            return JSON.stringify({\n                type: \"event\",\n                anonymous: this.anonymous,\n                name: this.name,\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format)))\n            });\n        }\n\n        let result = \"\";\n\n        if (format !== FormatTypes.sighash) {\n            result += \"event \";\n        }\n\n        result += this.name + \"(\" + this.inputs.map(\n            (input) => input.format(format)\n        ).join((format === FormatTypes.full) ? \", \": \",\") + \") \";\n\n        if (format !== FormatTypes.sighash) {\n            if (this.anonymous) {\n                result += \"anonymous \";\n            }\n        }\n\n        return result.trim();\n    }\n\n    static from(value: EventFragment | JsonFragment | string): EventFragment {\n        if (typeof(value) === \"string\") {\n            return EventFragment.fromString(value);\n        }\n        return EventFragment.fromObject(value);\n    }\n\n    static fromObject(value: JsonFragment | EventFragment): EventFragment {\n        if (EventFragment.isEventFragment(value)) { return value; }\n\n        if (value.type !== \"event\") {\n            logger.throwArgumentError(\"invalid event object\", \"value\", value);\n        }\n\n        const params: TypeCheck<_EventFragment> = {\n            name: verifyIdentifier(value.name),\n            anonymous: value.anonymous,\n            inputs: (value.inputs ? value.inputs.map(ParamType.fromObject) : []),\n            type: \"event\"\n        };\n\n        return new EventFragment(_constructorGuard, params);\n    }\n\n    static fromString(value: string): EventFragment {\n\n        let match = value.match(regexParen);\n        if (!match) {\n            logger.throwArgumentError(\"invalid event string\", \"value\", value);\n        }\n\n        let anonymous = false;\n        match[3].split(\" \").forEach((modifier) => {\n            switch(modifier.trim()) {\n                case \"anonymous\":\n                    anonymous = true;\n                    break;\n                case \"\":\n                    break;\n                default:\n                    logger.warn(\"unknown modifier: \" + modifier);\n            }\n        });\n\n        return EventFragment.fromObject({\n            name: match[1].trim(),\n            anonymous: anonymous,\n            inputs: parseParams(match[2], true),\n            type: \"event\"\n        });\n    }\n\n    static isEventFragment(value: any): value is EventFragment {\n        return (value && value._isFragment && value.type === \"event\");\n    }\n}\n\nfunction parseGas(value: string, params: any): string {\n    params.gas = null;\n\n    let comps = value.split(\"@\");\n    if (comps.length !== 1) {\n        if (comps.length > 2) {\n            logger.throwArgumentError(\"invalid human-readable ABI signature\", \"value\", value);\n        }\n        if (!comps[1].match(/^[0-9]+$/)) {\n            logger.throwArgumentError(\"invalid human-readable ABI signature gas\", \"value\", value);\n        }\n        params.gas = BigNumber.from(comps[1]);\n        return comps[0];\n    }\n\n    return value;\n}\n\nfunction parseModifiers(value: string, params: any): void {\n    params.constant = false;\n    params.payable = false;\n    params.stateMutability = \"nonpayable\";\n\n    value.split(\" \").forEach((modifier) => {\n        switch (modifier.trim()) {\n            case \"constant\":\n                params.constant = true;\n                break;\n            case \"payable\":\n                params.payable = true;\n                params.stateMutability = \"payable\";\n                break;\n            case \"nonpayable\":\n                params.payable = false;\n                params.stateMutability = \"nonpayable\";\n                break;\n            case \"pure\":\n                params.constant = true;\n                params.stateMutability = \"pure\";\n                break;\n            case \"view\":\n                params.constant = true;\n                params.stateMutability = \"view\";\n                break;\n            case \"external\":\n            case \"public\":\n            case \"\":\n                break;\n            default:\n                console.log(\"unknown modifier: \" + modifier);\n        }\n    });\n}\n\ntype StateInputValue = {\n    constant?: boolean;\n    payable?: boolean;\n    stateMutability?: string;\n    type?: string;\n};\n\ntype StateOutputValue = {\n    constant: boolean;\n    payable: boolean;\n    stateMutability: string;\n};\n\nfunction verifyState(value: StateInputValue): StateOutputValue {\n    let result: any = {\n        constant: false,\n        payable: true,\n        stateMutability: \"payable\"\n    };\n\n    if (value.stateMutability != null) {\n        result.stateMutability = value.stateMutability;\n\n        // Set (and check things are consistent) the constant property\n        result.constant = (result.stateMutability === \"view\" || result.stateMutability === \"pure\");\n        if (value.constant != null) {\n            if ((!!value.constant) !== result.constant) {\n                logger.throwArgumentError(\"cannot have constant function with mutability \" + result.stateMutability, \"value\", value);\n            }\n        }\n\n        // Set (and check things are consistent) the payable property\n        result.payable = (result.stateMutability === \"payable\");\n        if (value.payable != null) {\n            if ((!!value.payable) !== result.payable) {\n                logger.throwArgumentError(\"cannot have payable function with mutability \" + result.stateMutability, \"value\", value);\n            }\n        }\n\n    } else if (value.payable != null) {\n        result.payable = !!value.payable;\n\n        // If payable we can assume non-constant; otherwise we can't assume\n        if (value.constant == null && !result.payable && value.type !== \"constructor\") {\n            logger.throwArgumentError(\"unable to determine stateMutability\", \"value\", value);\n        }\n\n        result.constant = !!value.constant;\n\n        if (result.constant) {\n            result.stateMutability = \"view\";\n        } else {\n            result.stateMutability = (result.payable ? \"payable\": \"nonpayable\");\n        }\n\n        if (result.payable && result.constant) {\n            logger.throwArgumentError(\"cannot have constant payable function\", \"value\", value);\n        }\n\n    } else if (value.constant != null) {\n        result.constant = !!value.constant;\n        result.payable = !result.constant;\n        result.stateMutability = (result.constant ? \"view\": \"payable\");\n\n    } else if (value.type !== \"constructor\") {\n        logger.throwArgumentError(\"unable to determine stateMutability\", \"value\", value);\n    }\n\n    return result;\n}\n\ninterface _ConstructorFragment extends _Fragment {\n    stateMutability: string;\n    payable: boolean;\n    gas?: BigNumber;\n}\n\nexport class ConstructorFragment extends Fragment {\n    stateMutability: string;\n    payable: boolean;\n    gas?: BigNumber;\n\n    format(format?: string): string {\n        if (!format) { format = FormatTypes.sighash; }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n\n        if (format === FormatTypes.json) {\n            return JSON.stringify({\n                type: \"constructor\",\n                stateMutability: ((this.stateMutability !== \"nonpayable\") ? this.stateMutability: undefined),\n                payable: this.payable,\n                gas: (this.gas ? this.gas.toNumber(): undefined),\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format)))\n            });\n        }\n\n        if (format === FormatTypes.sighash) {\n            logger.throwError(\"cannot format a constructor for sighash\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"format(sighash)\"\n            });\n        }\n\n        let result = \"constructor(\" + this.inputs.map(\n            (input) => input.format(format)\n        ).join((format === FormatTypes.full) ? \", \": \",\") + \") \";\n\n        if (this.stateMutability && this.stateMutability !== \"nonpayable\") {\n            result += this.stateMutability + \" \";\n        }\n\n        return result.trim();\n    }\n\n    static from(value: ConstructorFragment | JsonFragment | string): ConstructorFragment {\n        if (typeof(value) === \"string\") {\n            return ConstructorFragment.fromString(value);\n        }\n        return ConstructorFragment.fromObject(value);\n    }\n\n    static fromObject(value: ConstructorFragment | JsonFragment): ConstructorFragment {\n        if (ConstructorFragment.isConstructorFragment(value)) { return value; }\n\n        if (value.type !== \"constructor\") {\n            logger.throwArgumentError(\"invalid constructor object\", \"value\", value);\n        }\n\n        let state = verifyState(value);\n        if (state.constant) {\n            logger.throwArgumentError(\"constructor cannot be constant\", \"value\", value);\n        }\n\n        const params: TypeCheck<_ConstructorFragment> = {\n            name: null,\n            type: value.type,\n            inputs: (value.inputs ? value.inputs.map(ParamType.fromObject): []),\n            payable: state.payable,\n            stateMutability: state.stateMutability,\n            gas: (value.gas ? BigNumber.from(value.gas): null)\n        };\n\n        return new ConstructorFragment(_constructorGuard, params);\n    }\n\n    static fromString(value: string): ConstructorFragment {\n        let params: any = { type: \"constructor\" };\n\n        value = parseGas(value, params);\n\n        let parens = value.match(regexParen);\n        if (!parens || parens[1].trim() !== \"constructor\") {\n            logger.throwArgumentError(\"invalid constructor string\", \"value\", value);\n        }\n\n        params.inputs = parseParams(parens[2].trim(), false);\n\n        parseModifiers(parens[3].trim(), params);\n\n        return ConstructorFragment.fromObject(params);\n    }\n\n    static isConstructorFragment(value: any): value is ConstructorFragment {\n        return (value && value._isFragment && value.type === \"constructor\");\n    }\n}\n\ninterface _FunctionFragment extends _ConstructorFragment {\n    constant: boolean;\n    outputs?: Array<ParamType>;\n}\n\nexport class FunctionFragment extends ConstructorFragment {\n    constant: boolean;\n    outputs?: Array<ParamType>;\n\n    format(format?: string): string {\n        if (!format) { format = FormatTypes.sighash; }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n\n        if (format === FormatTypes.json) {\n            return JSON.stringify({\n                type: \"function\",\n                name: this.name,\n                constant: this.constant,\n                stateMutability: ((this.stateMutability !== \"nonpayable\") ? this.stateMutability: undefined),\n                payable: this.payable,\n                gas: (this.gas ? this.gas.toNumber(): undefined),\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format))),\n                outputs: this.outputs.map((output) => JSON.parse(output.format(format))),\n            });\n        }\n\n        let result = \"\";\n\n        if (format !== FormatTypes.sighash) {\n            result += \"function \";\n        }\n\n        result += this.name + \"(\" + this.inputs.map(\n            (input) => input.format(format)\n        ).join((format === FormatTypes.full) ? \", \": \",\") + \") \";\n\n        if (format !== FormatTypes.sighash) {\n            if (this.stateMutability) {\n                if (this.stateMutability !== \"nonpayable\") {\n                    result += (this.stateMutability + \" \");\n                }\n            } else if (this.constant) {\n                result += \"view \";\n            }\n\n            if (this.outputs && this.outputs.length) {\n                result += \"returns (\" + this.outputs.map(\n                    (output) => output.format(format)\n                ).join(\", \") + \") \";\n            }\n\n            if (this.gas != null) {\n                result += \"@\" + this.gas.toString() + \" \";\n            }\n        }\n\n        return result.trim();\n    }\n\n    static from(value: FunctionFragment | JsonFragment | string): FunctionFragment {\n        if (typeof(value) === \"string\") {\n            return FunctionFragment.fromString(value);\n        }\n        return FunctionFragment.fromObject(value);\n    }\n\n    static fromObject(value: FunctionFragment | JsonFragment): FunctionFragment {\n        if (FunctionFragment.isFunctionFragment(value)) { return value; }\n\n        if (value.type !== \"function\") {\n            logger.throwArgumentError(\"invalid function object\", \"value\", value);\n        }\n\n        let state = verifyState(value);\n\n        const params: TypeCheck<_FunctionFragment> = {\n            type: value.type,\n            name: verifyIdentifier(value.name),\n            constant: state.constant,\n            inputs: (value.inputs ? value.inputs.map(ParamType.fromObject): []),\n            outputs: (value.outputs ? value.outputs.map(ParamType.fromObject): [ ]),\n            payable: state.payable,\n            stateMutability: state.stateMutability,\n            gas: (value.gas ? BigNumber.from(value.gas): null)\n        };\n\n        return new FunctionFragment(_constructorGuard, params);\n    }\n\n    static fromString(value: string): FunctionFragment {\n        let params: any = { type: \"function\" };\n        value = parseGas(value, params);\n\n        let comps = value.split(\" returns \");\n        if (comps.length > 2) {\n            logger.throwArgumentError(\"invalid function string\", \"value\", value);\n        }\n\n        let parens = comps[0].match(regexParen);\n        if (!parens) {\n            logger.throwArgumentError(\"invalid function signature\", \"value\", value);\n        }\n\n        params.name = parens[1].trim();\n        if (params.name) { verifyIdentifier(params.name); }\n\n        params.inputs = parseParams(parens[2], false);\n\n        parseModifiers(parens[3].trim(), params);\n\n        // We have outputs\n        if (comps.length > 1) {\n           let returns = comps[1].match(regexParen);\n            if (returns[1].trim() != \"\" || returns[3].trim() != \"\") {\n                logger.throwArgumentError(\"unexpected tokens\", \"value\", value);\n            }\n            params.outputs = parseParams(returns[2], false);\n        } else {\n            params.outputs = [ ];\n        }\n\n        return FunctionFragment.fromObject(params);\n    }\n\n    static isFunctionFragment(value: any): value is FunctionFragment {\n        return (value && value._isFragment && value.type === \"function\");\n    }\n}\n\n//export class StructFragment extends Fragment {\n//}\n\nfunction checkForbidden(fragment: ErrorFragment): ErrorFragment {\n    const sig = fragment.format();\n    if (sig === \"Error(string)\" || sig === \"Panic(uint256)\") {\n        logger.throwArgumentError(`cannot specify user defined ${ sig } error`, \"fragment\", fragment);\n    }\n    return fragment;\n}\n\nexport class ErrorFragment extends Fragment {\n\n    format(format?: string): string {\n        if (!format) { format = FormatTypes.sighash; }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n\n        if (format === FormatTypes.json) {\n            return JSON.stringify({\n                type: \"error\",\n                name: this.name,\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format))),\n            });\n        }\n\n        let result = \"\";\n\n        if (format !== FormatTypes.sighash) {\n            result += \"error \";\n        }\n\n        result += this.name + \"(\" + this.inputs.map(\n            (input) => input.format(format)\n        ).join((format === FormatTypes.full) ? \", \": \",\") + \") \";\n\n        return result.trim();\n    }\n\n    static from(value: ErrorFragment | JsonFragment | string): ErrorFragment {\n        if (typeof(value) === \"string\") {\n            return ErrorFragment.fromString(value);\n        }\n        return ErrorFragment.fromObject(value);\n    }\n\n    static fromObject(value: ErrorFragment | JsonFragment): ErrorFragment {\n        if (ErrorFragment.isErrorFragment(value)) { return value; }\n\n        if (value.type !== \"error\") {\n            logger.throwArgumentError(\"invalid error object\", \"value\", value);\n        }\n\n        const params: TypeCheck<_Fragment> = {\n            type: value.type,\n            name: verifyIdentifier(value.name),\n            inputs: (value.inputs ? value.inputs.map(ParamType.fromObject): [])\n        };\n\n        return checkForbidden(new ErrorFragment(_constructorGuard, params));\n    }\n\n    static fromString(value: string): ErrorFragment {\n        let params: any = { type: \"error\" };\n\n        let parens = value.match(regexParen);\n        if (!parens) {\n            logger.throwArgumentError(\"invalid error signature\", \"value\", value);\n        }\n\n        params.name = parens[1].trim();\n        if (params.name) { verifyIdentifier(params.name); }\n\n        params.inputs = parseParams(parens[2], false);\n\n        return checkForbidden(ErrorFragment.fromObject(params));\n    }\n\n    static isErrorFragment(value: any): value is ErrorFragment {\n        return (value && value._isFragment && value.type === \"error\");\n    }\n}\n\nfunction verifyType(type: string): string {\n\n    // These need to be transformed to their full description\n    if (type.match(/^uint($|[^1-9])/)) {\n        type = \"uint256\" + type.substring(4);\n    } else if (type.match(/^int($|[^1-9])/)) {\n        type = \"int256\" + type.substring(3);\n    }\n\n    // @TODO: more verification\n\n    return type;\n}\n\n// See: https://github.com/ethereum/solidity/blob/1f8f1a3db93a548d0555e3e14cfc55a10e25b60e/docs/grammar/SolidityLexer.g4#L234\nconst regexIdentifier = new RegExp(\"^[a-zA-Z$_][a-zA-Z0-9$_]*$\");\nfunction verifyIdentifier(value: string): string {\n    if (!value || !value.match(regexIdentifier)) {\n        logger.throwArgumentError(`invalid identifier \"${ value }\"`, \"value\", value);\n    }\n    return value;\n}\n\nconst regexParen = new RegExp(\"^([^)(]*)\\\\((.*)\\\\)([^)(]*)$\");\n\nfunction splitNesting(value: string): Array<any> {\n    value = value.trim();\n\n    let result = [];\n    let accum = \"\";\n    let depth = 0;\n    for (let offset = 0; offset < value.length; offset++) {\n        let c = value[offset];\n        if (c === \",\" && depth === 0) {\n            result.push(accum);\n            accum = \"\";\n        } else {\n            accum += c;\n            if (c === \"(\") {\n                depth++;\n            } else if (c === \")\") {\n                depth--;\n                if (depth === -1) {\n                    logger.throwArgumentError(\"unbalanced parenthesis\", \"value\", value);\n                }\n            }\n        }\n    }\n    if (accum) { result.push(accum); }\n\n    return result;\n}\n\n","\"use strict\";\n\nimport { arrayify, BytesLike, concat, hexConcat, hexlify } from \"@ethersproject/bytes\";\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"../_version\";\nconst logger = new Logger(version);\n\nexport interface Result extends ReadonlyArray<any> {\n    readonly [key: string]: any;\n}\n\nexport function checkResultErrors(result: Result): Array<{ path: Array<string | number>, error: Error }> {\n    // Find the first error (if any)\n    const errors: Array<{ path: Array<string | number>, error: Error }> = [ ];\n\n    const checkErrors = function(path: Array<string | number>, object: any): void {\n        if (!Array.isArray(object)) { return; }\n        for (let key in object) {\n            const childPath = path.slice();\n            childPath.push(key);\n\n            try {\n                 checkErrors(childPath, object[key]);\n            } catch (error) {\n                errors.push({ path: childPath, error: error });\n            }\n        }\n    }\n    checkErrors([ ], result);\n\n    return errors;\n\n}\n\nexport type CoerceFunc = (type: string, value: any) => any;\n\nexport abstract class Coder {\n\n    // The coder name:\n    //   - address, uint256, tuple, array, etc.\n    readonly name: string;\n\n    // The fully expanded type, including composite types:\n    //   - address, uint256, tuple(address,bytes), uint256[3][4][],  etc.\n    readonly type: string;\n\n    // The localName bound in the signature, in this example it is \"baz\":\n    //   - tuple(address foo, uint bar) baz\n    readonly localName: string;\n\n    // Whether this type is dynamic:\n    //  - Dynamic: bytes, string, address[], tuple(boolean[]), etc.\n    //  - Not Dynamic: address, uint256, boolean[3], tuple(address, uint8)\n    readonly dynamic: boolean;\n\n    constructor(name: string, type: string, localName: string, dynamic: boolean) {\n        // @TODO: defineReadOnly these\n        this.name = name;\n        this.type = type;\n        this.localName = localName;\n        this.dynamic = dynamic;\n    }\n\n    _throwError(message: string, value: any): void {\n        logger.throwArgumentError(message, this.localName, value);\n    }\n\n    abstract encode(writer: Writer, value: any): number;\n    abstract decode(reader: Reader): any;\n\n    abstract defaultValue(): any;\n}\n\nexport class Writer {\n    readonly wordSize: number;\n\n    _data: Array<Uint8Array>;\n    _dataLength: number;\n    _padding: Uint8Array;\n\n    constructor(wordSize?: number) {\n        defineReadOnly(this, \"wordSize\", wordSize || 32);\n        this._data = [ ];\n        this._dataLength = 0;\n        this._padding = new Uint8Array(wordSize);\n    }\n\n    get data(): string {\n        return hexConcat(this._data);\n    }\n    get length(): number { return this._dataLength; }\n\n    _writeData(data: Uint8Array): number {\n        this._data.push(data);\n        this._dataLength += data.length;\n        return data.length;\n    }\n\n    appendWriter(writer: Writer): number {\n        return this._writeData(concat(writer._data));\n    }\n\n    // Arrayish items; padded on the right to wordSize\n    writeBytes(value: BytesLike): number {\n        let bytes = arrayify(value);\n        const paddingOffset = bytes.length % this.wordSize;\n        if (paddingOffset) {\n            bytes = concat([ bytes, this._padding.slice(paddingOffset) ])\n        }\n        return this._writeData(bytes);\n    }\n\n    _getValue(value: BigNumberish): Uint8Array {\n        let bytes = arrayify(BigNumber.from(value));\n        if (bytes.length > this.wordSize) {\n            logger.throwError(\"value out-of-bounds\", Logger.errors.BUFFER_OVERRUN, {\n                length: this.wordSize,\n                offset: bytes.length\n            });\n        }\n        if (bytes.length % this.wordSize) {\n            bytes = concat([ this._padding.slice(bytes.length % this.wordSize), bytes ]);\n        }\n        return bytes;\n    }\n\n    // BigNumberish items; padded on the left to wordSize\n    writeValue(value: BigNumberish): number {\n        return this._writeData(this._getValue(value));\n    }\n\n    writeUpdatableValue(): (value: BigNumberish) => void {\n        const offset = this._data.length;\n        this._data.push(this._padding);\n        this._dataLength += this.wordSize;\n        return (value: BigNumberish) => {\n            this._data[offset] = this._getValue(value);\n        };\n    }\n}\n\nexport class Reader {\n    readonly wordSize: number;\n    readonly allowLoose: boolean;\n\n    readonly _data: Uint8Array;\n    readonly _coerceFunc: CoerceFunc;\n\n    _offset: number;\n\n    constructor(data: BytesLike, wordSize?: number, coerceFunc?: CoerceFunc, allowLoose?: boolean) {\n        defineReadOnly(this, \"_data\", arrayify(data));\n        defineReadOnly(this, \"wordSize\", wordSize || 32);\n        defineReadOnly(this, \"_coerceFunc\", coerceFunc);\n        defineReadOnly(this, \"allowLoose\", allowLoose);\n\n        this._offset = 0;\n    }\n\n    get data(): string { return hexlify(this._data); }\n    get consumed(): number { return this._offset; }\n\n    // The default Coerce function\n    static coerce(name: string, value: any): any {\n        let match = name.match(\"^u?int([0-9]+)$\");\n        if (match && parseInt(match[1]) <= 48) { value =  value.toNumber(); }\n        return value;\n    }\n\n    coerce(name: string, value: any): any {\n        if (this._coerceFunc) { return this._coerceFunc(name, value); }\n        return Reader.coerce(name, value);\n    }\n\n    _peekBytes(offset: number, length: number, loose?: boolean): Uint8Array {\n        let alignedLength = Math.ceil(length / this.wordSize) * this.wordSize;\n        if (this._offset + alignedLength > this._data.length) {\n            if (this.allowLoose && loose && this._offset + length <= this._data.length) {\n                alignedLength = length;\n            } else {\n                logger.throwError(\"data out-of-bounds\", Logger.errors.BUFFER_OVERRUN, {\n                    length: this._data.length,\n                    offset: this._offset + alignedLength\n                });\n            }\n        }\n        return this._data.slice(this._offset, this._offset + alignedLength)\n    }\n\n    subReader(offset: number): Reader {\n        return new Reader(this._data.slice(this._offset + offset), this.wordSize, this._coerceFunc, this.allowLoose);\n    }\n\n    readBytes(length: number, loose?: boolean): Uint8Array {\n        let bytes = this._peekBytes(0, length, !!loose);\n        this._offset += bytes.length;\n        // @TODO: Make sure the length..end bytes are all 0?\n        return bytes.slice(0, length);\n    }\n\n    readValue(): BigNumber {\n        return BigNumber.from(this.readBytes(this.wordSize));\n    }\n}\n","/**\n * [js-sha3]{@link https://github.com/emn178/js-sha3}\n *\n * @version 0.8.0\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\n * @copyright Chen, Yi-Cyuan 2015-2018\n * @license MIT\n */\n/*jslint bitwise: true */\n(function () {\n  'use strict';\n\n  var INPUT_ERROR = 'input is invalid type';\n  var FINALIZE_ERROR = 'finalize already called';\n  var WINDOW = typeof window === 'object';\n  var root = WINDOW ? window : {};\n  if (root.JS_SHA3_NO_WINDOW) {\n    WINDOW = false;\n  }\n  var WEB_WORKER = !WINDOW && typeof self === 'object';\n  var NODE_JS = !root.JS_SHA3_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;\n  if (NODE_JS) {\n    root = global;\n  } else if (WEB_WORKER) {\n    root = self;\n  }\n  var COMMON_JS = !root.JS_SHA3_NO_COMMON_JS && typeof module === 'object' && module.exports;\n  var AMD = typeof define === 'function' && define.amd;\n  var ARRAY_BUFFER = !root.JS_SHA3_NO_ARRAY_BUFFER && typeof ArrayBuffer !== 'undefined';\n  var HEX_CHARS = '0123456789abcdef'.split('');\n  var SHAKE_PADDING = [31, 7936, 2031616, 520093696];\n  var CSHAKE_PADDING = [4, 1024, 262144, 67108864];\n  var KECCAK_PADDING = [1, 256, 65536, 16777216];\n  var PADDING = [6, 1536, 393216, 100663296];\n  var SHIFT = [0, 8, 16, 24];\n  var RC = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649,\n    0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0,\n    2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771,\n    2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648,\n    2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648];\n  var BITS = [224, 256, 384, 512];\n  var SHAKE_BITS = [128, 256];\n  var OUTPUT_TYPES = ['hex', 'buffer', 'arrayBuffer', 'array', 'digest'];\n  var CSHAKE_BYTEPAD = {\n    '128': 168,\n    '256': 136\n  };\n\n  if (root.JS_SHA3_NO_NODE_JS || !Array.isArray) {\n    Array.isArray = function (obj) {\n      return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n  }\n\n  if (ARRAY_BUFFER && (root.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView)) {\n    ArrayBuffer.isView = function (obj) {\n      return typeof obj === 'object' && obj.buffer && obj.buffer.constructor === ArrayBuffer;\n    };\n  }\n\n  var createOutputMethod = function (bits, padding, outputType) {\n    return function (message) {\n      return new Keccak(bits, padding, bits).update(message)[outputType]();\n    };\n  };\n\n  var createShakeOutputMethod = function (bits, padding, outputType) {\n    return function (message, outputBits) {\n      return new Keccak(bits, padding, outputBits).update(message)[outputType]();\n    };\n  };\n\n  var createCshakeOutputMethod = function (bits, padding, outputType) {\n    return function (message, outputBits, n, s) {\n      return methods['cshake' + bits].update(message, outputBits, n, s)[outputType]();\n    };\n  };\n\n  var createKmacOutputMethod = function (bits, padding, outputType) {\n    return function (key, message, outputBits, s) {\n      return methods['kmac' + bits].update(key, message, outputBits, s)[outputType]();\n    };\n  };\n\n  var createOutputMethods = function (method, createMethod, bits, padding) {\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createMethod(bits, padding, type);\n    }\n    return method;\n  };\n\n  var createMethod = function (bits, padding) {\n    var method = createOutputMethod(bits, padding, 'hex');\n    method.create = function () {\n      return new Keccak(bits, padding, bits);\n    };\n    method.update = function (message) {\n      return method.create().update(message);\n    };\n    return createOutputMethods(method, createOutputMethod, bits, padding);\n  };\n\n  var createShakeMethod = function (bits, padding) {\n    var method = createShakeOutputMethod(bits, padding, 'hex');\n    method.create = function (outputBits) {\n      return new Keccak(bits, padding, outputBits);\n    };\n    method.update = function (message, outputBits) {\n      return method.create(outputBits).update(message);\n    };\n    return createOutputMethods(method, createShakeOutputMethod, bits, padding);\n  };\n\n  var createCshakeMethod = function (bits, padding) {\n    var w = CSHAKE_BYTEPAD[bits];\n    var method = createCshakeOutputMethod(bits, padding, 'hex');\n    method.create = function (outputBits, n, s) {\n      if (!n && !s) {\n        return methods['shake' + bits].create(outputBits);\n      } else {\n        return new Keccak(bits, padding, outputBits).bytepad([n, s], w);\n      }\n    };\n    method.update = function (message, outputBits, n, s) {\n      return method.create(outputBits, n, s).update(message);\n    };\n    return createOutputMethods(method, createCshakeOutputMethod, bits, padding);\n  };\n\n  var createKmacMethod = function (bits, padding) {\n    var w = CSHAKE_BYTEPAD[bits];\n    var method = createKmacOutputMethod(bits, padding, 'hex');\n    method.create = function (key, outputBits, s) {\n      return new Kmac(bits, padding, outputBits).bytepad(['KMAC', s], w).bytepad([key], w);\n    };\n    method.update = function (key, message, outputBits, s) {\n      return method.create(key, outputBits, s).update(message);\n    };\n    return createOutputMethods(method, createKmacOutputMethod, bits, padding);\n  };\n\n  var algorithms = [\n    { name: 'keccak', padding: KECCAK_PADDING, bits: BITS, createMethod: createMethod },\n    { name: 'sha3', padding: PADDING, bits: BITS, createMethod: createMethod },\n    { name: 'shake', padding: SHAKE_PADDING, bits: SHAKE_BITS, createMethod: createShakeMethod },\n    { name: 'cshake', padding: CSHAKE_PADDING, bits: SHAKE_BITS, createMethod: createCshakeMethod },\n    { name: 'kmac', padding: CSHAKE_PADDING, bits: SHAKE_BITS, createMethod: createKmacMethod }\n  ];\n\n  var methods = {}, methodNames = [];\n\n  for (var i = 0; i < algorithms.length; ++i) {\n    var algorithm = algorithms[i];\n    var bits = algorithm.bits;\n    for (var j = 0; j < bits.length; ++j) {\n      var methodName = algorithm.name + '_' + bits[j];\n      methodNames.push(methodName);\n      methods[methodName] = algorithm.createMethod(bits[j], algorithm.padding);\n      if (algorithm.name !== 'sha3') {\n        var newMethodName = algorithm.name + bits[j];\n        methodNames.push(newMethodName);\n        methods[newMethodName] = methods[methodName];\n      }\n    }\n  }\n\n  function Keccak(bits, padding, outputBits) {\n    this.blocks = [];\n    this.s = [];\n    this.padding = padding;\n    this.outputBits = outputBits;\n    this.reset = true;\n    this.finalized = false;\n    this.block = 0;\n    this.start = 0;\n    this.blockCount = (1600 - (bits << 1)) >> 5;\n    this.byteCount = this.blockCount << 2;\n    this.outputBlocks = outputBits >> 5;\n    this.extraBytes = (outputBits & 31) >> 3;\n\n    for (var i = 0; i < 50; ++i) {\n      this.s[i] = 0;\n    }\n  }\n\n  Keccak.prototype.update = function (message) {\n    if (this.finalized) {\n      throw new Error(FINALIZE_ERROR);\n    }\n    var notString, type = typeof message;\n    if (type !== 'string') {\n      if (type === 'object') {\n        if (message === null) {\n          throw new Error(INPUT_ERROR);\n        } else if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {\n          message = new Uint8Array(message);\n        } else if (!Array.isArray(message)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(message)) {\n            throw new Error(INPUT_ERROR);\n          }\n        }\n      } else {\n        throw new Error(INPUT_ERROR);\n      }\n      notString = true;\n    }\n    var blocks = this.blocks, byteCount = this.byteCount, length = message.length,\n      blockCount = this.blockCount, index = 0, s = this.s, i, code;\n\n    while (index < length) {\n      if (this.reset) {\n        this.reset = false;\n        blocks[0] = this.block;\n        for (i = 1; i < blockCount + 1; ++i) {\n          blocks[i] = 0;\n        }\n      }\n      if (notString) {\n        for (i = this.start; index < length && i < byteCount; ++index) {\n          blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\n        }\n      } else {\n        for (i = this.start; index < length && i < byteCount; ++index) {\n          code = message.charCodeAt(index);\n          if (code < 0x80) {\n            blocks[i >> 2] |= code << SHIFT[i++ & 3];\n          } else if (code < 0x800) {\n            blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else if (code < 0xd800 || code >= 0xe000) {\n            blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else {\n            code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\n            blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          }\n        }\n      }\n      this.lastByteIndex = i;\n      if (i >= byteCount) {\n        this.start = i - byteCount;\n        this.block = blocks[blockCount];\n        for (i = 0; i < blockCount; ++i) {\n          s[i] ^= blocks[i];\n        }\n        f(s);\n        this.reset = true;\n      } else {\n        this.start = i;\n      }\n    }\n    return this;\n  };\n\n  Keccak.prototype.encode = function (x, right) {\n    var o = x & 255, n = 1;\n    var bytes = [o];\n    x = x >> 8;\n    o = x & 255;\n    while (o > 0) {\n      bytes.unshift(o);\n      x = x >> 8;\n      o = x & 255;\n      ++n;\n    }\n    if (right) {\n      bytes.push(n);\n    } else {\n      bytes.unshift(n);\n    }\n    this.update(bytes);\n    return bytes.length;\n  };\n\n  Keccak.prototype.encodeString = function (str) {\n    var notString, type = typeof str;\n    if (type !== 'string') {\n      if (type === 'object') {\n        if (str === null) {\n          throw new Error(INPUT_ERROR);\n        } else if (ARRAY_BUFFER && str.constructor === ArrayBuffer) {\n          str = new Uint8Array(str);\n        } else if (!Array.isArray(str)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(str)) {\n            throw new Error(INPUT_ERROR);\n          }\n        }\n      } else {\n        throw new Error(INPUT_ERROR);\n      }\n      notString = true;\n    }\n    var bytes = 0, length = str.length;\n    if (notString) {\n      bytes = length;\n    } else {\n      for (var i = 0; i < str.length; ++i) {\n        var code = str.charCodeAt(i);\n        if (code < 0x80) {\n          bytes += 1;\n        } else if (code < 0x800) {\n          bytes += 2;\n        } else if (code < 0xd800 || code >= 0xe000) {\n          bytes += 3;\n        } else {\n          code = 0x10000 + (((code & 0x3ff) << 10) | (str.charCodeAt(++i) & 0x3ff));\n          bytes += 4;\n        }\n      }\n    }\n    bytes += this.encode(bytes * 8);\n    this.update(str);\n    return bytes;\n  };\n\n  Keccak.prototype.bytepad = function (strs, w) {\n    var bytes = this.encode(w);\n    for (var i = 0; i < strs.length; ++i) {\n      bytes += this.encodeString(strs[i]);\n    }\n    var paddingBytes = w - bytes % w;\n    var zeros = [];\n    zeros.length = paddingBytes;\n    this.update(zeros);\n    return this;\n  };\n\n  Keccak.prototype.finalize = function () {\n    if (this.finalized) {\n      return;\n    }\n    this.finalized = true;\n    var blocks = this.blocks, i = this.lastByteIndex, blockCount = this.blockCount, s = this.s;\n    blocks[i >> 2] |= this.padding[i & 3];\n    if (this.lastByteIndex === this.byteCount) {\n      blocks[0] = blocks[blockCount];\n      for (i = 1; i < blockCount + 1; ++i) {\n        blocks[i] = 0;\n      }\n    }\n    blocks[blockCount - 1] |= 0x80000000;\n    for (i = 0; i < blockCount; ++i) {\n      s[i] ^= blocks[i];\n    }\n    f(s);\n  };\n\n  Keccak.prototype.toString = Keccak.prototype.hex = function () {\n    this.finalize();\n\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n      extraBytes = this.extraBytes, i = 0, j = 0;\n    var hex = '', block;\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        block = s[i];\n        hex += HEX_CHARS[(block >> 4) & 0x0F] + HEX_CHARS[block & 0x0F] +\n          HEX_CHARS[(block >> 12) & 0x0F] + HEX_CHARS[(block >> 8) & 0x0F] +\n          HEX_CHARS[(block >> 20) & 0x0F] + HEX_CHARS[(block >> 16) & 0x0F] +\n          HEX_CHARS[(block >> 28) & 0x0F] + HEX_CHARS[(block >> 24) & 0x0F];\n      }\n      if (j % blockCount === 0) {\n        f(s);\n        i = 0;\n      }\n    }\n    if (extraBytes) {\n      block = s[i];\n      hex += HEX_CHARS[(block >> 4) & 0x0F] + HEX_CHARS[block & 0x0F];\n      if (extraBytes > 1) {\n        hex += HEX_CHARS[(block >> 12) & 0x0F] + HEX_CHARS[(block >> 8) & 0x0F];\n      }\n      if (extraBytes > 2) {\n        hex += HEX_CHARS[(block >> 20) & 0x0F] + HEX_CHARS[(block >> 16) & 0x0F];\n      }\n    }\n    return hex;\n  };\n\n  Keccak.prototype.arrayBuffer = function () {\n    this.finalize();\n\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n      extraBytes = this.extraBytes, i = 0, j = 0;\n    var bytes = this.outputBits >> 3;\n    var buffer;\n    if (extraBytes) {\n      buffer = new ArrayBuffer((outputBlocks + 1) << 2);\n    } else {\n      buffer = new ArrayBuffer(bytes);\n    }\n    var array = new Uint32Array(buffer);\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        array[j] = s[i];\n      }\n      if (j % blockCount === 0) {\n        f(s);\n      }\n    }\n    if (extraBytes) {\n      array[i] = s[i];\n      buffer = buffer.slice(0, bytes);\n    }\n    return buffer;\n  };\n\n  Keccak.prototype.buffer = Keccak.prototype.arrayBuffer;\n\n  Keccak.prototype.digest = Keccak.prototype.array = function () {\n    this.finalize();\n\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n      extraBytes = this.extraBytes, i = 0, j = 0;\n    var array = [], offset, block;\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        offset = j << 2;\n        block = s[i];\n        array[offset] = block & 0xFF;\n        array[offset + 1] = (block >> 8) & 0xFF;\n        array[offset + 2] = (block >> 16) & 0xFF;\n        array[offset + 3] = (block >> 24) & 0xFF;\n      }\n      if (j % blockCount === 0) {\n        f(s);\n      }\n    }\n    if (extraBytes) {\n      offset = j << 2;\n      block = s[i];\n      array[offset] = block & 0xFF;\n      if (extraBytes > 1) {\n        array[offset + 1] = (block >> 8) & 0xFF;\n      }\n      if (extraBytes > 2) {\n        array[offset + 2] = (block >> 16) & 0xFF;\n      }\n    }\n    return array;\n  };\n\n  function Kmac(bits, padding, outputBits) {\n    Keccak.call(this, bits, padding, outputBits);\n  }\n\n  Kmac.prototype = new Keccak();\n\n  Kmac.prototype.finalize = function () {\n    this.encode(this.outputBits, true);\n    return Keccak.prototype.finalize.call(this);\n  };\n\n  var f = function (s) {\n    var h, l, n, c0, c1, c2, c3, c4, c5, c6, c7, c8, c9,\n      b0, b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b11, b12, b13, b14, b15, b16, b17,\n      b18, b19, b20, b21, b22, b23, b24, b25, b26, b27, b28, b29, b30, b31, b32, b33,\n      b34, b35, b36, b37, b38, b39, b40, b41, b42, b43, b44, b45, b46, b47, b48, b49;\n    for (n = 0; n < 48; n += 2) {\n      c0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40];\n      c1 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41];\n      c2 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42];\n      c3 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43];\n      c4 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44];\n      c5 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45];\n      c6 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46];\n      c7 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47];\n      c8 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48];\n      c9 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49];\n\n      h = c8 ^ ((c2 << 1) | (c3 >>> 31));\n      l = c9 ^ ((c3 << 1) | (c2 >>> 31));\n      s[0] ^= h;\n      s[1] ^= l;\n      s[10] ^= h;\n      s[11] ^= l;\n      s[20] ^= h;\n      s[21] ^= l;\n      s[30] ^= h;\n      s[31] ^= l;\n      s[40] ^= h;\n      s[41] ^= l;\n      h = c0 ^ ((c4 << 1) | (c5 >>> 31));\n      l = c1 ^ ((c5 << 1) | (c4 >>> 31));\n      s[2] ^= h;\n      s[3] ^= l;\n      s[12] ^= h;\n      s[13] ^= l;\n      s[22] ^= h;\n      s[23] ^= l;\n      s[32] ^= h;\n      s[33] ^= l;\n      s[42] ^= h;\n      s[43] ^= l;\n      h = c2 ^ ((c6 << 1) | (c7 >>> 31));\n      l = c3 ^ ((c7 << 1) | (c6 >>> 31));\n      s[4] ^= h;\n      s[5] ^= l;\n      s[14] ^= h;\n      s[15] ^= l;\n      s[24] ^= h;\n      s[25] ^= l;\n      s[34] ^= h;\n      s[35] ^= l;\n      s[44] ^= h;\n      s[45] ^= l;\n      h = c4 ^ ((c8 << 1) | (c9 >>> 31));\n      l = c5 ^ ((c9 << 1) | (c8 >>> 31));\n      s[6] ^= h;\n      s[7] ^= l;\n      s[16] ^= h;\n      s[17] ^= l;\n      s[26] ^= h;\n      s[27] ^= l;\n      s[36] ^= h;\n      s[37] ^= l;\n      s[46] ^= h;\n      s[47] ^= l;\n      h = c6 ^ ((c0 << 1) | (c1 >>> 31));\n      l = c7 ^ ((c1 << 1) | (c0 >>> 31));\n      s[8] ^= h;\n      s[9] ^= l;\n      s[18] ^= h;\n      s[19] ^= l;\n      s[28] ^= h;\n      s[29] ^= l;\n      s[38] ^= h;\n      s[39] ^= l;\n      s[48] ^= h;\n      s[49] ^= l;\n\n      b0 = s[0];\n      b1 = s[1];\n      b32 = (s[11] << 4) | (s[10] >>> 28);\n      b33 = (s[10] << 4) | (s[11] >>> 28);\n      b14 = (s[20] << 3) | (s[21] >>> 29);\n      b15 = (s[21] << 3) | (s[20] >>> 29);\n      b46 = (s[31] << 9) | (s[30] >>> 23);\n      b47 = (s[30] << 9) | (s[31] >>> 23);\n      b28 = (s[40] << 18) | (s[41] >>> 14);\n      b29 = (s[41] << 18) | (s[40] >>> 14);\n      b20 = (s[2] << 1) | (s[3] >>> 31);\n      b21 = (s[3] << 1) | (s[2] >>> 31);\n      b2 = (s[13] << 12) | (s[12] >>> 20);\n      b3 = (s[12] << 12) | (s[13] >>> 20);\n      b34 = (s[22] << 10) | (s[23] >>> 22);\n      b35 = (s[23] << 10) | (s[22] >>> 22);\n      b16 = (s[33] << 13) | (s[32] >>> 19);\n      b17 = (s[32] << 13) | (s[33] >>> 19);\n      b48 = (s[42] << 2) | (s[43] >>> 30);\n      b49 = (s[43] << 2) | (s[42] >>> 30);\n      b40 = (s[5] << 30) | (s[4] >>> 2);\n      b41 = (s[4] << 30) | (s[5] >>> 2);\n      b22 = (s[14] << 6) | (s[15] >>> 26);\n      b23 = (s[15] << 6) | (s[14] >>> 26);\n      b4 = (s[25] << 11) | (s[24] >>> 21);\n      b5 = (s[24] << 11) | (s[25] >>> 21);\n      b36 = (s[34] << 15) | (s[35] >>> 17);\n      b37 = (s[35] << 15) | (s[34] >>> 17);\n      b18 = (s[45] << 29) | (s[44] >>> 3);\n      b19 = (s[44] << 29) | (s[45] >>> 3);\n      b10 = (s[6] << 28) | (s[7] >>> 4);\n      b11 = (s[7] << 28) | (s[6] >>> 4);\n      b42 = (s[17] << 23) | (s[16] >>> 9);\n      b43 = (s[16] << 23) | (s[17] >>> 9);\n      b24 = (s[26] << 25) | (s[27] >>> 7);\n      b25 = (s[27] << 25) | (s[26] >>> 7);\n      b6 = (s[36] << 21) | (s[37] >>> 11);\n      b7 = (s[37] << 21) | (s[36] >>> 11);\n      b38 = (s[47] << 24) | (s[46] >>> 8);\n      b39 = (s[46] << 24) | (s[47] >>> 8);\n      b30 = (s[8] << 27) | (s[9] >>> 5);\n      b31 = (s[9] << 27) | (s[8] >>> 5);\n      b12 = (s[18] << 20) | (s[19] >>> 12);\n      b13 = (s[19] << 20) | (s[18] >>> 12);\n      b44 = (s[29] << 7) | (s[28] >>> 25);\n      b45 = (s[28] << 7) | (s[29] >>> 25);\n      b26 = (s[38] << 8) | (s[39] >>> 24);\n      b27 = (s[39] << 8) | (s[38] >>> 24);\n      b8 = (s[48] << 14) | (s[49] >>> 18);\n      b9 = (s[49] << 14) | (s[48] >>> 18);\n\n      s[0] = b0 ^ (~b2 & b4);\n      s[1] = b1 ^ (~b3 & b5);\n      s[10] = b10 ^ (~b12 & b14);\n      s[11] = b11 ^ (~b13 & b15);\n      s[20] = b20 ^ (~b22 & b24);\n      s[21] = b21 ^ (~b23 & b25);\n      s[30] = b30 ^ (~b32 & b34);\n      s[31] = b31 ^ (~b33 & b35);\n      s[40] = b40 ^ (~b42 & b44);\n      s[41] = b41 ^ (~b43 & b45);\n      s[2] = b2 ^ (~b4 & b6);\n      s[3] = b3 ^ (~b5 & b7);\n      s[12] = b12 ^ (~b14 & b16);\n      s[13] = b13 ^ (~b15 & b17);\n      s[22] = b22 ^ (~b24 & b26);\n      s[23] = b23 ^ (~b25 & b27);\n      s[32] = b32 ^ (~b34 & b36);\n      s[33] = b33 ^ (~b35 & b37);\n      s[42] = b42 ^ (~b44 & b46);\n      s[43] = b43 ^ (~b45 & b47);\n      s[4] = b4 ^ (~b6 & b8);\n      s[5] = b5 ^ (~b7 & b9);\n      s[14] = b14 ^ (~b16 & b18);\n      s[15] = b15 ^ (~b17 & b19);\n      s[24] = b24 ^ (~b26 & b28);\n      s[25] = b25 ^ (~b27 & b29);\n      s[34] = b34 ^ (~b36 & b38);\n      s[35] = b35 ^ (~b37 & b39);\n      s[44] = b44 ^ (~b46 & b48);\n      s[45] = b45 ^ (~b47 & b49);\n      s[6] = b6 ^ (~b8 & b0);\n      s[7] = b7 ^ (~b9 & b1);\n      s[16] = b16 ^ (~b18 & b10);\n      s[17] = b17 ^ (~b19 & b11);\n      s[26] = b26 ^ (~b28 & b20);\n      s[27] = b27 ^ (~b29 & b21);\n      s[36] = b36 ^ (~b38 & b30);\n      s[37] = b37 ^ (~b39 & b31);\n      s[46] = b46 ^ (~b48 & b40);\n      s[47] = b47 ^ (~b49 & b41);\n      s[8] = b8 ^ (~b0 & b2);\n      s[9] = b9 ^ (~b1 & b3);\n      s[18] = b18 ^ (~b10 & b12);\n      s[19] = b19 ^ (~b11 & b13);\n      s[28] = b28 ^ (~b20 & b22);\n      s[29] = b29 ^ (~b21 & b23);\n      s[38] = b38 ^ (~b30 & b32);\n      s[39] = b39 ^ (~b31 & b33);\n      s[48] = b48 ^ (~b40 & b42);\n      s[49] = b49 ^ (~b41 & b43);\n\n      s[0] ^= RC[n];\n      s[1] ^= RC[n + 1];\n    }\n  };\n\n  if (COMMON_JS) {\n    module.exports = methods;\n  } else {\n    for (i = 0; i < methodNames.length; ++i) {\n      root[methodNames[i]] = methods[methodNames[i]];\n    }\n    if (AMD) {\n      define(function () {\n        return methods;\n      });\n    }\n  }\n})();\n","\"use strict\";\n\nimport sha3 from \"js-sha3\";\n\nimport { arrayify, BytesLike } from \"@ethersproject/bytes\";\n\nexport function keccak256(data: BytesLike): string {\n    return '0x' + sha3.keccak_256(arrayify(data));\n}\n","export const version = \"rlp/5.7.0\";\n","\"use strict\";\n\n//See: https://github.com/ethereum/wiki/wiki/RLP\n\nimport { arrayify, BytesLike, hexlify, isBytesLike } from \"@ethersproject/bytes\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nfunction arrayifyInteger(value: number): Array<number> {\n    const result = [];\n    while (value) {\n        result.unshift(value & 0xff);\n        value >>= 8;\n    }\n    return result;\n}\n\nfunction unarrayifyInteger(data: Uint8Array, offset: number, length: number): number {\n    let result = 0;\n    for (let i = 0; i < length; i++) {\n        result = (result * 256) + data[offset + i];\n    }\n    return result;\n}\n\nfunction _encode(object: Array<any> | string): Array<number> {\n    if (Array.isArray(object)) {\n        let payload: Array<number> = [];\n        object.forEach(function(child) {\n            payload = payload.concat(_encode(child));\n        });\n\n        if (payload.length <= 55) {\n            payload.unshift(0xc0 + payload.length)\n            return payload;\n        }\n\n        const length = arrayifyInteger(payload.length);\n        length.unshift(0xf7 + length.length);\n\n        return length.concat(payload);\n\n    }\n\n    if (!isBytesLike(object)) {\n        logger.throwArgumentError(\"RLP object must be BytesLike\", \"object\", object);\n    }\n\n    const data: Array<number> = Array.prototype.slice.call(arrayify(object));\n\n    if (data.length === 1 && data[0] <= 0x7f) {\n        return data;\n\n    } else if (data.length <= 55) {\n        data.unshift(0x80 + data.length);\n        return data;\n    }\n\n    const length = arrayifyInteger(data.length);\n    length.unshift(0xb7 + length.length);\n\n    return length.concat(data);\n}\n\nexport function encode(object: any): string {\n    return hexlify(_encode(object));\n}\n\ntype Decoded = {\n    result: any;\n    consumed: number;\n};\n\nfunction _decodeChildren(data: Uint8Array, offset: number, childOffset: number, length: number): Decoded {\n    const result = [];\n\n    while (childOffset < offset + 1 + length) {\n        const decoded = _decode(data, childOffset);\n\n        result.push(decoded.result);\n\n        childOffset += decoded.consumed;\n        if (childOffset > offset + 1 + length) {\n            logger.throwError(\"child data too short\", Logger.errors.BUFFER_OVERRUN, { });\n        }\n    }\n\n    return {consumed: (1 + length), result: result};\n}\n\n// returns { consumed: number, result: Object }\nfunction _decode(data: Uint8Array, offset: number): { consumed: number, result: any } {\n    if (data.length === 0) {\n        logger.throwError(\"data too short\", Logger.errors.BUFFER_OVERRUN, { });\n    }\n\n    // Array with extra length prefix\n    if (data[offset] >= 0xf8) {\n        const lengthLength = data[offset] - 0xf7;\n        if (offset + 1 + lengthLength > data.length) {\n            logger.throwError(\"data short segment too short\", Logger.errors.BUFFER_OVERRUN, { });\n        }\n\n        const length = unarrayifyInteger(data, offset + 1, lengthLength);\n        if (offset + 1 + lengthLength + length > data.length) {\n            logger.throwError(\"data long segment too short\", Logger.errors.BUFFER_OVERRUN, { });\n        }\n\n        return _decodeChildren(data, offset, offset + 1 + lengthLength, lengthLength + length);\n\n    } else if (data[offset] >= 0xc0) {\n        const length = data[offset] - 0xc0;\n        if (offset + 1 + length > data.length) {\n            logger.throwError(\"data array too short\", Logger.errors.BUFFER_OVERRUN, { });\n        }\n\n        return _decodeChildren(data, offset, offset + 1, length);\n\n    } else if (data[offset] >= 0xb8) {\n        const lengthLength = data[offset] - 0xb7;\n        if (offset + 1 + lengthLength > data.length) {\n            logger.throwError(\"data array too short\", Logger.errors.BUFFER_OVERRUN, { });\n        }\n\n        const length = unarrayifyInteger(data, offset + 1, lengthLength);\n        if (offset + 1 + lengthLength + length > data.length) {\n            logger.throwError(\"data array too short\", Logger.errors.BUFFER_OVERRUN, { });\n        }\n\n        const result = hexlify(data.slice(offset + 1 + lengthLength, offset + 1 + lengthLength + length));\n        return { consumed: (1 + lengthLength + length), result: result }\n\n    } else if (data[offset] >= 0x80) {\n        const length = data[offset] - 0x80;\n        if (offset + 1 + length > data.length) {\n            logger.throwError(\"data too short\", Logger.errors.BUFFER_OVERRUN, { });\n        }\n\n        const result = hexlify(data.slice(offset + 1, offset + 1 + length));\n        return { consumed: (1 + length), result: result }\n    }\n    return { consumed: 1, result: hexlify(data[offset]) };\n}\n\nexport function decode(data: BytesLike): any {\n    const bytes = arrayify(data);\n    const decoded = _decode(bytes, 0);\n    if (decoded.consumed !== bytes.length) {\n        logger.throwArgumentError(\"invalid rlp data\", \"data\", data);\n    }\n    return decoded.result;\n}\n\n","export const version = \"address/5.7.0\";\n","\"use strict\";\n\nimport { arrayify, BytesLike, concat, hexDataLength, hexDataSlice, isHexString, stripZeros } from \"@ethersproject/bytes\";\nimport { BigNumber, BigNumberish, _base16To36, _base36To16 } from \"@ethersproject/bignumber\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { encode } from \"@ethersproject/rlp\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nfunction getChecksumAddress(address: string): string {\n    if (!isHexString(address, 20)) {\n        logger.throwArgumentError(\"invalid address\", \"address\", address);\n    }\n\n    address = address.toLowerCase();\n\n    const chars = address.substring(2).split(\"\");\n\n    const expanded = new Uint8Array(40);\n    for (let i = 0; i < 40; i++) {\n        expanded[i] = chars[i].charCodeAt(0);\n    }\n\n    const hashed = arrayify(keccak256(expanded));\n\n    for (let i = 0; i < 40; i += 2) {\n        if ((hashed[i >> 1] >> 4) >= 8) {\n            chars[i] = chars[i].toUpperCase();\n        }\n        if ((hashed[i >> 1] & 0x0f) >= 8) {\n            chars[i + 1] = chars[i + 1].toUpperCase();\n        }\n    }\n\n    return \"0x\" + chars.join(\"\");\n}\n\n// Shims for environments that are missing some required constants and functions\nconst MAX_SAFE_INTEGER: number = 0x1fffffffffffff;\n\nfunction log10(x: number): number {\n    if (Math.log10) { return Math.log10(x); }\n    return Math.log(x) / Math.LN10;\n}\n\n\n// See: https://en.wikipedia.org/wiki/International_Bank_Account_Number\n\n// Create lookup table\nconst ibanLookup: { [character: string]: string } = { };\nfor (let i = 0; i < 10; i++) { ibanLookup[String(i)] = String(i); }\nfor (let i = 0; i < 26; i++) { ibanLookup[String.fromCharCode(65 + i)] = String(10 + i); }\n\n// How many decimal digits can we process? (for 64-bit float, this is 15)\nconst safeDigits = Math.floor(log10(MAX_SAFE_INTEGER));\n\nfunction ibanChecksum(address: string): string {\n    address = address.toUpperCase();\n    address = address.substring(4) + address.substring(0, 2) + \"00\";\n\n    let expanded = address.split(\"\").map((c) => { return ibanLookup[c]; }).join(\"\");\n\n    // Javascript can handle integers safely up to 15 (decimal) digits\n    while (expanded.length >= safeDigits){\n        let block = expanded.substring(0, safeDigits);\n        expanded = parseInt(block, 10) % 97 + expanded.substring(block.length);\n    }\n\n    let checksum = String(98 - (parseInt(expanded, 10) % 97));\n    while (checksum.length < 2) { checksum = \"0\" + checksum; }\n\n    return checksum;\n};\n\nexport function getAddress(address: string): string {\n    let result = null;\n\n    if (typeof(address) !== \"string\") {\n        logger.throwArgumentError(\"invalid address\", \"address\", address);\n    }\n\n    if (address.match(/^(0x)?[0-9a-fA-F]{40}$/)) {\n\n        // Missing the 0x prefix\n        if (address.substring(0, 2) !== \"0x\") { address = \"0x\" + address; }\n\n        result = getChecksumAddress(address);\n\n        // It is a checksummed address with a bad checksum\n        if (address.match(/([A-F].*[a-f])|([a-f].*[A-F])/) && result !== address) {\n            logger.throwArgumentError(\"bad address checksum\", \"address\", address);\n        }\n\n    // Maybe ICAP? (we only support direct mode)\n    } else if (address.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {\n\n        // It is an ICAP address with a bad checksum\n        if (address.substring(2, 4) !== ibanChecksum(address)) {\n            logger.throwArgumentError(\"bad icap checksum\", \"address\", address);\n        }\n\n        result = _base36To16(address.substring(4));\n        while (result.length < 40) { result = \"0\" + result; }\n        result = getChecksumAddress(\"0x\" + result);\n\n    } else {\n        logger.throwArgumentError(\"invalid address\", \"address\", address);\n    }\n\n    return result;\n}\n\nexport function isAddress(address: string): boolean {\n    try {\n        getAddress(address);\n        return true;\n    } catch (error) { }\n    return false;\n}\n\nexport function getIcapAddress(address: string): string {\n    let base36 = _base16To36(getAddress(address).substring(2)).toUpperCase();\n    while (base36.length < 30) { base36 = \"0\" + base36; }\n    return \"XE\" + ibanChecksum(\"XE00\" + base36) + base36;\n}\n\n// http://ethereum.stackexchange.com/questions/760/how-is-the-address-of-an-ethereum-contract-computed\nexport function getContractAddress(transaction: { from: string, nonce: BigNumberish }) {\n    let from: string = null;\n    try {\n        from = getAddress(transaction.from);\n    } catch (error) {\n        logger.throwArgumentError(\"missing from address\", \"transaction\", transaction);\n    }\n\n    const nonce = stripZeros(arrayify(BigNumber.from(transaction.nonce).toHexString()));\n\n    return getAddress(hexDataSlice(keccak256(encode([ from, nonce ])), 12));\n}\n\nexport function getCreate2Address(from: string, salt: BytesLike, initCodeHash: BytesLike): string {\n    if (hexDataLength(salt) !== 32) {\n        logger.throwArgumentError(\"salt must be 32 bytes\", \"salt\", salt);\n    }\n    if (hexDataLength(initCodeHash) !== 32) {\n        logger.throwArgumentError(\"initCodeHash must be 32 bytes\", \"initCodeHash\", initCodeHash);\n    }\n    return getAddress(hexDataSlice(keccak256(concat([ \"0xff\", getAddress(from), salt, initCodeHash ])), 12))\n}\n","\"use strict\";\n\nimport { getAddress } from \"@ethersproject/address\";\nimport { hexZeroPad } from \"@ethersproject/bytes\";\n\nimport { Coder, Reader, Writer } from \"./abstract-coder\";\n\nexport class AddressCoder extends Coder {\n\n    constructor(localName: string) {\n        super(\"address\", \"address\", localName, false);\n    }\n\n    defaultValue(): string {\n        return \"0x0000000000000000000000000000000000000000\";\n    }\n\n    encode(writer: Writer, value: string): number {\n        try {\n            value = getAddress(value)\n        } catch (error) {\n            this._throwError(error.message, value);\n        }\n        return writer.writeValue(value);\n    }\n\n    decode(reader: Reader): any {\n        return getAddress(hexZeroPad(reader.readValue().toHexString(), 20));\n    }\n}\n\n","\"use strict\";\n\nimport { Coder, Reader, Writer } from \"./abstract-coder\";\n\n// Clones the functionality of an existing Coder, but without a localName\nexport class AnonymousCoder extends Coder {\n    private coder: Coder;\n\n    constructor(coder: Coder) {\n        super(coder.name, coder.type, undefined, coder.dynamic);\n        this.coder = coder;\n    }\n\n    defaultValue(): any {\n        return this.coder.defaultValue();\n    }\n\n    encode(writer: Writer, value: any): number {\n        return this.coder.encode(writer, value);\n    }\n\n    decode(reader: Reader): any {\n        return this.coder.decode(reader);\n    }\n}\n","\"use strict\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"../_version\";\nconst logger = new Logger(version);\n\nimport { Coder, Reader, Result, Writer } from \"./abstract-coder\";\nimport { AnonymousCoder } from \"./anonymous\";\n\nexport function pack(writer: Writer, coders: ReadonlyArray<Coder>, values: Array<any> | { [ name: string ]: any }): number {\n    let arrayValues: Array<any> = null;\n\n    if (Array.isArray(values)) {\n       arrayValues = values;\n\n    } else if (values && typeof(values) === \"object\") {\n        let unique: { [ name: string ]: boolean } = { };\n\n        arrayValues = coders.map((coder) => {\n            const name = coder.localName;\n            if (!name) {\n                logger.throwError(\"cannot encode object for signature with missing names\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"values\",\n                    coder: coder,\n                    value: values\n                });\n            }\n\n            if (unique[name]) {\n                logger.throwError(\"cannot encode object for signature with duplicate names\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"values\",\n                    coder: coder,\n                    value: values\n                });\n            }\n\n            unique[name] = true;\n\n            return values[name];\n        });\n\n    } else {\n        logger.throwArgumentError(\"invalid tuple value\", \"tuple\", values);\n    }\n\n    if (coders.length !== arrayValues.length) {\n        logger.throwArgumentError(\"types/value length mismatch\", \"tuple\", values);\n    }\n\n    let staticWriter = new Writer(writer.wordSize);\n    let dynamicWriter = new Writer(writer.wordSize);\n\n    let updateFuncs: Array<(baseOffset: number) => void> = [];\n    coders.forEach((coder, index) => {\n        let value = arrayValues[index];\n\n        if (coder.dynamic) {\n            // Get current dynamic offset (for the future pointer)\n            let dynamicOffset = dynamicWriter.length;\n\n            // Encode the dynamic value into the dynamicWriter\n            coder.encode(dynamicWriter, value);\n\n            // Prepare to populate the correct offset once we are done\n            let updateFunc = staticWriter.writeUpdatableValue();\n            updateFuncs.push((baseOffset: number) => {\n                updateFunc(baseOffset + dynamicOffset);\n            });\n\n        } else {\n            coder.encode(staticWriter, value);\n        }\n    });\n\n    // Backfill all the dynamic offsets, now that we know the static length\n    updateFuncs.forEach((func) => { func(staticWriter.length); });\n\n    let length = writer.appendWriter(staticWriter);\n    length += writer.appendWriter(dynamicWriter);\n    return length;\n}\n\nexport function unpack(reader: Reader, coders: Array<Coder>): Result {\n    let values: any = [];\n\n    // A reader anchored to this base\n    let baseReader = reader.subReader(0);\n\n    coders.forEach((coder) => {\n        let value: any = null;\n\n        if (coder.dynamic) {\n            let offset = reader.readValue();\n            let offsetReader = baseReader.subReader(offset.toNumber());\n            try {\n                value = coder.decode(offsetReader);\n            } catch (error) {\n                // Cannot recover from this\n                if (error.code === Logger.errors.BUFFER_OVERRUN) { throw error; }\n                value = error;\n                value.baseType = coder.name;\n                value.name = coder.localName;\n                value.type = coder.type;\n            }\n\n        } else {\n            try {\n                value = coder.decode(reader);\n            } catch (error) {\n                // Cannot recover from this\n                if (error.code === Logger.errors.BUFFER_OVERRUN) { throw error; }\n                value = error;\n                value.baseType = coder.name;\n                value.name = coder.localName;\n                value.type = coder.type;\n            }\n        }\n\n        if (value != undefined) {\n            values.push(value);\n        }\n    });\n\n    // We only output named properties for uniquely named coders\n    const uniqueNames = coders.reduce((accum, coder) => {\n        const name = coder.localName;\n        if (name) {\n            if (!accum[name]) { accum[name] = 0; }\n            accum[name]++;\n        }\n        return accum;\n    }, <{ [ name: string ]: number }>{ });\n\n    // Add any named parameters (i.e. tuples)\n    coders.forEach((coder: Coder, index: number) => {\n        let name = coder.localName;\n        if (!name || uniqueNames[name] !== 1) { return; }\n\n        if (name === \"length\") { name = \"_length\"; }\n\n        if (values[name] != null) { return; }\n\n        const value = values[index];\n\n        if (value instanceof Error) {\n            Object.defineProperty(values, name, {\n                enumerable: true,\n                get: () => { throw value; }\n            });\n        } else {\n            values[name] = value;\n        }\n    });\n\n    for (let i = 0; i < values.length; i++) {\n        const value = values[i];\n        if (value instanceof Error) {\n            Object.defineProperty(values, i, {\n                enumerable: true,\n                get: () => { throw value; }\n            });\n        }\n    }\n\n    return Object.freeze(values);\n}\n\n\nexport class ArrayCoder extends Coder {\n    readonly coder: Coder;\n    readonly length: number;\n\n    constructor(coder: Coder, length: number, localName: string) {\n        const type = (coder.type + \"[\" + (length >= 0 ? length: \"\") + \"]\");\n        const dynamic = (length === -1 || coder.dynamic);\n        super(\"array\", type, localName, dynamic);\n\n        this.coder = coder;\n        this.length = length;\n    }\n\n    defaultValue(): Array<any> {\n        // Verifies the child coder is valid (even if the array is dynamic or 0-length)\n        const defaultChild = this.coder.defaultValue();\n\n        const result: Array<any> = [];\n        for (let i = 0; i < this.length; i++) {\n            result.push(defaultChild);\n        }\n        return result;\n    }\n\n    encode(writer: Writer, value: Array<any>): number {\n        if (!Array.isArray(value)) {\n            this._throwError(\"expected array value\", value);\n        }\n\n        let count = this.length;\n\n        if (count === -1) {\n            count = value.length;\n            writer.writeValue(value.length);\n        }\n\n        logger.checkArgumentCount(value.length, count, \"coder array\" + (this.localName? (\" \"+ this.localName): \"\"));\n\n        let coders = [];\n        for (let i = 0; i < value.length; i++) { coders.push(this.coder); }\n\n        return pack(writer, coders, value);\n    }\n\n    decode(reader: Reader): any {\n        let count = this.length;\n        if (count === -1) {\n            count = reader.readValue().toNumber();\n\n            // Check that there is *roughly* enough data to ensure\n            // stray random data is not being read as a length. Each\n            // slot requires at least 32 bytes for their value (or 32\n            // bytes as a link to the data). This could use a much\n            // tighter bound, but we are erroring on the side of safety.\n            if (count * 32 > reader._data.length) {\n                logger.throwError(\"insufficient data length\", Logger.errors.BUFFER_OVERRUN, {\n                    length: reader._data.length,\n                    count: count\n                });\n            }\n        }\n        let coders = [];\n        for (let i = 0; i < count; i++) { coders.push(new AnonymousCoder(this.coder)); }\n\n        return reader.coerce(this.name, unpack(reader, coders));\n    }\n}\n\n","\"use strict\";\n\nimport { Coder, Reader, Writer } from \"./abstract-coder\";\n\nexport class BooleanCoder extends Coder {\n\n    constructor(localName: string) {\n        super(\"bool\", \"bool\", localName, false);\n    }\n\n    defaultValue(): boolean {\n        return false;\n    }\n\n    encode(writer: Writer, value: boolean): number {\n        return writer.writeValue(value ? 1: 0);\n    }\n\n    decode(reader: Reader): any {\n        return reader.coerce(this.type, !reader.readValue().isZero());\n    }\n}\n\n","\"use strict\";\n\nimport { arrayify, hexlify } from \"@ethersproject/bytes\";\n\nimport { Coder, Reader, Writer } from \"./abstract-coder\";\n\nexport class DynamicBytesCoder extends Coder {\n    constructor(type: string, localName: string) {\n       super(type, type, localName, true);\n    }\n\n    defaultValue(): string {\n        return \"0x\";\n    }\n\n    encode(writer: Writer, value: any): number {\n        value = arrayify(value);\n        let length = writer.writeValue(value.length);\n        length += writer.writeBytes(value);\n        return length;\n    }\n\n    decode(reader: Reader): any {\n        return reader.readBytes(reader.readValue().toNumber(), true);\n    }\n}\n\nexport class BytesCoder extends DynamicBytesCoder {\n    constructor(localName: string) {\n        super(\"bytes\", localName);\n    }\n\n    decode(reader: Reader): any {\n        return reader.coerce(this.name, hexlify(super.decode(reader)));\n    }\n}\n\n\n","\"use strict\";\n\nimport { arrayify, BytesLike, hexlify } from \"@ethersproject/bytes\";\n\nimport { Coder, Reader, Writer } from \"./abstract-coder\";\n\n// @TODO: Merge this with bytes\nexport class FixedBytesCoder extends Coder {\n    readonly size: number;\n\n    constructor(size: number, localName: string) {\n        let name = \"bytes\" + String(size);\n        super(name, name, localName, false);\n        this.size = size;\n    }\n\n    defaultValue(): string {\n        return (\"0x0000000000000000000000000000000000000000000000000000000000000000\").substring(0, 2 + this.size * 2);\n    }\n\n    encode(writer: Writer, value: BytesLike): number {\n        let data = arrayify(value);\n        if (data.length !== this.size) { this._throwError(\"incorrect data length\", value); }\n        return writer.writeBytes(data);\n    }\n\n    decode(reader: Reader): any {\n        return reader.coerce(this.name, hexlify(reader.readBytes(this.size)));\n    }\n}\n","\"use strict\";\n\nimport { Coder, Reader, Writer } from \"./abstract-coder\";\n\nexport class NullCoder extends Coder {\n\n    constructor(localName: string) {\n        super(\"null\", \"\", localName, false);\n    }\n\n    defaultValue(): null {\n        return null;\n    }\n\n    encode(writer: Writer, value: any): number {\n        if (value != null) { this._throwError(\"not null\", value); }\n        return writer.writeBytes([ ]);\n    }\n\n    decode(reader: Reader): any {\n        reader.readBytes(0);\n        return reader.coerce(this.name, null);\n    }\n}\n","export const AddressZero = \"0x0000000000000000000000000000000000000000\";\n\n","import { BigNumber } from \"@ethersproject/bignumber\";\n\nconst NegativeOne: BigNumber = (/*#__PURE__*/BigNumber.from(-1));\nconst Zero: BigNumber = (/*#__PURE__*/BigNumber.from(0));\nconst One: BigNumber = (/*#__PURE__*/BigNumber.from(1));\nconst Two: BigNumber = (/*#__PURE__*/BigNumber.from(2));\nconst WeiPerEther: BigNumber = (/*#__PURE__*/BigNumber.from(\"1000000000000000000\"));\nconst MaxUint256: BigNumber = (/*#__PURE__*/BigNumber.from(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\"));\n\nconst MinInt256: BigNumber = (/*#__PURE__*/BigNumber.from(\"-0x8000000000000000000000000000000000000000000000000000000000000000\"));\nconst MaxInt256: BigNumber = (/*#__PURE__*/BigNumber.from(\"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\"));\n\nexport {\n    NegativeOne,\n    Zero,\n    One,\n    Two,\n    WeiPerEther,\n    MaxUint256,\n    MinInt256,\n    MaxInt256,\n};\n","export const HashZero = \"0x0000000000000000000000000000000000000000000000000000000000000000\";\n\n","// NFKC (composed)             // (decomposed)\nexport const EtherSymbol = \"\\u039e\";  // \"\\uD835\\uDF63\";\n","\"use strict\";\n\nexport { AddressZero } from \"./addresses\";\nexport {\n    NegativeOne,\n    Zero,\n    One,\n    Two,\n    WeiPerEther,\n    MaxUint256,\n    MinInt256,\n    MaxInt256\n} from \"./bignumbers\";\nexport { HashZero } from \"./hashes\";\nexport { EtherSymbol } from \"./strings\";\n\n","\"use strict\";\n\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { MaxUint256, NegativeOne, One, Zero } from \"@ethersproject/constants\";\n\nimport { Coder, Reader, Writer } from \"./abstract-coder\";\n\nexport class NumberCoder extends Coder {\n    readonly size: number;\n    readonly signed: boolean;\n\n    constructor(size: number, signed: boolean, localName: string) {\n        const name = ((signed ? \"int\": \"uint\") + (size * 8));\n        super(name, name, localName, false);\n\n        this.size = size;\n        this.signed = signed;\n    }\n\n    defaultValue(): number {\n        return 0;\n    }\n\n    encode(writer: Writer, value: BigNumberish): number {\n        let v = BigNumber.from(value);\n\n        // Check bounds are safe for encoding\n        let maxUintValue = MaxUint256.mask(writer.wordSize * 8);\n        if (this.signed) {\n            let bounds = maxUintValue.mask(this.size * 8 - 1);\n            if (v.gt(bounds) || v.lt(bounds.add(One).mul(NegativeOne))) {\n                this._throwError(\"value out-of-bounds\", value);\n            }\n        } else if (v.lt(Zero) || v.gt(maxUintValue.mask(this.size * 8))) {\n            this._throwError(\"value out-of-bounds\", value);\n        }\n\n        v = v.toTwos(this.size * 8).mask(this.size * 8);\n\n        if (this.signed) {\n            v = v.fromTwos(this.size * 8).toTwos(8 * writer.wordSize);\n        }\n\n        return writer.writeValue(v);\n    }\n\n    decode(reader: Reader): any {\n        let value = reader.readValue().mask(this.size * 8);\n\n        if (this.signed) {\n            value = value.fromTwos(this.size * 8);\n        }\n\n        return reader.coerce(this.name, value);\n    }\n}\n\n","export const version = \"strings/5.7.0\";\n","\"use strict\";\n\nimport { arrayify, BytesLike } from \"@ethersproject/bytes\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n///////////////////////////////\n\nexport enum UnicodeNormalizationForm {\n    current  = \"\",\n    NFC      = \"NFC\",\n    NFD      = \"NFD\",\n    NFKC     = \"NFKC\",\n    NFKD     = \"NFKD\"\n};\n\nexport enum Utf8ErrorReason {\n    // A continuation byte was present where there was nothing to continue\n    // - offset = the index the codepoint began in\n    UNEXPECTED_CONTINUE   = \"unexpected continuation byte\",\n\n    // An invalid (non-continuation) byte to start a UTF-8 codepoint was found\n    // - offset = the index the codepoint began in\n    BAD_PREFIX            = \"bad codepoint prefix\",\n\n    // The string is too short to process the expected codepoint\n    // - offset = the index the codepoint began in\n    OVERRUN               = \"string overrun\",\n\n    // A missing continuation byte was expected but not found\n    // - offset = the index the continuation byte was expected at\n    MISSING_CONTINUE      = \"missing continuation byte\",\n\n    // The computed code point is outside the range for UTF-8\n    // - offset       = start of this codepoint\n    // - badCodepoint = the computed codepoint; outside the UTF-8 range\n    OUT_OF_RANGE          = \"out of UTF-8 range\",\n\n    // UTF-8 strings may not contain UTF-16 surrogate pairs\n    // - offset       = start of this codepoint\n    // - badCodepoint = the computed codepoint; inside the UTF-16 surrogate range\n    UTF16_SURROGATE       = \"UTF-16 surrogate\",\n\n    // The string is an overlong representation\n    // - offset       = start of this codepoint\n    // - badCodepoint = the computed codepoint; already bounds checked\n    OVERLONG              = \"overlong representation\",\n};\n\n\nexport type Utf8ErrorFunc = (reason: Utf8ErrorReason, offset: number, bytes: ArrayLike<number>, output: Array<number>, badCodepoint?: number) => number;\n\nfunction errorFunc(reason: Utf8ErrorReason, offset: number, bytes: ArrayLike<number>, output: Array<number>, badCodepoint?: number): number {\n    return logger.throwArgumentError(`invalid codepoint at offset ${ offset }; ${ reason }`, \"bytes\", bytes);\n}\n\nfunction ignoreFunc(reason: Utf8ErrorReason, offset: number, bytes: ArrayLike<number>, output: Array<number>, badCodepoint?: number): number {\n\n    // If there is an invalid prefix (including stray continuation), skip any additional continuation bytes\n    if (reason === Utf8ErrorReason.BAD_PREFIX || reason === Utf8ErrorReason.UNEXPECTED_CONTINUE) {\n        let i = 0;\n        for (let o = offset + 1; o < bytes.length; o++) {\n            if (bytes[o] >> 6 !== 0x02) { break; }\n            i++;\n        }\n        return i;\n    }\n\n    // This byte runs us past the end of the string, so just jump to the end\n    // (but the first byte was read already read and therefore skipped)\n    if (reason === Utf8ErrorReason.OVERRUN) {\n        return bytes.length - offset - 1;\n    }\n\n    // Nothing to skip\n    return 0;\n}\n\nfunction replaceFunc(reason: Utf8ErrorReason, offset: number, bytes: ArrayLike<number>, output: Array<number>, badCodepoint?: number): number {\n\n    // Overlong representations are otherwise \"valid\" code points; just non-deistingtished\n    if (reason === Utf8ErrorReason.OVERLONG) {\n        output.push(badCodepoint);\n        return 0;\n    }\n\n    // Put the replacement character into the output\n    output.push(0xfffd);\n\n    // Otherwise, process as if ignoring errors\n    return ignoreFunc(reason, offset, bytes, output, badCodepoint);\n}\n\n// Common error handing strategies\nexport const Utf8ErrorFuncs: { [ name: string ]: Utf8ErrorFunc } = Object.freeze({\n    error: errorFunc,\n    ignore: ignoreFunc,\n    replace: replaceFunc\n});\n\n// http://stackoverflow.com/questions/13356493/decode-utf-8-with-javascript#13691499\nfunction getUtf8CodePoints(bytes: BytesLike, onError?: Utf8ErrorFunc): Array<number> {\n    if (onError == null) { onError = Utf8ErrorFuncs.error; }\n\n    bytes = arrayify(bytes);\n\n    const result: Array<number> = [];\n    let i = 0;\n\n    // Invalid bytes are ignored\n    while(i < bytes.length) {\n\n        const c = bytes[i++];\n\n        // 0xxx xxxx\n        if (c >> 7 === 0) {\n            result.push(c);\n            continue;\n        }\n\n        // Multibyte; how many bytes left for this character?\n        let extraLength = null;\n        let overlongMask = null;\n\n        // 110x xxxx 10xx xxxx\n        if ((c & 0xe0) === 0xc0) {\n            extraLength = 1;\n            overlongMask = 0x7f;\n\n        // 1110 xxxx 10xx xxxx 10xx xxxx\n        } else if ((c & 0xf0) === 0xe0) {\n            extraLength = 2;\n            overlongMask = 0x7ff;\n\n        // 1111 0xxx 10xx xxxx 10xx xxxx 10xx xxxx\n        } else if ((c & 0xf8) === 0xf0) {\n            extraLength = 3;\n            overlongMask = 0xffff;\n\n        } else {\n            if ((c & 0xc0) === 0x80) {\n                i += onError(Utf8ErrorReason.UNEXPECTED_CONTINUE, i - 1, bytes, result);\n            } else {\n                i += onError(Utf8ErrorReason.BAD_PREFIX, i - 1, bytes, result);\n            }\n            continue;\n        }\n\n        // Do we have enough bytes in our data?\n        if (i - 1 + extraLength >= bytes.length) {\n            i += onError(Utf8ErrorReason.OVERRUN, i - 1, bytes, result);\n            continue;\n        }\n\n        // Remove the length prefix from the char\n        let res = c & ((1 << (8 - extraLength - 1)) - 1);\n\n        for (let j = 0; j < extraLength; j++) {\n            let nextChar = bytes[i];\n\n            // Invalid continuation byte\n            if ((nextChar & 0xc0) != 0x80) {\n                i += onError(Utf8ErrorReason.MISSING_CONTINUE, i, bytes, result);\n                res = null;\n                break;\n            };\n\n            res = (res << 6) | (nextChar & 0x3f);\n            i++;\n        }\n\n        // See above loop for invalid continuation byte\n        if (res === null) { continue; }\n\n        // Maximum code point\n        if (res > 0x10ffff) {\n            i += onError(Utf8ErrorReason.OUT_OF_RANGE, i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n\n        // Reserved for UTF-16 surrogate halves\n        if (res >= 0xd800 && res <= 0xdfff) {\n            i += onError(Utf8ErrorReason.UTF16_SURROGATE, i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n\n        // Check for overlong sequences (more bytes than needed)\n        if (res <= overlongMask) {\n            i += onError(Utf8ErrorReason.OVERLONG, i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n\n        result.push(res);\n    }\n\n    return result;\n}\n\n// http://stackoverflow.com/questions/18729405/how-to-convert-utf8-string-to-byte-array\nexport function toUtf8Bytes(str: string, form: UnicodeNormalizationForm = UnicodeNormalizationForm.current): Uint8Array {\n\n    if (form != UnicodeNormalizationForm.current) {\n        logger.checkNormalize();\n        str = str.normalize(form);\n    }\n\n    let result = [];\n    for (let i = 0; i < str.length; i++) {\n        const c = str.charCodeAt(i);\n\n        if (c < 0x80) {\n            result.push(c);\n\n        } else if (c < 0x800) {\n            result.push((c >> 6) | 0xc0);\n            result.push((c & 0x3f) | 0x80);\n\n        } else if ((c & 0xfc00) == 0xd800) {\n            i++;\n            const c2 = str.charCodeAt(i);\n\n            if (i >= str.length || (c2 & 0xfc00) !== 0xdc00) {\n                throw new Error(\"invalid utf-8 string\");\n            }\n\n            // Surrogate Pair\n            const pair = 0x10000 + ((c & 0x03ff) << 10) + (c2 & 0x03ff);\n            result.push((pair >> 18) | 0xf0);\n            result.push(((pair >> 12) & 0x3f) | 0x80);\n            result.push(((pair >> 6) & 0x3f) | 0x80);\n            result.push((pair & 0x3f) | 0x80);\n\n        } else {\n            result.push((c >> 12) | 0xe0);\n            result.push(((c >> 6) & 0x3f) | 0x80);\n            result.push((c & 0x3f) | 0x80);\n        }\n    }\n\n    return arrayify(result);\n};\n\nfunction escapeChar(value: number) {\n    const hex = (\"0000\" + value.toString(16));\n    return \"\\\\u\" + hex.substring(hex.length - 4);\n}\n\nexport function _toEscapedUtf8String(bytes: BytesLike, onError?: Utf8ErrorFunc): string {\n    return '\"' + getUtf8CodePoints(bytes, onError).map((codePoint) => {\n        if (codePoint < 256) {\n            switch (codePoint) {\n                case 8:  return \"\\\\b\";\n                case 9:  return \"\\\\t\";\n                case 10: return \"\\\\n\"\n                case 13: return \"\\\\r\";\n                case 34: return \"\\\\\\\"\";\n                case 92: return \"\\\\\\\\\";\n            }\n\n            if (codePoint >= 32 && codePoint < 127) {\n                return String.fromCharCode(codePoint);\n            }\n        }\n\n        if (codePoint <= 0xffff) {\n            return escapeChar(codePoint);\n        }\n\n        codePoint -= 0x10000;\n        return escapeChar(((codePoint >> 10) & 0x3ff) + 0xd800) + escapeChar((codePoint & 0x3ff) + 0xdc00);\n    }).join(\"\") + '\"';\n}\n\nexport function _toUtf8String(codePoints: Array<number>): string {\n    return codePoints.map((codePoint) => {\n        if (codePoint <= 0xffff) {\n            return String.fromCharCode(codePoint);\n        }\n        codePoint -= 0x10000;\n        return String.fromCharCode(\n            (((codePoint >> 10) & 0x3ff) + 0xd800),\n            ((codePoint & 0x3ff) + 0xdc00)\n        );\n    }).join(\"\");\n}\n\nexport function toUtf8String(bytes: BytesLike, onError?: Utf8ErrorFunc): string {\n    return _toUtf8String(getUtf8CodePoints(bytes, onError));\n}\n\nexport function toUtf8CodePoints(str: string, form: UnicodeNormalizationForm = UnicodeNormalizationForm.current): Array<number> {\n    return getUtf8CodePoints(toUtf8Bytes(str, form));\n}\n","\"use strict\";\n\nimport { HashZero } from \"@ethersproject/constants\";\nimport { arrayify, BytesLike, concat, hexlify } from \"@ethersproject/bytes\";\n\nimport { toUtf8Bytes, toUtf8String } from \"./utf8\";\n\n\nexport function formatBytes32String(text: string): string {\n\n    // Get the bytes\n    const bytes = toUtf8Bytes(text);\n\n    // Check we have room for null-termination\n    if (bytes.length > 31) { throw new Error(\"bytes32 string must be less than 32 bytes\"); }\n\n    // Zero-pad (implicitly null-terminates)\n    return hexlify(concat([ bytes, HashZero ]).slice(0, 32));\n}\n\nexport function parseBytes32String(bytes: BytesLike): string {\n    const data = arrayify(bytes);\n\n    // Must be 32 bytes with a null-termination\n    if (data.length !== 32) { throw new Error(\"invalid bytes32 - not 32 bytes long\"); }\n    if (data[31] !== 0) { throw new Error(\"invalid bytes32 string - no null terminator\"); }\n\n    // Find the null termination\n    let length = 31;\n    while (data[length - 1] === 0) { length--; }\n\n    // Determine the string value\n    return toUtf8String(data.slice(0, length));\n}\n\n","\"use strict\";\n\nimport { toUtf8CodePoints, _toUtf8String, UnicodeNormalizationForm } from \"./utf8\";\n\ntype Ranged = {\n    l: number,          // Lo value\n    h: number,          // High value (less the lo)\n    d?: number,         // Delta/stride (default: 1)\n    s?: number,         // Shift (default: 1)\n    e?: Array<number>   // Exceptions to skip\n};\n\ntype Table = { [ src: number ]: Array<number> };\n\nfunction bytes2(data: string): Array<number> {\n    if ((data.length % 4) !== 0) { throw new Error(\"bad data\"); }\n    let result = [];\n    for (let i = 0; i < data.length; i += 4) {\n        result.push(parseInt(data.substring(i, i + 4), 16));\n    }\n    return result;\n}\n\nfunction createTable(data: string, func?: (value: string) => Array<number>): Table {\n    if (!func) {\n        func = function(value: string) { return [ parseInt(value, 16) ]; }\n    }\n\n    let lo = 0;\n\n    let result: Table = { };\n    data.split(\",\").forEach((pair) => {\n        let comps = pair.split(\":\");\n        lo += parseInt(comps[0], 16);\n        result[lo] = func(comps[1]);\n    });\n\n    return result;\n}\n\nfunction createRangeTable(data: string): Array<Ranged> {\n    let hi = 0;\n    return data.split(\",\").map((v) => {\n        let comps = v.split(\"-\");\n        if (comps.length === 1) {\n            comps[1] = \"0\";\n        } else if (comps[1] === \"\") {\n            comps[1] = \"1\";\n        }\n\n        let lo = hi + parseInt(comps[0], 16);\n        hi = parseInt(comps[1], 16);\n        return { l: lo, h: hi };\n    });\n}\n\nfunction matchMap(value: number, ranges: Array<Ranged>): Ranged {\n    let lo = 0;\n    for (let i = 0; i < ranges.length; i++) {\n        let range = ranges[i];\n        lo += range.l;\n        if (value >= lo && value <= lo + range.h && ((value - lo) % (range.d || 1)) === 0) {\n            if (range.e && range.e.indexOf(value - lo) !== -1) { continue; }\n            return range;\n        }\n    }\n    return null;\n}\n\nconst Table_A_1_ranges = createRangeTable(\"221,13-1b,5f-,40-10,51-f,11-3,3-3,2-2,2-4,8,2,15,2d,28-8,88,48,27-,3-5,11-20,27-,8,28,3-5,12,18,b-a,1c-4,6-16,2-d,2-2,2,1b-4,17-9,8f-,10,f,1f-2,1c-34,33-14e,4,36-,13-,6-2,1a-f,4,9-,3-,17,8,2-2,5-,2,8-,3-,4-8,2-3,3,6-,16-6,2-,7-3,3-,17,8,3,3,3-,2,6-3,3-,4-a,5,2-6,10-b,4,8,2,4,17,8,3,6-,b,4,4-,2-e,2-4,b-10,4,9-,3-,17,8,3-,5-,9-2,3-,4-7,3-3,3,4-3,c-10,3,7-2,4,5-2,3,2,3-2,3-2,4-2,9,4-3,6-2,4,5-8,2-e,d-d,4,9,4,18,b,6-3,8,4,5-6,3-8,3-3,b-11,3,9,4,18,b,6-3,8,4,5-6,3-6,2,3-3,b-11,3,9,4,18,11-3,7-,4,5-8,2-7,3-3,b-11,3,13-2,19,a,2-,8-2,2-3,7,2,9-11,4-b,3b-3,1e-24,3,2-,3,2-,2-5,5,8,4,2,2-,3,e,4-,6,2,7-,b-,3-21,49,23-5,1c-3,9,25,10-,2-2f,23,6,3,8-2,5-5,1b-45,27-9,2a-,2-3,5b-4,45-4,53-5,8,40,2,5-,8,2,5-,28,2,5-,20,2,5-,8,2,5-,8,8,18,20,2,5-,8,28,14-5,1d-22,56-b,277-8,1e-2,52-e,e,8-a,18-8,15-b,e,4,3-b,5e-2,b-15,10,b-5,59-7,2b-555,9d-3,5b-5,17-,7-,27-,7-,9,2,2,2,20-,36,10,f-,7,14-,4,a,54-3,2-6,6-5,9-,1c-10,13-1d,1c-14,3c-,10-6,32-b,240-30,28-18,c-14,a0,115-,3,66-,b-76,5,5-,1d,24,2,5-2,2,8-,35-2,19,f-10,1d-3,311-37f,1b,5a-b,d7-19,d-3,41,57-,68-4,29-3,5f,29-37,2e-2,25-c,2c-2,4e-3,30,78-3,64-,20,19b7-49,51a7-59,48e-2,38-738,2ba5-5b,222f-,3c-94,8-b,6-4,1b,6,2,3,3,6d-20,16e-f,41-,37-7,2e-2,11-f,5-b,18-,b,14,5-3,6,88-,2,bf-2,7-,7-,7-,4-2,8,8-9,8-2ff,20,5-b,1c-b4,27-,27-cbb1,f7-9,28-2,b5-221,56,48,3-,2-,3-,5,d,2,5,3,42,5-,9,8,1d,5,6,2-2,8,153-3,123-3,33-27fd,a6da-5128,21f-5df,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3,2-1d,61-ff7d\");\n\n// @TODO: Make this relative...\nconst Table_B_1_flags = \"ad,34f,1806,180b,180c,180d,200b,200c,200d,2060,feff\".split(\",\").map((v) => parseInt(v, 16));\n\nconst Table_B_2_ranges: Array<Ranged> = [\n    { h: 25, s: 32, l: 65 },\n    { h: 30, s: 32, e: [ 23 ], l: 127 },\n    { h: 54, s: 1, e: [ 48 ], l: 64, d: 2 },\n    { h: 14, s: 1, l: 57, d: 2 },\n    { h: 44, s: 1, l: 17, d: 2 },\n    { h: 10, s: 1, e: [ 2, 6, 8 ], l: 61, d: 2 },\n    { h: 16, s: 1, l: 68, d: 2 },\n    { h: 84, s: 1, e: [ 18, 24, 66 ], l: 19, d: 2 },\n    { h: 26, s: 32, e: [ 17 ], l: 435 },\n    { h: 22, s: 1, l: 71, d: 2 },\n    { h: 15, s: 80, l: 40 },\n    { h: 31, s: 32, l: 16 },\n    { h: 32, s: 1, l: 80, d: 2 },\n    { h: 52, s: 1, l: 42, d: 2 },\n    { h: 12, s: 1, l: 55, d: 2 },\n    { h: 40, s: 1, e: [ 38 ], l: 15, d: 2 },\n    { h: 14, s: 1, l: 48, d: 2 },\n    { h: 37, s: 48, l: 49 },\n    { h: 148, s: 1, l: 6351, d: 2 },\n    { h: 88, s: 1, l: 160, d: 2 },\n    { h: 15, s: 16, l: 704 },\n    { h: 25, s: 26, l: 854 },\n    { h: 25, s: 32, l: 55915 },\n    { h: 37, s: 40, l: 1247 },\n    { h: 25, s: -119711, l: 53248 },\n    { h: 25, s: -119763, l: 52 },\n    { h: 25, s: -119815, l: 52 },\n    { h: 25, s: -119867, e: [ 1, 4, 5, 7, 8, 11, 12, 17 ], l: 52 },\n    { h: 25, s: -119919, l: 52 },\n    { h: 24, s: -119971, e: [ 2, 7, 8, 17 ], l: 52 },\n    { h: 24, s: -120023, e: [ 2, 7, 13, 15, 16, 17 ], l: 52 },\n    { h: 25, s: -120075, l: 52 },\n    { h: 25, s: -120127, l: 52 },\n    { h: 25, s: -120179, l: 52 },\n    { h: 25, s: -120231, l: 52 },\n    { h: 25, s: -120283, l: 52 },\n    { h: 25, s: -120335, l: 52 },\n    { h: 24, s: -119543, e: [ 17 ], l: 56 },\n    { h: 24, s: -119601, e: [ 17 ], l: 58 },\n    { h: 24, s: -119659, e: [ 17 ], l: 58 },\n    { h: 24, s: -119717, e: [ 17 ], l: 58 },\n    { h: 24, s: -119775, e: [ 17 ], l: 58 }\n];\nconst Table_B_2_lut_abs = createTable(\"b5:3bc,c3:ff,7:73,2:253,5:254,3:256,1:257,5:259,1:25b,3:260,1:263,2:269,1:268,5:26f,1:272,2:275,7:280,3:283,5:288,3:28a,1:28b,5:292,3f:195,1:1bf,29:19e,125:3b9,8b:3b2,1:3b8,1:3c5,3:3c6,1:3c0,1a:3ba,1:3c1,1:3c3,2:3b8,1:3b5,1bc9:3b9,1c:1f76,1:1f77,f:1f7a,1:1f7b,d:1f78,1:1f79,1:1f7c,1:1f7d,107:63,5:25b,4:68,1:68,1:68,3:69,1:69,1:6c,3:6e,4:70,1:71,1:72,1:72,1:72,7:7a,2:3c9,2:7a,2:6b,1:e5,1:62,1:63,3:65,1:66,2:6d,b:3b3,1:3c0,6:64,1b574:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3\");\nconst Table_B_2_lut_rel = createTable(\"179:1,2:1,2:1,5:1,2:1,a:4f,a:1,8:1,2:1,2:1,3:1,5:1,3:1,4:1,2:1,3:1,4:1,8:2,1:1,2:2,1:1,2:2,27:2,195:26,2:25,1:25,1:25,2:40,2:3f,1:3f,33:1,11:-6,1:-9,1ac7:-3a,6d:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,b:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,c:-8,2:-8,2:-8,2:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,49:-8,1:-8,1:-4a,1:-4a,d:-56,1:-56,1:-56,1:-56,d:-8,1:-8,f:-8,1:-8,3:-7\");\nconst Table_B_2_complex = createTable(\"df:00730073,51:00690307,19:02BC006E,a7:006A030C,18a:002003B9,16:03B903080301,20:03C503080301,1d7:05650582,190f:00680331,1:00740308,1:0077030A,1:0079030A,1:006102BE,b6:03C50313,2:03C503130300,2:03C503130301,2:03C503130342,2a:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,3:1F7003B9,1:03B103B9,1:03AC03B9,2:03B10342,1:03B1034203B9,5:03B103B9,6:1F7403B9,1:03B703B9,1:03AE03B9,2:03B70342,1:03B7034203B9,5:03B703B9,6:03B903080300,1:03B903080301,3:03B90342,1:03B903080342,b:03C503080300,1:03C503080301,1:03C10313,2:03C50342,1:03C503080342,b:1F7C03B9,1:03C903B9,1:03CE03B9,2:03C90342,1:03C9034203B9,5:03C903B9,ac:00720073,5b:00B00063,6:00B00066,d:006E006F,a:0073006D,1:00740065006C,1:0074006D,124f:006800700061,2:00610075,2:006F0076,b:00700061,1:006E0061,1:03BC0061,1:006D0061,1:006B0061,1:006B0062,1:006D0062,1:00670062,3:00700066,1:006E0066,1:03BC0066,4:0068007A,1:006B0068007A,1:006D0068007A,1:00670068007A,1:00740068007A,15:00700061,1:006B00700061,1:006D00700061,1:006700700061,8:00700076,1:006E0076,1:03BC0076,1:006D0076,1:006B0076,1:006D0076,1:00700077,1:006E0077,1:03BC0077,1:006D0077,1:006B0077,1:006D0077,1:006B03C9,1:006D03C9,2:00620071,3:00632215006B0067,1:0063006F002E,1:00640062,1:00670079,2:00680070,2:006B006B,1:006B006D,9:00700068,2:00700070006D,1:00700072,2:00730076,1:00770062,c723:00660066,1:00660069,1:0066006C,1:006600660069,1:00660066006C,1:00730074,1:00730074,d:05740576,1:05740565,1:0574056B,1:057E0576,1:0574056D\", bytes2);\n\nconst Table_C_ranges = createRangeTable(\"80-20,2a0-,39c,32,f71,18e,7f2-f,19-7,30-4,7-5,f81-b,5,a800-20ff,4d1-1f,110,fa-6,d174-7,2e84-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,2,1f-5f,ff7f-20001\");\n\n\nfunction flatten(values: Array<Array<number>>): Array<number> {\n    return values.reduce((accum, value) => {\n        value.forEach((value) => { accum.push(value); });\n        return accum;\n    }, [ ]);\n}\n\nexport function _nameprepTableA1(codepoint: number): boolean {\n    return !!matchMap(codepoint, Table_A_1_ranges);\n}\n\nexport function _nameprepTableB2(codepoint: number): Array<number> {\n    let range = matchMap(codepoint, Table_B_2_ranges);\n    if (range) { return [ codepoint + range.s ]; }\n\n    let codes = Table_B_2_lut_abs[codepoint];\n    if (codes) { return codes; }\n\n    let shift = Table_B_2_lut_rel[codepoint];\n    if (shift) { return [ codepoint + shift[0] ]; }\n\n    let complex = Table_B_2_complex[codepoint];\n    if (complex) { return complex; }\n\n    return null;\n}\n\nexport function _nameprepTableC(codepoint: number): boolean {\n    return !!matchMap(codepoint, Table_C_ranges);\n}\n\nexport function nameprep(value: string): string {\n\n    // This allows platforms with incomplete normalize to bypass\n    // it for very basic names which the built-in toLowerCase\n    // will certainly handle correctly\n    if (value.match(/^[a-z0-9-]*$/i) && value.length <= 59) { return value.toLowerCase(); }\n\n    // Get the code points (keeping the current normalization)\n    let codes = toUtf8CodePoints(value);\n\n    codes = flatten(codes.map((code) => {\n        // Substitute Table B.1 (Maps to Nothing)\n        if (Table_B_1_flags.indexOf(code) >= 0) { return [ ]; }\n        if (code >= 0xfe00 && code <= 0xfe0f) { return [ ]; }\n\n        // Substitute Table B.2 (Case Folding)\n        let codesTableB2 = _nameprepTableB2(code);\n        if (codesTableB2) { return codesTableB2; }\n\n        // No Substitution\n        return [ code ];\n    }));\n\n    // Normalize using form KC\n    codes = toUtf8CodePoints(_toUtf8String(codes), UnicodeNormalizationForm.NFKC);\n\n    // Prohibit Tables C.1.2, C.2.2, C.3, C.4, C.5, C.6, C.7, C.8, C.9\n    codes.forEach((code) => {\n        if (_nameprepTableC(code)) {\n            throw new Error(\"STRINGPREP_CONTAINS_PROHIBITED\");\n        }\n    });\n\n    // Prohibit Unassigned Code Points (Table A.1)\n    codes.forEach((code) => {\n        if (_nameprepTableA1(code)) {\n            throw new Error(\"STRINGPREP_CONTAINS_UNASSIGNED\");\n        }\n    });\n\n    // IDNA extras\n    let name = _toUtf8String(codes);\n\n    // IDNA: 4.2.3.1\n    if (name.substring(0, 1) === \"-\" || name.substring(2, 4) === \"--\" || name.substring(name.length - 1) === \"-\") {\n        throw new Error(\"invalid hyphen\");\n    }\n\n    return name;\n}\n\n","\"use strict\";\n\nimport { formatBytes32String, parseBytes32String } from \"./bytes32\";\nimport { nameprep } from \"./idna\";\nimport { _toEscapedUtf8String, toUtf8Bytes, toUtf8CodePoints, toUtf8String, UnicodeNormalizationForm, Utf8ErrorFunc, Utf8ErrorFuncs, Utf8ErrorReason } from \"./utf8\";\n\nexport {\n    _toEscapedUtf8String,\n    toUtf8Bytes,\n    toUtf8CodePoints,\n    toUtf8String,\n\n    Utf8ErrorFunc,\n    Utf8ErrorFuncs,\n    Utf8ErrorReason,\n\n    UnicodeNormalizationForm,\n\n    formatBytes32String,\n    parseBytes32String,\n\n    nameprep\n}\n","\"use strict\";\n\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\n\nimport { Reader, Writer } from \"./abstract-coder\";\nimport { DynamicBytesCoder } from \"./bytes\";\n\nexport class StringCoder extends DynamicBytesCoder {\n\n    constructor(localName: string) {\n        super(\"string\", localName);\n    }\n\n    defaultValue(): string {\n        return \"\";\n    }\n\n    encode(writer: Writer, value: any): number {\n        return super.encode(writer, toUtf8Bytes(value));\n    }\n\n    decode(reader: Reader): any {\n        return toUtf8String(super.decode(reader));\n    }\n}\n","\"use strict\";\n\nimport { Coder, Reader, Writer } from \"./abstract-coder\";\nimport { pack, unpack } from \"./array\";\n\nexport class TupleCoder extends Coder {\n    readonly coders: Array<Coder>;\n\n    constructor(coders: Array<Coder>, localName: string) {\n        let dynamic = false;\n        const types: Array<string> = [];\n        coders.forEach((coder) => {\n            if (coder.dynamic) { dynamic = true; }\n            types.push(coder.type);\n        });\n        const type = (\"tuple(\" + types.join(\",\") + \")\");\n\n        super(\"tuple\", type, localName, dynamic);\n        this.coders = coders;\n    }\n\n    defaultValue(): any {\n        const values: any = [ ];\n        this.coders.forEach((coder) => {\n            values.push(coder.defaultValue());\n        });\n\n        // We only output named properties for uniquely named coders\n        const uniqueNames = this.coders.reduce((accum, coder) => {\n            const name = coder.localName;\n            if (name) {\n                if (!accum[name]) { accum[name] = 0; }\n                accum[name]++;\n            }\n            return accum;\n        }, <{ [ name: string ]: number }>{ });\n\n        // Add named values\n        this.coders.forEach((coder: Coder, index: number) => {\n            let name = coder.localName;\n            if (!name || uniqueNames[name] !== 1) { return; }\n\n            if (name === \"length\") { name = \"_length\"; }\n\n            if (values[name] != null) { return; }\n\n            values[name] = values[index];\n        });\n\n        return Object.freeze(values);\n    }\n\n    encode(writer: Writer, value: Array<any> | { [ name: string ]: any }): number {\n        return pack(writer, this.coders, value);\n    }\n\n    decode(reader: Reader): any {\n        return reader.coerce(this.name, unpack(reader, this.coders));\n    }\n}\n\n","\"use strict\";\n\n// See: https://github.com/ethereum/wiki/wiki/Ethereum-Contract-ABI\n\nimport { arrayify, BytesLike } from \"@ethersproject/bytes\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { Coder, Reader, Result, Writer } from \"./coders/abstract-coder\";\nimport { AddressCoder } from \"./coders/address\";\nimport { ArrayCoder } from \"./coders/array\";\nimport { BooleanCoder } from \"./coders/boolean\";\nimport { BytesCoder } from \"./coders/bytes\";\nimport { FixedBytesCoder } from \"./coders/fixed-bytes\";\nimport { NullCoder } from \"./coders/null\";\nimport { NumberCoder } from \"./coders/number\";\nimport { StringCoder } from \"./coders/string\";\nimport { TupleCoder } from \"./coders/tuple\";\n\nimport { ParamType } from \"./fragments\";\n\n\nconst paramTypeBytes = new RegExp(/^bytes([0-9]*)$/);\nconst paramTypeNumber = new RegExp(/^(u?int)([0-9]*)$/);\n\n\nexport type CoerceFunc = (type: string, value: any) => any;\n\nexport class AbiCoder {\n    readonly coerceFunc: CoerceFunc;\n\n    constructor(coerceFunc?: CoerceFunc) {\n        defineReadOnly(this, \"coerceFunc\", coerceFunc || null);\n    }\n\n    _getCoder(param: ParamType): Coder {\n\n        switch (param.baseType) {\n            case \"address\":\n                return new AddressCoder(param.name);\n            case \"bool\":\n                return new BooleanCoder(param.name);\n            case \"string\":\n                return new StringCoder(param.name);\n            case \"bytes\":\n                return new BytesCoder(param.name);\n            case \"array\":\n                return new ArrayCoder(this._getCoder(param.arrayChildren), param.arrayLength, param.name);\n            case \"tuple\":\n                return new TupleCoder((param.components || []).map((component) => {\n                    return this._getCoder(component);\n                }), param.name);\n            case \"\":\n                return new NullCoder(param.name);\n        }\n\n        // u?int[0-9]*\n        let match = param.type.match(paramTypeNumber);\n        if (match) {\n            let size = parseInt(match[2] || \"256\");\n            if (size === 0 || size > 256 || (size % 8) !== 0) {\n                logger.throwArgumentError(\"invalid \" + match[1] + \" bit length\", \"param\", param);\n            }\n            return new NumberCoder(size / 8, (match[1] === \"int\"), param.name);\n        }\n\n        // bytes[0-9]+\n        match = param.type.match(paramTypeBytes);\n        if (match) {\n            let size = parseInt(match[1]);\n            if (size === 0 || size > 32) {\n                logger.throwArgumentError(\"invalid bytes length\", \"param\", param);\n            }\n            return new FixedBytesCoder(size, param.name);\n        }\n\n        return logger.throwArgumentError(\"invalid type\", \"type\", param.type);\n    }\n\n    _getWordSize(): number { return 32; }\n\n    _getReader(data: Uint8Array, allowLoose?: boolean): Reader {\n        return new Reader(data, this._getWordSize(), this.coerceFunc, allowLoose);\n    }\n\n    _getWriter(): Writer {\n        return new Writer(this._getWordSize());\n    }\n\n    getDefaultValue(types: ReadonlyArray<string | ParamType>): Result {\n        const coders: Array<Coder> = types.map((type) => this._getCoder(ParamType.from(type)));\n        const coder = new TupleCoder(coders, \"_\");\n        return coder.defaultValue();\n    }\n\n    encode(types: ReadonlyArray<string | ParamType>, values: ReadonlyArray<any>): string {\n        if (types.length !== values.length) {\n            logger.throwError(\"types/values length mismatch\", Logger.errors.INVALID_ARGUMENT, {\n                count: { types: types.length, values: values.length },\n                value: { types: types, values: values }\n            });\n        }\n\n        const coders = types.map((type) => this._getCoder(ParamType.from(type)));\n        const coder = (new TupleCoder(coders, \"_\"));\n\n        const writer = this._getWriter();\n        coder.encode(writer, values);\n        return writer.data;\n    }\n\n    decode(types: ReadonlyArray<string | ParamType>, data: BytesLike, loose?: boolean): Result {\n        const coders: Array<Coder> = types.map((type) => this._getCoder(ParamType.from(type)));\n        const coder = new TupleCoder(coders, \"_\");\n        return coder.decode(this._getReader(arrayify(data), loose));\n    }\n}\n\nexport const defaultAbiCoder: AbiCoder = new AbiCoder();\n\n","import { keccak256 } from \"@ethersproject/keccak256\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\n\nexport function id(text: string): string {\n    return keccak256(toUtf8Bytes(text));\n}\n","export const version = \"hash/5.7.0\";\n","\"use strict\";\n\nimport { arrayify, BytesLike } from \"@ethersproject/bytes\";\n\nexport function decode(textData: string): Uint8Array {\n    textData = atob(textData);\n    const data = [];\n    for (let i = 0; i < textData.length; i++) {\n        data.push(textData.charCodeAt(i));\n    }\n    return arrayify(data);\n}\n\nexport function encode(data: BytesLike): string {\n    data = arrayify(data);\n    let textData = \"\";\n    for (let i = 0; i < data.length; i++) {\n        textData += String.fromCharCode(data[i]);\n    }\n    return btoa(textData);\n}\n\n\n","\"use strict\";\n\nexport { decode, encode } from \"./base64\";\n","/**\n * MIT License\n *\n * Copyright (c) 2021 Andrew Raffensperger\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n * This is a near carbon-copy of the original source (link below) with the\n * TypeScript typings added and a few tweaks to make it ES3-compatible.\n *\n * See: https://github.com/adraffy/ens-normalize.js\n */\n\nexport type Numbers = Uint8Array | Array<number>;\nexport type NextFunc = (...args: Array<any>) => number;\n\n// https://github.com/behnammodi/polyfill/blob/master/array.polyfill.js\nfunction flat(array: Array<any>, depth?: number): Array<any> {\n    if (depth == null) { depth = 1; }\n    const result: Array<any> = [];\n\n    const forEach = result.forEach;\n\n    const flatDeep = function (arr: Array<any>, depth: number) {\n        forEach.call(arr, function (val: any) {\n            if (depth > 0 && Array.isArray(val)) {\n                flatDeep(val, depth - 1);\n            } else {\n               result.push(val);\n            }\n        });\n    };\n\n    flatDeep(array, depth);\n    return result;\n}\n\nfunction fromEntries<T extends string | number | symbol = string | number | symbol, U = any>(array: Array<[T, U]>): Record<T, U> {\n    const result: Record<T, U> = <Record<T, U>>{ };\n    for (let i = 0; i < array.length; i++) {\n        const value = array[i];\n        result[value[0]] = value[1];\n    }\n    return result;\n}\n\nexport function decode_arithmetic(bytes: Numbers): Array<number> {\n\tlet pos = 0;\n\tfunction u16() { return (bytes[pos++] << 8) | bytes[pos++]; }\n\t\n\t// decode the frequency table\n\tlet symbol_count = u16();\n\tlet total = 1;\n\tlet acc = [0, 1]; // first symbol has frequency 1\n\tfor (let i = 1; i < symbol_count; i++) {\n\t\tacc.push(total += u16());\n\t}\n\n\t// skip the sized-payload that the last 3 symbols index into\n\tlet skip = u16();\n\tlet pos_payload = pos;\n\tpos += skip;\n\n\tlet read_width = 0;\n\tlet read_buffer = 0; \n\tfunction read_bit() {\n\t\tif (read_width == 0) {\n\t\t\t// this will read beyond end of buffer\n\t\t\t// but (undefined|0) => zero pad\n\t\t\tread_buffer = (read_buffer << 8) | bytes[pos++];\n\t\t\tread_width = 8;\n\t\t}\n\t\treturn (read_buffer >> --read_width) & 1;\n\t}\n\n\tconst N = 31;\n\tconst FULL = 2**N;\n\tconst HALF = FULL >>> 1;\n\tconst QRTR = HALF >> 1;\n\tconst MASK = FULL - 1;\n\n\t// fill register\n\tlet register = 0;\n\tfor (let i = 0; i < N; i++) register = (register << 1) | read_bit();\n\n\tlet symbols = [];\n\tlet low = 0;\n\tlet range = FULL; // treat like a float\n\twhile (true) {\n\t\tlet value = Math.floor((((register - low + 1) * total) - 1) / range);\n\t\tlet start = 0;\n\t\tlet end = symbol_count;\n\t\twhile (end - start > 1) { // binary search\n\t\t\tlet mid = (start + end) >>> 1;\n\t\t\tif (value < acc[mid]) {\n\t\t\t\tend = mid;\n\t\t\t} else {\n\t\t\t\tstart = mid;\n\t\t\t}\n\t\t}\n\t\tif (start == 0) break; // first symbol is end mark\n\t\tsymbols.push(start);\n\t\tlet a = low + Math.floor(range * acc[start]   / total);\n\t\tlet b = low + Math.floor(range * acc[start+1] / total) - 1\n\t\twhile (((a ^ b) & HALF) == 0) {\n\t\t\tregister = (register << 1) & MASK | read_bit();\n\t\t\ta = (a << 1) & MASK;\n\t\t\tb = (b << 1) & MASK | 1;\n\t\t}\n\t\twhile (a & ~b & QRTR) {\n\t\t\tregister = (register & HALF) | ((register << 1) & (MASK >>> 1)) | read_bit();\n\t\t\ta = (a << 1) ^ HALF;\n\t\t\tb = ((b ^ HALF) << 1) | HALF | 1;\n\t\t}\n\t\tlow = a;\n\t\trange = 1 + b - a;\n\t}\n\tlet offset = symbol_count - 4;\n\treturn symbols.map(x => { // index into payload\n\t\tswitch (x - offset) {\n\t\t\tcase 3: return offset + 0x10100 + ((bytes[pos_payload++] << 16) | (bytes[pos_payload++] << 8) | bytes[pos_payload++]);\n\t\t\tcase 2: return offset + 0x100 + ((bytes[pos_payload++] << 8) | bytes[pos_payload++]);\n\t\t\tcase 1: return offset + bytes[pos_payload++];\n\t\t\tdefault: return x - 1;\n\t\t}\n\t});\n}\t\n\n\n// returns an iterator which returns the next symbol\nexport function read_payload(v: Numbers): NextFunc {\n\tlet pos = 0;\n\treturn () => v[pos++];\n}\nexport function read_compressed_payload(bytes: Numbers): NextFunc {\n\treturn read_payload(decode_arithmetic(bytes));\n}\n\n// eg. [0,1,2,3...] => [0,-1,1,-2,...]\nexport function signed(i: number): number { \n\treturn (i & 1) ? (~i >> 1) : (i >> 1);\n}\n\nfunction read_counts(n: number, next: NextFunc): Array<number> {\n\tlet v = Array(n);\n\tfor (let i = 0; i < n; i++) v[i] = 1 + next();\n\treturn v;\n}\n\nfunction read_ascending(n: number, next: NextFunc): Array<number> {\n\tlet v = Array(n);\n\tfor (let i = 0, x = -1; i < n; i++) v[i] = x += 1 + next();\n\treturn v;\n}\n\nfunction read_deltas(n: number, next: NextFunc): Array<number> {\n\tlet v = Array(n);\n\tfor (let i = 0, x = 0; i < n; i++) v[i] = x += signed(next());\n\treturn v;\n}\n\nexport function read_member_array(next: NextFunc, lookup?: Record<number, number>) {\n    let v = read_ascending(next(), next);\n    let n = next();\n    let vX = read_ascending(n, next);\n    let vN = read_counts(n, next);\n    for (let i = 0; i < n; i++) {\n        for (let j = 0; j < vN[i]; j++) {\n            v.push(vX[i] + j);\n        }\n    }\n    return lookup ? v.map(x => lookup[x]) : v;\n}\n\n// returns array of \n// [x, ys] => single replacement rule\n// [x, ys, n, dx, dx] => linear map\nexport function read_mapped_map(next: NextFunc): Record<number, Array<number>> {\n\tlet ret = [];\n\twhile (true) {\n\t\tlet w = next();\n\t\tif (w == 0) break;\n\t\tret.push(read_linear_table(w, next));\n\t}\n\twhile (true) {\n\t\tlet w = next() - 1;\n\t\tif (w < 0) break;\n\t\tret.push(read_replacement_table(w, next));\n\t}\n\treturn fromEntries<number, Array<number>>(flat(ret));\n}\n\nexport function read_zero_terminated_array(next: NextFunc): Array<number> {\n\tlet v = [];\n\twhile (true) {\n\t\tlet i = next();\n\t\tif (i == 0) break;\n\t\tv.push(i);\n\t}\n\treturn v;\n}\n\nfunction read_transposed(n: number, w: number, next: NextFunc): Array<Array<number>> {\n    let m = Array(n).fill(undefined).map(() => []);\n    for (let i = 0; i < w; i++) {\n        read_deltas(n, next).forEach((x, j) => m[j].push(x));\n    }\n    return m;\n}\n\n\nfunction read_linear_table(w: number, next: NextFunc): Array<Array<number | Array<number>>> {\n\tlet dx = 1 + next();\n\tlet dy = next();\n\tlet vN = read_zero_terminated_array(next);\n\tlet m = read_transposed(vN.length, 1+w, next);\n\treturn flat(m.map((v, i) => {\n\t  const x = v[0], ys = v.slice(1);\n\t\t//let [x, ...ys] = v;\n\t\t//return Array(vN[i]).fill().map((_, j) => {\n\t\treturn Array(vN[i]).fill(undefined).map((_, j) => {\n\t\t\tlet j_dy = j * dy;\n\t\t\treturn [x + j * dx, ys.map(y => y + j_dy)];\n\t\t});\n\t}));\n}\n\nfunction read_replacement_table(w: number, next: NextFunc): Array<[ number, Array<number> ]> {\n\tlet n = 1 + next();\n\tlet m = read_transposed(n, 1+w, next);\n\treturn m.map(v => [v[0], v.slice(1)]);\n}\n\nexport type Branch = {\n    set: Set<number>;\n    node: Node;\n};\n\nexport type Node = {\n    branches: Array<Branch>;\n    valid: number;\n    fe0f: boolean;\n    save: boolean;\n    check: boolean;\n};\n\nexport function read_emoji_trie(next: NextFunc): Node {\n\tlet sorted = read_member_array(next).sort((a, b) => a - b);\n\treturn read();\n\tfunction read(): Node {\n\t\tlet branches = [];\n\t\twhile (true) {\n\t\t\tlet keys = read_member_array(next, sorted);\n\t\t\tif (keys.length == 0) break;\n\t\t\tbranches.push({set: new Set(keys), node: read()});\n\t\t}\n    branches.sort((a, b) => b.set.size - a.set.size); // sort by likelihood\n \t\tlet temp = next();\n \t\tlet valid = temp % 3;\n \t\ttemp = (temp / 3)|0;\n \t\tlet fe0f = !!(temp & 1);\n \t\ttemp >>= 1;\n \t\tlet save = temp == 1;\n \t\tlet check = temp == 2;\n \t\treturn {branches, valid, fe0f, save, check};\n\t}\n}\n","/**\n * MIT License\n *\n * Copyright (c) 2021 Andrew Raffensperger\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n * This is a near carbon-copy of the original source (link below) with the\n * TypeScript typings added and a few tweaks to make it ES3-compatible.\n *\n * See: https://github.com/adraffy/ens-normalize.js\n */\n\nimport { decode } from \"@ethersproject/base64\";\n\nimport {read_compressed_payload} from './decoder.js';\n\nexport function getData(): () => number {\n    return read_compressed_payload(decode(''));\n}\n\n","/**\n * MIT License\n *\n * Copyright (c) 2021 Andrew Raffensperger\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n * This is a near carbon-copy of the original source (link below) with the\n * TypeScript typings added and a few tweaks to make it ES3-compatible.\n *\n * See: https://github.com/adraffy/ens-normalize.js\n */\n\nimport { toUtf8CodePoints } from \"@ethersproject/strings\";\n\nimport { getData } from './include.js';\nconst r = getData();\n\nimport {read_member_array, read_mapped_map, read_emoji_trie} from './decoder.js';\n\n// @TODO: This should be lazily loaded\n\nconst VALID = new Set(read_member_array(r));\nconst IGNORED = new Set(read_member_array(r));\nconst MAPPED = read_mapped_map(r);\nconst EMOJI_ROOT = read_emoji_trie(r);\n//const NFC_CHECK = new Set(read_member_array(r, Array.from(VALID.values()).sort((a, b) => a - b)));\n\n//const STOP = 0x2E;\nconst HYPHEN = 0x2D;\nconst UNDERSCORE = 0x5F;\n\nfunction explode_cp(name: string): Array<number> {\n    return toUtf8CodePoints(name);\n}\n\nfunction filter_fe0f(cps: Array<number>): Array<number> {\n    return cps.filter(cp => cp != 0xFE0F);\n}\n\nexport function ens_normalize_post_check(name: string): string {\n\tfor (let label of name.split('.')) {\n\t\tlet cps = explode_cp(label);\n\t\ttry {\n\t\t\tfor (let i = cps.lastIndexOf(UNDERSCORE) - 1; i >= 0; i--) {\n\t\t\t\tif (cps[i] !== UNDERSCORE) {\n\t\t\t\t\tthrow new Error(`underscore only allowed at start`);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (cps.length >= 4 && cps.every(cp => cp < 0x80) && cps[2] === HYPHEN && cps[3] === HYPHEN) {\n\t\t\t\tthrow new Error(`invalid label extension`);\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tthrow new Error(`Invalid label \"${label}\": ${err.message}`);\n\t\t}\n\t}\n\treturn name;\n}\n\nexport function ens_normalize(name: string): string {\n\treturn ens_normalize_post_check(normalize(name, filter_fe0f));\n}\n\nfunction normalize(name: string, emoji_filter: (a: Array<number>) => Array<number>): string {\n\tlet input = explode_cp(name).reverse(); // flip for pop\n\tlet output = [];\n\twhile (input.length) {\t\t\n\t\tlet emoji = consume_emoji_reversed(input);\n\t\tif (emoji) {\n\t\t\toutput.push(...emoji_filter(emoji));\n\t\t\tcontinue;\n\t\t}\n\t\tlet cp = input.pop();\n\t\tif (VALID.has(cp)) {\n\t\t\toutput.push(cp);\n\t\t\tcontinue;\n\t\t} \n\t\tif (IGNORED.has(cp)) {\n\t\t\tcontinue;\n\t\t}\n\t\tlet cps = MAPPED[cp];\n\t\tif (cps) {\n\t\t\toutput.push(...cps);\n\t\t\tcontinue;\n\t\t}\n\t\tthrow new Error(`Disallowed codepoint: 0x${cp.toString(16).toUpperCase()}`);\n\t}\n\treturn ens_normalize_post_check(nfc(String.fromCodePoint(...output)));\n}\n\nfunction nfc(s: string): string {\n    return s.normalize('NFC');\n}\n\nfunction consume_emoji_reversed(cps: Array<number>, eaten?: Array<number>) {\n\tlet node = EMOJI_ROOT;\n\tlet emoji;\n\tlet saved;\n\tlet stack = [];\n\tlet pos = cps.length;\n\tif (eaten) eaten.length = 0; // clear input buffer (if needed)\n\twhile (pos) {\n\t\tlet cp = cps[--pos];\n\t\tnode = node.branches.find(x => x.set.has(cp))?.node;\n\t\tif (!node) break;\n\t\tif (node.save) { // remember\n\t\t\tsaved = cp;\n\t\t} else if (node.check) { // check exclusion\n\t\t\tif (cp === saved) break;\n\t\t}\n\t\tstack.push(cp);\n\t\tif (node.fe0f) {\n\t\t\tstack.push(0xFE0F);\n\t\t\tif (pos > 0 && cps[pos - 1] == 0xFE0F) pos--; // consume optional FE0F\n\t\t}\n\t\tif (node.valid) { // this is a valid emoji (so far)\n\t\t\temoji = stack.slice(); // copy stack\n\t\t\tif (node.valid == 2) emoji.splice(1, 1); // delete FE0F at position 1 (RGI ZWJ don't follow spec!)\n\t\t\tif (eaten) eaten.push(...cps.slice(pos).reverse()); // copy input (if needed)\n\t\t\tcps.length = pos; // truncate\n\t\t}\n\t}\n\treturn emoji;\n}\n","import { concat, hexlify } from \"@ethersproject/bytes\";\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { ens_normalize } from \"./ens-normalize/lib\";\n\nconst Zeros = new Uint8Array(32);\nZeros.fill(0);\n\nfunction checkComponent(comp: Uint8Array): Uint8Array {\n    if (comp.length === 0) { throw new Error(\"invalid ENS name; empty component\"); }\n    return comp;\n}\n\nfunction ensNameSplit(name: string): Array<Uint8Array> {\n    const bytes = toUtf8Bytes(ens_normalize(name));\n    const comps: Array<Uint8Array> = [ ];\n\n    if (name.length === 0) { return comps; }\n\n    let last = 0;\n    for (let i = 0; i < bytes.length; i++) {\n        const d = bytes[i];\n\n        // A separator (i.e. \".\"); copy this component\n        if (d === 0x2e) {\n            comps.push(checkComponent(bytes.slice(last, i)));\n            last = i + 1;\n        }\n    }\n\n    // There was a stray separator at the end of the name\n    if (last >= bytes.length) { throw new Error(\"invalid ENS name; empty component\"); }\n\n    comps.push(checkComponent(bytes.slice(last)));\n    return comps;\n}\n\nexport function ensNormalize(name: string): string {\n    return ensNameSplit(name).map((comp) => toUtf8String(comp)).join(\".\");\n}\n\nexport function isValidName(name: string): boolean {\n    try {\n        return (ensNameSplit(name).length !== 0);\n    } catch (error) { }\n    return false;\n}\n\nexport function namehash(name: string): string {\n    /* istanbul ignore if */\n    if (typeof(name) !== \"string\") {\n        logger.throwArgumentError(\"invalid ENS name; not a string\", \"name\", name);\n    }\n\n    let result: string | Uint8Array = Zeros;\n\n    const comps = ensNameSplit(name);\n    while (comps.length) {\n        result = keccak256(concat([result, keccak256(comps.pop())]));\n    }\n\n    return hexlify(result);\n}\n\nexport function dnsEncode(name: string): string {\n    return hexlify(concat(ensNameSplit(name).map((comp) => {\n        // DNS does not allow components over 63 bytes in length\n        if (comp.length > 63) {\n            throw new Error(\"invalid DNS encoded entry; length exceeds 63 bytes\");\n        }\n\n        const bytes = new Uint8Array(comp.length + 1);\n        bytes.set(comp, 1);\n        bytes[0] = bytes.length - 1;\n        return bytes;\n\n    }))) + \"00\";\n}\n","import { Bytes, concat } from \"@ethersproject/bytes\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\n\nexport const messagePrefix = \"\\x19Ethereum Signed Message:\\n\";\n\nexport function hashMessage(message: Bytes | string): string {\n    if (typeof(message) === \"string\") { message = toUtf8Bytes(message); }\n    return keccak256(concat([\n        toUtf8Bytes(messagePrefix),\n        toUtf8Bytes(String(message.length)),\n        message\n    ]));\n}\n\n","import { TypedDataDomain, TypedDataField } from \"@ethersproject/abstract-signer\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { arrayify, BytesLike, hexConcat, hexlify, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { deepCopy, defineReadOnly, shallowCopy } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { id } from \"./id\";\n\nconst padding = new Uint8Array(32);\npadding.fill(0);\n\nconst NegativeOne: BigNumber = BigNumber.from(-1);\nconst Zero: BigNumber = BigNumber.from(0);\nconst One: BigNumber = BigNumber.from(1);\nconst MaxUint256: BigNumber = BigNumber.from(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n\nfunction hexPadRight(value: BytesLike) {\n    const bytes = arrayify(value);\n    const padOffset = bytes.length % 32\n    if (padOffset) {\n        return hexConcat([ bytes, padding.slice(padOffset) ]);\n    }\n    return hexlify(bytes);\n}\n\nconst hexTrue = hexZeroPad(One.toHexString(), 32);\nconst hexFalse = hexZeroPad(Zero.toHexString(), 32);\n\nconst domainFieldTypes: Record<string, string> = {\n    name: \"string\",\n    version: \"string\",\n    chainId: \"uint256\",\n    verifyingContract: \"address\",\n    salt: \"bytes32\"\n};\n\nconst domainFieldNames: Array<string> = [\n    \"name\", \"version\", \"chainId\", \"verifyingContract\", \"salt\"\n];\n\nfunction checkString(key: string): (value: any) => string {\n    return function (value: any){\n        if (typeof(value) !== \"string\") {\n            logger.throwArgumentError(`invalid domain value for ${ JSON.stringify(key) }`, `domain.${ key }`, value);\n        }\n        return value;\n    }\n}\n\nconst domainChecks: Record<string, (value: any) => any> = {\n    name: checkString(\"name\"),\n    version: checkString(\"version\"),\n    chainId: function(value: any) {\n        try {\n            return BigNumber.from(value).toString()\n        } catch (error) { }\n        return logger.throwArgumentError(`invalid domain value for \"chainId\"`, \"domain.chainId\", value);\n    },\n    verifyingContract: function(value: any) {\n        try {\n            return getAddress(value).toLowerCase();\n        } catch (error) { }\n        return logger.throwArgumentError(`invalid domain value \"verifyingContract\"`, \"domain.verifyingContract\", value);\n    },\n    salt: function(value: any) {\n        try {\n            const bytes = arrayify(value);\n            if (bytes.length !== 32) { throw new Error(\"bad length\"); }\n            return hexlify(bytes);\n        } catch (error) { }\n        return logger.throwArgumentError(`invalid domain value \"salt\"`, \"domain.salt\", value);\n    }\n}\n\nfunction getBaseEncoder(type: string): (value: any) => string {\n    // intXX and uintXX\n    {\n        const match = type.match(/^(u?)int(\\d*)$/);\n        if (match) {\n            const signed = (match[1] === \"\");\n\n            const width = parseInt(match[2] || \"256\");\n            if (width % 8 !== 0 || width > 256 || (match[2] && match[2] !== String(width))) {\n                logger.throwArgumentError(\"invalid numeric width\", \"type\", type);\n            }\n\n            const boundsUpper = MaxUint256.mask(signed ? (width - 1): width);\n            const boundsLower = signed ? boundsUpper.add(One).mul(NegativeOne): Zero;\n\n            return function(value: BigNumberish) {\n                const v = BigNumber.from(value);\n\n                if (v.lt(boundsLower) || v.gt(boundsUpper)) {\n                    logger.throwArgumentError(`value out-of-bounds for ${ type }`, \"value\", value);\n                }\n\n                return hexZeroPad(v.toTwos(256).toHexString(), 32);\n            };\n        }\n    }\n\n    // bytesXX\n    {\n        const match = type.match(/^bytes(\\d+)$/);\n        if (match) {\n            const width = parseInt(match[1]);\n            if (width === 0 || width > 32 || match[1] !== String(width)) {\n                logger.throwArgumentError(\"invalid bytes width\", \"type\", type);\n            }\n\n            return function(value: BytesLike) {\n                const bytes = arrayify(value);\n                if (bytes.length !== width) {\n                    logger.throwArgumentError(`invalid length for ${ type }`, \"value\", value);\n                }\n                return hexPadRight(value);\n            };\n        }\n    }\n\n    switch (type) {\n        case \"address\": return function(value: string) {\n            return hexZeroPad(getAddress(value), 32);\n        };\n        case \"bool\": return function(value: boolean) {\n            return ((!value) ? hexFalse: hexTrue);\n        };\n        case \"bytes\": return function(value: BytesLike) {\n            return keccak256(value);\n        };\n        case \"string\": return function(value: string) {\n            return id(value);\n        };\n    }\n\n    return null;\n}\n\nfunction encodeType(name: string, fields: Array<TypedDataField>): string {\n    return `${ name }(${ fields.map(({ name, type }) => (type + \" \" + name)).join(\",\") })`;\n}\n\nexport class TypedDataEncoder {\n    readonly primaryType: string;\n    readonly types: Record<string, Array<TypedDataField>>;\n\n    readonly _encoderCache: Record<string, (value: any) => string>;\n    readonly _types: Record<string, string>;\n\n    constructor(types: Record<string, Array<TypedDataField>>) {\n        defineReadOnly(this, \"types\", Object.freeze(deepCopy(types)));\n\n        defineReadOnly(this, \"_encoderCache\", { });\n        defineReadOnly(this, \"_types\", { });\n\n        // Link struct types to their direct child structs\n        const links: Record<string, Record<string, boolean>> = { };\n\n        // Link structs to structs which contain them as a child\n        const parents: Record<string, Array<string>> = { };\n\n        // Link all subtypes within a given struct\n        const subtypes: Record<string, Record<string, boolean>> = { };\n\n        Object.keys(types).forEach((type) => {\n            links[type] = { };\n            parents[type] = [ ];\n            subtypes[type] = { }\n        });\n\n        for (const name in types) {\n\n            const uniqueNames: Record<string, boolean> = { };\n\n            types[name].forEach((field) => {\n\n                // Check each field has a unique name\n                if (uniqueNames[field.name]) {\n                    logger.throwArgumentError(`duplicate variable name ${ JSON.stringify(field.name) } in ${ JSON.stringify(name) }`, \"types\", types);\n                }\n                uniqueNames[field.name] = true;\n\n                // Get the base type (drop any array specifiers)\n                const baseType = field.type.match(/^([^\\x5b]*)(\\x5b|$)/)[1];\n                if (baseType === name) {\n                    logger.throwArgumentError(`circular type reference to ${ JSON.stringify(baseType) }`, \"types\", types);\n                }\n\n                // Is this a base encoding type?\n                const encoder = getBaseEncoder(baseType);\n                if (encoder) { return ;}\n\n                if (!parents[baseType]) {\n                    logger.throwArgumentError(`unknown type ${ JSON.stringify(baseType) }`, \"types\", types);\n                }\n\n                // Add linkage\n                parents[baseType].push(name);\n                links[name][baseType] = true;\n            });\n        }\n\n        // Deduce the primary type\n        const primaryTypes = Object.keys(parents).filter((n) => (parents[n].length === 0));\n\n        if (primaryTypes.length === 0) {\n            logger.throwArgumentError(\"missing primary type\", \"types\", types);\n        } else if (primaryTypes.length > 1) {\n            logger.throwArgumentError(`ambiguous primary types or unused types: ${ primaryTypes.map((t) => (JSON.stringify(t))).join(\", \") }`, \"types\", types);\n        }\n\n        defineReadOnly(this, \"primaryType\", primaryTypes[0]);\n\n        // Check for circular type references\n        function checkCircular(type: string, found: Record<string, boolean>) {\n            if (found[type]) {\n                logger.throwArgumentError(`circular type reference to ${ JSON.stringify(type) }`, \"types\", types);\n            }\n\n            found[type] = true;\n\n            Object.keys(links[type]).forEach((child) => {\n                if (!parents[child]) { return; }\n\n                // Recursively check children\n                checkCircular(child, found);\n\n                // Mark all ancestors as having this decendant\n                Object.keys(found).forEach((subtype) => {\n                    subtypes[subtype][child] = true;\n                });\n            });\n\n            delete found[type];\n        }\n        checkCircular(this.primaryType, { });\n\n        // Compute each fully describe type\n        for (const name in subtypes) {\n            const st = Object.keys(subtypes[name]);\n            st.sort();\n            this._types[name] = encodeType(name, types[name]) + st.map((t) => encodeType(t, types[t])).join(\"\");\n        }\n    }\n\n    getEncoder(type: string): (value: any) => string {\n        let encoder = this._encoderCache[type];\n        if (!encoder) {\n            encoder = this._encoderCache[type] = this._getEncoder(type);\n        }\n        return encoder;\n    }\n\n    _getEncoder(type: string): (value: any) => string {\n\n        // Basic encoder type (address, bool, uint256, etc)\n        {\n            const encoder = getBaseEncoder(type);\n            if (encoder) { return encoder; }\n        }\n\n        // Array\n        const match = type.match(/^(.*)(\\x5b(\\d*)\\x5d)$/);\n        if (match) {\n            const subtype = match[1];\n            const subEncoder = this.getEncoder(subtype);\n            const length = parseInt(match[3]);\n            return (value: Array<any>) => {\n                if (length >= 0 && value.length !== length) {\n                    logger.throwArgumentError(\"array length mismatch; expected length ${ arrayLength }\", \"value\", value);\n                }\n\n                let result = value.map(subEncoder);\n                if (this._types[subtype]) {\n                    result = result.map(keccak256);\n                }\n\n                return keccak256(hexConcat(result));\n            };\n        }\n\n        // Struct\n        const fields = this.types[type];\n        if (fields) {\n            const encodedType = id(this._types[type]);\n            return (value: Record<string, any>) => {\n                const values = fields.map(({ name, type }) => {\n                    const result = this.getEncoder(type)(value[name]);\n                    if (this._types[type]) { return keccak256(result); }\n                    return result;\n                });\n                values.unshift(encodedType);\n                return hexConcat(values);\n            }\n        }\n\n        return logger.throwArgumentError(`unknown type: ${ type }`, \"type\", type);\n    }\n\n    encodeType(name: string): string {\n        const result = this._types[name];\n        if (!result) {\n            logger.throwArgumentError(`unknown type: ${ JSON.stringify(name) }`, \"name\", name);\n        }\n        return result;\n    }\n\n    encodeData(type: string, value: any): string {\n        return this.getEncoder(type)(value);\n    }\n\n    hashStruct(name: string, value: Record<string, any>): string {\n        return keccak256(this.encodeData(name, value));\n    }\n\n    encode(value: Record<string, any>): string {\n        return this.encodeData(this.primaryType, value);\n    }\n\n    hash(value: Record<string, any>): string {\n        return this.hashStruct(this.primaryType, value);\n    }\n\n    _visit(type: string, value: any, callback: (type: string, data: any) => any): any {\n        // Basic encoder type (address, bool, uint256, etc)\n        {\n            const encoder = getBaseEncoder(type);\n            if (encoder) { return callback(type, value); }\n        }\n\n        // Array\n        const match = type.match(/^(.*)(\\x5b(\\d*)\\x5d)$/);\n        if (match) {\n            const subtype = match[1];\n            const length = parseInt(match[3]);\n            if (length >= 0 && value.length !== length) {\n                logger.throwArgumentError(\"array length mismatch; expected length ${ arrayLength }\", \"value\", value);\n            }\n            return value.map((v: any) => this._visit(subtype, v, callback));\n        }\n\n        // Struct\n        const fields = this.types[type];\n        if (fields) {\n            return fields.reduce((accum, { name, type }) => {\n                accum[name] = this._visit(type, value[name], callback);\n                return accum;\n            }, <Record<string, any>>{});\n        }\n\n        return logger.throwArgumentError(`unknown type: ${ type }`, \"type\", type);\n    }\n\n    visit(value: Record<string, any>, callback: (type: string, data: any) => any): any {\n        return this._visit(this.primaryType, value, callback);\n    }\n\n    static from(types: Record<string, Array<TypedDataField>>): TypedDataEncoder {\n        return new TypedDataEncoder(types);\n    }\n\n    static getPrimaryType(types: Record<string, Array<TypedDataField>>): string {\n        return TypedDataEncoder.from(types).primaryType;\n    }\n\n    static hashStruct(name: string, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): string {\n        return TypedDataEncoder.from(types).hashStruct(name, value);\n    }\n\n    static hashDomain(domain: TypedDataDomain): string {\n        const domainFields: Array<TypedDataField> = [ ];\n        for (const name in domain) {\n            const type = domainFieldTypes[name];\n            if (!type) {\n                logger.throwArgumentError(`invalid typed-data domain key: ${ JSON.stringify(name) }`, \"domain\", domain);\n            }\n            domainFields.push({ name, type });\n        }\n\n        domainFields.sort((a, b) => {\n            return domainFieldNames.indexOf(a.name) - domainFieldNames.indexOf(b.name);\n        });\n\n        return TypedDataEncoder.hashStruct(\"EIP712Domain\", { EIP712Domain: domainFields }, domain);\n    }\n\n    static encode(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): string {\n        return hexConcat([\n            \"0x1901\",\n            TypedDataEncoder.hashDomain(domain),\n            TypedDataEncoder.from(types).hash(value)\n        ]);\n    }\n\n    static hash(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): string {\n        return keccak256(TypedDataEncoder.encode(domain, types, value));\n    }\n\n    // Replaces all address types with ENS names with their looked up address\n    static async resolveNames(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>, resolveName: (name: string) => Promise<string>): Promise<{ domain: TypedDataDomain, value: any }> {\n        // Make a copy to isolate it from the object passed in\n        domain = shallowCopy(domain);\n\n        // Look up all ENS names\n        const ensCache: Record<string, string> = { };\n\n        // Do we need to look up the domain's verifyingContract?\n        if (domain.verifyingContract && !isHexString(domain.verifyingContract, 20)) {\n            ensCache[domain.verifyingContract] = \"0x\";\n        }\n\n        // We are going to use the encoder to visit all the base values\n        const encoder = TypedDataEncoder.from(types);\n\n        // Get a list of all the addresses\n        encoder.visit(value, (type: string, value: any) => {\n            if (type === \"address\" && !isHexString(value, 20)) {\n                ensCache[value] = \"0x\";\n            }\n            return value;\n        });\n\n        // Lookup each name\n        for (const name in ensCache) {\n            ensCache[name] = await resolveName(name);\n        }\n\n        // Replace the domain verifyingContract if needed\n        if (domain.verifyingContract && ensCache[domain.verifyingContract]) {\n            domain.verifyingContract = ensCache[domain.verifyingContract];\n        }\n\n        // Replace all ENS names with their address\n        value = encoder.visit(value, (type: string, value: any) => {\n            if (type === \"address\" && ensCache[value]) { return ensCache[value]; }\n            return value;\n        });\n\n        return { domain, value };\n    }\n\n    static getPayload(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): any {\n        // Validate the domain fields\n        TypedDataEncoder.hashDomain(domain);\n\n        // Derive the EIP712Domain Struct reference type\n        const domainValues: Record<string, any> = { };\n        const domainTypes: Array<{ name: string, type:string }> = [ ];\n\n        domainFieldNames.forEach((name) => {\n            const value = (<any>domain)[name];\n            if (value == null) { return; }\n            domainValues[name] = domainChecks[name](value);\n            domainTypes.push({ name, type: domainFieldTypes[name] });\n        });\n\n        const encoder = TypedDataEncoder.from(types);\n\n        const typesWithDomain = shallowCopy(types);\n        if (typesWithDomain.EIP712Domain) {\n            logger.throwArgumentError(\"types must not contain EIP712Domain type\", \"types.EIP712Domain\", types);\n        } else {\n            typesWithDomain.EIP712Domain = domainTypes;\n        }\n\n        // Validate the data structures and types\n        encoder.encode(value);\n\n        return {\n            types: typesWithDomain,\n            domain: domainValues,\n            primaryType: encoder.primaryType,\n            message: encoder.visit(value, (type: string, value: any) => {\n\n                // bytes\n                if (type.match(/^bytes(\\d*)/)) {\n                    return hexlify(arrayify(value));\n                }\n\n                // uint or int\n                if (type.match(/^u?int/)) {\n                    return BigNumber.from(value).toString();\n                }\n\n                switch (type) {\n                    case \"address\":\n                        return value.toLowerCase();\n                    case \"bool\":\n                        return !!value;\n                    case \"string\":\n                        if (typeof(value) !== \"string\") {\n                            logger.throwArgumentError(`invalid string`, \"value\", value);\n                        }\n                        return value;\n                }\n\n                return logger.throwArgumentError(\"unsupported type\", \"type\", type);\n            })\n        };\n    }\n}\n\n","\"use strict\";\n\nimport { id } from \"./id\";\nimport { dnsEncode, isValidName, namehash } from \"./namehash\";\nimport { hashMessage, messagePrefix } from \"./message\";\n\nimport { ensNormalize } from \"./namehash\";\n\nimport { TypedDataEncoder as _TypedDataEncoder } from \"./typed-data\";\n\nexport {\n    id,\n\n    dnsEncode,\n    namehash,\n    isValidName,\n\n    ensNormalize,\n\n    messagePrefix,\n    hashMessage,\n\n    _TypedDataEncoder,\n}\n","\"use strict\";\n\nimport { getAddress } from \"@ethersproject/address\";\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { arrayify, BytesLike, concat, hexDataSlice, hexlify, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { id } from \"@ethersproject/hash\";\nimport { keccak256 } from \"@ethersproject/keccak256\"\nimport { defineReadOnly, Description, getStatic } from \"@ethersproject/properties\";\n\nimport { AbiCoder, defaultAbiCoder } from \"./abi-coder\";\nimport { checkResultErrors, Result } from \"./coders/abstract-coder\";\nimport { ConstructorFragment, ErrorFragment, EventFragment, FormatTypes, Fragment, FunctionFragment, JsonFragment, ParamType } from \"./fragments\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nexport { checkResultErrors, Result };\n\nexport class LogDescription extends Description<LogDescription> {\n    readonly eventFragment: EventFragment;\n    readonly name: string;\n    readonly signature: string;\n    readonly topic: string;\n    readonly args: Result\n}\n\nexport class TransactionDescription extends Description<TransactionDescription> {\n    readonly functionFragment: FunctionFragment;\n    readonly name: string;\n    readonly args: Result;\n    readonly signature: string;\n    readonly sighash: string;\n    readonly value: BigNumber;\n}\n\nexport class ErrorDescription extends Description<ErrorDescription> {\n    readonly errorFragment: ErrorFragment;\n    readonly name: string;\n    readonly args: Result;\n    readonly signature: string;\n    readonly sighash: string;\n}\n\nexport class Indexed extends Description<Indexed> {\n    readonly hash: string;\n    readonly _isIndexed: boolean;\n\n    static isIndexed(value: any): value is Indexed {\n        return !!(value && value._isIndexed);\n    }\n}\n\nconst BuiltinErrors: Record<string, { signature: string, inputs: Array<string>, name: string, reason?: boolean }> = {\n    \"0x08c379a0\": { signature: \"Error(string)\", name: \"Error\", inputs: [ \"string\" ], reason: true },\n    \"0x4e487b71\": { signature: \"Panic(uint256)\", name: \"Panic\", inputs: [ \"uint256\" ] }\n}\n\nfunction wrapAccessError(property: string, error: Error): Error {\n    const wrap = new Error(`deferred error during ABI decoding triggered accessing ${ property }`);\n    (<any>wrap).error = error;\n    return wrap;\n}\n\n/*\nfunction checkNames(fragment: Fragment, type: \"input\" | \"output\", params: Array<ParamType>): void {\n    params.reduce((accum, param) => {\n        if (param.name) {\n            if (accum[param.name]) {\n                logger.throwArgumentError(`duplicate ${ type } parameter ${ JSON.stringify(param.name) } in ${ fragment.format(\"full\") }`, \"fragment\", fragment);\n            }\n            accum[param.name] = true;\n        }\n        return accum;\n    }, <{ [ name: string ]: boolean }>{ });\n}\n*/\nexport class Interface {\n    readonly fragments: ReadonlyArray<Fragment>;\n\n    readonly errors: { [ name: string ]: ErrorFragment };\n    readonly events: { [ name: string ]: EventFragment };\n    readonly functions: { [ name: string ]: FunctionFragment };\n    readonly structs: { [ name: string ]: any };\n\n    readonly deploy: ConstructorFragment;\n\n    readonly _abiCoder: AbiCoder;\n\n    readonly _isInterface: boolean;\n\n    constructor(fragments: string | ReadonlyArray<Fragment | JsonFragment | string>) {\n        let abi: ReadonlyArray<Fragment | JsonFragment | string> = [ ];\n        if (typeof(fragments) === \"string\") {\n            abi = JSON.parse(fragments);\n        } else {\n            abi = fragments;\n        }\n\n        defineReadOnly(this, \"fragments\", abi.map((fragment) => {\n            return Fragment.from(fragment);\n        }).filter((fragment) => (fragment != null)));\n\n        defineReadOnly(this, \"_abiCoder\", getStatic<() => AbiCoder>(new.target, \"getAbiCoder\")());\n\n        defineReadOnly(this, \"functions\", { });\n        defineReadOnly(this, \"errors\", { });\n        defineReadOnly(this, \"events\", { });\n        defineReadOnly(this, \"structs\", { });\n\n        // Add all fragments by their signature\n        this.fragments.forEach((fragment) => {\n            let bucket: { [ name: string ]: Fragment } = null;\n            switch (fragment.type) {\n                case \"constructor\":\n                    if (this.deploy) {\n                        logger.warn(\"duplicate definition - constructor\");\n                        return;\n                    }\n                    //checkNames(fragment, \"input\", fragment.inputs);\n                    defineReadOnly(this, \"deploy\", <ConstructorFragment>fragment);\n                    return;\n                case \"function\":\n                    //checkNames(fragment, \"input\", fragment.inputs);\n                    //checkNames(fragment, \"output\", (<FunctionFragment>fragment).outputs);\n                    bucket = this.functions;\n                    break;\n                case \"event\":\n                    //checkNames(fragment, \"input\", fragment.inputs);\n                    bucket = this.events;\n                    break;\n                case \"error\":\n                    bucket = this.errors;\n                    break;\n                default:\n                    return;\n            }\n\n            let signature = fragment.format();\n            if (bucket[signature]) {\n                logger.warn(\"duplicate definition - \" + signature);\n                return;\n            }\n\n            bucket[signature] = fragment;\n        });\n\n        // If we do not have a constructor add a default\n        if (!this.deploy) {\n            defineReadOnly(this, \"deploy\", ConstructorFragment.from({\n                payable: false,\n                type: \"constructor\"\n            }));\n        }\n\n        defineReadOnly(this, \"_isInterface\", true);\n    }\n\n    format(format?: string): string | Array<string> {\n        if (!format) { format = FormatTypes.full; }\n        if (format === FormatTypes.sighash) {\n            logger.throwArgumentError(\"interface does not support formatting sighash\", \"format\", format);\n        }\n\n        const abi = this.fragments.map((fragment) => fragment.format(format));\n\n        // We need to re-bundle the JSON fragments a bit\n        if (format === FormatTypes.json) {\n             return JSON.stringify(abi.map((j) => JSON.parse(j)));\n        }\n\n        return abi;\n    }\n\n    // Sub-classes can override these to handle other blockchains\n    static getAbiCoder(): AbiCoder {\n        return defaultAbiCoder;\n    }\n\n    static getAddress(address: string): string {\n        return getAddress(address);\n    }\n\n    static getSighash(fragment: ErrorFragment | FunctionFragment): string {\n        return hexDataSlice(id(fragment.format()), 0, 4);\n    }\n\n    static getEventTopic(eventFragment: EventFragment): string {\n        return id(eventFragment.format());\n    }\n\n    // Find a function definition by any means necessary (unless it is ambiguous)\n    getFunction(nameOrSignatureOrSighash: string): FunctionFragment {\n        if (isHexString(nameOrSignatureOrSighash)) {\n            for (const name in this.functions) {\n                if (nameOrSignatureOrSighash === this.getSighash(name)) {\n                    return this.functions[name];\n                }\n            }\n            logger.throwArgumentError(\"no matching function\", \"sighash\", nameOrSignatureOrSighash);\n        }\n\n        // It is a bare name, look up the function (will return null if ambiguous)\n        if (nameOrSignatureOrSighash.indexOf(\"(\") === -1) {\n            const name = nameOrSignatureOrSighash.trim();\n            const matching = Object.keys(this.functions).filter((f) => (f.split(\"(\"/* fix:) */)[0] === name));\n            if (matching.length === 0) {\n                logger.throwArgumentError(\"no matching function\", \"name\", name);\n            } else if (matching.length > 1) {\n                logger.throwArgumentError(\"multiple matching functions\", \"name\", name);\n            }\n\n            return this.functions[matching[0]];\n        }\n\n        // Normalize the signature and lookup the function\n        const result = this.functions[FunctionFragment.fromString(nameOrSignatureOrSighash).format()];\n        if (!result) {\n            logger.throwArgumentError(\"no matching function\", \"signature\", nameOrSignatureOrSighash);\n        }\n        return result;\n    }\n\n    // Find an event definition by any means necessary (unless it is ambiguous)\n    getEvent(nameOrSignatureOrTopic: string): EventFragment {\n        if (isHexString(nameOrSignatureOrTopic)) {\n            const topichash = nameOrSignatureOrTopic.toLowerCase();\n            for (const name in this.events) {\n                if (topichash === this.getEventTopic(name)) {\n                    return this.events[name];\n                }\n            }\n            logger.throwArgumentError(\"no matching event\", \"topichash\", topichash);\n        }\n\n        // It is a bare name, look up the function (will return null if ambiguous)\n        if (nameOrSignatureOrTopic.indexOf(\"(\") === -1) {\n            const name = nameOrSignatureOrTopic.trim();\n            const matching = Object.keys(this.events).filter((f) => (f.split(\"(\"/* fix:) */)[0] === name));\n            if (matching.length === 0) {\n                logger.throwArgumentError(\"no matching event\", \"name\", name);\n            } else if (matching.length > 1) {\n                logger.throwArgumentError(\"multiple matching events\", \"name\", name);\n            }\n\n            return this.events[matching[0]];\n        }\n\n        // Normalize the signature and lookup the function\n        const result = this.events[EventFragment.fromString(nameOrSignatureOrTopic).format()];\n        if (!result) {\n            logger.throwArgumentError(\"no matching event\", \"signature\", nameOrSignatureOrTopic);\n        }\n        return result;\n    }\n\n    // Find a function definition by any means necessary (unless it is ambiguous)\n    getError(nameOrSignatureOrSighash: string): ErrorFragment {\n        if (isHexString(nameOrSignatureOrSighash)) {\n            const getSighash = getStatic<(f: ErrorFragment | FunctionFragment) => string>(this.constructor, \"getSighash\");\n            for (const name in this.errors) {\n                const error = this.errors[name];\n                if (nameOrSignatureOrSighash === getSighash(error)) {\n                    return this.errors[name];\n                }\n            }\n            logger.throwArgumentError(\"no matching error\", \"sighash\", nameOrSignatureOrSighash);\n        }\n\n        // It is a bare name, look up the function (will return null if ambiguous)\n        if (nameOrSignatureOrSighash.indexOf(\"(\") === -1) {\n            const name = nameOrSignatureOrSighash.trim();\n            const matching = Object.keys(this.errors).filter((f) => (f.split(\"(\"/* fix:) */)[0] === name));\n            if (matching.length === 0) {\n                logger.throwArgumentError(\"no matching error\", \"name\", name);\n            } else if (matching.length > 1) {\n                logger.throwArgumentError(\"multiple matching errors\", \"name\", name);\n            }\n\n            return this.errors[matching[0]];\n        }\n\n        // Normalize the signature and lookup the function\n        const result = this.errors[FunctionFragment.fromString(nameOrSignatureOrSighash).format()];\n        if (!result) {\n            logger.throwArgumentError(\"no matching error\", \"signature\", nameOrSignatureOrSighash);\n        }\n        return result;\n    }\n\n    // Get the sighash (the bytes4 selector) used by Solidity to identify a function\n    getSighash(fragment: ErrorFragment | FunctionFragment | string): string {\n        if (typeof(fragment) === \"string\") {\n            try {\n                fragment = this.getFunction(fragment);\n            } catch (error) {\n                try {\n                    fragment = this.getError(<string>fragment);\n                } catch (_) {\n                    throw error;\n                }\n            }\n        }\n\n        return getStatic<(f: ErrorFragment | FunctionFragment) => string>(this.constructor, \"getSighash\")(fragment);\n    }\n\n    // Get the topic (the bytes32 hash) used by Solidity to identify an event\n    getEventTopic(eventFragment: EventFragment | string): string {\n        if (typeof(eventFragment) === \"string\") {\n            eventFragment = this.getEvent(eventFragment);\n        }\n\n        return getStatic<(e: EventFragment) => string>(this.constructor, \"getEventTopic\")(eventFragment);\n    }\n\n\n    _decodeParams(params: ReadonlyArray<ParamType>, data: BytesLike): Result {\n        return this._abiCoder.decode(params, data)\n    }\n\n    _encodeParams(params: ReadonlyArray<ParamType>, values: ReadonlyArray<any>): string {\n        return this._abiCoder.encode(params, values)\n    }\n\n    encodeDeploy(values?: ReadonlyArray<any>): string {\n        return this._encodeParams(this.deploy.inputs, values || [ ]);\n    }\n\n    decodeErrorResult(fragment: ErrorFragment | string, data: BytesLike): Result {\n        if (typeof(fragment) === \"string\") {\n            fragment = this.getError(fragment);\n        }\n\n        const bytes = arrayify(data);\n\n        if (hexlify(bytes.slice(0, 4)) !== this.getSighash(fragment)) {\n            logger.throwArgumentError(`data signature does not match error ${ fragment.name }.`, \"data\", hexlify(bytes));\n        }\n\n        return this._decodeParams(fragment.inputs, bytes.slice(4));\n    }\n\n    encodeErrorResult(fragment: ErrorFragment | string, values?: ReadonlyArray<any>): string {\n        if (typeof(fragment) === \"string\") {\n            fragment = this.getError(fragment);\n        }\n\n        return hexlify(concat([\n            this.getSighash(fragment),\n            this._encodeParams(fragment.inputs, values || [ ])\n        ]));\n    }\n\n    // Decode the data for a function call (e.g. tx.data)\n    decodeFunctionData(functionFragment: FunctionFragment | string, data: BytesLike): Result {\n        if (typeof(functionFragment) === \"string\") {\n            functionFragment = this.getFunction(functionFragment);\n        }\n\n        const bytes = arrayify(data);\n\n        if (hexlify(bytes.slice(0, 4)) !== this.getSighash(functionFragment)) {\n            logger.throwArgumentError(`data signature does not match function ${ functionFragment.name }.`, \"data\", hexlify(bytes));\n        }\n\n        return this._decodeParams(functionFragment.inputs, bytes.slice(4));\n    }\n\n    // Encode the data for a function call (e.g. tx.data)\n    encodeFunctionData(functionFragment: FunctionFragment | string, values?: ReadonlyArray<any>): string {\n        if (typeof(functionFragment) === \"string\") {\n            functionFragment = this.getFunction(functionFragment);\n        }\n\n        return hexlify(concat([\n            this.getSighash(functionFragment),\n            this._encodeParams(functionFragment.inputs, values || [ ])\n        ]));\n    }\n\n    // Decode the result from a function call (e.g. from eth_call)\n    decodeFunctionResult(functionFragment: FunctionFragment | string, data: BytesLike): Result {\n        if (typeof(functionFragment) === \"string\") {\n            functionFragment = this.getFunction(functionFragment);\n        }\n\n        let bytes = arrayify(data);\n\n        let reason: string = null;\n        let message = \"\";\n        let errorArgs: Result = null;\n        let errorName: string = null;\n        let errorSignature: string = null;\n        switch (bytes.length % this._abiCoder._getWordSize()) {\n            case 0:\n                try {\n                    return this._abiCoder.decode(functionFragment.outputs, bytes);\n                } catch (error) { }\n                break;\n\n            case 4: {\n                const selector = hexlify(bytes.slice(0, 4));\n                const builtin = BuiltinErrors[selector];\n                if (builtin) {\n                    errorArgs = this._abiCoder.decode(builtin.inputs, bytes.slice(4));\n                    errorName = builtin.name;\n                    errorSignature = builtin.signature;\n                    if (builtin.reason) { reason = errorArgs[0]; }\n                    if (errorName === \"Error\") {\n                        message = `; VM Exception while processing transaction: reverted with reason string ${ JSON.stringify(errorArgs[0]) }`;\n                    } else if (errorName === \"Panic\") {\n                        message = `; VM Exception while processing transaction: reverted with panic code ${ errorArgs[0] }`;\n                    }\n                } else {\n                    try {\n                        const error = this.getError(selector);\n                        errorArgs = this._abiCoder.decode(error.inputs, bytes.slice(4));\n                        errorName = error.name;\n                        errorSignature = error.format();\n                    } catch (error) { }\n                }\n                break;\n            }\n        }\n\n        return logger.throwError(\"call revert exception\" + message, Logger.errors.CALL_EXCEPTION, {\n            method: functionFragment.format(),\n            data: hexlify(data), errorArgs, errorName, errorSignature, reason\n        });\n    }\n\n    // Encode the result for a function call (e.g. for eth_call)\n    encodeFunctionResult(functionFragment: FunctionFragment | string, values?: ReadonlyArray<any>): string {\n        if (typeof(functionFragment) === \"string\") {\n            functionFragment = this.getFunction(functionFragment);\n        }\n\n        return hexlify(this._abiCoder.encode(functionFragment.outputs, values || [ ]));\n    }\n\n    // Create the filter for the event with search criteria (e.g. for eth_filterLog)\n    encodeFilterTopics(eventFragment: EventFragment | string, values: ReadonlyArray<any>): Array<string | Array<string>> {\n        if (typeof(eventFragment) === \"string\") {\n            eventFragment = this.getEvent(eventFragment);\n        }\n\n        if (values.length > eventFragment.inputs.length) {\n            logger.throwError(\"too many arguments for \" + eventFragment.format(), Logger.errors.UNEXPECTED_ARGUMENT, {\n                argument: \"values\",\n                value: values\n            })\n        }\n\n        let topics: Array<string | Array<string>> = [];\n        if (!eventFragment.anonymous) { topics.push(this.getEventTopic(eventFragment)); }\n\n        const encodeTopic = (param: ParamType, value: any): string => {\n            if (param.type === \"string\") {\n                 return id(value);\n            } else if (param.type === \"bytes\") {\n                 return keccak256(hexlify(value));\n            }\n\n            if (param.type === \"bool\" && typeof(value) === \"boolean\") {\n                value = (value ? \"0x01\": \"0x00\");\n            }\n\n            if (param.type.match(/^u?int/)) {\n                value = BigNumber.from(value).toHexString();\n            }\n\n            // Check addresses are valid\n            if (param.type === \"address\") { this._abiCoder.encode( [ \"address\" ], [ value ]); }\n            return hexZeroPad(hexlify(value), 32);\n        };\n\n        values.forEach((value, index) => {\n\n            let param = (<EventFragment>eventFragment).inputs[index];\n\n            if (!param.indexed) {\n                if (value != null) {\n                    logger.throwArgumentError(\"cannot filter non-indexed parameters; must be null\", (\"contract.\" + param.name), value);\n                }\n                return;\n            }\n\n            if (value == null) {\n                topics.push(null);\n            } else if (param.baseType === \"array\" || param.baseType === \"tuple\") {\n                logger.throwArgumentError(\"filtering with tuples or arrays not supported\", (\"contract.\" + param.name), value);\n            } else if (Array.isArray(value)) {\n                topics.push(value.map((value) => encodeTopic(param, value)));\n            } else {\n                topics.push(encodeTopic(param, value));\n            }\n        });\n\n        // Trim off trailing nulls\n        while (topics.length && topics[topics.length - 1] === null) {\n            topics.pop();\n        }\n\n        return topics;\n    }\n\n    encodeEventLog(eventFragment: EventFragment | string, values: ReadonlyArray<any>): { data: string, topics: Array<string> } {\n        if (typeof(eventFragment) === \"string\") {\n            eventFragment = this.getEvent(eventFragment);\n        }\n\n        const topics: Array<string> = [ ];\n\n        const dataTypes: Array<ParamType> = [ ];\n        const dataValues: Array<string> = [ ];\n\n        if (!eventFragment.anonymous) {\n            topics.push(this.getEventTopic(eventFragment));\n        }\n\n        if (values.length !== eventFragment.inputs.length) {\n            logger.throwArgumentError(\"event arguments/values mismatch\", \"values\", values);\n        }\n\n        eventFragment.inputs.forEach((param, index) => {\n            const value = values[index];\n            if (param.indexed) {\n                if (param.type === \"string\") {\n                    topics.push(id(value))\n                } else if (param.type === \"bytes\") {\n                    topics.push(keccak256(value))\n                } else if (param.baseType === \"tuple\" || param.baseType === \"array\") {\n                    // @TODO\n                    throw new Error(\"not implemented\");\n                } else {\n                    topics.push(this._abiCoder.encode([ param.type] , [ value ]));\n                }\n            } else {\n                dataTypes.push(param);\n                dataValues.push(value);\n            }\n        });\n\n        return {\n            data: this._abiCoder.encode(dataTypes , dataValues),\n            topics: topics\n        };\n    }\n\n    // Decode a filter for the event and the search criteria\n    decodeEventLog(eventFragment: EventFragment | string, data: BytesLike, topics?: ReadonlyArray<string>): Result {\n        if (typeof(eventFragment) === \"string\") {\n            eventFragment = this.getEvent(eventFragment);\n        }\n\n        if (topics != null && !eventFragment.anonymous) {\n            let topicHash = this.getEventTopic(eventFragment);\n            if (!isHexString(topics[0], 32) || topics[0].toLowerCase() !== topicHash) {\n                logger.throwError(\"fragment/topic mismatch\", Logger.errors.INVALID_ARGUMENT, { argument: \"topics[0]\", expected: topicHash, value: topics[0] });\n            }\n            topics = topics.slice(1);\n        }\n\n        let indexed: Array<ParamType> = [];\n        let nonIndexed: Array<ParamType> = [];\n        let dynamic: Array<boolean> = [];\n\n        eventFragment.inputs.forEach((param, index) => {\n            if (param.indexed) {\n                if (param.type === \"string\" || param.type === \"bytes\" || param.baseType === \"tuple\" || param.baseType === \"array\") {\n                    indexed.push(ParamType.fromObject({ type: \"bytes32\", name: param.name }));\n                    dynamic.push(true);\n                } else {\n                    indexed.push(param);\n                    dynamic.push(false);\n                }\n            } else {\n                nonIndexed.push(param);\n                dynamic.push(false);\n            }\n        });\n\n        let resultIndexed = (topics != null) ? this._abiCoder.decode(indexed, concat(topics)): null;\n        let resultNonIndexed = this._abiCoder.decode(nonIndexed, data, true);\n\n        let result: (Array<any> & { [ key: string ]: any }) = [ ];\n        let nonIndexedIndex = 0, indexedIndex = 0;\n        eventFragment.inputs.forEach((param, index) => {\n            if (param.indexed) {\n                if (resultIndexed == null) {\n                    result[index] = new Indexed({ _isIndexed: true, hash: null });\n\n                } else if (dynamic[index]) {\n                    result[index] = new Indexed({ _isIndexed: true, hash: resultIndexed[indexedIndex++] });\n\n                } else {\n                    try {\n                        result[index] = resultIndexed[indexedIndex++];\n                    } catch (error) {\n                        result[index] = error;\n                    }\n                }\n            } else {\n                try {\n                    result[index] = resultNonIndexed[nonIndexedIndex++];\n                } catch (error) {\n                    result[index] = error;\n                }\n            }\n\n            // Add the keyword argument if named and safe\n            if (param.name && result[param.name] == null) {\n                const value = result[index];\n\n                // Make error named values throw on access\n                if (value instanceof Error) {\n                    Object.defineProperty(result, param.name, {\n                        enumerable: true,\n                        get: () => { throw wrapAccessError(`property ${ JSON.stringify(param.name) }`, value); }\n                    });\n                } else {\n                    result[param.name] = value;\n                }\n            }\n        });\n\n        // Make all error indexed values throw on access\n        for (let i = 0; i < result.length; i++) {\n            const value = result[i];\n            if (value instanceof Error) {\n                Object.defineProperty(result, i, {\n                    enumerable: true,\n                    get: () => { throw wrapAccessError(`index ${ i }`, value); }\n                });\n            }\n        }\n\n        return Object.freeze(result);\n    }\n\n    // Given a transaction, find the matching function fragment (if any) and\n    // determine all its properties and call parameters\n    parseTransaction(tx: { data: string, value?: BigNumberish }): TransactionDescription {\n        let fragment = this.getFunction(tx.data.substring(0, 10).toLowerCase())\n\n        if (!fragment) { return null; }\n\n        return new TransactionDescription({\n            args: this._abiCoder.decode(fragment.inputs, \"0x\" + tx.data.substring(10)),\n            functionFragment: fragment,\n            name: fragment.name,\n            signature: fragment.format(),\n            sighash: this.getSighash(fragment),\n            value: BigNumber.from(tx.value || \"0\"),\n        });\n    }\n\n    // @TODO\n    //parseCallResult(data: BytesLike): ??\n\n    // Given an event log, find the matching event fragment (if any) and\n    // determine all its properties and values\n    parseLog(log: { topics: Array<string>, data: string}): LogDescription {\n        let fragment = this.getEvent(log.topics[0]);\n\n        if (!fragment || fragment.anonymous) { return null; }\n\n        // @TODO: If anonymous, and the only method, and the input count matches, should we parse?\n        //        Probably not, because just because it is the only event in the ABI does\n        //        not mean we have the full ABI; maybe just a fragment?\n\n\n       return new LogDescription({\n            eventFragment: fragment,\n            name: fragment.name,\n            signature: fragment.format(),\n            topic: this.getEventTopic(fragment),\n            args: this.decodeEventLog(fragment, log.data, log.topics)\n        });\n    }\n\n    parseError(data: BytesLike): ErrorDescription {\n        const hexData = hexlify(data);\n        let fragment = this.getError(hexData.substring(0, 10).toLowerCase())\n\n        if (!fragment) { return null; }\n\n        return new ErrorDescription({\n            args: this._abiCoder.decode(fragment.inputs, \"0x\" + hexData.substring(10)),\n            errorFragment: fragment,\n            name: fragment.name,\n            signature: fragment.format(),\n            sighash: this.getSighash(fragment),\n        });\n    }\n\n\n    /*\n    static from(value: Array<Fragment | string | JsonAbi> | string | Interface) {\n        if (Interface.isInterface(value)) {\n            return value;\n        }\n        if (typeof(value) === \"string\") {\n            return new Interface(JSON.parse(value));\n        }\n        return new Interface(value);\n    }\n    */\n\n    static isInterface(value: any): value is Interface {\n        return !!(value && value._isInterface);\n    }\n}\n\n","\"use strict\";\n\nimport { ConstructorFragment, ErrorFragment, EventFragment, FormatTypes, Fragment, FunctionFragment, JsonFragment, JsonFragmentType, ParamType } from \"./fragments\";\nimport { AbiCoder, CoerceFunc, defaultAbiCoder } from \"./abi-coder\";\nimport { checkResultErrors, Indexed, Interface, LogDescription, Result, TransactionDescription } from \"./interface\";\n\nexport {\n    ConstructorFragment,\n    ErrorFragment,\n    EventFragment,\n    Fragment,\n    FunctionFragment,\n    ParamType,\n    FormatTypes,\n\n    AbiCoder,\n    defaultAbiCoder,\n\n    Interface,\n    Indexed,\n\n    /////////////////////////\n    // Types\n\n    CoerceFunc,\n    JsonFragment,\n    JsonFragmentType,\n\n    Result,\n    checkResultErrors,\n\n    LogDescription,\n    TransactionDescription\n};\n","export const version = \"abstract-provider/5.7.0\";\n","\"use strict\";\n\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { BytesLike, isHexString } from \"@ethersproject/bytes\";\nimport { Network } from \"@ethersproject/networks\";\nimport { Deferrable, Description, defineReadOnly, resolveProperties } from \"@ethersproject/properties\";\nimport { AccessListish, Transaction } from \"@ethersproject/transactions\";\nimport { OnceBlockable } from \"@ethersproject/web\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n///////////////////////////////\n// Exported Types\n\n\nexport type TransactionRequest = {\n    to?: string,\n    from?: string,\n    nonce?: BigNumberish,\n\n    gasLimit?: BigNumberish,\n    gasPrice?: BigNumberish,\n\n    data?: BytesLike,\n    value?: BigNumberish,\n    chainId?: number\n\n    type?: number;\n    accessList?: AccessListish;\n\n    maxPriorityFeePerGas?: BigNumberish;\n    maxFeePerGas?: BigNumberish;\n\n    customData?: Record<string, any>;\n    ccipReadEnabled?: boolean;\n}\n\nexport interface TransactionResponse extends Transaction {\n    hash: string;\n\n    // Only if a transaction has been mined\n    blockNumber?: number,\n    blockHash?: string,\n    timestamp?: number,\n\n    confirmations: number,\n\n    // Not optional (as it is in Transaction)\n    from: string;\n\n    // The raw transaction\n    raw?: string,\n\n    // This function waits until the transaction has been mined\n    wait: (confirmations?: number) => Promise<TransactionReceipt>\n};\n\nexport type BlockTag = string | number;\n\nexport interface _Block {\n    hash: string;\n    parentHash: string;\n    number: number;\n\n    timestamp: number;\n    nonce: string;\n    difficulty: number;\n    _difficulty: BigNumber;\n\n    gasLimit: BigNumber;\n    gasUsed: BigNumber;\n\n    miner: string;\n    extraData: string;\n\n    baseFeePerGas?: null | BigNumber;\n}\n\nexport interface Block extends _Block {\n    transactions: Array<string>;\n}\n\nexport interface BlockWithTransactions extends _Block {\n    transactions: Array<TransactionResponse>;\n}\n\n\nexport interface Log {\n    blockNumber: number;\n    blockHash: string;\n    transactionIndex: number;\n\n    removed: boolean;\n\n    address: string;\n    data: string;\n\n    topics: Array<string>;\n\n    transactionHash: string;\n    logIndex: number;\n}\n\nexport interface TransactionReceipt {\n    to: string;\n    from: string;\n    contractAddress: string,\n    transactionIndex: number,\n    root?: string,\n    gasUsed: BigNumber,\n    logsBloom: string,\n    blockHash: string,\n    transactionHash: string,\n    logs: Array<Log>,\n    blockNumber: number,\n    confirmations: number,\n    cumulativeGasUsed: BigNumber,\n    effectiveGasPrice: BigNumber,\n    byzantium: boolean,\n    type: number;\n    status?: number\n};\n\nexport interface FeeData {\n    lastBaseFeePerGas: null | BigNumber;\n    maxFeePerGas: null | BigNumber;\n    maxPriorityFeePerGas: null | BigNumber;\n    gasPrice: null | BigNumber;\n}\n\nexport interface EventFilter {\n    address?: string;\n    topics?: Array<string | Array<string> | null>;\n}\n\nexport interface Filter extends EventFilter {\n    fromBlock?: BlockTag,\n    toBlock?: BlockTag,\n}\n\nexport interface FilterByBlockHash extends EventFilter {\n    blockHash?: string;\n}\n\n//export type CallTransactionable = {\n//    call(transaction: TransactionRequest): Promise<TransactionResponse>;\n//};\n\nexport abstract class ForkEvent extends Description {\n    readonly expiry: number;\n\n    readonly _isForkEvent?: boolean;\n\n    static isForkEvent(value: any): value is ForkEvent {\n        return !!(value && value._isForkEvent);\n    }\n}\n\nexport class BlockForkEvent extends ForkEvent {\n    readonly blockHash: string;\n\n    readonly _isBlockForkEvent?: boolean;\n\n    constructor(blockHash: string, expiry?: number) {\n        if (!isHexString(blockHash, 32)) {\n            logger.throwArgumentError(\"invalid blockHash\", \"blockHash\", blockHash);\n        }\n\n        super({\n            _isForkEvent: true,\n            _isBlockForkEvent: true,\n            expiry: (expiry || 0),\n            blockHash: blockHash\n        });\n    }\n}\n\nexport class TransactionForkEvent extends ForkEvent {\n    readonly hash: string;\n\n    readonly _isTransactionOrderForkEvent?: boolean;\n\n    constructor(hash: string, expiry?: number) {\n        if (!isHexString(hash, 32)) {\n            logger.throwArgumentError(\"invalid transaction hash\", \"hash\", hash);\n        }\n\n        super({\n            _isForkEvent: true,\n            _isTransactionForkEvent: true,\n            expiry: (expiry || 0),\n            hash: hash\n        });\n    }\n}\n\nexport class TransactionOrderForkEvent extends ForkEvent {\n    readonly beforeHash: string;\n    readonly afterHash: string;\n\n    constructor(beforeHash: string, afterHash: string, expiry?: number) {\n        if (!isHexString(beforeHash, 32)) {\n            logger.throwArgumentError(\"invalid transaction hash\", \"beforeHash\", beforeHash);\n        }\n        if (!isHexString(afterHash, 32)) {\n            logger.throwArgumentError(\"invalid transaction hash\", \"afterHash\", afterHash);\n        }\n\n        super({\n            _isForkEvent: true,\n            _isTransactionOrderForkEvent: true,\n            expiry: (expiry || 0),\n            beforeHash: beforeHash,\n            afterHash: afterHash\n        });\n    }\n}\n\nexport type EventType = string | Array<string | Array<string>> | EventFilter | ForkEvent;\n\nexport type Listener = (...args: Array<any>) => void;\n\n///////////////////////////////\n// Exported Abstracts\nexport abstract class Provider implements OnceBlockable {\n\n    // Network\n    abstract getNetwork(): Promise<Network>;\n\n    // Latest State\n    abstract getBlockNumber(): Promise<number>;\n    abstract getGasPrice(): Promise<BigNumber>;\n    async getFeeData(): Promise<FeeData> {\n        const { block, gasPrice } = await resolveProperties({\n            block: this.getBlock(\"latest\"),\n            gasPrice: this.getGasPrice().catch((error) => {\n                // @TODO: Why is this now failing on Calaveras?\n                //console.log(error);\n                return null;\n            })\n        });\n\n        let lastBaseFeePerGas = null, maxFeePerGas = null, maxPriorityFeePerGas = null;\n\n        if (block && block.baseFeePerGas) {\n            // We may want to compute this more accurately in the future,\n            // using the formula \"check if the base fee is correct\".\n            // See: https://eips.ethereum.org/EIPS/eip-1559\n            lastBaseFeePerGas = block.baseFeePerGas;\n            maxPriorityFeePerGas = BigNumber.from(\"1500000000\");\n            maxFeePerGas = block.baseFeePerGas.mul(2).add(maxPriorityFeePerGas);\n        }\n\n        return { lastBaseFeePerGas, maxFeePerGas, maxPriorityFeePerGas, gasPrice };\n    }\n\n    // Account\n    abstract getBalance(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<BigNumber>;\n    abstract getTransactionCount(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<number>;\n    abstract getCode(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string> ;\n    abstract getStorageAt(addressOrName: string | Promise<string>, position: BigNumberish | Promise<BigNumberish>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string>;\n\n    // Execution\n    abstract sendTransaction(signedTransaction: string | Promise<string>): Promise<TransactionResponse>;\n    abstract call(transaction: Deferrable<TransactionRequest>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string>;\n    abstract estimateGas(transaction: Deferrable<TransactionRequest>): Promise<BigNumber>;\n\n    // Queries\n    abstract getBlock(blockHashOrBlockTag: BlockTag | string | Promise<BlockTag | string>): Promise<Block>;\n    abstract getBlockWithTransactions(blockHashOrBlockTag: BlockTag | string | Promise<BlockTag | string>): Promise<BlockWithTransactions>;\n    abstract getTransaction(transactionHash: string): Promise<TransactionResponse>;\n    abstract getTransactionReceipt(transactionHash: string): Promise<TransactionReceipt>;\n\n    // Bloom-filter Queries\n    abstract getLogs(filter: Filter): Promise<Array<Log>>;\n\n    // ENS\n    abstract resolveName(name: string | Promise<string>): Promise<null | string>;\n    abstract lookupAddress(address: string | Promise<string>): Promise<null | string>;\n\n    // Event Emitter (ish)\n    abstract on(eventName: EventType, listener: Listener): Provider;\n    abstract once(eventName: EventType, listener: Listener): Provider;\n    abstract emit(eventName: EventType, ...args: Array<any>): boolean\n    abstract listenerCount(eventName?: EventType): number;\n    abstract listeners(eventName?: EventType): Array<Listener>;\n    abstract off(eventName: EventType, listener?: Listener): Provider;\n    abstract removeAllListeners(eventName?: EventType): Provider;\n\n    // Alias for \"on\"\n    addListener(eventName: EventType, listener: Listener): Provider {\n        return this.on(eventName, listener);\n    }\n\n    // Alias for \"off\"\n    removeListener(eventName: EventType, listener: Listener): Provider {\n        return this.off(eventName, listener);\n    }\n\n    // @TODO: This *could* be implemented here, but would pull in events...\n    abstract waitForTransaction(transactionHash: string, confirmations?: number, timeout?: number): Promise<TransactionReceipt>;\n\n    readonly _isProvider: boolean;\n\n    constructor() {\n        logger.checkAbstract(new.target, Provider);\n        defineReadOnly(this, \"_isProvider\", true);\n    }\n\n    static isProvider(value: any): value is Provider {\n        return !!(value && value._isProvider);\n    }\n\n/*\n    static getResolver(network: Network, callable: CallTransactionable, namehash: string): string {\n        // No ENS...\n        if (!network.ensAddress) {\n            errors.throwError(\n                \"network does support ENS\",\n                errors.UNSUPPORTED_OPERATION,\n                { operation: \"ENS\", network: network.name }\n            );\n        }\n\n        // Not a namehash\n        if (!isHexString(namehash, 32)) {\n            errors.throwArgumentError(\"invalid name hash\", \"namehash\", namehash);\n        }\n\n        // keccak256(\"resolver(bytes32)\")\n        let data = \"0x0178b8bf\" + namehash.substring(2);\n        let transaction = { to: network.ensAddress, data: data };\n\n        return provider.call(transaction).then((data) => {\n            return provider.formatter.callAddress(data);\n        });\n    }\n\n    static resolveNamehash(network: Network, callable: CallTransactionable, namehash: string): string {\n        return this.getResolver(network, callable, namehash).then((resolverAddress) => {\n            if (!resolverAddress) { return null; }\n\n            // keccak256(\"addr(bytes32)\")\n            let data = \"0x3b3b57de\" + namehash(name).substring(2);\n            let transaction = { to: resolverAddress, data: data };\n            return callable.call(transaction).then((data) => {\n                return this.formatter.callAddress(data);\n            });\n\n        })\n    }\n*/\n}\n","export const version = \"abstract-signer/5.7.0\";\n","\"use strict\";\n\nimport { BlockTag, FeeData, Provider, TransactionRequest, TransactionResponse } from \"@ethersproject/abstract-provider\";\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { Bytes, BytesLike } from \"@ethersproject/bytes\";\nimport { Deferrable, defineReadOnly, resolveProperties, shallowCopy } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nconst allowedTransactionKeys: Array<string> = [\n    \"accessList\", \"ccipReadEnabled\", \"chainId\", \"customData\", \"data\", \"from\", \"gasLimit\", \"gasPrice\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"nonce\", \"to\", \"type\", \"value\"\n];\n\nconst forwardErrors = [\n    Logger.errors.INSUFFICIENT_FUNDS,\n    Logger.errors.NONCE_EXPIRED,\n    Logger.errors.REPLACEMENT_UNDERPRICED,\n];\n\n// EIP-712 Typed Data\n// See: https://eips.ethereum.org/EIPS/eip-712\n\nexport interface TypedDataDomain {\n    name?: string;\n    version?: string;\n    chainId?: BigNumberish;\n    verifyingContract?: string;\n    salt?: BytesLike;\n};\n\nexport interface TypedDataField {\n    name: string;\n    type: string;\n};\n\n// Sub-classes of Signer may optionally extend this interface to indicate\n// they have a private key available synchronously\nexport interface ExternallyOwnedAccount {\n    readonly address: string;\n    readonly privateKey: string;\n}\n\n// Sub-Class Notes:\n//  - A Signer MUST always make sure, that if present, the \"from\" field\n//    matches the Signer, before sending or signing a transaction\n//  - A Signer SHOULD always wrap private information (such as a private\n//    key or mnemonic) in a function, so that console.log does not leak\n//    the data\n\n// @TODO: This is a temporary measure to preserve backwards compatibility\n//        In v6, the method on TypedDataSigner will be added to Signer\nexport interface TypedDataSigner {\n    _signTypedData(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): Promise<string>;\n}\n\nexport abstract class Signer {\n    readonly provider?: Provider;\n\n    ///////////////////\n    // Sub-classes MUST implement these\n\n    // Returns the checksum address\n    abstract getAddress(): Promise<string>\n\n    // Returns the signed prefixed-message. This MUST treat:\n    // - Bytes as a binary message\n    // - string as a UTF8-message\n    // i.e. \"0x1234\" is a SIX (6) byte string, NOT 2 bytes of data\n    abstract signMessage(message: Bytes | string): Promise<string>;\n\n    // Signs a transaction and returns the fully serialized, signed transaction.\n    // The EXACT transaction MUST be signed, and NO additional properties to be added.\n    // - This MAY throw if signing transactions is not supports, but if\n    //   it does, sentTransaction MUST be overridden.\n    abstract signTransaction(transaction: Deferrable<TransactionRequest>): Promise<string>;\n\n    // Returns a new instance of the Signer, connected to provider.\n    // This MAY throw if changing providers is not supported.\n    abstract connect(provider: Provider): Signer;\n\n    readonly _isSigner: boolean;\n\n\n    ///////////////////\n    // Sub-classes MUST call super\n    constructor() {\n        logger.checkAbstract(new.target, Signer);\n        defineReadOnly(this, \"_isSigner\", true);\n    }\n\n\n    ///////////////////\n    // Sub-classes MAY override these\n\n    async getBalance(blockTag?: BlockTag): Promise<BigNumber> {\n        this._checkProvider(\"getBalance\");\n        return await this.provider.getBalance(this.getAddress(), blockTag);\n    }\n\n    async getTransactionCount(blockTag?: BlockTag): Promise<number> {\n        this._checkProvider(\"getTransactionCount\");\n        return await this.provider.getTransactionCount(this.getAddress(), blockTag);\n    }\n\n    // Populates \"from\" if unspecified, and estimates the gas for the transaction\n    async estimateGas(transaction: Deferrable<TransactionRequest>): Promise<BigNumber> {\n        this._checkProvider(\"estimateGas\");\n        const tx = await resolveProperties(this.checkTransaction(transaction));\n        return await this.provider.estimateGas(tx);\n    }\n\n    // Populates \"from\" if unspecified, and calls with the transaction\n    async call(transaction: Deferrable<TransactionRequest>, blockTag?: BlockTag): Promise<string> {\n        this._checkProvider(\"call\");\n        const tx = await resolveProperties(this.checkTransaction(transaction));\n        return await this.provider.call(tx, blockTag);\n    }\n\n    // Populates all fields in a transaction, signs it and sends it to the network\n    async sendTransaction(transaction: Deferrable<TransactionRequest>): Promise<TransactionResponse> {\n        this._checkProvider(\"sendTransaction\");\n        const tx = await this.populateTransaction(transaction);\n        const signedTx = await this.signTransaction(tx);\n        return await this.provider.sendTransaction(signedTx);\n    }\n\n    async getChainId(): Promise<number> {\n        this._checkProvider(\"getChainId\");\n        const network = await this.provider.getNetwork();\n        return network.chainId;\n    }\n\n    async getGasPrice(): Promise<BigNumber> {\n        this._checkProvider(\"getGasPrice\");\n        return await this.provider.getGasPrice();\n    }\n\n    async getFeeData(): Promise<FeeData> {\n        this._checkProvider(\"getFeeData\");\n        return await this.provider.getFeeData();\n    }\n\n\n    async resolveName(name: string): Promise<string> {\n        this._checkProvider(\"resolveName\");\n        return await this.provider.resolveName(name);\n    }\n\n\n\n    // Checks a transaction does not contain invalid keys and if\n    // no \"from\" is provided, populates it.\n    // - does NOT require a provider\n    // - adds \"from\" is not present\n    // - returns a COPY (safe to mutate the result)\n    // By default called from: (overriding these prevents it)\n    //   - call\n    //   - estimateGas\n    //   - populateTransaction (and therefor sendTransaction)\n    checkTransaction(transaction: Deferrable<TransactionRequest>): Deferrable<TransactionRequest> {\n        for (const key in transaction) {\n            if (allowedTransactionKeys.indexOf(key) === -1) {\n                logger.throwArgumentError(\"invalid transaction key: \" + key, \"transaction\", transaction);\n            }\n        }\n\n        const tx = shallowCopy(transaction);\n\n        if (tx.from == null) {\n            tx.from = this.getAddress();\n\n        } else {\n            // Make sure any provided address matches this signer\n            tx.from = Promise.all([\n                Promise.resolve(tx.from),\n                this.getAddress()\n            ]).then((result) => {\n                if (result[0].toLowerCase() !== result[1].toLowerCase()) {\n                    logger.throwArgumentError(\"from address mismatch\", \"transaction\", transaction);\n                }\n                return result[0];\n            });\n        }\n\n        return tx;\n    }\n\n    // Populates ALL keys for a transaction and checks that \"from\" matches\n    // this Signer. Should be used by sendTransaction but NOT by signTransaction.\n    // By default called from: (overriding these prevents it)\n    //   - sendTransaction\n    //\n    // Notes:\n    //  - We allow gasPrice for EIP-1559 as long as it matches maxFeePerGas\n    async populateTransaction(transaction: Deferrable<TransactionRequest>): Promise<TransactionRequest> {\n\n        const tx: Deferrable<TransactionRequest> = await resolveProperties(this.checkTransaction(transaction))\n\n        if (tx.to != null) {\n            tx.to = Promise.resolve(tx.to).then(async (to) => {\n                if (to == null) { return null; }\n                const address = await this.resolveName(to);\n                if (address == null) {\n                    logger.throwArgumentError(\"provided ENS name resolves to null\", \"tx.to\", to);\n                }\n                return address;\n            });\n\n            // Prevent this error from causing an UnhandledPromiseException\n            tx.to.catch((error) => {  });\n        }\n\n        // Do not allow mixing pre-eip-1559 and eip-1559 properties\n        const hasEip1559 = (tx.maxFeePerGas != null || tx.maxPriorityFeePerGas != null);\n        if (tx.gasPrice != null && (tx.type === 2 || hasEip1559)) {\n            logger.throwArgumentError(\"eip-1559 transaction do not support gasPrice\", \"transaction\", transaction);\n        } else if ((tx.type === 0 || tx.type === 1) && hasEip1559) {\n            logger.throwArgumentError(\"pre-eip-1559 transaction do not support maxFeePerGas/maxPriorityFeePerGas\", \"transaction\", transaction);\n        }\n\n        if ((tx.type === 2 || tx.type == null) && (tx.maxFeePerGas != null && tx.maxPriorityFeePerGas != null)) {\n            // Fully-formed EIP-1559 transaction (skip getFeeData)\n            tx.type = 2;\n\n        } else if (tx.type === 0 || tx.type === 1) {\n            // Explicit Legacy or EIP-2930 transaction\n\n            // Populate missing gasPrice\n            if (tx.gasPrice == null) { tx.gasPrice = this.getGasPrice(); }\n\n        } else {\n\n            // We need to get fee data to determine things\n            const feeData = await this.getFeeData();\n\n            if (tx.type == null) {\n                // We need to auto-detect the intended type of this transaction...\n\n                if (feeData.maxFeePerGas != null && feeData.maxPriorityFeePerGas != null) {\n                    // The network supports EIP-1559!\n\n                    // Upgrade transaction from null to eip-1559\n                    tx.type = 2;\n\n                    if (tx.gasPrice != null) {\n                        // Using legacy gasPrice property on an eip-1559 network,\n                        // so use gasPrice as both fee properties\n                        const gasPrice = tx.gasPrice;\n                        delete tx.gasPrice;\n                        tx.maxFeePerGas = gasPrice;\n                        tx.maxPriorityFeePerGas = gasPrice;\n\n                    } else {\n                        // Populate missing fee data\n                        if (tx.maxFeePerGas == null) { tx.maxFeePerGas = feeData.maxFeePerGas; }\n                        if (tx.maxPriorityFeePerGas == null) { tx.maxPriorityFeePerGas = feeData.maxPriorityFeePerGas; }\n                    }\n\n                } else if (feeData.gasPrice != null) {\n                    // Network doesn't support EIP-1559...\n\n                    // ...but they are trying to use EIP-1559 properties\n                    if (hasEip1559) {\n                        logger.throwError(\"network does not support EIP-1559\", Logger.errors.UNSUPPORTED_OPERATION, {\n                            operation: \"populateTransaction\"\n                        });\n                    }\n\n                    // Populate missing fee data\n                    if (tx.gasPrice == null) { tx.gasPrice = feeData.gasPrice; }\n\n                    // Explicitly set untyped transaction to legacy\n                    tx.type = 0;\n\n                } else {\n                    // getFeeData has failed us.\n                    logger.throwError(\"failed to get consistent fee data\", Logger.errors.UNSUPPORTED_OPERATION, {\n                        operation: \"signer.getFeeData\"\n                    });\n                }\n\n            } else if (tx.type === 2) {\n                // Explicitly using EIP-1559\n\n                // Populate missing fee data\n                if (tx.maxFeePerGas == null) { tx.maxFeePerGas = feeData.maxFeePerGas; }\n                if (tx.maxPriorityFeePerGas == null) { tx.maxPriorityFeePerGas = feeData.maxPriorityFeePerGas; }\n            }\n        }\n\n        if (tx.nonce == null) { tx.nonce = this.getTransactionCount(\"pending\"); }\n\n        if (tx.gasLimit == null) {\n            tx.gasLimit = this.estimateGas(tx).catch((error) => {\n                if (forwardErrors.indexOf(error.code) >= 0) {\n                    throw error;\n                }\n\n                return logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n                    error: error,\n                    tx: tx\n                });\n            });\n        }\n\n        if (tx.chainId == null) {\n            tx.chainId = this.getChainId();\n        } else {\n            tx.chainId = Promise.all([\n                Promise.resolve(tx.chainId),\n                this.getChainId()\n            ]).then((results) => {\n                if (results[1] !== 0 && results[0] !== results[1]) {\n                    logger.throwArgumentError(\"chainId address mismatch\", \"transaction\", transaction);\n                }\n                return results[0];\n            });\n        }\n\n        return await resolveProperties(tx);\n    }\n\n\n    ///////////////////\n    // Sub-classes SHOULD leave these alone\n\n    _checkProvider(operation?: string): void {\n        if (!this.provider) { logger.throwError(\"missing provider\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: (operation || \"_checkProvider\") });\n        }\n    }\n\n    static isSigner(value: any): value is Signer {\n        return !!(value && value._isSigner);\n    }\n}\n\nexport class VoidSigner extends Signer implements TypedDataSigner {\n    readonly address: string;\n\n    constructor(address: string, provider?: Provider) {\n        super();\n        defineReadOnly(this, \"address\", address);\n        defineReadOnly(this, \"provider\", provider || null);\n    }\n\n    getAddress(): Promise<string> {\n        return Promise.resolve(this.address);\n    }\n\n    _fail(message: string, operation: string): Promise<any> {\n        return Promise.resolve().then(() => {\n            logger.throwError(message, Logger.errors.UNSUPPORTED_OPERATION, { operation: operation });\n        });\n    }\n\n    signMessage(message: Bytes | string): Promise<string> {\n        return this._fail(\"VoidSigner cannot sign messages\", \"signMessage\");\n    }\n\n    signTransaction(transaction: Deferrable<TransactionRequest>): Promise<string> {\n        return this._fail(\"VoidSigner cannot sign transactions\", \"signTransaction\");\n    }\n\n    _signTypedData(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): Promise<string> {\n        return this._fail(\"VoidSigner cannot sign typed data\", \"signTypedData\");\n    }\n\n    connect(provider: Provider): VoidSigner {\n        return new VoidSigner(this.address, provider);\n    }\n}\n\n","module.exports = assert;\n\nfunction assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","try {\n  var util = require('util');\n  /* istanbul ignore next */\n  if (typeof util.inherits !== 'function') throw '';\n  module.exports = util.inherits;\n} catch (e) {\n  /* istanbul ignore next */\n  module.exports = require('./inherits_browser.js');\n}\n","'use strict';\n\nvar assert = require('minimalistic-assert');\nvar inherits = require('inherits');\n\nexports.inherits = inherits;\n\nfunction isSurrogatePair(msg, i) {\n  if ((msg.charCodeAt(i) & 0xFC00) !== 0xD800) {\n    return false;\n  }\n  if (i < 0 || i + 1 >= msg.length) {\n    return false;\n  }\n  return (msg.charCodeAt(i + 1) & 0xFC00) === 0xDC00;\n}\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg === 'string') {\n    if (!enc) {\n      // Inspired by stringToUtf8ByteArray() in closure-library by Google\n      // https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143\n      // Apache License 2.0\n      // https://github.com/google/closure-library/blob/master/LICENSE\n      var p = 0;\n      for (var i = 0; i < msg.length; i++) {\n        var c = msg.charCodeAt(i);\n        if (c < 128) {\n          res[p++] = c;\n        } else if (c < 2048) {\n          res[p++] = (c >> 6) | 192;\n          res[p++] = (c & 63) | 128;\n        } else if (isSurrogatePair(msg, i)) {\n          c = 0x10000 + ((c & 0x03FF) << 10) + (msg.charCodeAt(++i) & 0x03FF);\n          res[p++] = (c >> 18) | 240;\n          res[p++] = ((c >> 12) & 63) | 128;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        } else {\n          res[p++] = (c >> 12) | 224;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        }\n      }\n    } else if (enc === 'hex') {\n      msg = msg.replace(/[^a-z0-9]+/ig, '');\n      if (msg.length % 2 !== 0)\n        msg = '0' + msg;\n      for (i = 0; i < msg.length; i += 2)\n        res.push(parseInt(msg[i] + msg[i + 1], 16));\n    }\n  } else {\n    for (i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n  }\n  return res;\n}\nexports.toArray = toArray;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nexports.toHex = toHex;\n\nfunction htonl(w) {\n  var res = (w >>> 24) |\n            ((w >>> 8) & 0xff00) |\n            ((w << 8) & 0xff0000) |\n            ((w & 0xff) << 24);\n  return res >>> 0;\n}\nexports.htonl = htonl;\n\nfunction toHex32(msg, endian) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++) {\n    var w = msg[i];\n    if (endian === 'little')\n      w = htonl(w);\n    res += zero8(w.toString(16));\n  }\n  return res;\n}\nexports.toHex32 = toHex32;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nexports.zero2 = zero2;\n\nfunction zero8(word) {\n  if (word.length === 7)\n    return '0' + word;\n  else if (word.length === 6)\n    return '00' + word;\n  else if (word.length === 5)\n    return '000' + word;\n  else if (word.length === 4)\n    return '0000' + word;\n  else if (word.length === 3)\n    return '00000' + word;\n  else if (word.length === 2)\n    return '000000' + word;\n  else if (word.length === 1)\n    return '0000000' + word;\n  else\n    return word;\n}\nexports.zero8 = zero8;\n\nfunction join32(msg, start, end, endian) {\n  var len = end - start;\n  assert(len % 4 === 0);\n  var res = new Array(len / 4);\n  for (var i = 0, k = start; i < res.length; i++, k += 4) {\n    var w;\n    if (endian === 'big')\n      w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];\n    else\n      w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];\n    res[i] = w >>> 0;\n  }\n  return res;\n}\nexports.join32 = join32;\n\nfunction split32(msg, endian) {\n  var res = new Array(msg.length * 4);\n  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {\n    var m = msg[i];\n    if (endian === 'big') {\n      res[k] = m >>> 24;\n      res[k + 1] = (m >>> 16) & 0xff;\n      res[k + 2] = (m >>> 8) & 0xff;\n      res[k + 3] = m & 0xff;\n    } else {\n      res[k + 3] = m >>> 24;\n      res[k + 2] = (m >>> 16) & 0xff;\n      res[k + 1] = (m >>> 8) & 0xff;\n      res[k] = m & 0xff;\n    }\n  }\n  return res;\n}\nexports.split32 = split32;\n\nfunction rotr32(w, b) {\n  return (w >>> b) | (w << (32 - b));\n}\nexports.rotr32 = rotr32;\n\nfunction rotl32(w, b) {\n  return (w << b) | (w >>> (32 - b));\n}\nexports.rotl32 = rotl32;\n\nfunction sum32(a, b) {\n  return (a + b) >>> 0;\n}\nexports.sum32 = sum32;\n\nfunction sum32_3(a, b, c) {\n  return (a + b + c) >>> 0;\n}\nexports.sum32_3 = sum32_3;\n\nfunction sum32_4(a, b, c, d) {\n  return (a + b + c + d) >>> 0;\n}\nexports.sum32_4 = sum32_4;\n\nfunction sum32_5(a, b, c, d, e) {\n  return (a + b + c + d + e) >>> 0;\n}\nexports.sum32_5 = sum32_5;\n\nfunction sum64(buf, pos, ah, al) {\n  var bh = buf[pos];\n  var bl = buf[pos + 1];\n\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  buf[pos] = hi >>> 0;\n  buf[pos + 1] = lo;\n}\nexports.sum64 = sum64;\n\nfunction sum64_hi(ah, al, bh, bl) {\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  return hi >>> 0;\n}\nexports.sum64_hi = sum64_hi;\n\nfunction sum64_lo(ah, al, bh, bl) {\n  var lo = al + bl;\n  return lo >>> 0;\n}\nexports.sum64_lo = sum64_lo;\n\nfunction sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + carry;\n  return hi >>> 0;\n}\nexports.sum64_4_hi = sum64_4_hi;\n\nfunction sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {\n  var lo = al + bl + cl + dl;\n  return lo >>> 0;\n}\nexports.sum64_4_lo = sum64_4_lo;\n\nfunction sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n  lo = (lo + el) >>> 0;\n  carry += lo < el ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + eh + carry;\n  return hi >>> 0;\n}\nexports.sum64_5_hi = sum64_5_hi;\n\nfunction sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var lo = al + bl + cl + dl + el;\n\n  return lo >>> 0;\n}\nexports.sum64_5_lo = sum64_5_lo;\n\nfunction rotr64_hi(ah, al, num) {\n  var r = (al << (32 - num)) | (ah >>> num);\n  return r >>> 0;\n}\nexports.rotr64_hi = rotr64_hi;\n\nfunction rotr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.rotr64_lo = rotr64_lo;\n\nfunction shr64_hi(ah, al, num) {\n  return ah >>> num;\n}\nexports.shr64_hi = shr64_hi;\n\nfunction shr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.shr64_lo = shr64_lo;\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction BlockHash() {\n  this.pending = null;\n  this.pendingTotal = 0;\n  this.blockSize = this.constructor.blockSize;\n  this.outSize = this.constructor.outSize;\n  this.hmacStrength = this.constructor.hmacStrength;\n  this.padLength = this.constructor.padLength / 8;\n  this.endian = 'big';\n\n  this._delta8 = this.blockSize / 8;\n  this._delta32 = this.blockSize / 32;\n}\nexports.BlockHash = BlockHash;\n\nBlockHash.prototype.update = function update(msg, enc) {\n  // Convert message to array, pad it, and join into 32bit blocks\n  msg = utils.toArray(msg, enc);\n  if (!this.pending)\n    this.pending = msg;\n  else\n    this.pending = this.pending.concat(msg);\n  this.pendingTotal += msg.length;\n\n  // Enough data, try updating\n  if (this.pending.length >= this._delta8) {\n    msg = this.pending;\n\n    // Process pending data in blocks\n    var r = msg.length % this._delta8;\n    this.pending = msg.slice(msg.length - r, msg.length);\n    if (this.pending.length === 0)\n      this.pending = null;\n\n    msg = utils.join32(msg, 0, msg.length - r, this.endian);\n    for (var i = 0; i < msg.length; i += this._delta32)\n      this._update(msg, i, i + this._delta32);\n  }\n\n  return this;\n};\n\nBlockHash.prototype.digest = function digest(enc) {\n  this.update(this._pad());\n  assert(this.pending === null);\n\n  return this._digest(enc);\n};\n\nBlockHash.prototype._pad = function pad() {\n  var len = this.pendingTotal;\n  var bytes = this._delta8;\n  var k = bytes - ((len + this.padLength) % bytes);\n  var res = new Array(k + this.padLength);\n  res[0] = 0x80;\n  for (var i = 1; i < k; i++)\n    res[i] = 0;\n\n  // Append length\n  len <<= 3;\n  if (this.endian === 'big') {\n    for (var t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = len & 0xff;\n  } else {\n    res[i++] = len & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n\n    for (t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n  }\n\n  return res;\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar rotr32 = utils.rotr32;\n\nfunction ft_1(s, x, y, z) {\n  if (s === 0)\n    return ch32(x, y, z);\n  if (s === 1 || s === 3)\n    return p32(x, y, z);\n  if (s === 2)\n    return maj32(x, y, z);\n}\nexports.ft_1 = ft_1;\n\nfunction ch32(x, y, z) {\n  return (x & y) ^ ((~x) & z);\n}\nexports.ch32 = ch32;\n\nfunction maj32(x, y, z) {\n  return (x & y) ^ (x & z) ^ (y & z);\n}\nexports.maj32 = maj32;\n\nfunction p32(x, y, z) {\n  return x ^ y ^ z;\n}\nexports.p32 = p32;\n\nfunction s0_256(x) {\n  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);\n}\nexports.s0_256 = s0_256;\n\nfunction s1_256(x) {\n  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);\n}\nexports.s1_256 = s1_256;\n\nfunction g0_256(x) {\n  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);\n}\nexports.g0_256 = g0_256;\n\nfunction g1_256(x) {\n  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);\n}\nexports.g1_256 = g1_256;\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_5 = utils.sum32_5;\nvar ft_1 = shaCommon.ft_1;\nvar BlockHash = common.BlockHash;\n\nvar sha1_K = [\n  0x5A827999, 0x6ED9EBA1,\n  0x8F1BBCDC, 0xCA62C1D6\n];\n\nfunction SHA1() {\n  if (!(this instanceof SHA1))\n    return new SHA1();\n\n  BlockHash.call(this);\n  this.h = [\n    0x67452301, 0xefcdab89, 0x98badcfe,\n    0x10325476, 0xc3d2e1f0 ];\n  this.W = new Array(80);\n}\n\nutils.inherits(SHA1, BlockHash);\nmodule.exports = SHA1;\n\nSHA1.blockSize = 512;\nSHA1.outSize = 160;\nSHA1.hmacStrength = 80;\nSHA1.padLength = 64;\n\nSHA1.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n\n  for(; i < W.length; i++)\n    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n\n  for (i = 0; i < W.length; i++) {\n    var s = ~~(i / 20);\n    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);\n    e = d;\n    d = c;\n    c = rotl32(b, 30);\n    b = a;\n    a = t;\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n};\n\nSHA1.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\nvar assert = require('minimalistic-assert');\n\nvar sum32 = utils.sum32;\nvar sum32_4 = utils.sum32_4;\nvar sum32_5 = utils.sum32_5;\nvar ch32 = shaCommon.ch32;\nvar maj32 = shaCommon.maj32;\nvar s0_256 = shaCommon.s0_256;\nvar s1_256 = shaCommon.s1_256;\nvar g0_256 = shaCommon.g0_256;\nvar g1_256 = shaCommon.g1_256;\n\nvar BlockHash = common.BlockHash;\n\nvar sha256_K = [\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\n  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\n  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n];\n\nfunction SHA256() {\n  if (!(this instanceof SHA256))\n    return new SHA256();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,\n    0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n  ];\n  this.k = sha256_K;\n  this.W = new Array(64);\n}\nutils.inherits(SHA256, BlockHash);\nmodule.exports = SHA256;\n\nSHA256.blockSize = 512;\nSHA256.outSize = 256;\nSHA256.hmacStrength = 192;\nSHA256.padLength = 64;\n\nSHA256.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i++)\n    W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n  var f = this.h[5];\n  var g = this.h[6];\n  var h = this.h[7];\n\n  assert(this.k.length === W.length);\n  for (i = 0; i < W.length; i++) {\n    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);\n    var T2 = sum32(s0_256(a), maj32(a, b, c));\n    h = g;\n    g = f;\n    f = e;\n    e = sum32(d, T1);\n    d = c;\n    c = b;\n    b = a;\n    a = sum32(T1, T2);\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n  this.h[5] = sum32(this.h[5], f);\n  this.h[6] = sum32(this.h[6], g);\n  this.h[7] = sum32(this.h[7], h);\n};\n\nSHA256.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar SHA256 = require('./256');\n\nfunction SHA224() {\n  if (!(this instanceof SHA224))\n    return new SHA224();\n\n  SHA256.call(this);\n  this.h = [\n    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n    0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];\n}\nutils.inherits(SHA224, SHA256);\nmodule.exports = SHA224;\n\nSHA224.blockSize = 512;\nSHA224.outSize = 224;\nSHA224.hmacStrength = 192;\nSHA224.padLength = 64;\n\nSHA224.prototype._digest = function digest(enc) {\n  // Just truncate output\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 7), 'big');\n  else\n    return utils.split32(this.h.slice(0, 7), 'big');\n};\n\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar assert = require('minimalistic-assert');\n\nvar rotr64_hi = utils.rotr64_hi;\nvar rotr64_lo = utils.rotr64_lo;\nvar shr64_hi = utils.shr64_hi;\nvar shr64_lo = utils.shr64_lo;\nvar sum64 = utils.sum64;\nvar sum64_hi = utils.sum64_hi;\nvar sum64_lo = utils.sum64_lo;\nvar sum64_4_hi = utils.sum64_4_hi;\nvar sum64_4_lo = utils.sum64_4_lo;\nvar sum64_5_hi = utils.sum64_5_hi;\nvar sum64_5_lo = utils.sum64_5_lo;\n\nvar BlockHash = common.BlockHash;\n\nvar sha512_K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction SHA512() {\n  if (!(this instanceof SHA512))\n    return new SHA512();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xf3bcc908,\n    0xbb67ae85, 0x84caa73b,\n    0x3c6ef372, 0xfe94f82b,\n    0xa54ff53a, 0x5f1d36f1,\n    0x510e527f, 0xade682d1,\n    0x9b05688c, 0x2b3e6c1f,\n    0x1f83d9ab, 0xfb41bd6b,\n    0x5be0cd19, 0x137e2179 ];\n  this.k = sha512_K;\n  this.W = new Array(160);\n}\nutils.inherits(SHA512, BlockHash);\nmodule.exports = SHA512;\n\nSHA512.blockSize = 1024;\nSHA512.outSize = 512;\nSHA512.hmacStrength = 192;\nSHA512.padLength = 128;\n\nSHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {\n  var W = this.W;\n\n  // 32 x 32bit words\n  for (var i = 0; i < 32; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i += 2) {\n    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2\n    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);\n    var c1_hi = W[i - 14];  // i - 7\n    var c1_lo = W[i - 13];\n    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15\n    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);\n    var c3_hi = W[i - 32];  // i - 16\n    var c3_lo = W[i - 31];\n\n    W[i] = sum64_4_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n    W[i + 1] = sum64_4_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n  }\n};\n\nSHA512.prototype._update = function _update(msg, start) {\n  this._prepareBlock(msg, start);\n\n  var W = this.W;\n\n  var ah = this.h[0];\n  var al = this.h[1];\n  var bh = this.h[2];\n  var bl = this.h[3];\n  var ch = this.h[4];\n  var cl = this.h[5];\n  var dh = this.h[6];\n  var dl = this.h[7];\n  var eh = this.h[8];\n  var el = this.h[9];\n  var fh = this.h[10];\n  var fl = this.h[11];\n  var gh = this.h[12];\n  var gl = this.h[13];\n  var hh = this.h[14];\n  var hl = this.h[15];\n\n  assert(this.k.length === W.length);\n  for (var i = 0; i < W.length; i += 2) {\n    var c0_hi = hh;\n    var c0_lo = hl;\n    var c1_hi = s1_512_hi(eh, el);\n    var c1_lo = s1_512_lo(eh, el);\n    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);\n    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);\n    var c3_hi = this.k[i];\n    var c3_lo = this.k[i + 1];\n    var c4_hi = W[i];\n    var c4_lo = W[i + 1];\n\n    var T1_hi = sum64_5_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n    var T1_lo = sum64_5_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n\n    c0_hi = s0_512_hi(ah, al);\n    c0_lo = s0_512_lo(ah, al);\n    c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);\n    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);\n\n    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);\n    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);\n\n    hh = gh;\n    hl = gl;\n\n    gh = fh;\n    gl = fl;\n\n    fh = eh;\n    fl = el;\n\n    eh = sum64_hi(dh, dl, T1_hi, T1_lo);\n    el = sum64_lo(dl, dl, T1_hi, T1_lo);\n\n    dh = ch;\n    dl = cl;\n\n    ch = bh;\n    cl = bl;\n\n    bh = ah;\n    bl = al;\n\n    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);\n    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);\n  }\n\n  sum64(this.h, 0, ah, al);\n  sum64(this.h, 2, bh, bl);\n  sum64(this.h, 4, ch, cl);\n  sum64(this.h, 6, dh, dl);\n  sum64(this.h, 8, eh, el);\n  sum64(this.h, 10, fh, fl);\n  sum64(this.h, 12, gh, gl);\n  sum64(this.h, 14, hh, hl);\n};\n\nSHA512.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n\nfunction ch64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ ((~xh) & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction ch64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ ((~xl) & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 28);\n  var c1_hi = rotr64_hi(xl, xh, 2);  // 34\n  var c2_hi = rotr64_hi(xl, xh, 7);  // 39\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 28);\n  var c1_lo = rotr64_lo(xl, xh, 2);  // 34\n  var c2_lo = rotr64_lo(xl, xh, 7);  // 39\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 14);\n  var c1_hi = rotr64_hi(xh, xl, 18);\n  var c2_hi = rotr64_hi(xl, xh, 9);  // 41\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 14);\n  var c1_lo = rotr64_lo(xh, xl, 18);\n  var c2_lo = rotr64_lo(xl, xh, 9);  // 41\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 1);\n  var c1_hi = rotr64_hi(xh, xl, 8);\n  var c2_hi = shr64_hi(xh, xl, 7);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 1);\n  var c1_lo = rotr64_lo(xh, xl, 8);\n  var c2_lo = shr64_lo(xh, xl, 7);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 19);\n  var c1_hi = rotr64_hi(xl, xh, 29);  // 61\n  var c2_hi = shr64_hi(xh, xl, 6);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 19);\n  var c1_lo = rotr64_lo(xl, xh, 29);  // 61\n  var c2_lo = shr64_lo(xh, xl, 6);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n","'use strict';\n\nvar utils = require('../utils');\n\nvar SHA512 = require('./512');\n\nfunction SHA384() {\n  if (!(this instanceof SHA384))\n    return new SHA384();\n\n  SHA512.call(this);\n  this.h = [\n    0xcbbb9d5d, 0xc1059ed8,\n    0x629a292a, 0x367cd507,\n    0x9159015a, 0x3070dd17,\n    0x152fecd8, 0xf70e5939,\n    0x67332667, 0xffc00b31,\n    0x8eb44a87, 0x68581511,\n    0xdb0c2e0d, 0x64f98fa7,\n    0x47b5481d, 0xbefa4fa4 ];\n}\nutils.inherits(SHA384, SHA512);\nmodule.exports = SHA384;\n\nSHA384.blockSize = 1024;\nSHA384.outSize = 384;\nSHA384.hmacStrength = 192;\nSHA384.padLength = 128;\n\nSHA384.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 12), 'big');\n  else\n    return utils.split32(this.h.slice(0, 12), 'big');\n};\n","'use strict';\n\nexports.sha1 = require('./sha/1');\nexports.sha224 = require('./sha/224');\nexports.sha256 = require('./sha/256');\nexports.sha384 = require('./sha/384');\nexports.sha512 = require('./sha/512');\n","'use strict';\n\nvar utils = require('./utils');\nvar common = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_3 = utils.sum32_3;\nvar sum32_4 = utils.sum32_4;\nvar BlockHash = common.BlockHash;\n\nfunction RIPEMD160() {\n  if (!(this instanceof RIPEMD160))\n    return new RIPEMD160();\n\n  BlockHash.call(this);\n\n  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];\n  this.endian = 'little';\n}\nutils.inherits(RIPEMD160, BlockHash);\nexports.ripemd160 = RIPEMD160;\n\nRIPEMD160.blockSize = 512;\nRIPEMD160.outSize = 160;\nRIPEMD160.hmacStrength = 192;\nRIPEMD160.padLength = 64;\n\nRIPEMD160.prototype._update = function update(msg, start) {\n  var A = this.h[0];\n  var B = this.h[1];\n  var C = this.h[2];\n  var D = this.h[3];\n  var E = this.h[4];\n  var Ah = A;\n  var Bh = B;\n  var Ch = C;\n  var Dh = D;\n  var Eh = E;\n  for (var j = 0; j < 80; j++) {\n    var T = sum32(\n      rotl32(\n        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),\n        s[j]),\n      E);\n    A = E;\n    E = D;\n    D = rotl32(C, 10);\n    C = B;\n    B = T;\n    T = sum32(\n      rotl32(\n        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),\n        sh[j]),\n      Eh);\n    Ah = Eh;\n    Eh = Dh;\n    Dh = rotl32(Ch, 10);\n    Ch = Bh;\n    Bh = T;\n  }\n  T = sum32_3(this.h[1], C, Dh);\n  this.h[1] = sum32_3(this.h[2], D, Eh);\n  this.h[2] = sum32_3(this.h[3], E, Ah);\n  this.h[3] = sum32_3(this.h[4], A, Bh);\n  this.h[4] = sum32_3(this.h[0], B, Ch);\n  this.h[0] = T;\n};\n\nRIPEMD160.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'little');\n  else\n    return utils.split32(this.h, 'little');\n};\n\nfunction f(j, x, y, z) {\n  if (j <= 15)\n    return x ^ y ^ z;\n  else if (j <= 31)\n    return (x & y) | ((~x) & z);\n  else if (j <= 47)\n    return (x | (~y)) ^ z;\n  else if (j <= 63)\n    return (x & z) | (y & (~z));\n  else\n    return x ^ (y | (~z));\n}\n\nfunction K(j) {\n  if (j <= 15)\n    return 0x00000000;\n  else if (j <= 31)\n    return 0x5a827999;\n  else if (j <= 47)\n    return 0x6ed9eba1;\n  else if (j <= 63)\n    return 0x8f1bbcdc;\n  else\n    return 0xa953fd4e;\n}\n\nfunction Kh(j) {\n  if (j <= 15)\n    return 0x50a28be6;\n  else if (j <= 31)\n    return 0x5c4dd124;\n  else if (j <= 47)\n    return 0x6d703ef3;\n  else if (j <= 63)\n    return 0x7a6d76e9;\n  else\n    return 0x00000000;\n}\n\nvar r = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n];\n\nvar rh = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n];\n\nvar s = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n];\n\nvar sh = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n];\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction Hmac(hash, key, enc) {\n  if (!(this instanceof Hmac))\n    return new Hmac(hash, key, enc);\n  this.Hash = hash;\n  this.blockSize = hash.blockSize / 8;\n  this.outSize = hash.outSize / 8;\n  this.inner = null;\n  this.outer = null;\n\n  this._init(utils.toArray(key, enc));\n}\nmodule.exports = Hmac;\n\nHmac.prototype._init = function init(key) {\n  // Shorten key, if needed\n  if (key.length > this.blockSize)\n    key = new this.Hash().update(key).digest();\n  assert(key.length <= this.blockSize);\n\n  // Add padding to key\n  for (var i = key.length; i < this.blockSize; i++)\n    key.push(0);\n\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x36;\n  this.inner = new this.Hash().update(key);\n\n  // 0x36 ^ 0x5c = 0x6a\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x6a;\n  this.outer = new this.Hash().update(key);\n};\n\nHmac.prototype.update = function update(msg, enc) {\n  this.inner.update(msg, enc);\n  return this;\n};\n\nHmac.prototype.digest = function digest(enc) {\n  this.outer.update(this.inner.digest());\n  return this.outer.digest(enc);\n};\n","var hash = exports;\n\nhash.utils = require('./hash/utils');\nhash.common = require('./hash/common');\nhash.sha = require('./hash/sha');\nhash.ripemd = require('./hash/ripemd');\nhash.hmac = require('./hash/hmac');\n\n// Proxy hash functions to the main object\nhash.sha1 = hash.sha.sha1;\nhash.sha256 = hash.sha.sha256;\nhash.sha224 = hash.sha.sha224;\nhash.sha384 = hash.sha.sha384;\nhash.sha512 = hash.sha.sha512;\nhash.ripemd160 = hash.ripemd.ripemd160;\n","'use strict';\n\nvar utils = exports;\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg !== 'string') {\n    for (var i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n    return res;\n  }\n  if (enc === 'hex') {\n    msg = msg.replace(/[^a-z0-9]+/ig, '');\n    if (msg.length % 2 !== 0)\n      msg = '0' + msg;\n    for (var i = 0; i < msg.length; i += 2)\n      res.push(parseInt(msg[i] + msg[i + 1], 16));\n  } else {\n    for (var i = 0; i < msg.length; i++) {\n      var c = msg.charCodeAt(i);\n      var hi = c >> 8;\n      var lo = c & 0xff;\n      if (hi)\n        res.push(hi, lo);\n      else\n        res.push(lo);\n    }\n  }\n  return res;\n}\nutils.toArray = toArray;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nutils.zero2 = zero2;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nutils.toHex = toHex;\n\nutils.encode = function encode(arr, enc) {\n  if (enc === 'hex')\n    return toHex(arr);\n  else\n    return arr;\n};\n","'use strict';\n\nvar utils = exports;\nvar BN = require('bn.js');\nvar minAssert = require('minimalistic-assert');\nvar minUtils = require('minimalistic-crypto-utils');\n\nutils.assert = minAssert;\nutils.toArray = minUtils.toArray;\nutils.zero2 = minUtils.zero2;\nutils.toHex = minUtils.toHex;\nutils.encode = minUtils.encode;\n\n// Represent num in a w-NAF form\nfunction getNAF(num, w, bits) {\n  var naf = new Array(Math.max(num.bitLength(), bits) + 1);\n  naf.fill(0);\n\n  var ws = 1 << (w + 1);\n  var k = num.clone();\n\n  for (var i = 0; i < naf.length; i++) {\n    var z;\n    var mod = k.andln(ws - 1);\n    if (k.isOdd()) {\n      if (mod > (ws >> 1) - 1)\n        z = (ws >> 1) - mod;\n      else\n        z = mod;\n      k.isubn(z);\n    } else {\n      z = 0;\n    }\n\n    naf[i] = z;\n    k.iushrn(1);\n  }\n\n  return naf;\n}\nutils.getNAF = getNAF;\n\n// Represent k1, k2 in a Joint Sparse Form\nfunction getJSF(k1, k2) {\n  var jsf = [\n    [],\n    [],\n  ];\n\n  k1 = k1.clone();\n  k2 = k2.clone();\n  var d1 = 0;\n  var d2 = 0;\n  var m8;\n  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {\n    // First phase\n    var m14 = (k1.andln(3) + d1) & 3;\n    var m24 = (k2.andln(3) + d2) & 3;\n    if (m14 === 3)\n      m14 = -1;\n    if (m24 === 3)\n      m24 = -1;\n    var u1;\n    if ((m14 & 1) === 0) {\n      u1 = 0;\n    } else {\n      m8 = (k1.andln(7) + d1) & 7;\n      if ((m8 === 3 || m8 === 5) && m24 === 2)\n        u1 = -m14;\n      else\n        u1 = m14;\n    }\n    jsf[0].push(u1);\n\n    var u2;\n    if ((m24 & 1) === 0) {\n      u2 = 0;\n    } else {\n      m8 = (k2.andln(7) + d2) & 7;\n      if ((m8 === 3 || m8 === 5) && m14 === 2)\n        u2 = -m24;\n      else\n        u2 = m24;\n    }\n    jsf[1].push(u2);\n\n    // Second phase\n    if (2 * d1 === u1 + 1)\n      d1 = 1 - d1;\n    if (2 * d2 === u2 + 1)\n      d2 = 1 - d2;\n    k1.iushrn(1);\n    k2.iushrn(1);\n  }\n\n  return jsf;\n}\nutils.getJSF = getJSF;\n\nfunction cachedProperty(obj, name, computer) {\n  var key = '_' + name;\n  obj.prototype[name] = function cachedProperty() {\n    return this[key] !== undefined ? this[key] :\n      this[key] = computer.call(this);\n  };\n}\nutils.cachedProperty = cachedProperty;\n\nfunction parseBytes(bytes) {\n  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :\n    bytes;\n}\nutils.parseBytes = parseBytes;\n\nfunction intFromLE(bytes) {\n  return new BN(bytes, 'hex', 'le');\n}\nutils.intFromLE = intFromLE;\n\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar getNAF = utils.getNAF;\nvar getJSF = utils.getJSF;\nvar assert = utils.assert;\n\nfunction BaseCurve(type, conf) {\n  this.type = type;\n  this.p = new BN(conf.p, 16);\n\n  // Use Montgomery, when there is no fast reduction for the prime\n  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);\n\n  // Useful for many curves\n  this.zero = new BN(0).toRed(this.red);\n  this.one = new BN(1).toRed(this.red);\n  this.two = new BN(2).toRed(this.red);\n\n  // Curve configuration, optional\n  this.n = conf.n && new BN(conf.n, 16);\n  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);\n\n  // Temporary arrays\n  this._wnafT1 = new Array(4);\n  this._wnafT2 = new Array(4);\n  this._wnafT3 = new Array(4);\n  this._wnafT4 = new Array(4);\n\n  this._bitLength = this.n ? this.n.bitLength() : 0;\n\n  // Generalized Greg Maxwell's trick\n  var adjustCount = this.n && this.p.div(this.n);\n  if (!adjustCount || adjustCount.cmpn(100) > 0) {\n    this.redN = null;\n  } else {\n    this._maxwellTrick = true;\n    this.redN = this.n.toRed(this.red);\n  }\n}\nmodule.exports = BaseCurve;\n\nBaseCurve.prototype.point = function point() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype.validate = function validate() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {\n  assert(p.precomputed);\n  var doubles = p._getDoubles();\n\n  var naf = getNAF(k, 1, this._bitLength);\n  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);\n  I /= 3;\n\n  // Translate into more windowed form\n  var repr = [];\n  var j;\n  var nafW;\n  for (j = 0; j < naf.length; j += doubles.step) {\n    nafW = 0;\n    for (var l = j + doubles.step - 1; l >= j; l--)\n      nafW = (nafW << 1) + naf[l];\n    repr.push(nafW);\n  }\n\n  var a = this.jpoint(null, null, null);\n  var b = this.jpoint(null, null, null);\n  for (var i = I; i > 0; i--) {\n    for (j = 0; j < repr.length; j++) {\n      nafW = repr[j];\n      if (nafW === i)\n        b = b.mixedAdd(doubles.points[j]);\n      else if (nafW === -i)\n        b = b.mixedAdd(doubles.points[j].neg());\n    }\n    a = a.add(b);\n  }\n  return a.toP();\n};\n\nBaseCurve.prototype._wnafMul = function _wnafMul(p, k) {\n  var w = 4;\n\n  // Precompute window\n  var nafPoints = p._getNAFPoints(w);\n  w = nafPoints.wnd;\n  var wnd = nafPoints.points;\n\n  // Get NAF form\n  var naf = getNAF(k, w, this._bitLength);\n\n  // Add `this`*(N+1) for every w-NAF index\n  var acc = this.jpoint(null, null, null);\n  for (var i = naf.length - 1; i >= 0; i--) {\n    // Count zeroes\n    for (var l = 0; i >= 0 && naf[i] === 0; i--)\n      l++;\n    if (i >= 0)\n      l++;\n    acc = acc.dblp(l);\n\n    if (i < 0)\n      break;\n    var z = naf[i];\n    assert(z !== 0);\n    if (p.type === 'affine') {\n      // J +- P\n      if (z > 0)\n        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());\n    } else {\n      // J +- J\n      if (z > 0)\n        acc = acc.add(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.add(wnd[(-z - 1) >> 1].neg());\n    }\n  }\n  return p.type === 'affine' ? acc.toP() : acc;\n};\n\nBaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,\n  points,\n  coeffs,\n  len,\n  jacobianResult) {\n  var wndWidth = this._wnafT1;\n  var wnd = this._wnafT2;\n  var naf = this._wnafT3;\n\n  // Fill all arrays\n  var max = 0;\n  var i;\n  var j;\n  var p;\n  for (i = 0; i < len; i++) {\n    p = points[i];\n    var nafPoints = p._getNAFPoints(defW);\n    wndWidth[i] = nafPoints.wnd;\n    wnd[i] = nafPoints.points;\n  }\n\n  // Comb small window NAFs\n  for (i = len - 1; i >= 1; i -= 2) {\n    var a = i - 1;\n    var b = i;\n    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {\n      naf[a] = getNAF(coeffs[a], wndWidth[a], this._bitLength);\n      naf[b] = getNAF(coeffs[b], wndWidth[b], this._bitLength);\n      max = Math.max(naf[a].length, max);\n      max = Math.max(naf[b].length, max);\n      continue;\n    }\n\n    var comb = [\n      points[a], /* 1 */\n      null, /* 3 */\n      null, /* 5 */\n      points[b], /* 7 */\n    ];\n\n    // Try to avoid Projective points, if possible\n    if (points[a].y.cmp(points[b].y) === 0) {\n      comb[1] = points[a].add(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].add(points[b].neg());\n    } else {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    }\n\n    var index = [\n      -3, /* -1 -1 */\n      -1, /* -1 0 */\n      -5, /* -1 1 */\n      -7, /* 0 -1 */\n      0, /* 0 0 */\n      7, /* 0 1 */\n      5, /* 1 -1 */\n      1, /* 1 0 */\n      3,  /* 1 1 */\n    ];\n\n    var jsf = getJSF(coeffs[a], coeffs[b]);\n    max = Math.max(jsf[0].length, max);\n    naf[a] = new Array(max);\n    naf[b] = new Array(max);\n    for (j = 0; j < max; j++) {\n      var ja = jsf[0][j] | 0;\n      var jb = jsf[1][j] | 0;\n\n      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];\n      naf[b][j] = 0;\n      wnd[a] = comb;\n    }\n  }\n\n  var acc = this.jpoint(null, null, null);\n  var tmp = this._wnafT4;\n  for (i = max; i >= 0; i--) {\n    var k = 0;\n\n    while (i >= 0) {\n      var zero = true;\n      for (j = 0; j < len; j++) {\n        tmp[j] = naf[j][i] | 0;\n        if (tmp[j] !== 0)\n          zero = false;\n      }\n      if (!zero)\n        break;\n      k++;\n      i--;\n    }\n    if (i >= 0)\n      k++;\n    acc = acc.dblp(k);\n    if (i < 0)\n      break;\n\n    for (j = 0; j < len; j++) {\n      var z = tmp[j];\n      p;\n      if (z === 0)\n        continue;\n      else if (z > 0)\n        p = wnd[j][(z - 1) >> 1];\n      else if (z < 0)\n        p = wnd[j][(-z - 1) >> 1].neg();\n\n      if (p.type === 'affine')\n        acc = acc.mixedAdd(p);\n      else\n        acc = acc.add(p);\n    }\n  }\n  // Zeroify references\n  for (i = 0; i < len; i++)\n    wnd[i] = null;\n\n  if (jacobianResult)\n    return acc;\n  else\n    return acc.toP();\n};\n\nfunction BasePoint(curve, type) {\n  this.curve = curve;\n  this.type = type;\n  this.precomputed = null;\n}\nBaseCurve.BasePoint = BasePoint;\n\nBasePoint.prototype.eq = function eq(/*other*/) {\n  throw new Error('Not implemented');\n};\n\nBasePoint.prototype.validate = function validate() {\n  return this.curve.validate(this);\n};\n\nBaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  bytes = utils.toArray(bytes, enc);\n\n  var len = this.p.byteLength();\n\n  // uncompressed, hybrid-odd, hybrid-even\n  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) &&\n      bytes.length - 1 === 2 * len) {\n    if (bytes[0] === 0x06)\n      assert(bytes[bytes.length - 1] % 2 === 0);\n    else if (bytes[0] === 0x07)\n      assert(bytes[bytes.length - 1] % 2 === 1);\n\n    var res =  this.point(bytes.slice(1, 1 + len),\n      bytes.slice(1 + len, 1 + 2 * len));\n\n    return res;\n  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&\n              bytes.length - 1 === len) {\n    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);\n  }\n  throw new Error('Unknown point format');\n};\n\nBasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {\n  return this.encode(enc, true);\n};\n\nBasePoint.prototype._encode = function _encode(compact) {\n  var len = this.curve.p.byteLength();\n  var x = this.getX().toArray('be', len);\n\n  if (compact)\n    return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);\n\n  return [ 0x04 ].concat(x, this.getY().toArray('be', len));\n};\n\nBasePoint.prototype.encode = function encode(enc, compact) {\n  return utils.encode(this._encode(compact), enc);\n};\n\nBasePoint.prototype.precompute = function precompute(power) {\n  if (this.precomputed)\n    return this;\n\n  var precomputed = {\n    doubles: null,\n    naf: null,\n    beta: null,\n  };\n  precomputed.naf = this._getNAFPoints(8);\n  precomputed.doubles = this._getDoubles(4, power);\n  precomputed.beta = this._getBeta();\n  this.precomputed = precomputed;\n\n  return this;\n};\n\nBasePoint.prototype._hasDoubles = function _hasDoubles(k) {\n  if (!this.precomputed)\n    return false;\n\n  var doubles = this.precomputed.doubles;\n  if (!doubles)\n    return false;\n\n  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);\n};\n\nBasePoint.prototype._getDoubles = function _getDoubles(step, power) {\n  if (this.precomputed && this.precomputed.doubles)\n    return this.precomputed.doubles;\n\n  var doubles = [ this ];\n  var acc = this;\n  for (var i = 0; i < power; i += step) {\n    for (var j = 0; j < step; j++)\n      acc = acc.dbl();\n    doubles.push(acc);\n  }\n  return {\n    step: step,\n    points: doubles,\n  };\n};\n\nBasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {\n  if (this.precomputed && this.precomputed.naf)\n    return this.precomputed.naf;\n\n  var res = [ this ];\n  var max = (1 << wnd) - 1;\n  var dbl = max === 1 ? null : this.dbl();\n  for (var i = 1; i < max; i++)\n    res[i] = res[i - 1].add(dbl);\n  return {\n    wnd: wnd,\n    points: res,\n  };\n};\n\nBasePoint.prototype._getBeta = function _getBeta() {\n  return null;\n};\n\nBasePoint.prototype.dblp = function dblp(k) {\n  var r = this;\n  for (var i = 0; i < k; i++)\n    r = r.dbl();\n  return r;\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar assert = utils.assert;\n\nfunction ShortCurve(conf) {\n  Base.call(this, 'short', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.tinv = this.two.redInvm();\n\n  this.zeroA = this.a.fromRed().cmpn(0) === 0;\n  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;\n\n  // If the curve is endomorphic, precalculate beta and lambda\n  this.endo = this._getEndomorphism(conf);\n  this._endoWnafT1 = new Array(4);\n  this._endoWnafT2 = new Array(4);\n}\ninherits(ShortCurve, Base);\nmodule.exports = ShortCurve;\n\nShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {\n  // No efficient endomorphism\n  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)\n    return;\n\n  // Compute beta and lambda, that lambda * P = (beta * Px; Py)\n  var beta;\n  var lambda;\n  if (conf.beta) {\n    beta = new BN(conf.beta, 16).toRed(this.red);\n  } else {\n    var betas = this._getEndoRoots(this.p);\n    // Choose the smallest beta\n    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];\n    beta = beta.toRed(this.red);\n  }\n  if (conf.lambda) {\n    lambda = new BN(conf.lambda, 16);\n  } else {\n    // Choose the lambda that is matching selected beta\n    var lambdas = this._getEndoRoots(this.n);\n    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {\n      lambda = lambdas[0];\n    } else {\n      lambda = lambdas[1];\n      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);\n    }\n  }\n\n  // Get basis vectors, used for balanced length-two representation\n  var basis;\n  if (conf.basis) {\n    basis = conf.basis.map(function(vec) {\n      return {\n        a: new BN(vec.a, 16),\n        b: new BN(vec.b, 16),\n      };\n    });\n  } else {\n    basis = this._getEndoBasis(lambda);\n  }\n\n  return {\n    beta: beta,\n    lambda: lambda,\n    basis: basis,\n  };\n};\n\nShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {\n  // Find roots of for x^2 + x + 1 in F\n  // Root = (-1 +- Sqrt(-3)) / 2\n  //\n  var red = num === this.p ? this.red : BN.mont(num);\n  var tinv = new BN(2).toRed(red).redInvm();\n  var ntinv = tinv.redNeg();\n\n  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);\n\n  var l1 = ntinv.redAdd(s).fromRed();\n  var l2 = ntinv.redSub(s).fromRed();\n  return [ l1, l2 ];\n};\n\nShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {\n  // aprxSqrt >= sqrt(this.n)\n  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));\n\n  // 3.74\n  // Run EGCD, until r(L + 1) < aprxSqrt\n  var u = lambda;\n  var v = this.n.clone();\n  var x1 = new BN(1);\n  var y1 = new BN(0);\n  var x2 = new BN(0);\n  var y2 = new BN(1);\n\n  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)\n  var a0;\n  var b0;\n  // First vector\n  var a1;\n  var b1;\n  // Second vector\n  var a2;\n  var b2;\n\n  var prevR;\n  var i = 0;\n  var r;\n  var x;\n  while (u.cmpn(0) !== 0) {\n    var q = v.div(u);\n    r = v.sub(q.mul(u));\n    x = x2.sub(q.mul(x1));\n    var y = y2.sub(q.mul(y1));\n\n    if (!a1 && r.cmp(aprxSqrt) < 0) {\n      a0 = prevR.neg();\n      b0 = x1;\n      a1 = r.neg();\n      b1 = x;\n    } else if (a1 && ++i === 2) {\n      break;\n    }\n    prevR = r;\n\n    v = u;\n    u = r;\n    x2 = x1;\n    x1 = x;\n    y2 = y1;\n    y1 = y;\n  }\n  a2 = r.neg();\n  b2 = x;\n\n  var len1 = a1.sqr().add(b1.sqr());\n  var len2 = a2.sqr().add(b2.sqr());\n  if (len2.cmp(len1) >= 0) {\n    a2 = a0;\n    b2 = b0;\n  }\n\n  // Normalize signs\n  if (a1.negative) {\n    a1 = a1.neg();\n    b1 = b1.neg();\n  }\n  if (a2.negative) {\n    a2 = a2.neg();\n    b2 = b2.neg();\n  }\n\n  return [\n    { a: a1, b: b1 },\n    { a: a2, b: b2 },\n  ];\n};\n\nShortCurve.prototype._endoSplit = function _endoSplit(k) {\n  var basis = this.endo.basis;\n  var v1 = basis[0];\n  var v2 = basis[1];\n\n  var c1 = v2.b.mul(k).divRound(this.n);\n  var c2 = v1.b.neg().mul(k).divRound(this.n);\n\n  var p1 = c1.mul(v1.a);\n  var p2 = c2.mul(v2.a);\n  var q1 = c1.mul(v1.b);\n  var q2 = c2.mul(v2.b);\n\n  // Calculate answer\n  var k1 = k.sub(p1).sub(p2);\n  var k2 = q1.add(q2).neg();\n  return { k1: k1, k2: k2 };\n};\n\nShortCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  // XXX Is there any way to tell if the number is odd without converting it\n  // to non-red form?\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nShortCurve.prototype.validate = function validate(point) {\n  if (point.inf)\n    return true;\n\n  var x = point.x;\n  var y = point.y;\n\n  var ax = this.a.redMul(x);\n  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);\n  return y.redSqr().redISub(rhs).cmpn(0) === 0;\n};\n\nShortCurve.prototype._endoWnafMulAdd =\n    function _endoWnafMulAdd(points, coeffs, jacobianResult) {\n      var npoints = this._endoWnafT1;\n      var ncoeffs = this._endoWnafT2;\n      for (var i = 0; i < points.length; i++) {\n        var split = this._endoSplit(coeffs[i]);\n        var p = points[i];\n        var beta = p._getBeta();\n\n        if (split.k1.negative) {\n          split.k1.ineg();\n          p = p.neg(true);\n        }\n        if (split.k2.negative) {\n          split.k2.ineg();\n          beta = beta.neg(true);\n        }\n\n        npoints[i * 2] = p;\n        npoints[i * 2 + 1] = beta;\n        ncoeffs[i * 2] = split.k1;\n        ncoeffs[i * 2 + 1] = split.k2;\n      }\n      var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);\n\n      // Clean-up references to points and coefficients\n      for (var j = 0; j < i * 2; j++) {\n        npoints[j] = null;\n        ncoeffs[j] = null;\n      }\n      return res;\n    };\n\nfunction Point(curve, x, y, isRed) {\n  Base.BasePoint.call(this, curve, 'affine');\n  if (x === null && y === null) {\n    this.x = null;\n    this.y = null;\n    this.inf = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    // Force redgomery representation when loading from JSON\n    if (isRed) {\n      this.x.forceRed(this.curve.red);\n      this.y.forceRed(this.curve.red);\n    }\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    this.inf = false;\n  }\n}\ninherits(Point, Base.BasePoint);\n\nShortCurve.prototype.point = function point(x, y, isRed) {\n  return new Point(this, x, y, isRed);\n};\n\nShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {\n  return Point.fromJSON(this, obj, red);\n};\n\nPoint.prototype._getBeta = function _getBeta() {\n  if (!this.curve.endo)\n    return;\n\n  var pre = this.precomputed;\n  if (pre && pre.beta)\n    return pre.beta;\n\n  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);\n  if (pre) {\n    var curve = this.curve;\n    var endoMul = function(p) {\n      return curve.point(p.x.redMul(curve.endo.beta), p.y);\n    };\n    pre.beta = beta;\n    beta.precomputed = {\n      beta: null,\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(endoMul),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(endoMul),\n      },\n    };\n  }\n  return beta;\n};\n\nPoint.prototype.toJSON = function toJSON() {\n  if (!this.precomputed)\n    return [ this.x, this.y ];\n\n  return [ this.x, this.y, this.precomputed && {\n    doubles: this.precomputed.doubles && {\n      step: this.precomputed.doubles.step,\n      points: this.precomputed.doubles.points.slice(1),\n    },\n    naf: this.precomputed.naf && {\n      wnd: this.precomputed.naf.wnd,\n      points: this.precomputed.naf.points.slice(1),\n    },\n  } ];\n};\n\nPoint.fromJSON = function fromJSON(curve, obj, red) {\n  if (typeof obj === 'string')\n    obj = JSON.parse(obj);\n  var res = curve.point(obj[0], obj[1], red);\n  if (!obj[2])\n    return res;\n\n  function obj2point(obj) {\n    return curve.point(obj[0], obj[1], red);\n  }\n\n  var pre = obj[2];\n  res.precomputed = {\n    beta: null,\n    doubles: pre.doubles && {\n      step: pre.doubles.step,\n      points: [ res ].concat(pre.doubles.points.map(obj2point)),\n    },\n    naf: pre.naf && {\n      wnd: pre.naf.wnd,\n      points: [ res ].concat(pre.naf.points.map(obj2point)),\n    },\n  };\n  return res;\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  return this.inf;\n};\n\nPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.inf)\n    return p;\n\n  // P + O = P\n  if (p.inf)\n    return this;\n\n  // P + P = 2P\n  if (this.eq(p))\n    return this.dbl();\n\n  // P + (-P) = O\n  if (this.neg().eq(p))\n    return this.curve.point(null, null);\n\n  // P + Q = O\n  if (this.x.cmp(p.x) === 0)\n    return this.curve.point(null, null);\n\n  var c = this.y.redSub(p.y);\n  if (c.cmpn(0) !== 0)\n    c = c.redMul(this.x.redSub(p.x).redInvm());\n  var nx = c.redSqr().redISub(this.x).redISub(p.x);\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.inf)\n    return this;\n\n  // 2P = O\n  var ys1 = this.y.redAdd(this.y);\n  if (ys1.cmpn(0) === 0)\n    return this.curve.point(null, null);\n\n  var a = this.curve.a;\n\n  var x2 = this.x.redSqr();\n  var dyinv = ys1.redInvm();\n  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);\n\n  var nx = c.redSqr().redISub(this.x.redAdd(this.x));\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.getX = function getX() {\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  return this.y.fromRed();\n};\n\nPoint.prototype.mul = function mul(k) {\n  k = new BN(k, 16);\n  if (this.isInfinity())\n    return this;\n  else if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else if (this.curve.endo)\n    return this.curve._endoWnafMulAdd([ this ], [ k ]);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs, true);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2, true);\n};\n\nPoint.prototype.eq = function eq(p) {\n  return this === p ||\n         this.inf === p.inf &&\n             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);\n};\n\nPoint.prototype.neg = function neg(_precompute) {\n  if (this.inf)\n    return this;\n\n  var res = this.curve.point(this.x, this.y.redNeg());\n  if (_precompute && this.precomputed) {\n    var pre = this.precomputed;\n    var negate = function(p) {\n      return p.neg();\n    };\n    res.precomputed = {\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(negate),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(negate),\n      },\n    };\n  }\n  return res;\n};\n\nPoint.prototype.toJ = function toJ() {\n  if (this.inf)\n    return this.curve.jpoint(null, null, null);\n\n  var res = this.curve.jpoint(this.x, this.y, this.curve.one);\n  return res;\n};\n\nfunction JPoint(curve, x, y, z) {\n  Base.BasePoint.call(this, curve, 'jacobian');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.one;\n    this.y = this.curve.one;\n    this.z = new BN(0);\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = new BN(z, 16);\n  }\n  if (!this.x.red)\n    this.x = this.x.toRed(this.curve.red);\n  if (!this.y.red)\n    this.y = this.y.toRed(this.curve.red);\n  if (!this.z.red)\n    this.z = this.z.toRed(this.curve.red);\n\n  this.zOne = this.z === this.curve.one;\n}\ninherits(JPoint, Base.BasePoint);\n\nShortCurve.prototype.jpoint = function jpoint(x, y, z) {\n  return new JPoint(this, x, y, z);\n};\n\nJPoint.prototype.toP = function toP() {\n  if (this.isInfinity())\n    return this.curve.point(null, null);\n\n  var zinv = this.z.redInvm();\n  var zinv2 = zinv.redSqr();\n  var ax = this.x.redMul(zinv2);\n  var ay = this.y.redMul(zinv2).redMul(zinv);\n\n  return this.curve.point(ax, ay);\n};\n\nJPoint.prototype.neg = function neg() {\n  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n};\n\nJPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p;\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 12M + 4S + 7A\n  var pz2 = p.z.redSqr();\n  var z2 = this.z.redSqr();\n  var u1 = this.x.redMul(pz2);\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y.redMul(pz2.redMul(p.z));\n  var s2 = p.y.redMul(z2.redMul(this.z));\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(p.z).redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mixedAdd = function mixedAdd(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p.toJ();\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 8M + 3S + 7A\n  var z2 = this.z.redSqr();\n  var u1 = this.x;\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y;\n  var s2 = p.y.redMul(z2).redMul(this.z);\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.dblp = function dblp(pow) {\n  if (pow === 0)\n    return this;\n  if (this.isInfinity())\n    return this;\n  if (!pow)\n    return this.dbl();\n\n  var i;\n  if (this.curve.zeroA || this.curve.threeA) {\n    var r = this;\n    for (i = 0; i < pow; i++)\n      r = r.dbl();\n    return r;\n  }\n\n  // 1M + 2S + 1A + N * (4S + 5M + 8A)\n  // N = 1 => 6M + 6S + 9A\n  var a = this.curve.a;\n  var tinv = this.curve.tinv;\n\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  // Reuse results\n  var jyd = jy.redAdd(jy);\n  for (i = 0; i < pow; i++) {\n    var jx2 = jx.redSqr();\n    var jyd2 = jyd.redSqr();\n    var jyd4 = jyd2.redSqr();\n    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n    var t1 = jx.redMul(jyd2);\n    var nx = c.redSqr().redISub(t1.redAdd(t1));\n    var t2 = t1.redISub(nx);\n    var dny = c.redMul(t2);\n    dny = dny.redIAdd(dny).redISub(jyd4);\n    var nz = jyd.redMul(jz);\n    if (i + 1 < pow)\n      jz4 = jz4.redMul(jyd4);\n\n    jx = nx;\n    jz = nz;\n    jyd = dny;\n  }\n\n  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);\n};\n\nJPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  if (this.curve.zeroA)\n    return this._zeroDbl();\n  else if (this.curve.threeA)\n    return this._threeDbl();\n  else\n    return this._dbl();\n};\n\nJPoint.prototype._zeroDbl = function _zeroDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 14A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a; a = 0\n    var m = xx.redAdd(xx).redIAdd(xx);\n    // T = M ^ 2 - 2*S\n    var t = m.redSqr().redISub(s).redISub(s);\n\n    // 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2*Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-dbl-2009-l\n    // 2M + 5S + 13A\n\n    // A = X1^2\n    var a = this.x.redSqr();\n    // B = Y1^2\n    var b = this.y.redSqr();\n    // C = B^2\n    var c = b.redSqr();\n    // D = 2 * ((X1 + B)^2 - A - C)\n    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);\n    d = d.redIAdd(d);\n    // E = 3 * A\n    var e = a.redAdd(a).redIAdd(a);\n    // F = E^2\n    var f = e.redSqr();\n\n    // 8 * C\n    var c8 = c.redIAdd(c);\n    c8 = c8.redIAdd(c8);\n    c8 = c8.redIAdd(c8);\n\n    // X3 = F - 2 * D\n    nx = f.redISub(d).redISub(d);\n    // Y3 = E * (D - X3) - 8 * C\n    ny = e.redMul(d.redISub(nx)).redISub(c8);\n    // Z3 = 2 * Y1 * Z1\n    nz = this.y.redMul(this.z);\n    nz = nz.redIAdd(nz);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._threeDbl = function _threeDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 15A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a\n    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);\n    // T = M^2 - 2 * S\n    var t = m.redSqr().redISub(s).redISub(s);\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2 * Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b\n    // 3M + 5S\n\n    // delta = Z1^2\n    var delta = this.z.redSqr();\n    // gamma = Y1^2\n    var gamma = this.y.redSqr();\n    // beta = X1 * gamma\n    var beta = this.x.redMul(gamma);\n    // alpha = 3 * (X1 - delta) * (X1 + delta)\n    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));\n    alpha = alpha.redAdd(alpha).redIAdd(alpha);\n    // X3 = alpha^2 - 8 * beta\n    var beta4 = beta.redIAdd(beta);\n    beta4 = beta4.redIAdd(beta4);\n    var beta8 = beta4.redAdd(beta4);\n    nx = alpha.redSqr().redISub(beta8);\n    // Z3 = (Y1 + Z1)^2 - gamma - delta\n    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);\n    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2\n    var ggamma8 = gamma.redSqr();\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._dbl = function _dbl() {\n  var a = this.curve.a;\n\n  // 4M + 6S + 10A\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  var jx2 = jx.redSqr();\n  var jy2 = jy.redSqr();\n\n  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n  var jxd4 = jx.redAdd(jx);\n  jxd4 = jxd4.redIAdd(jxd4);\n  var t1 = jxd4.redMul(jy2);\n  var nx = c.redSqr().redISub(t1.redAdd(t1));\n  var t2 = t1.redISub(nx);\n\n  var jyd8 = jy2.redSqr();\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  var ny = c.redMul(t2).redISub(jyd8);\n  var nz = jy.redAdd(jy).redMul(jz);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.trpl = function trpl() {\n  if (!this.curve.zeroA)\n    return this.dbl().add(this);\n\n  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl\n  // 5M + 10S + ...\n\n  // XX = X1^2\n  var xx = this.x.redSqr();\n  // YY = Y1^2\n  var yy = this.y.redSqr();\n  // ZZ = Z1^2\n  var zz = this.z.redSqr();\n  // YYYY = YY^2\n  var yyyy = yy.redSqr();\n  // M = 3 * XX + a * ZZ2; a = 0\n  var m = xx.redAdd(xx).redIAdd(xx);\n  // MM = M^2\n  var mm = m.redSqr();\n  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM\n  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n  e = e.redIAdd(e);\n  e = e.redAdd(e).redIAdd(e);\n  e = e.redISub(mm);\n  // EE = E^2\n  var ee = e.redSqr();\n  // T = 16*YYYY\n  var t = yyyy.redIAdd(yyyy);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  // U = (M + E)^2 - MM - EE - T\n  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);\n  // X3 = 4 * (X1 * EE - 4 * YY * U)\n  var yyu4 = yy.redMul(u);\n  yyu4 = yyu4.redIAdd(yyu4);\n  yyu4 = yyu4.redIAdd(yyu4);\n  var nx = this.x.redMul(ee).redISub(yyu4);\n  nx = nx.redIAdd(nx);\n  nx = nx.redIAdd(nx);\n  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)\n  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  // Z3 = (Z1 + E)^2 - ZZ - EE\n  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mul = function mul(k, kbase) {\n  k = new BN(k, kbase);\n\n  return this.curve._wnafMul(this, k);\n};\n\nJPoint.prototype.eq = function eq(p) {\n  if (p.type === 'affine')\n    return this.eq(p.toJ());\n\n  if (this === p)\n    return true;\n\n  // x1 * z2^2 == x2 * z1^2\n  var z2 = this.z.redSqr();\n  var pz2 = p.z.redSqr();\n  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)\n    return false;\n\n  // y1 * z2^3 == y2 * z1^3\n  var z3 = z2.redMul(this.z);\n  var pz3 = pz2.redMul(p.z);\n  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;\n};\n\nJPoint.prototype.eqXToP = function eqXToP(x) {\n  var zs = this.z.redSqr();\n  var rx = x.toRed(this.curve.red).redMul(zs);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(zs);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\nJPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC JPoint Infinity>';\n  return '<EC JPoint x: ' + this.x.toString(16, 2) +\n      ' y: ' + this.y.toString(16, 2) +\n      ' z: ' + this.z.toString(16, 2) + '>';\n};\n\nJPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n","'use strict';\n\nvar curve = exports;\n\ncurve.base = require('./base');\ncurve.short = require('./short');\ncurve.mont = require('./mont');\ncurve.edwards = require('./edwards');\n","'use strict';\n\nvar curves = exports;\n\nvar hash = require('hash.js');\nvar curve = require('./curve');\nvar utils = require('./utils');\n\nvar assert = utils.assert;\n\nfunction PresetCurve(options) {\n  if (options.type === 'short')\n    this.curve = new curve.short(options);\n  else if (options.type === 'edwards')\n    this.curve = new curve.edwards(options);\n  else\n    this.curve = new curve.mont(options);\n  this.g = this.curve.g;\n  this.n = this.curve.n;\n  this.hash = options.hash;\n\n  assert(this.g.validate(), 'Invalid curve');\n  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');\n}\ncurves.PresetCurve = PresetCurve;\n\nfunction defineCurve(name, options) {\n  Object.defineProperty(curves, name, {\n    configurable: true,\n    enumerable: true,\n    get: function() {\n      var curve = new PresetCurve(options);\n      Object.defineProperty(curves, name, {\n        configurable: true,\n        enumerable: true,\n        value: curve,\n      });\n      return curve;\n    },\n  });\n}\n\ndefineCurve('p192', {\n  type: 'short',\n  prime: 'p192',\n  p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',\n  b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',\n  n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',\n    '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811',\n  ],\n});\n\ndefineCurve('p224', {\n  type: 'short',\n  prime: 'p224',\n  p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',\n  b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',\n  n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',\n    'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34',\n  ],\n});\n\ndefineCurve('p256', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',\n  a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',\n  b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',\n  n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',\n    '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5',\n  ],\n});\n\ndefineCurve('p384', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 ffffffff',\n  a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 fffffffc',\n  b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' +\n     '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',\n  n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' +\n     'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',\n  hash: hash.sha384,\n  gRed: false,\n  g: [\n    'aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' +\n    '5502f25d bf55296c 3a545e38 72760ab7',\n    '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' +\n    '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f',\n  ],\n});\n\ndefineCurve('p521', {\n  type: 'short',\n  prime: null,\n  p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff',\n  a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff fffffffc',\n  b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' +\n     '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' +\n     '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',\n  n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' +\n     'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',\n  hash: hash.sha512,\n  gRed: false,\n  g: [\n    '000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' +\n    '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' +\n    'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66',\n    '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' +\n    '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' +\n    '3fad0761 353c7086 a272c240 88be9476 9fd16650',\n  ],\n});\n\ndefineCurve('curve25519', {\n  type: 'mont',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '76d06',\n  b: '1',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '9',\n  ],\n});\n\ndefineCurve('ed25519', {\n  type: 'edwards',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '-1',\n  c: '1',\n  // -121665 * (121666^(-1)) (mod P)\n  d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',\n\n    // 4/5\n    '6666666666666666666666666666666666666666666666666666666666666658',\n  ],\n});\n\nvar pre;\ntry {\n  pre = require('./precomputed/secp256k1');\n} catch (e) {\n  pre = undefined;\n}\n\ndefineCurve('secp256k1', {\n  type: 'short',\n  prime: 'k256',\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',\n  a: '0',\n  b: '7',\n  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',\n  h: '1',\n  hash: hash.sha256,\n\n  // Precomputed endomorphism\n  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',\n  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',\n  basis: [\n    {\n      a: '3086d221a7d46bcde86c90e49284eb15',\n      b: '-e4437ed6010e88286f547fa90abfe4c3',\n    },\n    {\n      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',\n      b: '3086d221a7d46bcde86c90e49284eb15',\n    },\n  ],\n\n  gRed: false,\n  g: [\n    '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',\n    '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',\n    pre,\n  ],\n});\n","'use strict';\n\nvar hash = require('hash.js');\nvar utils = require('minimalistic-crypto-utils');\nvar assert = require('minimalistic-assert');\n\nfunction HmacDRBG(options) {\n  if (!(this instanceof HmacDRBG))\n    return new HmacDRBG(options);\n  this.hash = options.hash;\n  this.predResist = !!options.predResist;\n\n  this.outLen = this.hash.outSize;\n  this.minEntropy = options.minEntropy || this.hash.hmacStrength;\n\n  this._reseed = null;\n  this.reseedInterval = null;\n  this.K = null;\n  this.V = null;\n\n  var entropy = utils.toArray(options.entropy, options.entropyEnc || 'hex');\n  var nonce = utils.toArray(options.nonce, options.nonceEnc || 'hex');\n  var pers = utils.toArray(options.pers, options.persEnc || 'hex');\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n  this._init(entropy, nonce, pers);\n}\nmodule.exports = HmacDRBG;\n\nHmacDRBG.prototype._init = function init(entropy, nonce, pers) {\n  var seed = entropy.concat(nonce).concat(pers);\n\n  this.K = new Array(this.outLen / 8);\n  this.V = new Array(this.outLen / 8);\n  for (var i = 0; i < this.V.length; i++) {\n    this.K[i] = 0x00;\n    this.V[i] = 0x01;\n  }\n\n  this._update(seed);\n  this._reseed = 1;\n  this.reseedInterval = 0x1000000000000;  // 2^48\n};\n\nHmacDRBG.prototype._hmac = function hmac() {\n  return new hash.hmac(this.hash, this.K);\n};\n\nHmacDRBG.prototype._update = function update(seed) {\n  var kmac = this._hmac()\n                 .update(this.V)\n                 .update([ 0x00 ]);\n  if (seed)\n    kmac = kmac.update(seed);\n  this.K = kmac.digest();\n  this.V = this._hmac().update(this.V).digest();\n  if (!seed)\n    return;\n\n  this.K = this._hmac()\n               .update(this.V)\n               .update([ 0x01 ])\n               .update(seed)\n               .digest();\n  this.V = this._hmac().update(this.V).digest();\n};\n\nHmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {\n  // Optional entropy enc\n  if (typeof entropyEnc !== 'string') {\n    addEnc = add;\n    add = entropyEnc;\n    entropyEnc = null;\n  }\n\n  entropy = utils.toArray(entropy, entropyEnc);\n  add = utils.toArray(add, addEnc);\n\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n\n  this._update(entropy.concat(add || []));\n  this._reseed = 1;\n};\n\nHmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {\n  if (this._reseed > this.reseedInterval)\n    throw new Error('Reseed is required');\n\n  // Optional encoding\n  if (typeof enc !== 'string') {\n    addEnc = add;\n    add = enc;\n    enc = null;\n  }\n\n  // Optional additional data\n  if (add) {\n    add = utils.toArray(add, addEnc || 'hex');\n    this._update(add);\n  }\n\n  var temp = [];\n  while (temp.length < len) {\n    this.V = this._hmac().update(this.V).digest();\n    temp = temp.concat(this.V);\n  }\n\n  var res = temp.slice(0, len);\n  this._update(add);\n  this._reseed++;\n  return utils.encode(res, enc);\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction KeyPair(ec, options) {\n  this.ec = ec;\n  this.priv = null;\n  this.pub = null;\n\n  // KeyPair(ec, { priv: ..., pub: ... })\n  if (options.priv)\n    this._importPrivate(options.priv, options.privEnc);\n  if (options.pub)\n    this._importPublic(options.pub, options.pubEnc);\n}\nmodule.exports = KeyPair;\n\nKeyPair.fromPublic = function fromPublic(ec, pub, enc) {\n  if (pub instanceof KeyPair)\n    return pub;\n\n  return new KeyPair(ec, {\n    pub: pub,\n    pubEnc: enc,\n  });\n};\n\nKeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {\n  if (priv instanceof KeyPair)\n    return priv;\n\n  return new KeyPair(ec, {\n    priv: priv,\n    privEnc: enc,\n  });\n};\n\nKeyPair.prototype.validate = function validate() {\n  var pub = this.getPublic();\n\n  if (pub.isInfinity())\n    return { result: false, reason: 'Invalid public key' };\n  if (!pub.validate())\n    return { result: false, reason: 'Public key is not a point' };\n  if (!pub.mul(this.ec.curve.n).isInfinity())\n    return { result: false, reason: 'Public key * N != O' };\n\n  return { result: true, reason: null };\n};\n\nKeyPair.prototype.getPublic = function getPublic(compact, enc) {\n  // compact is optional argument\n  if (typeof compact === 'string') {\n    enc = compact;\n    compact = null;\n  }\n\n  if (!this.pub)\n    this.pub = this.ec.g.mul(this.priv);\n\n  if (!enc)\n    return this.pub;\n\n  return this.pub.encode(enc, compact);\n};\n\nKeyPair.prototype.getPrivate = function getPrivate(enc) {\n  if (enc === 'hex')\n    return this.priv.toString(16, 2);\n  else\n    return this.priv;\n};\n\nKeyPair.prototype._importPrivate = function _importPrivate(key, enc) {\n  this.priv = new BN(key, enc || 16);\n\n  // Ensure that the priv won't be bigger than n, otherwise we may fail\n  // in fixed multiplication method\n  this.priv = this.priv.umod(this.ec.curve.n);\n};\n\nKeyPair.prototype._importPublic = function _importPublic(key, enc) {\n  if (key.x || key.y) {\n    // Montgomery points only have an `x` coordinate.\n    // Weierstrass/Edwards points on the other hand have both `x` and\n    // `y` coordinates.\n    if (this.ec.curve.type === 'mont') {\n      assert(key.x, 'Need x coordinate');\n    } else if (this.ec.curve.type === 'short' ||\n               this.ec.curve.type === 'edwards') {\n      assert(key.x && key.y, 'Need both x and y coordinate');\n    }\n    this.pub = this.ec.curve.point(key.x, key.y);\n    return;\n  }\n  this.pub = this.ec.curve.decodePoint(key, enc);\n};\n\n// ECDH\nKeyPair.prototype.derive = function derive(pub) {\n  if(!pub.validate()) {\n    assert(pub.validate(), 'public point not validated');\n  }\n  return pub.mul(this.priv).getX();\n};\n\n// ECDSA\nKeyPair.prototype.sign = function sign(msg, enc, options) {\n  return this.ec.sign(msg, this, enc, options);\n};\n\nKeyPair.prototype.verify = function verify(msg, signature) {\n  return this.ec.verify(msg, signature, this);\n};\n\nKeyPair.prototype.inspect = function inspect() {\n  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +\n         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';\n};\n","'use strict';\n\nvar BN = require('bn.js');\n\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction Signature(options, enc) {\n  if (options instanceof Signature)\n    return options;\n\n  if (this._importDER(options, enc))\n    return;\n\n  assert(options.r && options.s, 'Signature without r or s');\n  this.r = new BN(options.r, 16);\n  this.s = new BN(options.s, 16);\n  if (options.recoveryParam === undefined)\n    this.recoveryParam = null;\n  else\n    this.recoveryParam = options.recoveryParam;\n}\nmodule.exports = Signature;\n\nfunction Position() {\n  this.place = 0;\n}\n\nfunction getLength(buf, p) {\n  var initial = buf[p.place++];\n  if (!(initial & 0x80)) {\n    return initial;\n  }\n  var octetLen = initial & 0xf;\n\n  // Indefinite length or overflow\n  if (octetLen === 0 || octetLen > 4) {\n    return false;\n  }\n\n  var val = 0;\n  for (var i = 0, off = p.place; i < octetLen; i++, off++) {\n    val <<= 8;\n    val |= buf[off];\n    val >>>= 0;\n  }\n\n  // Leading zeroes\n  if (val <= 0x7f) {\n    return false;\n  }\n\n  p.place = off;\n  return val;\n}\n\nfunction rmPadding(buf) {\n  var i = 0;\n  var len = buf.length - 1;\n  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {\n    i++;\n  }\n  if (i === 0) {\n    return buf;\n  }\n  return buf.slice(i);\n}\n\nSignature.prototype._importDER = function _importDER(data, enc) {\n  data = utils.toArray(data, enc);\n  var p = new Position();\n  if (data[p.place++] !== 0x30) {\n    return false;\n  }\n  var len = getLength(data, p);\n  if (len === false) {\n    return false;\n  }\n  if ((len + p.place) !== data.length) {\n    return false;\n  }\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var rlen = getLength(data, p);\n  if (rlen === false) {\n    return false;\n  }\n  var r = data.slice(p.place, rlen + p.place);\n  p.place += rlen;\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var slen = getLength(data, p);\n  if (slen === false) {\n    return false;\n  }\n  if (data.length !== slen + p.place) {\n    return false;\n  }\n  var s = data.slice(p.place, slen + p.place);\n  if (r[0] === 0) {\n    if (r[1] & 0x80) {\n      r = r.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n  if (s[0] === 0) {\n    if (s[1] & 0x80) {\n      s = s.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n\n  this.r = new BN(r);\n  this.s = new BN(s);\n  this.recoveryParam = null;\n\n  return true;\n};\n\nfunction constructLength(arr, len) {\n  if (len < 0x80) {\n    arr.push(len);\n    return;\n  }\n  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);\n  arr.push(octets | 0x80);\n  while (--octets) {\n    arr.push((len >>> (octets << 3)) & 0xff);\n  }\n  arr.push(len);\n}\n\nSignature.prototype.toDER = function toDER(enc) {\n  var r = this.r.toArray();\n  var s = this.s.toArray();\n\n  // Pad values\n  if (r[0] & 0x80)\n    r = [ 0 ].concat(r);\n  // Pad values\n  if (s[0] & 0x80)\n    s = [ 0 ].concat(s);\n\n  r = rmPadding(r);\n  s = rmPadding(s);\n\n  while (!s[0] && !(s[1] & 0x80)) {\n    s = s.slice(1);\n  }\n  var arr = [ 0x02 ];\n  constructLength(arr, r.length);\n  arr = arr.concat(r);\n  arr.push(0x02);\n  constructLength(arr, s.length);\n  var backHalf = arr.concat(s);\n  var res = [ 0x30 ];\n  constructLength(res, backHalf.length);\n  res = res.concat(backHalf);\n  return utils.encode(res, enc);\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar HmacDRBG = require('hmac-drbg');\nvar utils = require('../utils');\nvar curves = require('../curves');\nvar rand = require('brorand');\nvar assert = utils.assert;\n\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EC(options) {\n  if (!(this instanceof EC))\n    return new EC(options);\n\n  // Shortcut `elliptic.ec(curve-name)`\n  if (typeof options === 'string') {\n    assert(Object.prototype.hasOwnProperty.call(curves, options),\n      'Unknown curve ' + options);\n\n    options = curves[options];\n  }\n\n  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`\n  if (options instanceof curves.PresetCurve)\n    options = { curve: options };\n\n  this.curve = options.curve.curve;\n  this.n = this.curve.n;\n  this.nh = this.n.ushrn(1);\n  this.g = this.curve.g;\n\n  // Point on curve\n  this.g = options.curve.g;\n  this.g.precompute(options.curve.n.bitLength() + 1);\n\n  // Hash for function for DRBG\n  this.hash = options.hash || options.curve.hash;\n}\nmodule.exports = EC;\n\nEC.prototype.keyPair = function keyPair(options) {\n  return new KeyPair(this, options);\n};\n\nEC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {\n  return KeyPair.fromPrivate(this, priv, enc);\n};\n\nEC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {\n  return KeyPair.fromPublic(this, pub, enc);\n};\n\nEC.prototype.genKeyPair = function genKeyPair(options) {\n  if (!options)\n    options = {};\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n    entropy: options.entropy || rand(this.hash.hmacStrength),\n    entropyEnc: options.entropy && options.entropyEnc || 'utf8',\n    nonce: this.n.toArray(),\n  });\n\n  var bytes = this.n.byteLength();\n  var ns2 = this.n.sub(new BN(2));\n  for (;;) {\n    var priv = new BN(drbg.generate(bytes));\n    if (priv.cmp(ns2) > 0)\n      continue;\n\n    priv.iaddn(1);\n    return this.keyFromPrivate(priv);\n  }\n};\n\nEC.prototype._truncateToN = function _truncateToN(msg, truncOnly) {\n  var delta = msg.byteLength() * 8 - this.n.bitLength();\n  if (delta > 0)\n    msg = msg.ushrn(delta);\n  if (!truncOnly && msg.cmp(this.n) >= 0)\n    return msg.sub(this.n);\n  else\n    return msg;\n};\n\nEC.prototype.sign = function sign(msg, key, enc, options) {\n  if (typeof enc === 'object') {\n    options = enc;\n    enc = null;\n  }\n  if (!options)\n    options = {};\n\n  key = this.keyFromPrivate(key, enc);\n  msg = this._truncateToN(new BN(msg, 16));\n\n  // Zero-extend key to provide enough entropy\n  var bytes = this.n.byteLength();\n  var bkey = key.getPrivate().toArray('be', bytes);\n\n  // Zero-extend nonce to have the same byte size as N\n  var nonce = msg.toArray('be', bytes);\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    entropy: bkey,\n    nonce: nonce,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n  });\n\n  // Number of bytes to generate\n  var ns1 = this.n.sub(new BN(1));\n\n  for (var iter = 0; ; iter++) {\n    var k = options.k ?\n      options.k(iter) :\n      new BN(drbg.generate(this.n.byteLength()));\n    k = this._truncateToN(k, true);\n    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)\n      continue;\n\n    var kp = this.g.mul(k);\n    if (kp.isInfinity())\n      continue;\n\n    var kpX = kp.getX();\n    var r = kpX.umod(this.n);\n    if (r.cmpn(0) === 0)\n      continue;\n\n    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));\n    s = s.umod(this.n);\n    if (s.cmpn(0) === 0)\n      continue;\n\n    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |\n                        (kpX.cmp(r) !== 0 ? 2 : 0);\n\n    // Use complement of `s`, if it is > `n / 2`\n    if (options.canonical && s.cmp(this.nh) > 0) {\n      s = this.n.sub(s);\n      recoveryParam ^= 1;\n    }\n\n    return new Signature({ r: r, s: s, recoveryParam: recoveryParam });\n  }\n};\n\nEC.prototype.verify = function verify(msg, signature, key, enc) {\n  msg = this._truncateToN(new BN(msg, 16));\n  key = this.keyFromPublic(key, enc);\n  signature = new Signature(signature, 'hex');\n\n  // Perform primitive values validation\n  var r = signature.r;\n  var s = signature.s;\n  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)\n    return false;\n  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)\n    return false;\n\n  // Validate signature\n  var sinv = s.invm(this.n);\n  var u1 = sinv.mul(msg).umod(this.n);\n  var u2 = sinv.mul(r).umod(this.n);\n  var p;\n\n  if (!this.curve._maxwellTrick) {\n    p = this.g.mulAdd(u1, key.getPublic(), u2);\n    if (p.isInfinity())\n      return false;\n\n    return p.getX().umod(this.n).cmp(r) === 0;\n  }\n\n  // NOTE: Greg Maxwell's trick, inspired by:\n  // https://git.io/vad3K\n\n  p = this.g.jmulAdd(u1, key.getPublic(), u2);\n  if (p.isInfinity())\n    return false;\n\n  // Compare `p.x` of Jacobian point with `r`,\n  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the\n  // inverse of `p.z^2`\n  return p.eqXToP(r);\n};\n\nEC.prototype.recoverPubKey = function(msg, signature, j, enc) {\n  assert((3 & j) === j, 'The recovery param is more than two bits');\n  signature = new Signature(signature, enc);\n\n  var n = this.n;\n  var e = new BN(msg);\n  var r = signature.r;\n  var s = signature.s;\n\n  // A set LSB signifies that the y-coordinate is odd\n  var isYOdd = j & 1;\n  var isSecondKey = j >> 1;\n  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)\n    throw new Error('Unable to find sencond key candinate');\n\n  // 1.1. Let x = r + jn.\n  if (isSecondKey)\n    r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);\n  else\n    r = this.curve.pointFromX(r, isYOdd);\n\n  var rInv = signature.r.invm(n);\n  var s1 = n.sub(e).mul(rInv).umod(n);\n  var s2 = s.mul(rInv).umod(n);\n\n  // 1.6.1 Compute Q = r^-1 (sR -  eG)\n  //               Q = r^-1 (sR + -eG)\n  return this.g.mulAdd(s1, r, s2);\n};\n\nEC.prototype.getKeyRecoveryParam = function(e, signature, Q, enc) {\n  signature = new Signature(signature, enc);\n  if (signature.recoveryParam !== null)\n    return signature.recoveryParam;\n\n  for (var i = 0; i < 4; i++) {\n    var Qprime;\n    try {\n      Qprime = this.recoverPubKey(e, signature, i);\n    } catch (e) {\n      continue;\n    }\n\n    if (Qprime.eq(Q))\n      return i;\n  }\n  throw new Error('Unable to find valid recovery factor');\n};\n","'use strict';\n\nvar elliptic = exports;\n\nelliptic.version = require('../package.json').version;\nelliptic.utils = require('./elliptic/utils');\nelliptic.rand = require('brorand');\nelliptic.curve = require('./elliptic/curve');\nelliptic.curves = require('./elliptic/curves');\n\n// Protocols\nelliptic.ec = require('./elliptic/ec');\nelliptic.eddsa = require('./elliptic/eddsa');\n","import _ec from \"elliptic\";\nvar EC = _ec.ec;\nexport { EC };\n//# sourceMappingURL=elliptic.js.map","export const version = \"signing-key/5.7.0\";\n","\"use strict\";\n\nimport { EC } from \"./elliptic\";\n\nimport { arrayify, BytesLike, hexDataLength, hexlify, hexZeroPad, Signature, SignatureLike, splitSignature } from \"@ethersproject/bytes\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nlet _curve: EC = null\nfunction getCurve() {\n    if (!_curve) {\n        _curve = new EC(\"secp256k1\");\n    }\n    return _curve;\n}\n\nexport class SigningKey {\n\n    readonly curve: string;\n\n    readonly privateKey: string;\n    readonly publicKey: string;\n    readonly compressedPublicKey: string;\n\n    //readonly address: string;\n\n    readonly _isSigningKey: boolean;\n\n    constructor(privateKey: BytesLike) {\n        defineReadOnly(this, \"curve\", \"secp256k1\");\n\n        defineReadOnly(this, \"privateKey\", hexlify(privateKey));\n        if (hexDataLength(this.privateKey) !== 32) {\n            logger.throwArgumentError(\"invalid private key\", \"privateKey\", \"[[ REDACTED ]]\");\n        }\n\n        const keyPair = getCurve().keyFromPrivate(arrayify(this.privateKey));\n\n        defineReadOnly(this, \"publicKey\", \"0x\" + keyPair.getPublic(false, \"hex\"));\n        defineReadOnly(this, \"compressedPublicKey\", \"0x\" + keyPair.getPublic(true, \"hex\"));\n\n        defineReadOnly(this, \"_isSigningKey\", true);\n    }\n\n    _addPoint(other: BytesLike): string {\n        const p0 =  getCurve().keyFromPublic(arrayify(this.publicKey));\n        const p1 =  getCurve().keyFromPublic(arrayify(other));\n        return \"0x\" + p0.pub.add(p1.pub).encodeCompressed(\"hex\");\n    }\n\n    signDigest(digest: BytesLike): Signature {\n        const keyPair = getCurve().keyFromPrivate(arrayify(this.privateKey));\n        const digestBytes = arrayify(digest);\n        if (digestBytes.length !== 32) {\n            logger.throwArgumentError(\"bad digest length\", \"digest\", digest);\n        }\n        const signature = keyPair.sign(digestBytes, { canonical: true });\n        return splitSignature({\n            recoveryParam: signature.recoveryParam,\n            r: hexZeroPad(\"0x\" + signature.r.toString(16), 32),\n            s: hexZeroPad(\"0x\" + signature.s.toString(16), 32),\n        })\n    }\n\n    computeSharedSecret(otherKey: BytesLike): string {\n        const keyPair = getCurve().keyFromPrivate(arrayify(this.privateKey));\n        const otherKeyPair = getCurve().keyFromPublic(arrayify(computePublicKey(otherKey)));\n        return hexZeroPad(\"0x\" + keyPair.derive(otherKeyPair.getPublic()).toString(16), 32);\n    }\n\n    static isSigningKey(value: any): value is SigningKey {\n        return !!(value && value._isSigningKey);\n    }\n}\n\nexport function recoverPublicKey(digest: BytesLike, signature: SignatureLike): string {\n    const sig = splitSignature(signature);\n    const rs = { r: arrayify(sig.r), s: arrayify(sig.s) };\n    return \"0x\" + getCurve().recoverPubKey(arrayify(digest), rs, sig.recoveryParam).encode(\"hex\", false);\n}\n\nexport function computePublicKey(key: BytesLike, compressed?: boolean): string {\n    const bytes = arrayify(key);\n\n    if (bytes.length === 32) {\n        const signingKey = new SigningKey(bytes);\n        if (compressed) {\n            return \"0x\" + getCurve().keyFromPrivate(bytes).getPublic(true, \"hex\");\n        }\n        return signingKey.publicKey;\n\n    } else if (bytes.length === 33) {\n        if (compressed) { return hexlify(bytes); }\n        return \"0x\" + getCurve().keyFromPublic(bytes).getPublic(false, \"hex\");\n\n    } else if (bytes.length === 65) {\n        if (!compressed) { return hexlify(bytes); }\n        return \"0x\" + getCurve().keyFromPublic(bytes).getPublic(true, \"hex\");\n    }\n\n    return logger.throwArgumentError(\"invalid public or private key\", \"key\", \"[REDACTED]\");\n}\n\n","export const version = \"transactions/5.7.0\";\n","\"use strict\";\n\nimport { getAddress } from \"@ethersproject/address\";\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { arrayify, BytesLike, DataOptions, hexConcat, hexDataLength, hexDataSlice, hexlify, hexZeroPad, isBytesLike, SignatureLike, splitSignature, stripZeros, } from \"@ethersproject/bytes\";\nimport { Zero } from \"@ethersproject/constants\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { checkProperties } from \"@ethersproject/properties\";\nimport * as RLP from \"@ethersproject/rlp\";\nimport { computePublicKey, recoverPublicKey } from \"@ethersproject/signing-key\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n///////////////////////////////\n// Exported Types\n\nexport type AccessList = Array<{ address: string, storageKeys: Array<string> }>;\n\n// Input allows flexibility in describing an access list\nexport type AccessListish = AccessList |\n                            Array<[ string, Array<string> ]> |\n                            Record<string, Array<string>>;\n\nexport enum TransactionTypes {\n    legacy = 0,\n    eip2930 = 1,\n    eip1559 = 2,\n};\n\nexport type UnsignedTransaction = {\n    to?: string;\n    nonce?: number;\n\n    gasLimit?: BigNumberish;\n    gasPrice?: BigNumberish;\n\n    data?: BytesLike;\n    value?: BigNumberish;\n    chainId?: number;\n\n    // Typed-Transaction features\n    type?: number | null;\n\n    // EIP-2930; Type 1 & EIP-1559; Type 2\n    accessList?: AccessListish;\n\n    // EIP-1559; Type 2\n    maxPriorityFeePerGas?: BigNumberish;\n    maxFeePerGas?: BigNumberish;\n}\n\nexport interface Transaction {\n    hash?: string;\n\n    to?: string;\n    from?: string;\n    nonce: number;\n\n    gasLimit: BigNumber;\n    gasPrice?: BigNumber;\n\n    data: string;\n    value: BigNumber;\n    chainId: number;\n\n    r?: string;\n    s?: string;\n    v?: number;\n\n    // Typed-Transaction features\n    type?: number | null;\n\n    // EIP-2930; Type 1 & EIP-1559; Type 2\n    accessList?: AccessList;\n\n    // EIP-1559; Type 2\n    maxPriorityFeePerGas?: BigNumber;\n    maxFeePerGas?: BigNumber;\n}\n\n///////////////////////////////\n\nfunction handleAddress(value: string): string {\n    if (value === \"0x\") { return null; }\n    return getAddress(value);\n}\n\nfunction handleNumber(value: string): BigNumber {\n    if (value === \"0x\") { return Zero; }\n    return BigNumber.from(value);\n}\n\n// Legacy Transaction Fields\nconst transactionFields = [\n    { name: \"nonce\",    maxLength: 32, numeric: true },\n    { name: \"gasPrice\", maxLength: 32, numeric: true },\n    { name: \"gasLimit\", maxLength: 32, numeric: true },\n    { name: \"to\",          length: 20 },\n    { name: \"value\",    maxLength: 32, numeric: true },\n    { name: \"data\" },\n];\n\nconst allowedTransactionKeys: { [ key: string ]: boolean } = {\n    chainId: true, data: true, gasLimit: true, gasPrice:true, nonce: true, to: true, type: true, value: true\n}\n\nexport function computeAddress(key: BytesLike | string): string {\n    const publicKey = computePublicKey(key);\n    return getAddress(hexDataSlice(keccak256(hexDataSlice(publicKey, 1)), 12));\n}\n\nexport function recoverAddress(digest: BytesLike, signature: SignatureLike): string {\n    return computeAddress(recoverPublicKey(arrayify(digest), signature));\n}\n\nfunction formatNumber(value: BigNumberish, name: string): Uint8Array {\n    const result = stripZeros(BigNumber.from(value).toHexString());\n    if (result.length > 32) {\n        logger.throwArgumentError(\"invalid length for \" + name, (\"transaction:\" + name), value);\n    }\n    return result;\n}\n\nfunction accessSetify(addr: string, storageKeys: Array<string>): { address: string,storageKeys: Array<string> } {\n    return {\n        address: getAddress(addr),\n        storageKeys: (storageKeys || []).map((storageKey, index) => {\n            if (hexDataLength(storageKey) !== 32) {\n                logger.throwArgumentError(\"invalid access list storageKey\", `accessList[${ addr }:${ index }]`, storageKey)\n            }\n            return storageKey.toLowerCase();\n        })\n    };\n}\n\nexport function accessListify(value: AccessListish): AccessList {\n    if (Array.isArray(value)) {\n        return (<Array<[ string, Array<string>] | { address: string, storageKeys: Array<string>}>>value).map((set, index) => {\n            if (Array.isArray(set)) {\n                if (set.length > 2) {\n                    logger.throwArgumentError(\"access list expected to be [ address, storageKeys[] ]\", `value[${ index }]`, set);\n                }\n                return accessSetify(set[0], set[1])\n            }\n            return accessSetify(set.address, set.storageKeys);\n        });\n    }\n\n    const result: Array<{ address: string, storageKeys: Array<string> }> = Object.keys(value).map((addr) => {\n        const storageKeys: Record<string, true> = value[addr].reduce((accum, storageKey) => {\n            accum[storageKey] = true;\n            return accum;\n        }, <Record<string, true>>{ });\n        return accessSetify(addr, Object.keys(storageKeys).sort())\n    });\n    result.sort((a, b) => (a.address.localeCompare(b.address)));\n    return result;\n}\n\nfunction formatAccessList(value: AccessListish): Array<[ string, Array<string> ]> {\n    return accessListify(value).map((set) => [ set.address, set.storageKeys ]);\n}\n\nfunction _serializeEip1559(transaction: UnsignedTransaction, signature?: SignatureLike): string {\n    // If there is an explicit gasPrice, make sure it matches the\n    // EIP-1559 fees; otherwise they may not understand what they\n    // think they are setting in terms of fee.\n    if (transaction.gasPrice != null) {\n        const gasPrice = BigNumber.from(transaction.gasPrice);\n        const maxFeePerGas = BigNumber.from(transaction.maxFeePerGas || 0);\n        if (!gasPrice.eq(maxFeePerGas)) {\n            logger.throwArgumentError(\"mismatch EIP-1559 gasPrice != maxFeePerGas\", \"tx\", {\n                gasPrice, maxFeePerGas\n            });\n        }\n    }\n\n    const fields: any = [\n        formatNumber(transaction.chainId || 0, \"chainId\"),\n        formatNumber(transaction.nonce || 0, \"nonce\"),\n        formatNumber(transaction.maxPriorityFeePerGas || 0, \"maxPriorityFeePerGas\"),\n        formatNumber(transaction.maxFeePerGas || 0, \"maxFeePerGas\"),\n        formatNumber(transaction.gasLimit || 0, \"gasLimit\"),\n        ((transaction.to != null) ? getAddress(transaction.to): \"0x\"),\n        formatNumber(transaction.value || 0, \"value\"),\n        (transaction.data || \"0x\"),\n        (formatAccessList(transaction.accessList || []))\n    ];\n\n    if (signature) {\n        const sig = splitSignature(signature);\n        fields.push(formatNumber(sig.recoveryParam, \"recoveryParam\"));\n        fields.push(stripZeros(sig.r));\n        fields.push(stripZeros(sig.s));\n    }\n\n    return hexConcat([ \"0x02\", RLP.encode(fields)]);\n}\n\nfunction _serializeEip2930(transaction: UnsignedTransaction, signature?: SignatureLike): string {\n    const fields: any = [\n        formatNumber(transaction.chainId || 0, \"chainId\"),\n        formatNumber(transaction.nonce || 0, \"nonce\"),\n        formatNumber(transaction.gasPrice || 0, \"gasPrice\"),\n        formatNumber(transaction.gasLimit || 0, \"gasLimit\"),\n        ((transaction.to != null) ? getAddress(transaction.to): \"0x\"),\n        formatNumber(transaction.value || 0, \"value\"),\n        (transaction.data || \"0x\"),\n        (formatAccessList(transaction.accessList || []))\n    ];\n\n    if (signature) {\n        const sig = splitSignature(signature);\n        fields.push(formatNumber(sig.recoveryParam, \"recoveryParam\"));\n        fields.push(stripZeros(sig.r));\n        fields.push(stripZeros(sig.s));\n    }\n\n    return hexConcat([ \"0x01\", RLP.encode(fields)]);\n}\n\n// Legacy Transactions and EIP-155\nfunction _serialize(transaction: UnsignedTransaction, signature?: SignatureLike): string {\n    checkProperties(transaction, allowedTransactionKeys);\n\n    const raw: Array<string | Uint8Array> = [];\n\n    transactionFields.forEach(function(fieldInfo) {\n        let value = (<any>transaction)[fieldInfo.name] || ([]);\n        const options: DataOptions = { };\n        if (fieldInfo.numeric) { options.hexPad = \"left\"; }\n        value = arrayify(hexlify(value, options));\n\n        // Fixed-width field\n        if (fieldInfo.length && value.length !== fieldInfo.length && value.length > 0) {\n            logger.throwArgumentError(\"invalid length for \" + fieldInfo.name, (\"transaction:\" + fieldInfo.name), value);\n        }\n\n        // Variable-width (with a maximum)\n        if (fieldInfo.maxLength) {\n            value = stripZeros(value);\n            if (value.length > fieldInfo.maxLength) {\n                logger.throwArgumentError(\"invalid length for \" + fieldInfo.name, (\"transaction:\" + fieldInfo.name), value );\n            }\n        }\n\n        raw.push(hexlify(value));\n    });\n\n    let chainId = 0;\n    if (transaction.chainId != null) {\n        // A chainId was provided; if non-zero we'll use EIP-155\n        chainId = transaction.chainId;\n\n        if (typeof(chainId) !== \"number\") {\n            logger.throwArgumentError(\"invalid transaction.chainId\", \"transaction\", transaction);\n        }\n\n    } else if (signature && !isBytesLike(signature) && signature.v > 28) {\n        // No chainId provided, but the signature is signing with EIP-155; derive chainId\n        chainId = Math.floor((signature.v - 35) / 2);\n    }\n\n    // We have an EIP-155 transaction (chainId was specified and non-zero)\n    if (chainId !== 0) {\n        raw.push(hexlify(chainId)); // @TODO: hexValue?\n        raw.push(\"0x\");\n        raw.push(\"0x\");\n    }\n\n    // Requesting an unsigned transaction\n    if (!signature) {\n        return RLP.encode(raw);\n    }\n\n    // The splitSignature will ensure the transaction has a recoveryParam in the\n    // case that the signTransaction function only adds a v.\n    const sig = splitSignature(signature);\n\n    // We pushed a chainId and null r, s on for hashing only; remove those\n    let v = 27 + sig.recoveryParam\n    if (chainId !== 0) {\n        raw.pop();\n        raw.pop();\n        raw.pop();\n        v += chainId * 2 + 8;\n\n        // If an EIP-155 v (directly or indirectly; maybe _vs) was provided, check it!\n        if (sig.v > 28 && sig.v !== v) {\n             logger.throwArgumentError(\"transaction.chainId/signature.v mismatch\", \"signature\", signature);\n        }\n    } else if (sig.v !== v) {\n         logger.throwArgumentError(\"transaction.chainId/signature.v mismatch\", \"signature\", signature);\n    }\n\n    raw.push(hexlify(v));\n    raw.push(stripZeros(arrayify(sig.r)));\n    raw.push(stripZeros(arrayify(sig.s)));\n\n    return RLP.encode(raw);\n}\n\nexport function serialize(transaction: UnsignedTransaction, signature?: SignatureLike): string {\n    // Legacy and EIP-155 Transactions\n    if (transaction.type == null || transaction.type === 0) {\n        if (transaction.accessList != null) {\n            logger.throwArgumentError(\"untyped transactions do not support accessList; include type: 1\", \"transaction\", transaction);\n        }\n        return _serialize(transaction, signature);\n    }\n\n    // Typed Transactions (EIP-2718)\n    switch (transaction.type) {\n        case 1:\n            return _serializeEip2930(transaction, signature);\n        case 2:\n            return _serializeEip1559(transaction, signature);\n        default:\n            break;\n    }\n\n    return logger.throwError(`unsupported transaction type: ${ transaction.type }`, Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"serializeTransaction\",\n        transactionType: transaction.type\n    });\n}\n\nfunction _parseEipSignature(tx: Transaction, fields: Array<string>, serialize: (tx: UnsignedTransaction) => string): void {\n    try {\n        const recid = handleNumber(fields[0]).toNumber();\n        if (recid !== 0 && recid !== 1) { throw new Error(\"bad recid\"); }\n        tx.v = recid;\n    } catch (error) {\n        logger.throwArgumentError(\"invalid v for transaction type: 1\", \"v\", fields[0]);\n    }\n\n    tx.r = hexZeroPad(fields[1], 32);\n    tx.s = hexZeroPad(fields[2], 32);\n\n    try {\n        const digest = keccak256(serialize(tx));\n        tx.from = recoverAddress(digest, { r: tx.r, s: tx.s, recoveryParam: tx.v });\n    } catch (error) { }\n}\n\nfunction _parseEip1559(payload: Uint8Array): Transaction {\n    const transaction = RLP.decode(payload.slice(1));\n\n    if (transaction.length !== 9 && transaction.length !== 12) {\n        logger.throwArgumentError(\"invalid component count for transaction type: 2\", \"payload\", hexlify(payload));\n    }\n\n    const maxPriorityFeePerGas = handleNumber(transaction[2]);\n    const maxFeePerGas = handleNumber(transaction[3]);\n    const tx: Transaction = {\n        type:                  2,\n        chainId:               handleNumber(transaction[0]).toNumber(),\n        nonce:                 handleNumber(transaction[1]).toNumber(),\n        maxPriorityFeePerGas:  maxPriorityFeePerGas,\n        maxFeePerGas:          maxFeePerGas,\n        gasPrice:              null,\n        gasLimit:              handleNumber(transaction[4]),\n        to:                    handleAddress(transaction[5]),\n        value:                 handleNumber(transaction[6]),\n        data:                  transaction[7],\n        accessList:            accessListify(transaction[8]),\n    };\n\n    // Unsigned EIP-1559 Transaction\n    if (transaction.length === 9) { return tx; }\n\n    tx.hash = keccak256(payload);\n\n    _parseEipSignature(tx, transaction.slice(9), _serializeEip1559);\n\n    return tx;\n}\n\nfunction _parseEip2930(payload: Uint8Array): Transaction {\n    const transaction = RLP.decode(payload.slice(1));\n\n    if (transaction.length !== 8 && transaction.length !== 11) {\n        logger.throwArgumentError(\"invalid component count for transaction type: 1\", \"payload\", hexlify(payload));\n    }\n\n    const tx: Transaction = {\n        type:       1,\n        chainId:    handleNumber(transaction[0]).toNumber(),\n        nonce:      handleNumber(transaction[1]).toNumber(),\n        gasPrice:   handleNumber(transaction[2]),\n        gasLimit:   handleNumber(transaction[3]),\n        to:         handleAddress(transaction[4]),\n        value:      handleNumber(transaction[5]),\n        data:       transaction[6],\n        accessList: accessListify(transaction[7])\n    };\n\n    // Unsigned EIP-2930 Transaction\n    if (transaction.length === 8) { return tx; }\n\n    tx.hash = keccak256(payload);\n\n    _parseEipSignature(tx, transaction.slice(8), _serializeEip2930);\n\n    return tx;\n}\n\n// Legacy Transactions and EIP-155\nfunction _parse(rawTransaction: Uint8Array): Transaction {\n    const transaction = RLP.decode(rawTransaction);\n\n    if (transaction.length !== 9 && transaction.length !== 6) {\n        logger.throwArgumentError(\"invalid raw transaction\", \"rawTransaction\", rawTransaction);\n    }\n\n    const tx: Transaction = {\n        nonce:    handleNumber(transaction[0]).toNumber(),\n        gasPrice: handleNumber(transaction[1]),\n        gasLimit: handleNumber(transaction[2]),\n        to:       handleAddress(transaction[3]),\n        value:    handleNumber(transaction[4]),\n        data:     transaction[5],\n        chainId:  0\n    };\n\n    // Legacy unsigned transaction\n    if (transaction.length === 6) { return tx; }\n\n    try {\n        tx.v = BigNumber.from(transaction[6]).toNumber();\n\n    } catch (error) {\n        // @TODO: What makes snese to do? The v is too big\n        return tx;\n    }\n\n    tx.r = hexZeroPad(transaction[7], 32);\n    tx.s = hexZeroPad(transaction[8], 32);\n\n    if (BigNumber.from(tx.r).isZero() && BigNumber.from(tx.s).isZero()) {\n        // EIP-155 unsigned transaction\n        tx.chainId = tx.v;\n        tx.v = 0;\n\n    } else {\n        // Signed Transaction\n\n        tx.chainId = Math.floor((tx.v - 35) / 2);\n        if (tx.chainId < 0) { tx.chainId = 0; }\n\n        let recoveryParam = tx.v - 27;\n\n        const raw = transaction.slice(0, 6);\n\n        if (tx.chainId !== 0) {\n            raw.push(hexlify(tx.chainId));\n            raw.push(\"0x\");\n            raw.push(\"0x\");\n            recoveryParam -= tx.chainId * 2 + 8;\n        }\n\n        const digest = keccak256(RLP.encode(raw));\n        try {\n            tx.from = recoverAddress(digest, { r: hexlify(tx.r), s: hexlify(tx.s), recoveryParam: recoveryParam });\n        } catch (error) { }\n\n        tx.hash = keccak256(rawTransaction);\n    }\n\n    tx.type = null;\n\n    return tx;\n}\n\n\nexport function parse(rawTransaction: BytesLike): Transaction {\n    const payload = arrayify(rawTransaction);\n\n    // Legacy and EIP-155 Transactions\n    if (payload[0] > 0x7f) { return _parse(payload); }\n\n    // Typed Transaction (EIP-2718)\n    switch (payload[0]) {\n        case 1:\n            return _parseEip2930(payload);\n        case 2:\n            return _parseEip1559(payload);\n        default:\n            break;\n    }\n\n    return logger.throwError(`unsupported transaction type: ${ payload[0] }`, Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"parseTransaction\",\n        transactionType: payload[0]\n    });\n}\n\n","export const version = \"contracts/5.7.0\";\n","\"use strict\";\n\nimport { checkResultErrors, EventFragment, Fragment, FunctionFragment, Indexed, Interface, JsonFragment, LogDescription, ParamType, Result } from \"@ethersproject/abi\";\nimport { Block, BlockTag, Filter, FilterByBlockHash, Listener, Log, Provider, TransactionReceipt, TransactionRequest, TransactionResponse } from \"@ethersproject/abstract-provider\";\nimport { Signer, VoidSigner } from \"@ethersproject/abstract-signer\";\nimport { getAddress, getContractAddress } from \"@ethersproject/address\";\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { arrayify, BytesLike, concat, hexlify, isBytes, isHexString } from \"@ethersproject/bytes\";\nimport { Deferrable, defineReadOnly, deepCopy, getStatic, resolveProperties, shallowCopy } from \"@ethersproject/properties\";\nimport { AccessList, accessListify, AccessListish } from \"@ethersproject/transactions\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\n\nconst logger = new Logger(version);\n\nexport interface Overrides {\n    gasLimit?: BigNumberish | Promise<BigNumberish>;\n    gasPrice?: BigNumberish | Promise<BigNumberish>;\n    maxFeePerGas?: BigNumberish | Promise<BigNumberish>;\n    maxPriorityFeePerGas?: BigNumberish | Promise<BigNumberish>;\n    nonce?: BigNumberish | Promise<BigNumberish>;\n    type?: number;\n    accessList?: AccessListish;\n    customData?: Record<string, any>;\n    ccipReadEnabled?: boolean;\n};\n\nexport interface PayableOverrides extends Overrides {\n    value?: BigNumberish | Promise<BigNumberish>;\n}\n\nexport interface CallOverrides extends PayableOverrides {\n    blockTag?: BlockTag | Promise<BlockTag>;\n    from?: string | Promise<string>;\n}\n\n// @TODO: Better hierarchy with: (in v6)\n//  - abstract-provider:TransactionRequest\n//  - transactions:Transaction\n//  - transaction:UnsignedTransaction\n\nexport interface PopulatedTransaction {\n    to?: string;\n    from?: string;\n    nonce?: number;\n\n    gasLimit?: BigNumber;\n    gasPrice?: BigNumber;\n\n    data?: string;\n    value?: BigNumber;\n    chainId?: number;\n\n    type?: number;\n    accessList?: AccessList;\n\n    maxFeePerGas?: BigNumber;\n    maxPriorityFeePerGas?: BigNumber;\n\n    customData?: Record<string, any>;\n    ccipReadEnabled?: boolean;\n};\n\nexport type EventFilter = {\n    address?: string;\n    topics?: Array<string|Array<string>>;\n};\n\n\nexport type ContractFunction<T = any> = (...args: Array<any>) => Promise<T>;\n\n\n// The (n + 1)th parameter passed to contract event callbacks\nexport interface Event extends Log {\n\n    // The event name\n    event?: string;\n\n    // The event signature\n    eventSignature?: string;\n\n    // The parsed arguments to the event\n    args?: Result;\n\n    // If parsing the arguments failed, this is the error\n    decodeError?: Error;\n\n    // A function that can be used to decode event data and topics\n    decode?: (data: string, topics?: Array<string>) => any;\n\n    // A function that will remove the listener responsible for this event (if any)\n    removeListener: () => void;\n\n    // Get blockchain details about this event's block and transaction\n    getBlock: () => Promise<Block>;\n    getTransaction: () => Promise<TransactionResponse>;\n    getTransactionReceipt: () => Promise<TransactionReceipt>;\n}\n\nexport interface ContractReceipt extends TransactionReceipt {\n    events?: Array<Event>;\n}\n\nexport interface ContractTransaction extends TransactionResponse {\n    wait(confirmations?: number): Promise<ContractReceipt>;\n}\n\n///////////////////////////////\n\nconst allowedTransactionKeys: { [ key: string ]: boolean } = {\n    chainId: true, data: true, from: true, gasLimit: true, gasPrice:true, nonce: true, to: true, value: true,\n    type: true, accessList: true,\n    maxFeePerGas: true, maxPriorityFeePerGas: true,\n    customData: true,\n    ccipReadEnabled: true\n}\n\nasync function resolveName(resolver: Signer | Provider, nameOrPromise: string | Promise<string>): Promise<string> {\n    const name = await nameOrPromise;\n\n    if (typeof(name) !== \"string\") {\n        logger.throwArgumentError(\"invalid address or ENS name\", \"name\", name);\n    }\n\n    // If it is already an address, just use it (after adding checksum)\n    try {\n        return getAddress(name);\n    } catch (error) { }\n\n    if (!resolver) {\n        logger.throwError(\"a provider or signer is needed to resolve ENS names\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"resolveName\"\n        });\n    }\n\n    const address = await resolver.resolveName(name);\n\n    if (address == null) {\n        logger.throwArgumentError(\"resolver or addr is not configured for ENS name\", \"name\", name);\n    }\n\n    return address;\n}\n\n// Recursively replaces ENS names with promises to resolve the name and resolves all properties\nasync function resolveAddresses(resolver: Signer | Provider, value: any, paramType: ParamType | Array<ParamType>): Promise<any> {\n    if (Array.isArray(paramType)) {\n        return await Promise.all(paramType.map((paramType, index) => {\n            return resolveAddresses(\n                resolver,\n                ((Array.isArray(value)) ? value[index]: value[paramType.name]),\n                paramType\n            );\n        }));\n    }\n\n    if (paramType.type === \"address\") {\n        return await resolveName(resolver, value);\n    }\n\n    if (paramType.type === \"tuple\") {\n        return await resolveAddresses(resolver, value, paramType.components);\n    }\n\n    if (paramType.baseType === \"array\") {\n        if (!Array.isArray(value)) {\n            return Promise.reject(logger.makeError(\"invalid value for array\", Logger.errors.INVALID_ARGUMENT, {\n                argument: \"value\",\n                value\n            }));\n        }\n        return await Promise.all(value.map((v) => resolveAddresses(resolver, v, paramType.arrayChildren)));\n    }\n\n    return value;\n}\n\nasync function populateTransaction(contract: Contract, fragment: FunctionFragment, args: Array<any>): Promise<PopulatedTransaction> {\n    // If an extra argument is given, it is overrides\n    let overrides: CallOverrides = { };\n    if (args.length === fragment.inputs.length + 1 && typeof(args[args.length - 1]) === \"object\") {\n        overrides = shallowCopy(args.pop());\n    }\n\n    // Make sure the parameter count matches\n    logger.checkArgumentCount(args.length, fragment.inputs.length, \"passed to contract\");\n\n    // Populate \"from\" override (allow promises)\n    if (contract.signer) {\n        if (overrides.from) {\n            // Contracts with a Signer are from the Signer's frame-of-reference;\n            // but we allow overriding \"from\" if it matches the signer\n            overrides.from = resolveProperties({\n                override: resolveName(contract.signer, overrides.from),\n                signer: contract.signer.getAddress()\n            }).then(async (check) => {\n                if (getAddress(check.signer) !== check.override) {\n                    logger.throwError(\"Contract with a Signer cannot override from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                        operation: \"overrides.from\"\n                    });\n                }\n\n                return check.override;\n            });\n\n        } else {\n            overrides.from = contract.signer.getAddress();\n        }\n\n    } else if (overrides.from) {\n        overrides.from = resolveName(contract.provider, overrides.from);\n\n    //} else {\n        // Contracts without a signer can override \"from\", and if\n        // unspecified the zero address is used\n        //overrides.from = AddressZero;\n    }\n\n    // Wait for all dependencies to be resolved (prefer the signer over the provider)\n    const resolved = await resolveProperties({\n        args: resolveAddresses(contract.signer || contract.provider, args, fragment.inputs),\n        address: contract.resolvedAddress,\n        overrides: (resolveProperties(overrides) || { })\n    });\n\n    // The ABI coded transaction\n    const data = contract.interface.encodeFunctionData(fragment, resolved.args);\n    const tx: PopulatedTransaction = {\n      data: data,\n      to: resolved.address\n    };\n\n    // Resolved Overrides\n    const ro = resolved.overrides;\n\n    // Populate simple overrides\n    if (ro.nonce != null) { tx.nonce = BigNumber.from(ro.nonce).toNumber(); }\n    if (ro.gasLimit != null) { tx.gasLimit = BigNumber.from(ro.gasLimit); }\n    if (ro.gasPrice != null) { tx.gasPrice = BigNumber.from(ro.gasPrice); }\n    if (ro.maxFeePerGas != null) { tx.maxFeePerGas = BigNumber.from(ro.maxFeePerGas); }\n    if (ro.maxPriorityFeePerGas != null) { tx.maxPriorityFeePerGas = BigNumber.from(ro.maxPriorityFeePerGas); }\n    if (ro.from != null) { tx.from = ro.from; }\n\n    if (ro.type != null) { tx.type = ro.type; }\n    if (ro.accessList != null) { tx.accessList = accessListify(ro.accessList); }\n\n    // If there was no \"gasLimit\" override, but the ABI specifies a default, use it\n    if (tx.gasLimit == null && fragment.gas != null) {\n        // Compute the intrinsic gas cost for this transaction\n        // @TODO: This is based on the yellow paper as of Petersburg; this is something\n        // we may wish to parameterize in v6 as part of the Network object. Since this\n        // is always a non-nil to address, we can ignore G_create, but may wish to add\n        // similar logic to the ContractFactory.\n        let intrinsic = 21000;\n        const bytes = arrayify(data);\n        for (let i = 0; i < bytes.length; i++) {\n            intrinsic += 4;\n            if (bytes[i]) { intrinsic += 64; }\n        }\n        tx.gasLimit = BigNumber.from(fragment.gas).add(intrinsic);\n    }\n\n    // Populate \"value\" override\n    if (ro.value) {\n        const roValue = BigNumber.from(ro.value);\n        if (!roValue.isZero() && !fragment.payable) {\n            logger.throwError(\"non-payable method cannot override value\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"overrides.value\",\n                value: overrides.value\n            });\n        }\n        tx.value = roValue;\n    }\n\n    if (ro.customData) {\n        tx.customData = shallowCopy(ro.customData);\n    }\n\n    if (ro.ccipReadEnabled) {\n        tx.ccipReadEnabled = !!ro.ccipReadEnabled;\n    }\n\n    // Remove the overrides\n    delete overrides.nonce;\n    delete overrides.gasLimit;\n    delete overrides.gasPrice;\n    delete overrides.from;\n    delete overrides.value;\n\n    delete overrides.type;\n    delete overrides.accessList;\n\n    delete overrides.maxFeePerGas;\n    delete overrides.maxPriorityFeePerGas;\n\n    delete overrides.customData;\n    delete overrides.ccipReadEnabled;\n\n    // Make sure there are no stray overrides, which may indicate a\n    // typo or using an unsupported key.\n    const leftovers = Object.keys(overrides).filter((key) => ((<any>overrides)[key] != null));\n    if (leftovers.length) {\n        logger.throwError(`cannot override ${ leftovers.map((l) => JSON.stringify(l)).join(\",\") }`, Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"overrides\",\n            overrides: leftovers\n        });\n    }\n\n    return tx;\n}\n\n\nfunction buildPopulate(contract: Contract, fragment: FunctionFragment): ContractFunction<PopulatedTransaction> {\n    return function(...args: Array<any>): Promise<PopulatedTransaction> {\n        return populateTransaction(contract, fragment, args);\n    };\n}\n\nfunction buildEstimate(contract: Contract, fragment: FunctionFragment): ContractFunction<BigNumber> {\n    const signerOrProvider = (contract.signer || contract.provider);\n    return async function(...args: Array<any>): Promise<BigNumber> {\n        if (!signerOrProvider) {\n            logger.throwError(\"estimate require a provider or signer\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"estimateGas\"\n            })\n        }\n\n        const tx = await populateTransaction(contract, fragment, args);\n        return await signerOrProvider.estimateGas(tx);\n    };\n}\n\nfunction addContractWait(contract: Contract, tx: TransactionResponse) {\n    const wait = tx.wait.bind(tx);\n    tx.wait = (confirmations?: number) => {\n        return wait(confirmations).then((receipt: ContractReceipt) => {\n            receipt.events = receipt.logs.map((log) => {\n                let event: Event = (<Event>deepCopy(log));\n                let parsed: LogDescription = null;\n                try {\n                    parsed = contract.interface.parseLog(log);\n                } catch (e){ }\n\n                // Successfully parsed the event log; include it\n                if (parsed) {\n                    event.args = parsed.args;\n                    event.decode = (data: BytesLike, topics?: Array<any>) => {\n                        return contract.interface.decodeEventLog(parsed.eventFragment, data, topics);\n                    };\n                    event.event = parsed.name;\n                    event.eventSignature = parsed.signature;\n                }\n\n                // Useful operations\n                event.removeListener = () => { return contract.provider; }\n                event.getBlock = () => {\n                    return contract.provider.getBlock(receipt.blockHash);\n                }\n                event.getTransaction = () => {\n                    return contract.provider.getTransaction(receipt.transactionHash);\n                }\n                event.getTransactionReceipt = () => {\n                    return Promise.resolve(receipt);\n                }\n\n                return event;\n            });\n\n            return receipt;\n        });\n    };\n}\n\nfunction buildCall(contract: Contract, fragment: FunctionFragment, collapseSimple: boolean): ContractFunction {\n    const signerOrProvider = (contract.signer || contract.provider);\n\n    return async function(...args: Array<any>): Promise<any> {\n        // Extract the \"blockTag\" override if present\n        let blockTag = undefined;\n        if (args.length === fragment.inputs.length + 1 && typeof(args[args.length - 1]) === \"object\") {\n            const overrides = shallowCopy(args.pop());\n            if (overrides.blockTag != null) {\n                blockTag = await overrides.blockTag;\n            }\n            delete overrides.blockTag;\n            args.push(overrides);\n        }\n\n        // If the contract was just deployed, wait until it is mined\n        if (contract.deployTransaction != null) {\n            await contract._deployed(blockTag);\n        }\n\n        // Call a node and get the result\n        const tx = await populateTransaction(contract, fragment, args);\n        const result = await signerOrProvider.call(tx, blockTag);\n\n        try {\n            let value = contract.interface.decodeFunctionResult(fragment, result);\n            if (collapseSimple && fragment.outputs.length === 1) {\n                value = value[0];\n            }\n            return value;\n\n        } catch (error) {\n            if (error.code === Logger.errors.CALL_EXCEPTION) {\n                error.address = contract.address;\n                error.args = args;\n                error.transaction = tx;\n            }\n            throw error;\n         }\n    };\n}\n\nfunction buildSend(contract: Contract, fragment: FunctionFragment): ContractFunction<TransactionResponse> {\n    return async function(...args: Array<any>): Promise<TransactionResponse> {\n        if (!contract.signer) {\n            logger.throwError(\"sending a transaction requires a signer\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"sendTransaction\"\n            })\n        }\n\n        // If the contract was just deployed, wait until it is mined\n        if (contract.deployTransaction != null) {\n            await contract._deployed();\n        }\n\n        const txRequest = await populateTransaction(contract, fragment, args);\n\n        const tx = await contract.signer.sendTransaction(txRequest);\n\n        // Tweak the tx.wait so the receipt has extra properties\n        addContractWait(contract, tx);\n\n        return tx;\n    };\n}\n\nfunction buildDefault(contract: Contract, fragment: FunctionFragment, collapseSimple: boolean): ContractFunction {\n    if (fragment.constant) {\n        return buildCall(contract, fragment, collapseSimple);\n    }\n    return buildSend(contract, fragment);\n}\n\nfunction getEventTag(filter: EventFilter): string {\n    if (filter.address && (filter.topics == null || filter.topics.length === 0)) {\n        return \"*\";\n    }\n\n    return (filter.address || \"*\") + \"@\" + (filter.topics ? filter.topics.map((topic) => {\n        if (Array.isArray(topic)) {\n            return topic.join(\"|\");\n        }\n        return topic;\n    }).join(\":\"): \"\");\n}\n\nclass RunningEvent {\n    readonly tag: string;\n    readonly filter: EventFilter;\n    private _listeners: Array<{ listener: Listener, once: boolean }>;\n\n    constructor(tag: string, filter: EventFilter) {\n        defineReadOnly(this, \"tag\", tag);\n        defineReadOnly(this, \"filter\", filter);\n        this._listeners = [ ];\n    }\n\n    addListener(listener: Listener, once: boolean): void {\n        this._listeners.push({ listener: listener, once: once });\n    }\n\n    removeListener(listener: Listener): void {\n        let done = false;\n        this._listeners = this._listeners.filter((item) => {\n            if (done || item.listener !== listener) { return true; }\n            done = true;\n            return false;\n        });\n    }\n\n    removeAllListeners(): void {\n        this._listeners = [];\n    }\n\n    listeners(): Array<Listener> {\n        return this._listeners.map((i) => i.listener);\n    }\n\n    listenerCount(): number {\n        return this._listeners.length;\n    }\n\n    run(args: Array<any>): number {\n        const listenerCount = this.listenerCount();\n        this._listeners = this._listeners.filter((item) => {\n\n            const argsCopy = args.slice();\n\n            // Call the callback in the next event loop\n            setTimeout(() => {\n                item.listener.apply(this, argsCopy);\n            }, 0);\n\n            // Reschedule it if it not \"once\"\n            return !(item.once);\n        });\n\n        return listenerCount;\n    }\n\n    prepareEvent(event: Event): void {\n    }\n\n    // Returns the array that will be applied to an emit\n    getEmit(event: Event): Array<any> {\n        return [ event ];\n    }\n}\n\nclass ErrorRunningEvent extends RunningEvent {\n    constructor() {\n        super(\"error\", null);\n    }\n}\n\n\n// @TODO Fragment should inherit Wildcard? and just override getEmit?\n//       or have a common abstract super class, with enough constructor\n//       options to configure both.\n\n// A Fragment Event will populate all the properties that Wildcard\n// will, and additionally dereference the arguments when emitting\nclass FragmentRunningEvent extends RunningEvent {\n    readonly address: string;\n    readonly interface: Interface;\n    readonly fragment: EventFragment;\n\n    constructor(address: string, contractInterface: Interface, fragment: EventFragment, topics?: Array<string|Array<string>>) {\n        const filter: EventFilter = {\n            address: address\n        }\n\n        let topic = contractInterface.getEventTopic(fragment);\n        if (topics) {\n            if (topic !== topics[0]) { logger.throwArgumentError(\"topic mismatch\", \"topics\", topics); }\n            filter.topics = topics.slice();\n        } else {\n            filter.topics = [ topic ];\n        }\n\n        super(getEventTag(filter), filter);\n        defineReadOnly(this, \"address\", address);\n        defineReadOnly(this, \"interface\", contractInterface);\n        defineReadOnly(this, \"fragment\", fragment);\n    }\n\n\n    prepareEvent(event: Event): void {\n        super.prepareEvent(event);\n\n        event.event = this.fragment.name;\n        event.eventSignature = this.fragment.format();\n\n        event.decode = (data: BytesLike, topics?: Array<string>) => {\n            return this.interface.decodeEventLog(this.fragment, data, topics);\n        };\n\n        try {\n            event.args = this.interface.decodeEventLog(this.fragment, event.data, event.topics);\n        } catch (error) {\n            event.args = null;\n            event.decodeError = error;\n        }\n    }\n\n    getEmit(event: Event): Array<any> {\n        const errors = checkResultErrors(event.args);\n        if (errors.length) { throw errors[0].error; }\n\n        const args = (event.args || []).slice();\n        args.push(event);\n        return args;\n    }\n}\n\n// A Wildcard Event will attempt to populate:\n//  - event            The name of the event name\n//  - eventSignature   The full signature of the event\n//  - decode           A function to decode data and topics\n//  - args             The decoded data and topics\nclass WildcardRunningEvent extends RunningEvent {\n    readonly address: string;\n    readonly interface: Interface;\n\n    constructor(address: string, contractInterface: Interface) {\n        super(\"*\", { address: address });\n        defineReadOnly(this, \"address\", address);\n        defineReadOnly(this, \"interface\", contractInterface);\n    }\n\n    prepareEvent(event: Event): void {\n        super.prepareEvent(event);\n\n        try {\n            const parsed = this.interface.parseLog(event);\n            event.event = parsed.name;\n            event.eventSignature = parsed.signature;\n\n            event.decode = (data: BytesLike, topics?: Array<string>) => {\n                return this.interface.decodeEventLog(parsed.eventFragment, data, topics);\n            };\n\n            event.args = parsed.args;\n        } catch (error) {\n            // No matching event\n        }\n    }\n}\n\nexport type ContractInterface = string | ReadonlyArray<Fragment | JsonFragment | string> | Interface;\n\ntype InterfaceFunc = (contractInterface: ContractInterface) => Interface;\n\n\nexport class BaseContract {\n    readonly address: string;\n    readonly interface: Interface;\n\n    readonly signer: Signer;\n    readonly provider: Provider;\n\n    readonly functions: { [ name: string ]: ContractFunction };\n\n    readonly callStatic: { [ name: string ]: ContractFunction };\n    readonly estimateGas: { [ name: string ]: ContractFunction<BigNumber> };\n    readonly populateTransaction: { [ name: string ]: ContractFunction<PopulatedTransaction> };\n\n    readonly filters: { [ name: string ]: (...args: Array<any>) => EventFilter };\n\n    // This will always be an address. This will only differ from\n    // address if an ENS name was used in the constructor\n    readonly resolvedAddress: Promise<string>;\n\n    // This is only set if the contract was created with a call to deploy\n    readonly deployTransaction: TransactionResponse;\n\n    _deployedPromise: Promise<Contract>;\n\n    // A list of RunningEvents to track listeners for each event tag\n    _runningEvents: { [ eventTag: string ]: RunningEvent };\n\n    // Wrapped functions to call emit and allow deregistration from the provider\n    _wrappedEmits: { [ eventTag: string ]: (...args: Array<any>) => void };\n\n    constructor(addressOrName: string, contractInterface: ContractInterface, signerOrProvider?: Signer | Provider) {\n        // @TODO: Maybe still check the addressOrName looks like a valid address or name?\n        //address = getAddress(address);\n        defineReadOnly(this, \"interface\", getStatic<InterfaceFunc>(new.target, \"getInterface\")(contractInterface));\n\n        if (signerOrProvider == null) {\n            defineReadOnly(this, \"provider\", null);\n            defineReadOnly(this, \"signer\", null);\n        } else if (Signer.isSigner(signerOrProvider)) {\n            defineReadOnly(this, \"provider\", signerOrProvider.provider || null);\n            defineReadOnly(this, \"signer\", signerOrProvider);\n        } else if (Provider.isProvider(signerOrProvider)) {\n            defineReadOnly(this, \"provider\", signerOrProvider);\n            defineReadOnly(this, \"signer\", null);\n        } else {\n            logger.throwArgumentError(\"invalid signer or provider\", \"signerOrProvider\", signerOrProvider);\n        }\n\n        defineReadOnly(this, \"callStatic\", { });\n        defineReadOnly(this, \"estimateGas\", { });\n        defineReadOnly(this, \"functions\", { });\n        defineReadOnly(this, \"populateTransaction\", { });\n\n        defineReadOnly(this, \"filters\", { });\n\n        {\n            const uniqueFilters: { [ name: string ]: Array<string> } = { };\n            Object.keys(this.interface.events).forEach((eventSignature) => {\n                const event = this.interface.events[eventSignature];\n                defineReadOnly(this.filters, eventSignature, (...args: Array<any>) => {\n                    return {\n                        address: this.address,\n                        topics: this.interface.encodeFilterTopics(event, args)\n                   }\n                });\n                if (!uniqueFilters[event.name]) { uniqueFilters[event.name] = [ ]; }\n                uniqueFilters[event.name].push(eventSignature);\n            });\n\n            Object.keys(uniqueFilters).forEach((name) => {\n                const filters = uniqueFilters[name];\n                if (filters.length === 1) {\n                    defineReadOnly(this.filters, name, this.filters[filters[0]]);\n                } else {\n                    logger.warn(`Duplicate definition of ${ name } (${ filters.join(\", \")})`);\n                }\n            });\n        }\n\n        defineReadOnly(this, \"_runningEvents\", { });\n        defineReadOnly(this, \"_wrappedEmits\", { });\n\n        if (addressOrName == null) {\n            logger.throwArgumentError(\"invalid contract address or ENS name\", \"addressOrName\", addressOrName);\n        }\n\n        defineReadOnly(this, \"address\", addressOrName);\n        if (this.provider) {\n            defineReadOnly(this, \"resolvedAddress\", resolveName(this.provider, addressOrName));\n        } else {\n            try {\n                defineReadOnly(this, \"resolvedAddress\", Promise.resolve(getAddress(addressOrName)));\n            } catch (error) {\n                // Without a provider, we cannot use ENS names\n                logger.throwError(\"provider is required to use ENS name as contract address\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"new Contract\"\n                });\n            }\n        }\n\n        // Swallow bad ENS names to prevent Unhandled Exceptions\n        this.resolvedAddress.catch((e) => { });\n\n        const uniqueNames: { [ name: string ]: Array<string> } = { };\n        const uniqueSignatures: { [ signature: string ]: boolean } = { };\n        Object.keys(this.interface.functions).forEach((signature) => {\n            const fragment = this.interface.functions[signature];\n\n            // Check that the signature is unique; if not the ABI generation has\n            // not been cleaned or may be incorrectly generated\n            if (uniqueSignatures[signature]) {\n                logger.warn(`Duplicate ABI entry for ${ JSON.stringify(signature) }`);\n                return;\n            }\n            uniqueSignatures[signature] = true;\n\n            // Track unique names; we only expose bare named functions if they\n            // are ambiguous\n            {\n                const name = fragment.name;\n                if (!uniqueNames[`%${ name }`]) { uniqueNames[`%${ name }`] = [ ]; }\n                uniqueNames[`%${ name }`].push(signature);\n            }\n\n            if ((<Contract>this)[signature] == null) {\n                defineReadOnly<any, any>(this, signature, buildDefault(this, fragment, true));\n            }\n\n            // We do not collapse simple calls on this bucket, which allows\n            // frameworks to safely use this without introspection as well as\n            // allows decoding error recovery.\n            if (this.functions[signature] == null) {\n                defineReadOnly(this.functions, signature, buildDefault(this, fragment, false));\n            }\n\n            if (this.callStatic[signature] == null) {\n                defineReadOnly(this.callStatic, signature, buildCall(this, fragment, true));\n            }\n\n            if (this.populateTransaction[signature] == null) {\n                defineReadOnly(this.populateTransaction, signature, buildPopulate(this, fragment));\n            }\n\n            if (this.estimateGas[signature] == null) {\n                defineReadOnly(this.estimateGas, signature, buildEstimate(this, fragment));\n            }\n        });\n\n        Object.keys(uniqueNames).forEach((name) => {\n            // Ambiguous names to not get attached as bare names\n            const signatures = uniqueNames[name];\n            if (signatures.length > 1) { return; }\n\n            // Strip off the leading \"%\" used for prototype protection\n            name = name.substring(1);\n\n            const signature = signatures[0];\n\n            // If overwriting a member property that is null, swallow the error\n            try {\n                if ((<Contract>this)[name] == null) {\n                    defineReadOnly(<Contract>this, name, (<Contract>this)[signature]);\n                }\n            } catch (e) { }\n\n            if (this.functions[name] == null) {\n                defineReadOnly(this.functions, name, this.functions[signature]);\n            }\n\n            if (this.callStatic[name] == null) {\n                defineReadOnly(this.callStatic, name, this.callStatic[signature]);\n            }\n\n            if (this.populateTransaction[name] == null) {\n                defineReadOnly(this.populateTransaction, name, this.populateTransaction[signature]);\n            }\n\n            if (this.estimateGas[name] == null) {\n                defineReadOnly(this.estimateGas, name, this.estimateGas[signature]);\n            }\n        });\n    }\n\n    static getContractAddress(transaction: { from: string, nonce: BigNumberish }): string {\n        return getContractAddress(transaction);\n    }\n\n    static getInterface(contractInterface: ContractInterface): Interface {\n        if (Interface.isInterface(contractInterface)) {\n            return contractInterface;\n        }\n        return new Interface(contractInterface);\n    }\n\n    // @TODO: Allow timeout?\n    deployed(): Promise<Contract> {\n        return this._deployed();\n    }\n\n    _deployed(blockTag?: BlockTag): Promise<Contract> {\n        if (!this._deployedPromise) {\n\n            // If we were just deployed, we know the transaction we should occur in\n            if (this.deployTransaction) {\n                this._deployedPromise = this.deployTransaction.wait().then(() => {\n                    return this;\n                });\n\n            } else {\n                // @TODO: Once we allow a timeout to be passed in, we will wait\n                // up to that many blocks for getCode\n\n                // Otherwise, poll for our code to be deployed\n                this._deployedPromise = this.provider.getCode(this.address, blockTag).then((code) => {\n                    if (code === \"0x\") {\n                        logger.throwError(\"contract not deployed\", Logger.errors.UNSUPPORTED_OPERATION, {\n                            contractAddress: this.address,\n                            operation: \"getDeployed\"\n                        });\n                    }\n                    return this;\n                });\n            }\n        }\n\n        return this._deployedPromise;\n    }\n\n    // @TODO:\n    // estimateFallback(overrides?: TransactionRequest): Promise<BigNumber>\n\n    // @TODO:\n    // estimateDeploy(bytecode: string, ...args): Promise<BigNumber>\n\n    fallback(overrides?: TransactionRequest): Promise<TransactionResponse> {\n        if (!this.signer) {\n            logger.throwError(\"sending a transactions require a signer\", Logger.errors.UNSUPPORTED_OPERATION, { operation: \"sendTransaction(fallback)\" })\n        }\n\n        const tx: Deferrable<TransactionRequest> = shallowCopy(overrides || {});\n\n        [\"from\", \"to\"].forEach(function(key) {\n            if ((<any>tx)[key] == null) { return; }\n            logger.throwError(\"cannot override \" + key, Logger.errors.UNSUPPORTED_OPERATION, { operation: key })\n        });\n\n        tx.to = this.resolvedAddress;\n        return this.deployed().then(() => {\n            return this.signer.sendTransaction(tx);\n        });\n    }\n\n    // Reconnect to a different signer or provider\n    connect(signerOrProvider: Signer | Provider | string): Contract {\n        if (typeof(signerOrProvider) === \"string\") {\n            signerOrProvider = new VoidSigner(signerOrProvider, this.provider);\n        }\n\n        const contract = new (<{ new(...args: any[]): Contract }>(this.constructor))(this.address, this.interface, signerOrProvider);\n        if (this.deployTransaction) {\n            defineReadOnly(contract, \"deployTransaction\", this.deployTransaction);\n        }\n\n        return contract;\n    }\n\n    // Re-attach to a different on-chain instance of this contract\n    attach(addressOrName: string): Contract {\n        return new (<{ new(...args: any[]): Contract }>(this.constructor))(addressOrName, this.interface, this.signer || this.provider);\n    }\n\n    static isIndexed(value: any): value is Indexed {\n        return Indexed.isIndexed(value);\n    }\n\n    private _normalizeRunningEvent(runningEvent: RunningEvent): RunningEvent {\n        // Already have an instance of this event running; we can re-use it\n        if (this._runningEvents[runningEvent.tag]) {\n            return this._runningEvents[runningEvent.tag];\n         }\n         return runningEvent\n    }\n\n    private _getRunningEvent(eventName: EventFilter | string): RunningEvent {\n        if (typeof(eventName) === \"string\") {\n\n            // Listen for \"error\" events (if your contract has an error event, include\n            // the full signature to bypass this special event keyword)\n            if (eventName === \"error\") {\n                return this._normalizeRunningEvent(new ErrorRunningEvent());\n            }\n\n            // Listen for any event that is registered\n            if (eventName === \"event\") {\n                return this._normalizeRunningEvent(new RunningEvent(\"event\", null));\n            }\n\n            // Listen for any event\n            if (eventName === \"*\") {\n                return this._normalizeRunningEvent(new WildcardRunningEvent(this.address, this.interface));\n            }\n\n            // Get the event Fragment (throws if ambiguous/unknown event)\n            const fragment = this.interface.getEvent(eventName)\n            return this._normalizeRunningEvent(new FragmentRunningEvent(this.address, this.interface, fragment));\n        }\n\n        // We have topics to filter by...\n        if (eventName.topics && eventName.topics.length > 0) {\n\n            // Is it a known topichash? (throws if no matching topichash)\n            try {\n                const topic = eventName.topics[0];\n                if (typeof(topic) !== \"string\") {\n                    throw new Error(\"invalid topic\"); // @TODO: May happen for anonymous events\n                }\n                const fragment = this.interface.getEvent(topic);\n                return this._normalizeRunningEvent(new FragmentRunningEvent(this.address, this.interface, fragment, eventName.topics));\n            } catch (error) { }\n\n            // Filter by the unknown topichash\n            const filter: EventFilter = {\n                address: this.address,\n                topics: eventName.topics\n            }\n\n            return this._normalizeRunningEvent(new RunningEvent(getEventTag(filter), filter));\n        }\n\n        return this._normalizeRunningEvent(new WildcardRunningEvent(this.address, this.interface));\n    }\n\n    _checkRunningEvents(runningEvent: RunningEvent): void {\n        if (runningEvent.listenerCount() === 0) {\n            delete this._runningEvents[runningEvent.tag];\n\n            // If we have a poller for this, remove it\n            const emit = this._wrappedEmits[runningEvent.tag];\n            if (emit && runningEvent.filter) {\n                this.provider.off(runningEvent.filter, emit);\n                delete this._wrappedEmits[runningEvent.tag];\n            }\n        }\n    }\n\n    // Subclasses can override this to gracefully recover\n    // from parse errors if they wish\n    _wrapEvent(runningEvent: RunningEvent, log: Log, listener: Listener): Event {\n        const event = <Event>deepCopy(log);\n\n        event.removeListener = () => {\n            if (!listener) { return; }\n            runningEvent.removeListener(listener);\n            this._checkRunningEvents(runningEvent);\n        };\n\n        event.getBlock = () => { return this.provider.getBlock(log.blockHash); }\n        event.getTransaction = () => { return this.provider.getTransaction(log.transactionHash); }\n        event.getTransactionReceipt = () => { return this.provider.getTransactionReceipt(log.transactionHash); }\n\n        // This may throw if the topics and data mismatch the signature\n        runningEvent.prepareEvent(event);\n\n        return event;\n    }\n\n    private _addEventListener(runningEvent: RunningEvent, listener: Listener, once: boolean): void {\n        if (!this.provider) {\n            logger.throwError(\"events require a provider or a signer with a provider\", Logger.errors.UNSUPPORTED_OPERATION, { operation: \"once\" })\n        }\n\n        runningEvent.addListener(listener, once);\n\n        // Track this running event and its listeners (may already be there; but no hard in updating)\n        this._runningEvents[runningEvent.tag] = runningEvent;\n\n        // If we are not polling the provider, start polling\n        if (!this._wrappedEmits[runningEvent.tag]) {\n            const wrappedEmit = (log: Log) => {\n                let event = this._wrapEvent(runningEvent, log, listener);\n\n                // Try to emit the result for the parameterized event...\n                if (event.decodeError == null) {\n                    try {\n                        const args = runningEvent.getEmit(event);\n                        this.emit(runningEvent.filter, ...args);\n                    } catch (error) {\n                        event.decodeError = error.error;\n                    }\n                }\n\n                // Always emit \"event\" for fragment-base events\n                if (runningEvent.filter != null) {\n                    this.emit(\"event\", event);\n                }\n\n                // Emit \"error\" if there was an error\n                if (event.decodeError != null) {\n                    this.emit(\"error\", event.decodeError, event);\n                }\n            };\n            this._wrappedEmits[runningEvent.tag] = wrappedEmit;\n\n            // Special events, like \"error\" do not have a filter\n            if (runningEvent.filter != null) {\n                this.provider.on(runningEvent.filter, wrappedEmit);\n            }\n        }\n    }\n\n    queryFilter(event: EventFilter | string, fromBlockOrBlockhash?: BlockTag | string, toBlock?: BlockTag): Promise<Array<Event>> {\n        const runningEvent = this._getRunningEvent(event);\n        const filter = shallowCopy(runningEvent.filter);\n\n        if (typeof(fromBlockOrBlockhash) === \"string\" && isHexString(fromBlockOrBlockhash, 32)) {\n            if (toBlock != null) {\n                logger.throwArgumentError(\"cannot specify toBlock with blockhash\", \"toBlock\", toBlock);\n            }\n            (<FilterByBlockHash>filter).blockHash = fromBlockOrBlockhash;\n        } else {\n             (<Filter>filter).fromBlock = ((fromBlockOrBlockhash != null) ? fromBlockOrBlockhash: 0);\n             (<Filter>filter).toBlock = ((toBlock != null) ? toBlock: \"latest\");\n        }\n\n        return this.provider.getLogs(filter).then((logs) => {\n            return logs.map((log) => this._wrapEvent(runningEvent, log, null));\n        });\n    }\n\n    on(event: EventFilter | string, listener: Listener): this {\n        this._addEventListener(this._getRunningEvent(event), listener, false);\n        return this;\n    }\n\n    once(event: EventFilter | string, listener: Listener): this {\n        this._addEventListener(this._getRunningEvent(event), listener, true);\n        return this;\n    }\n\n    emit(eventName: EventFilter | string, ...args: Array<any>): boolean {\n        if (!this.provider) { return false; }\n\n        const runningEvent = this._getRunningEvent(eventName);\n        const result = (runningEvent.run(args) > 0);\n\n        // May have drained all the \"once\" events; check for living events\n        this._checkRunningEvents(runningEvent);\n\n        return result;\n    }\n\n    listenerCount(eventName?: EventFilter | string): number {\n        if (!this.provider) { return 0; }\n        if (eventName == null) {\n            return Object.keys(this._runningEvents).reduce((accum, key) => {\n                return accum + this._runningEvents[key].listenerCount();\n            }, 0);\n        }\n        return this._getRunningEvent(eventName).listenerCount();\n    }\n\n    listeners(eventName?: EventFilter | string): Array<Listener> {\n        if (!this.provider) { return []; }\n\n        if (eventName == null) {\n            const result: Array<Listener> = [ ];\n            for (let tag in this._runningEvents) {\n                this._runningEvents[tag].listeners().forEach((listener) => {\n                    result.push(listener)\n                });\n            }\n            return result;\n        }\n\n        return this._getRunningEvent(eventName).listeners();\n    }\n\n    removeAllListeners(eventName?: EventFilter | string): this {\n        if (!this.provider) { return this; }\n\n        if (eventName == null) {\n            for (const tag in this._runningEvents) {\n                const runningEvent = this._runningEvents[tag];\n                runningEvent.removeAllListeners();\n                this._checkRunningEvents(runningEvent);\n            }\n            return this;\n        }\n\n        // Delete any listeners\n        const runningEvent = this._getRunningEvent(eventName);\n        runningEvent.removeAllListeners();\n        this._checkRunningEvents(runningEvent);\n\n        return this;\n    }\n\n    off(eventName: EventFilter | string, listener: Listener): this {\n        if (!this.provider) { return this; }\n        const runningEvent = this._getRunningEvent(eventName);\n        runningEvent.removeListener(listener);\n        this._checkRunningEvents(runningEvent);\n        return this;\n    }\n\n    removeListener(eventName: EventFilter | string, listener: Listener): this {\n        return this.off(eventName, listener);\n    }\n\n}\n\nexport class Contract extends BaseContract {\n    // The meta-class properties\n    readonly [ key: string ]: ContractFunction | any;\n}\n\nexport class ContractFactory {\n\n    readonly interface: Interface;\n    readonly bytecode: string;\n    readonly signer: Signer;\n\n    constructor(contractInterface: ContractInterface, bytecode: BytesLike | { object: string }, signer?: Signer) {\n\n        let bytecodeHex: string = null;\n\n        if (typeof(bytecode) === \"string\") {\n            bytecodeHex = bytecode;\n        } else if (isBytes(bytecode)) {\n            bytecodeHex = hexlify(bytecode);\n        } else if (bytecode && typeof(bytecode.object) === \"string\") {\n            // Allow the bytecode object from the Solidity compiler\n            bytecodeHex = (<any>bytecode).object;\n        } else {\n            // Crash in the next verification step\n            bytecodeHex = \"!\";\n        }\n\n        // Make sure it is 0x prefixed\n        if (bytecodeHex.substring(0, 2) !== \"0x\") { bytecodeHex = \"0x\" + bytecodeHex; }\n\n        // Make sure the final result is valid bytecode\n        if (!isHexString(bytecodeHex) || (bytecodeHex.length % 2)) {\n            logger.throwArgumentError(\"invalid bytecode\", \"bytecode\", bytecode);\n        }\n\n        // If we have a signer, make sure it is valid\n        if (signer && !Signer.isSigner(signer)) {\n            logger.throwArgumentError(\"invalid signer\", \"signer\", signer);\n        }\n\n        defineReadOnly(this, \"bytecode\", bytecodeHex);\n        defineReadOnly(this, \"interface\", getStatic<InterfaceFunc>(new.target, \"getInterface\")(contractInterface));\n        defineReadOnly(this, \"signer\", signer || null);\n    }\n\n    // @TODO: Future; rename to populateTransaction?\n    getDeployTransaction(...args: Array<any>): TransactionRequest {\n        let tx: TransactionRequest = { };\n\n        // If we have 1 additional argument, we allow transaction overrides\n        if (args.length === this.interface.deploy.inputs.length + 1 && typeof(args[args.length - 1]) === \"object\") {\n            tx = shallowCopy(args.pop());\n            for (const key in tx) {\n                if (!allowedTransactionKeys[key]) {\n                    throw new Error(\"unknown transaction override \" + key);\n                }\n            }\n        }\n\n        // Do not allow these to be overridden in a deployment transaction\n        [\"data\", \"from\", \"to\"].forEach((key) => {\n            if ((<any>tx)[key] == null) { return; }\n            logger.throwError(\"cannot override \" + key, Logger.errors.UNSUPPORTED_OPERATION, { operation: key })\n        });\n\n        if (tx.value) {\n            const value = BigNumber.from(tx.value);\n            if (!value.isZero() && !this.interface.deploy.payable) {\n                logger.throwError(\"non-payable constructor cannot override value\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"overrides.value\",\n                    value: tx.value\n                });\n            }\n        }\n\n        // Make sure the call matches the constructor signature\n        logger.checkArgumentCount(args.length, this.interface.deploy.inputs.length, \" in Contract constructor\");\n\n        // Set the data to the bytecode + the encoded constructor arguments\n        tx.data = hexlify(concat([\n            this.bytecode,\n            this.interface.encodeDeploy(args)\n        ]));\n\n        return tx\n    }\n\n    async deploy(...args: Array<any>): Promise<Contract> {\n\n        let overrides: any = { };\n\n        // If 1 extra parameter was passed in, it contains overrides\n        if (args.length === this.interface.deploy.inputs.length + 1) {\n            overrides = args.pop();\n        }\n\n        // Make sure the call matches the constructor signature\n        logger.checkArgumentCount(args.length, this.interface.deploy.inputs.length, \" in Contract constructor\");\n\n        // Resolve ENS names and promises in the arguments\n        const params = await resolveAddresses(this.signer, args, this.interface.deploy.inputs);\n        params.push(overrides);\n\n        // Get the deployment transaction (with optional overrides)\n        const unsignedTx = this.getDeployTransaction(...params);\n\n        // Send the deployment transaction\n        const tx = await this.signer.sendTransaction(unsignedTx);\n\n        const address = getStatic<(tx: TransactionResponse) => string>(this.constructor, \"getContractAddress\")(tx);\n        const contract = getStatic<(address: string, contractInterface: ContractInterface, signer?: Signer) => Contract>(this.constructor, \"getContract\")(address, this.interface, this.signer);\n\n        // Add the modified wait that wraps events\n        addContractWait(contract, tx);\n\n        defineReadOnly(contract, \"deployTransaction\", tx);\n        return contract;\n    }\n\n    attach(address: string): Contract {\n        return (<any>(this.constructor)).getContract(address, this.interface, this.signer);\n    }\n\n    connect(signer: Signer) {\n        return new (<{ new(...args: any[]): ContractFactory }>(this.constructor))(this.interface, this.bytecode, signer);\n    }\n\n    static fromSolidity(compilerOutput: any, signer?: Signer): ContractFactory {\n        if (compilerOutput == null) {\n            logger.throwError(\"missing compiler output\", Logger.errors.MISSING_ARGUMENT, { argument: \"compilerOutput\" });\n        }\n\n        if (typeof(compilerOutput) === \"string\") {\n            compilerOutput = JSON.parse(compilerOutput);\n        }\n\n        const abi = compilerOutput.abi;\n\n        let bytecode: any = null;\n        if (compilerOutput.bytecode) {\n            bytecode = compilerOutput.bytecode;\n        } else if (compilerOutput.evm && compilerOutput.evm.bytecode) {\n            bytecode = compilerOutput.evm.bytecode;\n        }\n\n        return new this(abi, bytecode, signer);\n    }\n\n    static getInterface(contractInterface: ContractInterface) {\n        return Contract.getInterface(contractInterface);\n    }\n\n    static getContractAddress(tx: { from: string, nonce: BytesLike | BigNumber | number }): string {\n        return getContractAddress(tx);\n    }\n\n    static getContract(address: string, contractInterface: ContractInterface, signer?: Signer): Contract {\n        return new Contract(address, contractInterface, signer);\n    }\n}\n","export const version = \"address/5.7.0\";\n","\"use strict\";\n\nimport { arrayify, BytesLike, concat, hexDataLength, hexDataSlice, isHexString, stripZeros } from \"@ethersproject/bytes\";\nimport { BigNumber, BigNumberish, _base16To36, _base36To16 } from \"@ethersproject/bignumber\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { encode } from \"@ethersproject/rlp\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nfunction getChecksumAddress(address: string): string {\n    if (!isHexString(address, 20)) {\n        logger.throwArgumentError(\"invalid address\", \"address\", address);\n    }\n\n    address = address.toLowerCase();\n\n    const chars = address.substring(2).split(\"\");\n\n    const expanded = new Uint8Array(40);\n    for (let i = 0; i < 40; i++) {\n        expanded[i] = chars[i].charCodeAt(0);\n    }\n\n    const hashed = arrayify(keccak256(expanded));\n\n    for (let i = 0; i < 40; i += 2) {\n        if ((hashed[i >> 1] >> 4) >= 8) {\n            chars[i] = chars[i].toUpperCase();\n        }\n        if ((hashed[i >> 1] & 0x0f) >= 8) {\n            chars[i + 1] = chars[i + 1].toUpperCase();\n        }\n    }\n\n    return \"0x\" + chars.join(\"\");\n}\n\n// Shims for environments that are missing some required constants and functions\nconst MAX_SAFE_INTEGER: number = 0x1fffffffffffff;\n\nfunction log10(x: number): number {\n    if (Math.log10) { return Math.log10(x); }\n    return Math.log(x) / Math.LN10;\n}\n\n\n// See: https://en.wikipedia.org/wiki/International_Bank_Account_Number\n\n// Create lookup table\nconst ibanLookup: { [character: string]: string } = { };\nfor (let i = 0; i < 10; i++) { ibanLookup[String(i)] = String(i); }\nfor (let i = 0; i < 26; i++) { ibanLookup[String.fromCharCode(65 + i)] = String(10 + i); }\n\n// How many decimal digits can we process? (for 64-bit float, this is 15)\nconst safeDigits = Math.floor(log10(MAX_SAFE_INTEGER));\n\nfunction ibanChecksum(address: string): string {\n    address = address.toUpperCase();\n    address = address.substring(4) + address.substring(0, 2) + \"00\";\n\n    let expanded = address.split(\"\").map((c) => { return ibanLookup[c]; }).join(\"\");\n\n    // Javascript can handle integers safely up to 15 (decimal) digits\n    while (expanded.length >= safeDigits){\n        let block = expanded.substring(0, safeDigits);\n        expanded = parseInt(block, 10) % 97 + expanded.substring(block.length);\n    }\n\n    let checksum = String(98 - (parseInt(expanded, 10) % 97));\n    while (checksum.length < 2) { checksum = \"0\" + checksum; }\n\n    return checksum;\n};\n\nexport function getAddress(address: string): string {\n    let result = null;\n\n    if (typeof(address) !== \"string\") {\n        logger.throwArgumentError(\"invalid address\", \"address\", address);\n    }\n\n    if (address.match(/^(0x)?[0-9a-fA-F]{40}$/)) {\n\n        // Missing the 0x prefix\n        if (address.substring(0, 2) !== \"0x\") { address = \"0x\" + address; }\n\n        result = getChecksumAddress(address);\n\n        // It is a checksummed address with a bad checksum\n        if (address.match(/([A-F].*[a-f])|([a-f].*[A-F])/) && result !== address) {\n            logger.throwArgumentError(\"bad address checksum\", \"address\", address);\n        }\n\n    // Maybe ICAP? (we only support direct mode)\n    } else if (address.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {\n\n        // It is an ICAP address with a bad checksum\n        if (address.substring(2, 4) !== ibanChecksum(address)) {\n            logger.throwArgumentError(\"bad icap checksum\", \"address\", address);\n        }\n\n        result = _base36To16(address.substring(4));\n        while (result.length < 40) { result = \"0\" + result; }\n        result = getChecksumAddress(\"0x\" + result);\n\n    } else {\n        logger.throwArgumentError(\"invalid address\", \"address\", address);\n    }\n\n    return result;\n}\n\nexport function isAddress(address: string): boolean {\n    try {\n        getAddress(address);\n        return true;\n    } catch (error) { }\n    return false;\n}\n\nexport function getIcapAddress(address: string): string {\n    let base36 = _base16To36(getAddress(address).substring(2)).toUpperCase();\n    while (base36.length < 30) { base36 = \"0\" + base36; }\n    return \"XE\" + ibanChecksum(\"XE00\" + base36) + base36;\n}\n\n// http://ethereum.stackexchange.com/questions/760/how-is-the-address-of-an-ethereum-contract-computed\nexport function getContractAddress(transaction: { from: string, nonce: BigNumberish }) {\n    let from: string = null;\n    try {\n        from = getAddress(transaction.from);\n    } catch (error) {\n        logger.throwArgumentError(\"missing from address\", \"transaction\", transaction);\n    }\n\n    const nonce = stripZeros(arrayify(BigNumber.from(transaction.nonce).toHexString()));\n\n    return getAddress(hexDataSlice(keccak256(encode([ from, nonce ])), 12));\n}\n\nexport function getCreate2Address(from: string, salt: BytesLike, initCodeHash: BytesLike): string {\n    if (hexDataLength(salt) !== 32) {\n        logger.throwArgumentError(\"salt must be 32 bytes\", \"salt\", salt);\n    }\n    if (hexDataLength(initCodeHash) !== 32) {\n        logger.throwArgumentError(\"initCodeHash must be 32 bytes\", \"initCodeHash\", initCodeHash);\n    }\n    return getAddress(hexDataSlice(keccak256(concat([ \"0xff\", getAddress(from), salt, initCodeHash ])), 12))\n}\n","export const version = \"abstract-provider/5.7.0\";\n","\"use strict\";\n\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { BytesLike, isHexString } from \"@ethersproject/bytes\";\nimport { Network } from \"@ethersproject/networks\";\nimport { Deferrable, Description, defineReadOnly, resolveProperties } from \"@ethersproject/properties\";\nimport { AccessListish, Transaction } from \"@ethersproject/transactions\";\nimport { OnceBlockable } from \"@ethersproject/web\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n///////////////////////////////\n// Exported Types\n\n\nexport type TransactionRequest = {\n    to?: string,\n    from?: string,\n    nonce?: BigNumberish,\n\n    gasLimit?: BigNumberish,\n    gasPrice?: BigNumberish,\n\n    data?: BytesLike,\n    value?: BigNumberish,\n    chainId?: number\n\n    type?: number;\n    accessList?: AccessListish;\n\n    maxPriorityFeePerGas?: BigNumberish;\n    maxFeePerGas?: BigNumberish;\n\n    customData?: Record<string, any>;\n    ccipReadEnabled?: boolean;\n}\n\nexport interface TransactionResponse extends Transaction {\n    hash: string;\n\n    // Only if a transaction has been mined\n    blockNumber?: number,\n    blockHash?: string,\n    timestamp?: number,\n\n    confirmations: number,\n\n    // Not optional (as it is in Transaction)\n    from: string;\n\n    // The raw transaction\n    raw?: string,\n\n    // This function waits until the transaction has been mined\n    wait: (confirmations?: number) => Promise<TransactionReceipt>\n};\n\nexport type BlockTag = string | number;\n\nexport interface _Block {\n    hash: string;\n    parentHash: string;\n    number: number;\n\n    timestamp: number;\n    nonce: string;\n    difficulty: number;\n    _difficulty: BigNumber;\n\n    gasLimit: BigNumber;\n    gasUsed: BigNumber;\n\n    miner: string;\n    extraData: string;\n\n    baseFeePerGas?: null | BigNumber;\n}\n\nexport interface Block extends _Block {\n    transactions: Array<string>;\n}\n\nexport interface BlockWithTransactions extends _Block {\n    transactions: Array<TransactionResponse>;\n}\n\n\nexport interface Log {\n    blockNumber: number;\n    blockHash: string;\n    transactionIndex: number;\n\n    removed: boolean;\n\n    address: string;\n    data: string;\n\n    topics: Array<string>;\n\n    transactionHash: string;\n    logIndex: number;\n}\n\nexport interface TransactionReceipt {\n    to: string;\n    from: string;\n    contractAddress: string,\n    transactionIndex: number,\n    root?: string,\n    gasUsed: BigNumber,\n    logsBloom: string,\n    blockHash: string,\n    transactionHash: string,\n    logs: Array<Log>,\n    blockNumber: number,\n    confirmations: number,\n    cumulativeGasUsed: BigNumber,\n    effectiveGasPrice: BigNumber,\n    byzantium: boolean,\n    type: number;\n    status?: number\n};\n\nexport interface FeeData {\n    lastBaseFeePerGas: null | BigNumber;\n    maxFeePerGas: null | BigNumber;\n    maxPriorityFeePerGas: null | BigNumber;\n    gasPrice: null | BigNumber;\n}\n\nexport interface EventFilter {\n    address?: string;\n    topics?: Array<string | Array<string> | null>;\n}\n\nexport interface Filter extends EventFilter {\n    fromBlock?: BlockTag,\n    toBlock?: BlockTag,\n}\n\nexport interface FilterByBlockHash extends EventFilter {\n    blockHash?: string;\n}\n\n//export type CallTransactionable = {\n//    call(transaction: TransactionRequest): Promise<TransactionResponse>;\n//};\n\nexport abstract class ForkEvent extends Description {\n    readonly expiry: number;\n\n    readonly _isForkEvent?: boolean;\n\n    static isForkEvent(value: any): value is ForkEvent {\n        return !!(value && value._isForkEvent);\n    }\n}\n\nexport class BlockForkEvent extends ForkEvent {\n    readonly blockHash: string;\n\n    readonly _isBlockForkEvent?: boolean;\n\n    constructor(blockHash: string, expiry?: number) {\n        if (!isHexString(blockHash, 32)) {\n            logger.throwArgumentError(\"invalid blockHash\", \"blockHash\", blockHash);\n        }\n\n        super({\n            _isForkEvent: true,\n            _isBlockForkEvent: true,\n            expiry: (expiry || 0),\n            blockHash: blockHash\n        });\n    }\n}\n\nexport class TransactionForkEvent extends ForkEvent {\n    readonly hash: string;\n\n    readonly _isTransactionOrderForkEvent?: boolean;\n\n    constructor(hash: string, expiry?: number) {\n        if (!isHexString(hash, 32)) {\n            logger.throwArgumentError(\"invalid transaction hash\", \"hash\", hash);\n        }\n\n        super({\n            _isForkEvent: true,\n            _isTransactionForkEvent: true,\n            expiry: (expiry || 0),\n            hash: hash\n        });\n    }\n}\n\nexport class TransactionOrderForkEvent extends ForkEvent {\n    readonly beforeHash: string;\n    readonly afterHash: string;\n\n    constructor(beforeHash: string, afterHash: string, expiry?: number) {\n        if (!isHexString(beforeHash, 32)) {\n            logger.throwArgumentError(\"invalid transaction hash\", \"beforeHash\", beforeHash);\n        }\n        if (!isHexString(afterHash, 32)) {\n            logger.throwArgumentError(\"invalid transaction hash\", \"afterHash\", afterHash);\n        }\n\n        super({\n            _isForkEvent: true,\n            _isTransactionOrderForkEvent: true,\n            expiry: (expiry || 0),\n            beforeHash: beforeHash,\n            afterHash: afterHash\n        });\n    }\n}\n\nexport type EventType = string | Array<string | Array<string>> | EventFilter | ForkEvent;\n\nexport type Listener = (...args: Array<any>) => void;\n\n///////////////////////////////\n// Exported Abstracts\nexport abstract class Provider implements OnceBlockable {\n\n    // Network\n    abstract getNetwork(): Promise<Network>;\n\n    // Latest State\n    abstract getBlockNumber(): Promise<number>;\n    abstract getGasPrice(): Promise<BigNumber>;\n    async getFeeData(): Promise<FeeData> {\n        const { block, gasPrice } = await resolveProperties({\n            block: this.getBlock(\"latest\"),\n            gasPrice: this.getGasPrice().catch((error) => {\n                // @TODO: Why is this now failing on Calaveras?\n                //console.log(error);\n                return null;\n            })\n        });\n\n        let lastBaseFeePerGas = null, maxFeePerGas = null, maxPriorityFeePerGas = null;\n\n        if (block && block.baseFeePerGas) {\n            // We may want to compute this more accurately in the future,\n            // using the formula \"check if the base fee is correct\".\n            // See: https://eips.ethereum.org/EIPS/eip-1559\n            lastBaseFeePerGas = block.baseFeePerGas;\n            maxPriorityFeePerGas = BigNumber.from(\"1500000000\");\n            maxFeePerGas = block.baseFeePerGas.mul(2).add(maxPriorityFeePerGas);\n        }\n\n        return { lastBaseFeePerGas, maxFeePerGas, maxPriorityFeePerGas, gasPrice };\n    }\n\n    // Account\n    abstract getBalance(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<BigNumber>;\n    abstract getTransactionCount(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<number>;\n    abstract getCode(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string> ;\n    abstract getStorageAt(addressOrName: string | Promise<string>, position: BigNumberish | Promise<BigNumberish>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string>;\n\n    // Execution\n    abstract sendTransaction(signedTransaction: string | Promise<string>): Promise<TransactionResponse>;\n    abstract call(transaction: Deferrable<TransactionRequest>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string>;\n    abstract estimateGas(transaction: Deferrable<TransactionRequest>): Promise<BigNumber>;\n\n    // Queries\n    abstract getBlock(blockHashOrBlockTag: BlockTag | string | Promise<BlockTag | string>): Promise<Block>;\n    abstract getBlockWithTransactions(blockHashOrBlockTag: BlockTag | string | Promise<BlockTag | string>): Promise<BlockWithTransactions>;\n    abstract getTransaction(transactionHash: string): Promise<TransactionResponse>;\n    abstract getTransactionReceipt(transactionHash: string): Promise<TransactionReceipt>;\n\n    // Bloom-filter Queries\n    abstract getLogs(filter: Filter): Promise<Array<Log>>;\n\n    // ENS\n    abstract resolveName(name: string | Promise<string>): Promise<null | string>;\n    abstract lookupAddress(address: string | Promise<string>): Promise<null | string>;\n\n    // Event Emitter (ish)\n    abstract on(eventName: EventType, listener: Listener): Provider;\n    abstract once(eventName: EventType, listener: Listener): Provider;\n    abstract emit(eventName: EventType, ...args: Array<any>): boolean\n    abstract listenerCount(eventName?: EventType): number;\n    abstract listeners(eventName?: EventType): Array<Listener>;\n    abstract off(eventName: EventType, listener?: Listener): Provider;\n    abstract removeAllListeners(eventName?: EventType): Provider;\n\n    // Alias for \"on\"\n    addListener(eventName: EventType, listener: Listener): Provider {\n        return this.on(eventName, listener);\n    }\n\n    // Alias for \"off\"\n    removeListener(eventName: EventType, listener: Listener): Provider {\n        return this.off(eventName, listener);\n    }\n\n    // @TODO: This *could* be implemented here, but would pull in events...\n    abstract waitForTransaction(transactionHash: string, confirmations?: number, timeout?: number): Promise<TransactionReceipt>;\n\n    readonly _isProvider: boolean;\n\n    constructor() {\n        logger.checkAbstract(new.target, Provider);\n        defineReadOnly(this, \"_isProvider\", true);\n    }\n\n    static isProvider(value: any): value is Provider {\n        return !!(value && value._isProvider);\n    }\n\n/*\n    static getResolver(network: Network, callable: CallTransactionable, namehash: string): string {\n        // No ENS...\n        if (!network.ensAddress) {\n            errors.throwError(\n                \"network does support ENS\",\n                errors.UNSUPPORTED_OPERATION,\n                { operation: \"ENS\", network: network.name }\n            );\n        }\n\n        // Not a namehash\n        if (!isHexString(namehash, 32)) {\n            errors.throwArgumentError(\"invalid name hash\", \"namehash\", namehash);\n        }\n\n        // keccak256(\"resolver(bytes32)\")\n        let data = \"0x0178b8bf\" + namehash.substring(2);\n        let transaction = { to: network.ensAddress, data: data };\n\n        return provider.call(transaction).then((data) => {\n            return provider.formatter.callAddress(data);\n        });\n    }\n\n    static resolveNamehash(network: Network, callable: CallTransactionable, namehash: string): string {\n        return this.getResolver(network, callable, namehash).then((resolverAddress) => {\n            if (!resolverAddress) { return null; }\n\n            // keccak256(\"addr(bytes32)\")\n            let data = \"0x3b3b57de\" + namehash(name).substring(2);\n            let transaction = { to: resolverAddress, data: data };\n            return callable.call(transaction).then((data) => {\n                return this.formatter.callAddress(data);\n            });\n\n        })\n    }\n*/\n}\n","export const version = \"abstract-signer/5.7.0\";\n","\"use strict\";\n\nimport { BlockTag, FeeData, Provider, TransactionRequest, TransactionResponse } from \"@ethersproject/abstract-provider\";\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { Bytes, BytesLike } from \"@ethersproject/bytes\";\nimport { Deferrable, defineReadOnly, resolveProperties, shallowCopy } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nconst allowedTransactionKeys: Array<string> = [\n    \"accessList\", \"ccipReadEnabled\", \"chainId\", \"customData\", \"data\", \"from\", \"gasLimit\", \"gasPrice\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"nonce\", \"to\", \"type\", \"value\"\n];\n\nconst forwardErrors = [\n    Logger.errors.INSUFFICIENT_FUNDS,\n    Logger.errors.NONCE_EXPIRED,\n    Logger.errors.REPLACEMENT_UNDERPRICED,\n];\n\n// EIP-712 Typed Data\n// See: https://eips.ethereum.org/EIPS/eip-712\n\nexport interface TypedDataDomain {\n    name?: string;\n    version?: string;\n    chainId?: BigNumberish;\n    verifyingContract?: string;\n    salt?: BytesLike;\n};\n\nexport interface TypedDataField {\n    name: string;\n    type: string;\n};\n\n// Sub-classes of Signer may optionally extend this interface to indicate\n// they have a private key available synchronously\nexport interface ExternallyOwnedAccount {\n    readonly address: string;\n    readonly privateKey: string;\n}\n\n// Sub-Class Notes:\n//  - A Signer MUST always make sure, that if present, the \"from\" field\n//    matches the Signer, before sending or signing a transaction\n//  - A Signer SHOULD always wrap private information (such as a private\n//    key or mnemonic) in a function, so that console.log does not leak\n//    the data\n\n// @TODO: This is a temporary measure to preserve backwards compatibility\n//        In v6, the method on TypedDataSigner will be added to Signer\nexport interface TypedDataSigner {\n    _signTypedData(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): Promise<string>;\n}\n\nexport abstract class Signer {\n    readonly provider?: Provider;\n\n    ///////////////////\n    // Sub-classes MUST implement these\n\n    // Returns the checksum address\n    abstract getAddress(): Promise<string>\n\n    // Returns the signed prefixed-message. This MUST treat:\n    // - Bytes as a binary message\n    // - string as a UTF8-message\n    // i.e. \"0x1234\" is a SIX (6) byte string, NOT 2 bytes of data\n    abstract signMessage(message: Bytes | string): Promise<string>;\n\n    // Signs a transaction and returns the fully serialized, signed transaction.\n    // The EXACT transaction MUST be signed, and NO additional properties to be added.\n    // - This MAY throw if signing transactions is not supports, but if\n    //   it does, sentTransaction MUST be overridden.\n    abstract signTransaction(transaction: Deferrable<TransactionRequest>): Promise<string>;\n\n    // Returns a new instance of the Signer, connected to provider.\n    // This MAY throw if changing providers is not supported.\n    abstract connect(provider: Provider): Signer;\n\n    readonly _isSigner: boolean;\n\n\n    ///////////////////\n    // Sub-classes MUST call super\n    constructor() {\n        logger.checkAbstract(new.target, Signer);\n        defineReadOnly(this, \"_isSigner\", true);\n    }\n\n\n    ///////////////////\n    // Sub-classes MAY override these\n\n    async getBalance(blockTag?: BlockTag): Promise<BigNumber> {\n        this._checkProvider(\"getBalance\");\n        return await this.provider.getBalance(this.getAddress(), blockTag);\n    }\n\n    async getTransactionCount(blockTag?: BlockTag): Promise<number> {\n        this._checkProvider(\"getTransactionCount\");\n        return await this.provider.getTransactionCount(this.getAddress(), blockTag);\n    }\n\n    // Populates \"from\" if unspecified, and estimates the gas for the transaction\n    async estimateGas(transaction: Deferrable<TransactionRequest>): Promise<BigNumber> {\n        this._checkProvider(\"estimateGas\");\n        const tx = await resolveProperties(this.checkTransaction(transaction));\n        return await this.provider.estimateGas(tx);\n    }\n\n    // Populates \"from\" if unspecified, and calls with the transaction\n    async call(transaction: Deferrable<TransactionRequest>, blockTag?: BlockTag): Promise<string> {\n        this._checkProvider(\"call\");\n        const tx = await resolveProperties(this.checkTransaction(transaction));\n        return await this.provider.call(tx, blockTag);\n    }\n\n    // Populates all fields in a transaction, signs it and sends it to the network\n    async sendTransaction(transaction: Deferrable<TransactionRequest>): Promise<TransactionResponse> {\n        this._checkProvider(\"sendTransaction\");\n        const tx = await this.populateTransaction(transaction);\n        const signedTx = await this.signTransaction(tx);\n        return await this.provider.sendTransaction(signedTx);\n    }\n\n    async getChainId(): Promise<number> {\n        this._checkProvider(\"getChainId\");\n        const network = await this.provider.getNetwork();\n        return network.chainId;\n    }\n\n    async getGasPrice(): Promise<BigNumber> {\n        this._checkProvider(\"getGasPrice\");\n        return await this.provider.getGasPrice();\n    }\n\n    async getFeeData(): Promise<FeeData> {\n        this._checkProvider(\"getFeeData\");\n        return await this.provider.getFeeData();\n    }\n\n\n    async resolveName(name: string): Promise<string> {\n        this._checkProvider(\"resolveName\");\n        return await this.provider.resolveName(name);\n    }\n\n\n\n    // Checks a transaction does not contain invalid keys and if\n    // no \"from\" is provided, populates it.\n    // - does NOT require a provider\n    // - adds \"from\" is not present\n    // - returns a COPY (safe to mutate the result)\n    // By default called from: (overriding these prevents it)\n    //   - call\n    //   - estimateGas\n    //   - populateTransaction (and therefor sendTransaction)\n    checkTransaction(transaction: Deferrable<TransactionRequest>): Deferrable<TransactionRequest> {\n        for (const key in transaction) {\n            if (allowedTransactionKeys.indexOf(key) === -1) {\n                logger.throwArgumentError(\"invalid transaction key: \" + key, \"transaction\", transaction);\n            }\n        }\n\n        const tx = shallowCopy(transaction);\n\n        if (tx.from == null) {\n            tx.from = this.getAddress();\n\n        } else {\n            // Make sure any provided address matches this signer\n            tx.from = Promise.all([\n                Promise.resolve(tx.from),\n                this.getAddress()\n            ]).then((result) => {\n                if (result[0].toLowerCase() !== result[1].toLowerCase()) {\n                    logger.throwArgumentError(\"from address mismatch\", \"transaction\", transaction);\n                }\n                return result[0];\n            });\n        }\n\n        return tx;\n    }\n\n    // Populates ALL keys for a transaction and checks that \"from\" matches\n    // this Signer. Should be used by sendTransaction but NOT by signTransaction.\n    // By default called from: (overriding these prevents it)\n    //   - sendTransaction\n    //\n    // Notes:\n    //  - We allow gasPrice for EIP-1559 as long as it matches maxFeePerGas\n    async populateTransaction(transaction: Deferrable<TransactionRequest>): Promise<TransactionRequest> {\n\n        const tx: Deferrable<TransactionRequest> = await resolveProperties(this.checkTransaction(transaction))\n\n        if (tx.to != null) {\n            tx.to = Promise.resolve(tx.to).then(async (to) => {\n                if (to == null) { return null; }\n                const address = await this.resolveName(to);\n                if (address == null) {\n                    logger.throwArgumentError(\"provided ENS name resolves to null\", \"tx.to\", to);\n                }\n                return address;\n            });\n\n            // Prevent this error from causing an UnhandledPromiseException\n            tx.to.catch((error) => {  });\n        }\n\n        // Do not allow mixing pre-eip-1559 and eip-1559 properties\n        const hasEip1559 = (tx.maxFeePerGas != null || tx.maxPriorityFeePerGas != null);\n        if (tx.gasPrice != null && (tx.type === 2 || hasEip1559)) {\n            logger.throwArgumentError(\"eip-1559 transaction do not support gasPrice\", \"transaction\", transaction);\n        } else if ((tx.type === 0 || tx.type === 1) && hasEip1559) {\n            logger.throwArgumentError(\"pre-eip-1559 transaction do not support maxFeePerGas/maxPriorityFeePerGas\", \"transaction\", transaction);\n        }\n\n        if ((tx.type === 2 || tx.type == null) && (tx.maxFeePerGas != null && tx.maxPriorityFeePerGas != null)) {\n            // Fully-formed EIP-1559 transaction (skip getFeeData)\n            tx.type = 2;\n\n        } else if (tx.type === 0 || tx.type === 1) {\n            // Explicit Legacy or EIP-2930 transaction\n\n            // Populate missing gasPrice\n            if (tx.gasPrice == null) { tx.gasPrice = this.getGasPrice(); }\n\n        } else {\n\n            // We need to get fee data to determine things\n            const feeData = await this.getFeeData();\n\n            if (tx.type == null) {\n                // We need to auto-detect the intended type of this transaction...\n\n                if (feeData.maxFeePerGas != null && feeData.maxPriorityFeePerGas != null) {\n                    // The network supports EIP-1559!\n\n                    // Upgrade transaction from null to eip-1559\n                    tx.type = 2;\n\n                    if (tx.gasPrice != null) {\n                        // Using legacy gasPrice property on an eip-1559 network,\n                        // so use gasPrice as both fee properties\n                        const gasPrice = tx.gasPrice;\n                        delete tx.gasPrice;\n                        tx.maxFeePerGas = gasPrice;\n                        tx.maxPriorityFeePerGas = gasPrice;\n\n                    } else {\n                        // Populate missing fee data\n                        if (tx.maxFeePerGas == null) { tx.maxFeePerGas = feeData.maxFeePerGas; }\n                        if (tx.maxPriorityFeePerGas == null) { tx.maxPriorityFeePerGas = feeData.maxPriorityFeePerGas; }\n                    }\n\n                } else if (feeData.gasPrice != null) {\n                    // Network doesn't support EIP-1559...\n\n                    // ...but they are trying to use EIP-1559 properties\n                    if (hasEip1559) {\n                        logger.throwError(\"network does not support EIP-1559\", Logger.errors.UNSUPPORTED_OPERATION, {\n                            operation: \"populateTransaction\"\n                        });\n                    }\n\n                    // Populate missing fee data\n                    if (tx.gasPrice == null) { tx.gasPrice = feeData.gasPrice; }\n\n                    // Explicitly set untyped transaction to legacy\n                    tx.type = 0;\n\n                } else {\n                    // getFeeData has failed us.\n                    logger.throwError(\"failed to get consistent fee data\", Logger.errors.UNSUPPORTED_OPERATION, {\n                        operation: \"signer.getFeeData\"\n                    });\n                }\n\n            } else if (tx.type === 2) {\n                // Explicitly using EIP-1559\n\n                // Populate missing fee data\n                if (tx.maxFeePerGas == null) { tx.maxFeePerGas = feeData.maxFeePerGas; }\n                if (tx.maxPriorityFeePerGas == null) { tx.maxPriorityFeePerGas = feeData.maxPriorityFeePerGas; }\n            }\n        }\n\n        if (tx.nonce == null) { tx.nonce = this.getTransactionCount(\"pending\"); }\n\n        if (tx.gasLimit == null) {\n            tx.gasLimit = this.estimateGas(tx).catch((error) => {\n                if (forwardErrors.indexOf(error.code) >= 0) {\n                    throw error;\n                }\n\n                return logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n                    error: error,\n                    tx: tx\n                });\n            });\n        }\n\n        if (tx.chainId == null) {\n            tx.chainId = this.getChainId();\n        } else {\n            tx.chainId = Promise.all([\n                Promise.resolve(tx.chainId),\n                this.getChainId()\n            ]).then((results) => {\n                if (results[1] !== 0 && results[0] !== results[1]) {\n                    logger.throwArgumentError(\"chainId address mismatch\", \"transaction\", transaction);\n                }\n                return results[0];\n            });\n        }\n\n        return await resolveProperties(tx);\n    }\n\n\n    ///////////////////\n    // Sub-classes SHOULD leave these alone\n\n    _checkProvider(operation?: string): void {\n        if (!this.provider) { logger.throwError(\"missing provider\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: (operation || \"_checkProvider\") });\n        }\n    }\n\n    static isSigner(value: any): value is Signer {\n        return !!(value && value._isSigner);\n    }\n}\n\nexport class VoidSigner extends Signer implements TypedDataSigner {\n    readonly address: string;\n\n    constructor(address: string, provider?: Provider) {\n        super();\n        defineReadOnly(this, \"address\", address);\n        defineReadOnly(this, \"provider\", provider || null);\n    }\n\n    getAddress(): Promise<string> {\n        return Promise.resolve(this.address);\n    }\n\n    _fail(message: string, operation: string): Promise<any> {\n        return Promise.resolve().then(() => {\n            logger.throwError(message, Logger.errors.UNSUPPORTED_OPERATION, { operation: operation });\n        });\n    }\n\n    signMessage(message: Bytes | string): Promise<string> {\n        return this._fail(\"VoidSigner cannot sign messages\", \"signMessage\");\n    }\n\n    signTransaction(transaction: Deferrable<TransactionRequest>): Promise<string> {\n        return this._fail(\"VoidSigner cannot sign transactions\", \"signTransaction\");\n    }\n\n    _signTypedData(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): Promise<string> {\n        return this._fail(\"VoidSigner cannot sign typed data\", \"signTypedData\");\n    }\n\n    connect(provider: Provider): VoidSigner {\n        return new VoidSigner(this.address, provider);\n    }\n}\n\n","export const version = \"bytes/5.7.0\";\n","\"use strict\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n///////////////////////////////\n// Exported Types\n\nexport type Bytes = ArrayLike<number>;\n\nexport type BytesLike = Bytes | string;\n\nexport type DataOptions = {\n    allowMissingPrefix?: boolean;\n    hexPad?: \"left\" | \"right\" | null;\n};\n\nexport interface Hexable {\n    toHexString(): string;\n}\n\n\n/*\nexport interface HexString {\n    length: number;\n    substring: (start: number, end?: number) => string;\n\n    [index: number]: string;\n}\n*/\n\nexport type SignatureLike  = {\n    r: string;\n    s?: string;\n    _vs?: string,\n    recoveryParam?: number;\n    v?: number;\n} | BytesLike;\n\nexport interface Signature {\n    r: string;\n\n    s: string;\n    _vs: string,\n\n    recoveryParam: number;\n    v: number;\n\n    yParityAndS: string\n    compact: string;\n}\n\n///////////////////////////////\n\n\nfunction isHexable(value: any): value is Hexable {\n    return !!(value.toHexString);\n}\n\nfunction addSlice(array: Uint8Array): Uint8Array {\n    if (array.slice) { return array; }\n\n    array.slice = function() {\n        const args = Array.prototype.slice.call(arguments);\n        return addSlice(new Uint8Array(Array.prototype.slice.apply(array, args)));\n    }\n\n    return array;\n}\n\nexport function isBytesLike(value: any): value is BytesLike {\n    return ((isHexString(value) && !(value.length % 2)) || isBytes(value));\n}\n\nfunction isInteger(value: number) {\n    return (typeof(value) === \"number\" && value == value && (value % 1) === 0);\n}\n\nexport function isBytes(value: any): value is Bytes {\n    if (value == null) { return false; }\n\n    if (value.constructor === Uint8Array) { return true; }\n    if (typeof(value) === \"string\") { return false; }\n    if (!isInteger(value.length) || value.length < 0) { return false; }\n\n    for (let i = 0; i < value.length; i++) {\n        const v = value[i];\n        if (!isInteger(v) || v < 0 || v >= 256) { return false; }\n    }\n    return true;\n}\n\n\nexport function arrayify(value: BytesLike | Hexable | number, options?: DataOptions): Uint8Array {\n    if (!options) { options = { }; }\n\n    if (typeof(value) === \"number\") {\n        logger.checkSafeUint53(value, \"invalid arrayify value\");\n\n        const result = [];\n        while (value) {\n            result.unshift(value & 0xff);\n            value = parseInt(String(value / 256));\n        }\n        if (result.length === 0) { result.push(0); }\n\n        return addSlice(new Uint8Array(result));\n    }\n\n    if (options.allowMissingPrefix && typeof(value) === \"string\" && value.substring(0, 2) !== \"0x\") {\n         value = \"0x\" + value;\n    }\n\n    if (isHexable(value)) { value = value.toHexString(); }\n\n    if (isHexString(value)) {\n        let hex = (<string>value).substring(2);\n        if (hex.length % 2) {\n            if (options.hexPad === \"left\") {\n                hex = \"0\" + hex;\n            } else if (options.hexPad === \"right\") {\n                hex += \"0\";\n            } else {\n                logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n            }\n        }\n\n        const result = [];\n        for (let i = 0; i < hex.length; i += 2) {\n            result.push(parseInt(hex.substring(i, i + 2), 16));\n        }\n\n        return addSlice(new Uint8Array(result));\n    }\n\n    if (isBytes(value)) {\n        return addSlice(new Uint8Array(value));\n    }\n\n    return logger.throwArgumentError(\"invalid arrayify value\", \"value\", value);\n}\n\nexport function concat(items: ReadonlyArray<BytesLike>): Uint8Array {\n    const objects = items.map(item => arrayify(item));\n    const length = objects.reduce((accum, item) => (accum + item.length), 0);\n\n    const result = new Uint8Array(length);\n\n    objects.reduce((offset, object) => {\n        result.set(object, offset);\n        return offset + object.length;\n    }, 0);\n\n    return addSlice(result);\n}\n\nexport function stripZeros(value: BytesLike): Uint8Array {\n    let result: Uint8Array = arrayify(value);\n\n    if (result.length === 0) { return result; }\n\n    // Find the first non-zero entry\n    let start = 0;\n    while (start < result.length && result[start] === 0) { start++ }\n\n    // If we started with zeros, strip them\n    if (start) {\n        result = result.slice(start);\n    }\n\n    return result;\n}\n\nexport function zeroPad(value: BytesLike, length: number): Uint8Array {\n    value = arrayify(value);\n\n    if (value.length > length) {\n        logger.throwArgumentError(\"value out of range\", \"value\", arguments[0]);\n    }\n\n    const result = new Uint8Array(length);\n    result.set(value, length - value.length);\n    return addSlice(result);\n}\n\n\nexport function isHexString(value: any, length?: number): boolean {\n    if (typeof(value) !== \"string\" || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n        return false\n    }\n    if (length && value.length !== 2 + 2 * length) { return false; }\n    return true;\n}\n\nconst HexCharacters: string = \"0123456789abcdef\";\n\nexport function hexlify(value: BytesLike | Hexable | number | bigint, options?: DataOptions): string {\n    if (!options) { options = { }; }\n\n    if (typeof(value) === \"number\") {\n        logger.checkSafeUint53(value, \"invalid hexlify value\");\n\n        let hex = \"\";\n        while (value) {\n            hex = HexCharacters[value & 0xf] + hex;\n            value = Math.floor(value / 16);\n        }\n\n        if (hex.length) {\n            if (hex.length % 2) { hex = \"0\" + hex; }\n            return \"0x\" + hex;\n        }\n\n        return \"0x00\";\n    }\n\n    if (typeof(value) === \"bigint\") {\n        value = value.toString(16);\n        if (value.length % 2) { return (\"0x0\" + value); }\n        return \"0x\" + value;\n    }\n\n    if (options.allowMissingPrefix && typeof(value) === \"string\" && value.substring(0, 2) !== \"0x\") {\n         value = \"0x\" + value;\n    }\n\n    if (isHexable(value)) { return value.toHexString(); }\n\n    if (isHexString(value)) {\n        if ((<string>value).length % 2) {\n            if (options.hexPad === \"left\") {\n                value = \"0x0\" + (<string>value).substring(2);\n            } else if (options.hexPad === \"right\") {\n                value += \"0\";\n            } else {\n                logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n            }\n        }\n        return (<string>value).toLowerCase();\n    }\n\n    if (isBytes(value)) {\n        let result = \"0x\";\n        for (let i = 0; i < value.length; i++) {\n             let v = value[i];\n             result += HexCharacters[(v & 0xf0) >> 4] + HexCharacters[v & 0x0f];\n        }\n        return result;\n    }\n\n    return logger.throwArgumentError(\"invalid hexlify value\", \"value\", value);\n}\n\n/*\nfunction unoddify(value: BytesLike | Hexable | number): BytesLike | Hexable | number {\n    if (typeof(value) === \"string\" && value.length % 2 && value.substring(0, 2) === \"0x\") {\n        return \"0x0\" + value.substring(2);\n    }\n    return value;\n}\n*/\nexport function hexDataLength(data: BytesLike) {\n    if (typeof(data) !== \"string\") {\n        data = hexlify(data);\n    } else if (!isHexString(data) || (data.length % 2)) {\n        return null;\n    }\n\n    return (data.length - 2) / 2;\n}\n\nexport function hexDataSlice(data: BytesLike, offset: number, endOffset?: number): string {\n    if (typeof(data) !== \"string\") {\n        data = hexlify(data);\n    } else if (!isHexString(data) || (data.length % 2)) {\n        logger.throwArgumentError(\"invalid hexData\", \"value\", data );\n    }\n\n    offset = 2 + 2 * offset;\n\n    if (endOffset != null) {\n        return \"0x\" + data.substring(offset, 2 + 2 * endOffset);\n    }\n\n    return \"0x\" + data.substring(offset);\n}\n\nexport function hexConcat(items: ReadonlyArray<BytesLike>): string {\n    let result = \"0x\";\n    items.forEach((item) => {\n        result += hexlify(item).substring(2);\n    });\n    return result;\n}\n\nexport function hexValue(value: BytesLike | Hexable | number | bigint): string {\n    const trimmed = hexStripZeros(hexlify(value, { hexPad: \"left\" }));\n    if (trimmed === \"0x\") { return \"0x0\"; }\n    return trimmed;\n}\n\nexport function hexStripZeros(value: BytesLike): string {\n    if (typeof(value) !== \"string\") { value = hexlify(value); }\n\n    if (!isHexString(value)) {\n        logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n    }\n    value = value.substring(2);\n    let offset = 0;\n    while (offset < value.length && value[offset] === \"0\") { offset++; }\n    return \"0x\" + value.substring(offset);\n}\n\nexport function hexZeroPad(value: BytesLike, length: number): string {\n    if (typeof(value) !== \"string\") {\n        value = hexlify(value);\n    } else if (!isHexString(value)) {\n        logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n    }\n\n    if (value.length > 2 * length + 2) {\n        logger.throwArgumentError(\"value out of range\", \"value\", arguments[1]);\n    }\n\n    while (value.length < 2 * length + 2) {\n        value = \"0x0\" + value.substring(2);\n    }\n\n    return value;\n}\n\nexport function splitSignature(signature: SignatureLike): Signature {\n\n    const result = {\n        r: \"0x\",\n        s: \"0x\",\n        _vs: \"0x\",\n        recoveryParam: 0,\n        v: 0,\n        yParityAndS: \"0x\",\n        compact: \"0x\"\n    };\n\n    if (isBytesLike(signature)) {\n        let bytes: Uint8Array = arrayify(signature);\n\n        // Get the r, s and v\n        if (bytes.length === 64) {\n            // EIP-2098; pull the v from the top bit of s and clear it\n            result.v = 27 + (bytes[32] >> 7);\n            bytes[32] &= 0x7f;\n\n            result.r = hexlify(bytes.slice(0, 32));\n            result.s = hexlify(bytes.slice(32, 64));\n\n        } else if (bytes.length === 65) {\n            result.r = hexlify(bytes.slice(0, 32));\n            result.s = hexlify(bytes.slice(32, 64));\n            result.v = bytes[64];\n        } else {\n\n            logger.throwArgumentError(\"invalid signature string\", \"signature\", signature);\n        }\n\n\n        // Allow a recid to be used as the v\n        if (result.v < 27) {\n            if (result.v === 0 || result.v === 1) {\n                result.v += 27;\n            } else {\n                logger.throwArgumentError(\"signature invalid v byte\", \"signature\", signature);\n            }\n        }\n\n        // Compute recoveryParam from v\n        result.recoveryParam = 1 - (result.v % 2);\n\n        // Compute _vs from recoveryParam and s\n        if (result.recoveryParam) { bytes[32] |= 0x80; }\n        result._vs = hexlify(bytes.slice(32, 64))\n\n    } else {\n        result.r = signature.r;\n        result.s = signature.s;\n        result.v = signature.v;\n        result.recoveryParam = signature.recoveryParam;\n        result._vs = signature._vs;\n\n        // If the _vs is available, use it to populate missing s, v and recoveryParam\n        // and verify non-missing s, v and recoveryParam\n        if (result._vs != null) {\n            const vs = zeroPad(arrayify(result._vs), 32);\n            result._vs = hexlify(vs);\n\n            // Set or check the recid\n            const recoveryParam = ((vs[0] >= 128) ? 1: 0);\n            if (result.recoveryParam == null) {\n                result.recoveryParam = recoveryParam;\n            } else if (result.recoveryParam !== recoveryParam) {\n                logger.throwArgumentError(\"signature recoveryParam mismatch _vs\", \"signature\", signature);\n            }\n\n            // Set or check the s\n            vs[0] &= 0x7f;\n            const s = hexlify(vs);\n            if (result.s == null) {\n                result.s = s;\n            } else if (result.s !== s) {\n                logger.throwArgumentError(\"signature v mismatch _vs\", \"signature\", signature);\n            }\n        }\n\n        // Use recid and v to populate each other\n        if (result.recoveryParam == null) {\n            if (result.v == null) {\n                logger.throwArgumentError(\"signature missing v and recoveryParam\", \"signature\", signature);\n            } else if (result.v === 0 || result.v === 1) {\n                result.recoveryParam = result.v;\n            } else {\n                result.recoveryParam = 1 - (result.v % 2);\n            }\n        } else {\n            if (result.v == null) {\n                result.v = 27 + result.recoveryParam;\n            } else {\n                const recId = (result.v === 0 || result.v === 1) ? result.v :(1 - (result.v % 2));\n                if (result.recoveryParam !== recId) {\n                    logger.throwArgumentError(\"signature recoveryParam mismatch v\", \"signature\", signature);\n                }\n            }\n        }\n\n        if (result.r == null || !isHexString(result.r)) {\n            logger.throwArgumentError(\"signature missing or invalid r\", \"signature\", signature);\n        } else {\n            result.r = hexZeroPad(result.r, 32);\n        }\n\n        if (result.s == null || !isHexString(result.s)) {\n            logger.throwArgumentError(\"signature missing or invalid s\", \"signature\", signature);\n        } else {\n            result.s = hexZeroPad(result.s, 32);\n        }\n\n        const vs = arrayify(result.s);\n        if (vs[0] >= 128) {\n            logger.throwArgumentError(\"signature s out of range\", \"signature\", signature);\n        }\n        if (result.recoveryParam) { vs[0] |= 0x80; }\n        const _vs = hexlify(vs);\n\n        if (result._vs) {\n            if (!isHexString(result._vs)) {\n                logger.throwArgumentError(\"signature invalid _vs\", \"signature\", signature);\n            }\n            result._vs = hexZeroPad(result._vs, 32);\n        }\n\n        // Set or check the _vs\n        if (result._vs == null) {\n            result._vs = _vs;\n        } else if (result._vs !== _vs) {\n            logger.throwArgumentError(\"signature _vs mismatch v and s\", \"signature\", signature);\n        }\n    }\n\n    result.yParityAndS = result._vs;\n    result.compact = result.r + result.yParityAndS.substring(2);\n\n    return result;\n}\n\nexport function joinSignature(signature: SignatureLike): string {\n    signature = splitSignature(signature);\n\n    return hexlify(concat([\n         signature.r,\n         signature.s,\n         (signature.recoveryParam ? \"0x1c\": \"0x1b\")\n    ]));\n}\n\n","import { keccak256 } from \"@ethersproject/keccak256\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\n\nexport function id(text: string): string {\n    return keccak256(toUtf8Bytes(text));\n}\n","export const version = \"hash/5.7.0\";\n","/**\n * MIT License\n *\n * Copyright (c) 2021 Andrew Raffensperger\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n * This is a near carbon-copy of the original source (link below) with the\n * TypeScript typings added and a few tweaks to make it ES3-compatible.\n *\n * See: https://github.com/adraffy/ens-normalize.js\n */\n\nexport type Numbers = Uint8Array | Array<number>;\nexport type NextFunc = (...args: Array<any>) => number;\n\n// https://github.com/behnammodi/polyfill/blob/master/array.polyfill.js\nfunction flat(array: Array<any>, depth?: number): Array<any> {\n    if (depth == null) { depth = 1; }\n    const result: Array<any> = [];\n\n    const forEach = result.forEach;\n\n    const flatDeep = function (arr: Array<any>, depth: number) {\n        forEach.call(arr, function (val: any) {\n            if (depth > 0 && Array.isArray(val)) {\n                flatDeep(val, depth - 1);\n            } else {\n               result.push(val);\n            }\n        });\n    };\n\n    flatDeep(array, depth);\n    return result;\n}\n\nfunction fromEntries<T extends string | number | symbol = string | number | symbol, U = any>(array: Array<[T, U]>): Record<T, U> {\n    const result: Record<T, U> = <Record<T, U>>{ };\n    for (let i = 0; i < array.length; i++) {\n        const value = array[i];\n        result[value[0]] = value[1];\n    }\n    return result;\n}\n\nexport function decode_arithmetic(bytes: Numbers): Array<number> {\n\tlet pos = 0;\n\tfunction u16() { return (bytes[pos++] << 8) | bytes[pos++]; }\n\t\n\t// decode the frequency table\n\tlet symbol_count = u16();\n\tlet total = 1;\n\tlet acc = [0, 1]; // first symbol has frequency 1\n\tfor (let i = 1; i < symbol_count; i++) {\n\t\tacc.push(total += u16());\n\t}\n\n\t// skip the sized-payload that the last 3 symbols index into\n\tlet skip = u16();\n\tlet pos_payload = pos;\n\tpos += skip;\n\n\tlet read_width = 0;\n\tlet read_buffer = 0; \n\tfunction read_bit() {\n\t\tif (read_width == 0) {\n\t\t\t// this will read beyond end of buffer\n\t\t\t// but (undefined|0) => zero pad\n\t\t\tread_buffer = (read_buffer << 8) | bytes[pos++];\n\t\t\tread_width = 8;\n\t\t}\n\t\treturn (read_buffer >> --read_width) & 1;\n\t}\n\n\tconst N = 31;\n\tconst FULL = 2**N;\n\tconst HALF = FULL >>> 1;\n\tconst QRTR = HALF >> 1;\n\tconst MASK = FULL - 1;\n\n\t// fill register\n\tlet register = 0;\n\tfor (let i = 0; i < N; i++) register = (register << 1) | read_bit();\n\n\tlet symbols = [];\n\tlet low = 0;\n\tlet range = FULL; // treat like a float\n\twhile (true) {\n\t\tlet value = Math.floor((((register - low + 1) * total) - 1) / range);\n\t\tlet start = 0;\n\t\tlet end = symbol_count;\n\t\twhile (end - start > 1) { // binary search\n\t\t\tlet mid = (start + end) >>> 1;\n\t\t\tif (value < acc[mid]) {\n\t\t\t\tend = mid;\n\t\t\t} else {\n\t\t\t\tstart = mid;\n\t\t\t}\n\t\t}\n\t\tif (start == 0) break; // first symbol is end mark\n\t\tsymbols.push(start);\n\t\tlet a = low + Math.floor(range * acc[start]   / total);\n\t\tlet b = low + Math.floor(range * acc[start+1] / total) - 1\n\t\twhile (((a ^ b) & HALF) == 0) {\n\t\t\tregister = (register << 1) & MASK | read_bit();\n\t\t\ta = (a << 1) & MASK;\n\t\t\tb = (b << 1) & MASK | 1;\n\t\t}\n\t\twhile (a & ~b & QRTR) {\n\t\t\tregister = (register & HALF) | ((register << 1) & (MASK >>> 1)) | read_bit();\n\t\t\ta = (a << 1) ^ HALF;\n\t\t\tb = ((b ^ HALF) << 1) | HALF | 1;\n\t\t}\n\t\tlow = a;\n\t\trange = 1 + b - a;\n\t}\n\tlet offset = symbol_count - 4;\n\treturn symbols.map(x => { // index into payload\n\t\tswitch (x - offset) {\n\t\t\tcase 3: return offset + 0x10100 + ((bytes[pos_payload++] << 16) | (bytes[pos_payload++] << 8) | bytes[pos_payload++]);\n\t\t\tcase 2: return offset + 0x100 + ((bytes[pos_payload++] << 8) | bytes[pos_payload++]);\n\t\t\tcase 1: return offset + bytes[pos_payload++];\n\t\t\tdefault: return x - 1;\n\t\t}\n\t});\n}\t\n\n\n// returns an iterator which returns the next symbol\nexport function read_payload(v: Numbers): NextFunc {\n\tlet pos = 0;\n\treturn () => v[pos++];\n}\nexport function read_compressed_payload(bytes: Numbers): NextFunc {\n\treturn read_payload(decode_arithmetic(bytes));\n}\n\n// eg. [0,1,2,3...] => [0,-1,1,-2,...]\nexport function signed(i: number): number { \n\treturn (i & 1) ? (~i >> 1) : (i >> 1);\n}\n\nfunction read_counts(n: number, next: NextFunc): Array<number> {\n\tlet v = Array(n);\n\tfor (let i = 0; i < n; i++) v[i] = 1 + next();\n\treturn v;\n}\n\nfunction read_ascending(n: number, next: NextFunc): Array<number> {\n\tlet v = Array(n);\n\tfor (let i = 0, x = -1; i < n; i++) v[i] = x += 1 + next();\n\treturn v;\n}\n\nfunction read_deltas(n: number, next: NextFunc): Array<number> {\n\tlet v = Array(n);\n\tfor (let i = 0, x = 0; i < n; i++) v[i] = x += signed(next());\n\treturn v;\n}\n\nexport function read_member_array(next: NextFunc, lookup?: Record<number, number>) {\n    let v = read_ascending(next(), next);\n    let n = next();\n    let vX = read_ascending(n, next);\n    let vN = read_counts(n, next);\n    for (let i = 0; i < n; i++) {\n        for (let j = 0; j < vN[i]; j++) {\n            v.push(vX[i] + j);\n        }\n    }\n    return lookup ? v.map(x => lookup[x]) : v;\n}\n\n// returns array of \n// [x, ys] => single replacement rule\n// [x, ys, n, dx, dx] => linear map\nexport function read_mapped_map(next: NextFunc): Record<number, Array<number>> {\n\tlet ret = [];\n\twhile (true) {\n\t\tlet w = next();\n\t\tif (w == 0) break;\n\t\tret.push(read_linear_table(w, next));\n\t}\n\twhile (true) {\n\t\tlet w = next() - 1;\n\t\tif (w < 0) break;\n\t\tret.push(read_replacement_table(w, next));\n\t}\n\treturn fromEntries<number, Array<number>>(flat(ret));\n}\n\nexport function read_zero_terminated_array(next: NextFunc): Array<number> {\n\tlet v = [];\n\twhile (true) {\n\t\tlet i = next();\n\t\tif (i == 0) break;\n\t\tv.push(i);\n\t}\n\treturn v;\n}\n\nfunction read_transposed(n: number, w: number, next: NextFunc): Array<Array<number>> {\n    let m = Array(n).fill(undefined).map(() => []);\n    for (let i = 0; i < w; i++) {\n        read_deltas(n, next).forEach((x, j) => m[j].push(x));\n    }\n    return m;\n}\n\n\nfunction read_linear_table(w: number, next: NextFunc): Array<Array<number | Array<number>>> {\n\tlet dx = 1 + next();\n\tlet dy = next();\n\tlet vN = read_zero_terminated_array(next);\n\tlet m = read_transposed(vN.length, 1+w, next);\n\treturn flat(m.map((v, i) => {\n\t  const x = v[0], ys = v.slice(1);\n\t\t//let [x, ...ys] = v;\n\t\t//return Array(vN[i]).fill().map((_, j) => {\n\t\treturn Array(vN[i]).fill(undefined).map((_, j) => {\n\t\t\tlet j_dy = j * dy;\n\t\t\treturn [x + j * dx, ys.map(y => y + j_dy)];\n\t\t});\n\t}));\n}\n\nfunction read_replacement_table(w: number, next: NextFunc): Array<[ number, Array<number> ]> {\n\tlet n = 1 + next();\n\tlet m = read_transposed(n, 1+w, next);\n\treturn m.map(v => [v[0], v.slice(1)]);\n}\n\nexport type Branch = {\n    set: Set<number>;\n    node: Node;\n};\n\nexport type Node = {\n    branches: Array<Branch>;\n    valid: number;\n    fe0f: boolean;\n    save: boolean;\n    check: boolean;\n};\n\nexport function read_emoji_trie(next: NextFunc): Node {\n\tlet sorted = read_member_array(next).sort((a, b) => a - b);\n\treturn read();\n\tfunction read(): Node {\n\t\tlet branches = [];\n\t\twhile (true) {\n\t\t\tlet keys = read_member_array(next, sorted);\n\t\t\tif (keys.length == 0) break;\n\t\t\tbranches.push({set: new Set(keys), node: read()});\n\t\t}\n    branches.sort((a, b) => b.set.size - a.set.size); // sort by likelihood\n \t\tlet temp = next();\n \t\tlet valid = temp % 3;\n \t\ttemp = (temp / 3)|0;\n \t\tlet fe0f = !!(temp & 1);\n \t\ttemp >>= 1;\n \t\tlet save = temp == 1;\n \t\tlet check = temp == 2;\n \t\treturn {branches, valid, fe0f, save, check};\n\t}\n}\n","/**\n * MIT License\n *\n * Copyright (c) 2021 Andrew Raffensperger\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n * This is a near carbon-copy of the original source (link below) with the\n * TypeScript typings added and a few tweaks to make it ES3-compatible.\n *\n * See: https://github.com/adraffy/ens-normalize.js\n */\n\nimport { decode } from \"@ethersproject/base64\";\n\nimport {read_compressed_payload} from './decoder.js';\n\nexport function getData(): () => number {\n    return read_compressed_payload(decode(''));\n}\n\n","/**\n * MIT License\n *\n * Copyright (c) 2021 Andrew Raffensperger\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n * This is a near carbon-copy of the original source (link below) with the\n * TypeScript typings added and a few tweaks to make it ES3-compatible.\n *\n * See: https://github.com/adraffy/ens-normalize.js\n */\n\nimport { toUtf8CodePoints } from \"@ethersproject/strings\";\n\nimport { getData } from './include.js';\nconst r = getData();\n\nimport {read_member_array, read_mapped_map, read_emoji_trie} from './decoder.js';\n\n// @TODO: This should be lazily loaded\n\nconst VALID = new Set(read_member_array(r));\nconst IGNORED = new Set(read_member_array(r));\nconst MAPPED = read_mapped_map(r);\nconst EMOJI_ROOT = read_emoji_trie(r);\n//const NFC_CHECK = new Set(read_member_array(r, Array.from(VALID.values()).sort((a, b) => a - b)));\n\n//const STOP = 0x2E;\nconst HYPHEN = 0x2D;\nconst UNDERSCORE = 0x5F;\n\nfunction explode_cp(name: string): Array<number> {\n    return toUtf8CodePoints(name);\n}\n\nfunction filter_fe0f(cps: Array<number>): Array<number> {\n    return cps.filter(cp => cp != 0xFE0F);\n}\n\nexport function ens_normalize_post_check(name: string): string {\n\tfor (let label of name.split('.')) {\n\t\tlet cps = explode_cp(label);\n\t\ttry {\n\t\t\tfor (let i = cps.lastIndexOf(UNDERSCORE) - 1; i >= 0; i--) {\n\t\t\t\tif (cps[i] !== UNDERSCORE) {\n\t\t\t\t\tthrow new Error(`underscore only allowed at start`);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (cps.length >= 4 && cps.every(cp => cp < 0x80) && cps[2] === HYPHEN && cps[3] === HYPHEN) {\n\t\t\t\tthrow new Error(`invalid label extension`);\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tthrow new Error(`Invalid label \"${label}\": ${err.message}`);\n\t\t}\n\t}\n\treturn name;\n}\n\nexport function ens_normalize(name: string): string {\n\treturn ens_normalize_post_check(normalize(name, filter_fe0f));\n}\n\nfunction normalize(name: string, emoji_filter: (a: Array<number>) => Array<number>): string {\n\tlet input = explode_cp(name).reverse(); // flip for pop\n\tlet output = [];\n\twhile (input.length) {\t\t\n\t\tlet emoji = consume_emoji_reversed(input);\n\t\tif (emoji) {\n\t\t\toutput.push(...emoji_filter(emoji));\n\t\t\tcontinue;\n\t\t}\n\t\tlet cp = input.pop();\n\t\tif (VALID.has(cp)) {\n\t\t\toutput.push(cp);\n\t\t\tcontinue;\n\t\t} \n\t\tif (IGNORED.has(cp)) {\n\t\t\tcontinue;\n\t\t}\n\t\tlet cps = MAPPED[cp];\n\t\tif (cps) {\n\t\t\toutput.push(...cps);\n\t\t\tcontinue;\n\t\t}\n\t\tthrow new Error(`Disallowed codepoint: 0x${cp.toString(16).toUpperCase()}`);\n\t}\n\treturn ens_normalize_post_check(nfc(String.fromCodePoint(...output)));\n}\n\nfunction nfc(s: string): string {\n    return s.normalize('NFC');\n}\n\nfunction consume_emoji_reversed(cps: Array<number>, eaten?: Array<number>) {\n\tlet node = EMOJI_ROOT;\n\tlet emoji;\n\tlet saved;\n\tlet stack = [];\n\tlet pos = cps.length;\n\tif (eaten) eaten.length = 0; // clear input buffer (if needed)\n\twhile (pos) {\n\t\tlet cp = cps[--pos];\n\t\tnode = node.branches.find(x => x.set.has(cp))?.node;\n\t\tif (!node) break;\n\t\tif (node.save) { // remember\n\t\t\tsaved = cp;\n\t\t} else if (node.check) { // check exclusion\n\t\t\tif (cp === saved) break;\n\t\t}\n\t\tstack.push(cp);\n\t\tif (node.fe0f) {\n\t\t\tstack.push(0xFE0F);\n\t\t\tif (pos > 0 && cps[pos - 1] == 0xFE0F) pos--; // consume optional FE0F\n\t\t}\n\t\tif (node.valid) { // this is a valid emoji (so far)\n\t\t\temoji = stack.slice(); // copy stack\n\t\t\tif (node.valid == 2) emoji.splice(1, 1); // delete FE0F at position 1 (RGI ZWJ don't follow spec!)\n\t\t\tif (eaten) eaten.push(...cps.slice(pos).reverse()); // copy input (if needed)\n\t\t\tcps.length = pos; // truncate\n\t\t}\n\t}\n\treturn emoji;\n}\n","import { concat, hexlify } from \"@ethersproject/bytes\";\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { ens_normalize } from \"./ens-normalize/lib\";\n\nconst Zeros = new Uint8Array(32);\nZeros.fill(0);\n\nfunction checkComponent(comp: Uint8Array): Uint8Array {\n    if (comp.length === 0) { throw new Error(\"invalid ENS name; empty component\"); }\n    return comp;\n}\n\nfunction ensNameSplit(name: string): Array<Uint8Array> {\n    const bytes = toUtf8Bytes(ens_normalize(name));\n    const comps: Array<Uint8Array> = [ ];\n\n    if (name.length === 0) { return comps; }\n\n    let last = 0;\n    for (let i = 0; i < bytes.length; i++) {\n        const d = bytes[i];\n\n        // A separator (i.e. \".\"); copy this component\n        if (d === 0x2e) {\n            comps.push(checkComponent(bytes.slice(last, i)));\n            last = i + 1;\n        }\n    }\n\n    // There was a stray separator at the end of the name\n    if (last >= bytes.length) { throw new Error(\"invalid ENS name; empty component\"); }\n\n    comps.push(checkComponent(bytes.slice(last)));\n    return comps;\n}\n\nexport function ensNormalize(name: string): string {\n    return ensNameSplit(name).map((comp) => toUtf8String(comp)).join(\".\");\n}\n\nexport function isValidName(name: string): boolean {\n    try {\n        return (ensNameSplit(name).length !== 0);\n    } catch (error) { }\n    return false;\n}\n\nexport function namehash(name: string): string {\n    /* istanbul ignore if */\n    if (typeof(name) !== \"string\") {\n        logger.throwArgumentError(\"invalid ENS name; not a string\", \"name\", name);\n    }\n\n    let result: string | Uint8Array = Zeros;\n\n    const comps = ensNameSplit(name);\n    while (comps.length) {\n        result = keccak256(concat([result, keccak256(comps.pop())]));\n    }\n\n    return hexlify(result);\n}\n\nexport function dnsEncode(name: string): string {\n    return hexlify(concat(ensNameSplit(name).map((comp) => {\n        // DNS does not allow components over 63 bytes in length\n        if (comp.length > 63) {\n            throw new Error(\"invalid DNS encoded entry; length exceeds 63 bytes\");\n        }\n\n        const bytes = new Uint8Array(comp.length + 1);\n        bytes.set(comp, 1);\n        bytes[0] = bytes.length - 1;\n        return bytes;\n\n    }))) + \"00\";\n}\n","import { Bytes, concat } from \"@ethersproject/bytes\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\n\nexport const messagePrefix = \"\\x19Ethereum Signed Message:\\n\";\n\nexport function hashMessage(message: Bytes | string): string {\n    if (typeof(message) === \"string\") { message = toUtf8Bytes(message); }\n    return keccak256(concat([\n        toUtf8Bytes(messagePrefix),\n        toUtf8Bytes(String(message.length)),\n        message\n    ]));\n}\n\n","import { TypedDataDomain, TypedDataField } from \"@ethersproject/abstract-signer\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { arrayify, BytesLike, hexConcat, hexlify, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { deepCopy, defineReadOnly, shallowCopy } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { id } from \"./id\";\n\nconst padding = new Uint8Array(32);\npadding.fill(0);\n\nconst NegativeOne: BigNumber = BigNumber.from(-1);\nconst Zero: BigNumber = BigNumber.from(0);\nconst One: BigNumber = BigNumber.from(1);\nconst MaxUint256: BigNumber = BigNumber.from(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n\nfunction hexPadRight(value: BytesLike) {\n    const bytes = arrayify(value);\n    const padOffset = bytes.length % 32\n    if (padOffset) {\n        return hexConcat([ bytes, padding.slice(padOffset) ]);\n    }\n    return hexlify(bytes);\n}\n\nconst hexTrue = hexZeroPad(One.toHexString(), 32);\nconst hexFalse = hexZeroPad(Zero.toHexString(), 32);\n\nconst domainFieldTypes: Record<string, string> = {\n    name: \"string\",\n    version: \"string\",\n    chainId: \"uint256\",\n    verifyingContract: \"address\",\n    salt: \"bytes32\"\n};\n\nconst domainFieldNames: Array<string> = [\n    \"name\", \"version\", \"chainId\", \"verifyingContract\", \"salt\"\n];\n\nfunction checkString(key: string): (value: any) => string {\n    return function (value: any){\n        if (typeof(value) !== \"string\") {\n            logger.throwArgumentError(`invalid domain value for ${ JSON.stringify(key) }`, `domain.${ key }`, value);\n        }\n        return value;\n    }\n}\n\nconst domainChecks: Record<string, (value: any) => any> = {\n    name: checkString(\"name\"),\n    version: checkString(\"version\"),\n    chainId: function(value: any) {\n        try {\n            return BigNumber.from(value).toString()\n        } catch (error) { }\n        return logger.throwArgumentError(`invalid domain value for \"chainId\"`, \"domain.chainId\", value);\n    },\n    verifyingContract: function(value: any) {\n        try {\n            return getAddress(value).toLowerCase();\n        } catch (error) { }\n        return logger.throwArgumentError(`invalid domain value \"verifyingContract\"`, \"domain.verifyingContract\", value);\n    },\n    salt: function(value: any) {\n        try {\n            const bytes = arrayify(value);\n            if (bytes.length !== 32) { throw new Error(\"bad length\"); }\n            return hexlify(bytes);\n        } catch (error) { }\n        return logger.throwArgumentError(`invalid domain value \"salt\"`, \"domain.salt\", value);\n    }\n}\n\nfunction getBaseEncoder(type: string): (value: any) => string {\n    // intXX and uintXX\n    {\n        const match = type.match(/^(u?)int(\\d*)$/);\n        if (match) {\n            const signed = (match[1] === \"\");\n\n            const width = parseInt(match[2] || \"256\");\n            if (width % 8 !== 0 || width > 256 || (match[2] && match[2] !== String(width))) {\n                logger.throwArgumentError(\"invalid numeric width\", \"type\", type);\n            }\n\n            const boundsUpper = MaxUint256.mask(signed ? (width - 1): width);\n            const boundsLower = signed ? boundsUpper.add(One).mul(NegativeOne): Zero;\n\n            return function(value: BigNumberish) {\n                const v = BigNumber.from(value);\n\n                if (v.lt(boundsLower) || v.gt(boundsUpper)) {\n                    logger.throwArgumentError(`value out-of-bounds for ${ type }`, \"value\", value);\n                }\n\n                return hexZeroPad(v.toTwos(256).toHexString(), 32);\n            };\n        }\n    }\n\n    // bytesXX\n    {\n        const match = type.match(/^bytes(\\d+)$/);\n        if (match) {\n            const width = parseInt(match[1]);\n            if (width === 0 || width > 32 || match[1] !== String(width)) {\n                logger.throwArgumentError(\"invalid bytes width\", \"type\", type);\n            }\n\n            return function(value: BytesLike) {\n                const bytes = arrayify(value);\n                if (bytes.length !== width) {\n                    logger.throwArgumentError(`invalid length for ${ type }`, \"value\", value);\n                }\n                return hexPadRight(value);\n            };\n        }\n    }\n\n    switch (type) {\n        case \"address\": return function(value: string) {\n            return hexZeroPad(getAddress(value), 32);\n        };\n        case \"bool\": return function(value: boolean) {\n            return ((!value) ? hexFalse: hexTrue);\n        };\n        case \"bytes\": return function(value: BytesLike) {\n            return keccak256(value);\n        };\n        case \"string\": return function(value: string) {\n            return id(value);\n        };\n    }\n\n    return null;\n}\n\nfunction encodeType(name: string, fields: Array<TypedDataField>): string {\n    return `${ name }(${ fields.map(({ name, type }) => (type + \" \" + name)).join(\",\") })`;\n}\n\nexport class TypedDataEncoder {\n    readonly primaryType: string;\n    readonly types: Record<string, Array<TypedDataField>>;\n\n    readonly _encoderCache: Record<string, (value: any) => string>;\n    readonly _types: Record<string, string>;\n\n    constructor(types: Record<string, Array<TypedDataField>>) {\n        defineReadOnly(this, \"types\", Object.freeze(deepCopy(types)));\n\n        defineReadOnly(this, \"_encoderCache\", { });\n        defineReadOnly(this, \"_types\", { });\n\n        // Link struct types to their direct child structs\n        const links: Record<string, Record<string, boolean>> = { };\n\n        // Link structs to structs which contain them as a child\n        const parents: Record<string, Array<string>> = { };\n\n        // Link all subtypes within a given struct\n        const subtypes: Record<string, Record<string, boolean>> = { };\n\n        Object.keys(types).forEach((type) => {\n            links[type] = { };\n            parents[type] = [ ];\n            subtypes[type] = { }\n        });\n\n        for (const name in types) {\n\n            const uniqueNames: Record<string, boolean> = { };\n\n            types[name].forEach((field) => {\n\n                // Check each field has a unique name\n                if (uniqueNames[field.name]) {\n                    logger.throwArgumentError(`duplicate variable name ${ JSON.stringify(field.name) } in ${ JSON.stringify(name) }`, \"types\", types);\n                }\n                uniqueNames[field.name] = true;\n\n                // Get the base type (drop any array specifiers)\n                const baseType = field.type.match(/^([^\\x5b]*)(\\x5b|$)/)[1];\n                if (baseType === name) {\n                    logger.throwArgumentError(`circular type reference to ${ JSON.stringify(baseType) }`, \"types\", types);\n                }\n\n                // Is this a base encoding type?\n                const encoder = getBaseEncoder(baseType);\n                if (encoder) { return ;}\n\n                if (!parents[baseType]) {\n                    logger.throwArgumentError(`unknown type ${ JSON.stringify(baseType) }`, \"types\", types);\n                }\n\n                // Add linkage\n                parents[baseType].push(name);\n                links[name][baseType] = true;\n            });\n        }\n\n        // Deduce the primary type\n        const primaryTypes = Object.keys(parents).filter((n) => (parents[n].length === 0));\n\n        if (primaryTypes.length === 0) {\n            logger.throwArgumentError(\"missing primary type\", \"types\", types);\n        } else if (primaryTypes.length > 1) {\n            logger.throwArgumentError(`ambiguous primary types or unused types: ${ primaryTypes.map((t) => (JSON.stringify(t))).join(\", \") }`, \"types\", types);\n        }\n\n        defineReadOnly(this, \"primaryType\", primaryTypes[0]);\n\n        // Check for circular type references\n        function checkCircular(type: string, found: Record<string, boolean>) {\n            if (found[type]) {\n                logger.throwArgumentError(`circular type reference to ${ JSON.stringify(type) }`, \"types\", types);\n            }\n\n            found[type] = true;\n\n            Object.keys(links[type]).forEach((child) => {\n                if (!parents[child]) { return; }\n\n                // Recursively check children\n                checkCircular(child, found);\n\n                // Mark all ancestors as having this decendant\n                Object.keys(found).forEach((subtype) => {\n                    subtypes[subtype][child] = true;\n                });\n            });\n\n            delete found[type];\n        }\n        checkCircular(this.primaryType, { });\n\n        // Compute each fully describe type\n        for (const name in subtypes) {\n            const st = Object.keys(subtypes[name]);\n            st.sort();\n            this._types[name] = encodeType(name, types[name]) + st.map((t) => encodeType(t, types[t])).join(\"\");\n        }\n    }\n\n    getEncoder(type: string): (value: any) => string {\n        let encoder = this._encoderCache[type];\n        if (!encoder) {\n            encoder = this._encoderCache[type] = this._getEncoder(type);\n        }\n        return encoder;\n    }\n\n    _getEncoder(type: string): (value: any) => string {\n\n        // Basic encoder type (address, bool, uint256, etc)\n        {\n            const encoder = getBaseEncoder(type);\n            if (encoder) { return encoder; }\n        }\n\n        // Array\n        const match = type.match(/^(.*)(\\x5b(\\d*)\\x5d)$/);\n        if (match) {\n            const subtype = match[1];\n            const subEncoder = this.getEncoder(subtype);\n            const length = parseInt(match[3]);\n            return (value: Array<any>) => {\n                if (length >= 0 && value.length !== length) {\n                    logger.throwArgumentError(\"array length mismatch; expected length ${ arrayLength }\", \"value\", value);\n                }\n\n                let result = value.map(subEncoder);\n                if (this._types[subtype]) {\n                    result = result.map(keccak256);\n                }\n\n                return keccak256(hexConcat(result));\n            };\n        }\n\n        // Struct\n        const fields = this.types[type];\n        if (fields) {\n            const encodedType = id(this._types[type]);\n            return (value: Record<string, any>) => {\n                const values = fields.map(({ name, type }) => {\n                    const result = this.getEncoder(type)(value[name]);\n                    if (this._types[type]) { return keccak256(result); }\n                    return result;\n                });\n                values.unshift(encodedType);\n                return hexConcat(values);\n            }\n        }\n\n        return logger.throwArgumentError(`unknown type: ${ type }`, \"type\", type);\n    }\n\n    encodeType(name: string): string {\n        const result = this._types[name];\n        if (!result) {\n            logger.throwArgumentError(`unknown type: ${ JSON.stringify(name) }`, \"name\", name);\n        }\n        return result;\n    }\n\n    encodeData(type: string, value: any): string {\n        return this.getEncoder(type)(value);\n    }\n\n    hashStruct(name: string, value: Record<string, any>): string {\n        return keccak256(this.encodeData(name, value));\n    }\n\n    encode(value: Record<string, any>): string {\n        return this.encodeData(this.primaryType, value);\n    }\n\n    hash(value: Record<string, any>): string {\n        return this.hashStruct(this.primaryType, value);\n    }\n\n    _visit(type: string, value: any, callback: (type: string, data: any) => any): any {\n        // Basic encoder type (address, bool, uint256, etc)\n        {\n            const encoder = getBaseEncoder(type);\n            if (encoder) { return callback(type, value); }\n        }\n\n        // Array\n        const match = type.match(/^(.*)(\\x5b(\\d*)\\x5d)$/);\n        if (match) {\n            const subtype = match[1];\n            const length = parseInt(match[3]);\n            if (length >= 0 && value.length !== length) {\n                logger.throwArgumentError(\"array length mismatch; expected length ${ arrayLength }\", \"value\", value);\n            }\n            return value.map((v: any) => this._visit(subtype, v, callback));\n        }\n\n        // Struct\n        const fields = this.types[type];\n        if (fields) {\n            return fields.reduce((accum, { name, type }) => {\n                accum[name] = this._visit(type, value[name], callback);\n                return accum;\n            }, <Record<string, any>>{});\n        }\n\n        return logger.throwArgumentError(`unknown type: ${ type }`, \"type\", type);\n    }\n\n    visit(value: Record<string, any>, callback: (type: string, data: any) => any): any {\n        return this._visit(this.primaryType, value, callback);\n    }\n\n    static from(types: Record<string, Array<TypedDataField>>): TypedDataEncoder {\n        return new TypedDataEncoder(types);\n    }\n\n    static getPrimaryType(types: Record<string, Array<TypedDataField>>): string {\n        return TypedDataEncoder.from(types).primaryType;\n    }\n\n    static hashStruct(name: string, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): string {\n        return TypedDataEncoder.from(types).hashStruct(name, value);\n    }\n\n    static hashDomain(domain: TypedDataDomain): string {\n        const domainFields: Array<TypedDataField> = [ ];\n        for (const name in domain) {\n            const type = domainFieldTypes[name];\n            if (!type) {\n                logger.throwArgumentError(`invalid typed-data domain key: ${ JSON.stringify(name) }`, \"domain\", domain);\n            }\n            domainFields.push({ name, type });\n        }\n\n        domainFields.sort((a, b) => {\n            return domainFieldNames.indexOf(a.name) - domainFieldNames.indexOf(b.name);\n        });\n\n        return TypedDataEncoder.hashStruct(\"EIP712Domain\", { EIP712Domain: domainFields }, domain);\n    }\n\n    static encode(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): string {\n        return hexConcat([\n            \"0x1901\",\n            TypedDataEncoder.hashDomain(domain),\n            TypedDataEncoder.from(types).hash(value)\n        ]);\n    }\n\n    static hash(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): string {\n        return keccak256(TypedDataEncoder.encode(domain, types, value));\n    }\n\n    // Replaces all address types with ENS names with their looked up address\n    static async resolveNames(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>, resolveName: (name: string) => Promise<string>): Promise<{ domain: TypedDataDomain, value: any }> {\n        // Make a copy to isolate it from the object passed in\n        domain = shallowCopy(domain);\n\n        // Look up all ENS names\n        const ensCache: Record<string, string> = { };\n\n        // Do we need to look up the domain's verifyingContract?\n        if (domain.verifyingContract && !isHexString(domain.verifyingContract, 20)) {\n            ensCache[domain.verifyingContract] = \"0x\";\n        }\n\n        // We are going to use the encoder to visit all the base values\n        const encoder = TypedDataEncoder.from(types);\n\n        // Get a list of all the addresses\n        encoder.visit(value, (type: string, value: any) => {\n            if (type === \"address\" && !isHexString(value, 20)) {\n                ensCache[value] = \"0x\";\n            }\n            return value;\n        });\n\n        // Lookup each name\n        for (const name in ensCache) {\n            ensCache[name] = await resolveName(name);\n        }\n\n        // Replace the domain verifyingContract if needed\n        if (domain.verifyingContract && ensCache[domain.verifyingContract]) {\n            domain.verifyingContract = ensCache[domain.verifyingContract];\n        }\n\n        // Replace all ENS names with their address\n        value = encoder.visit(value, (type: string, value: any) => {\n            if (type === \"address\" && ensCache[value]) { return ensCache[value]; }\n            return value;\n        });\n\n        return { domain, value };\n    }\n\n    static getPayload(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): any {\n        // Validate the domain fields\n        TypedDataEncoder.hashDomain(domain);\n\n        // Derive the EIP712Domain Struct reference type\n        const domainValues: Record<string, any> = { };\n        const domainTypes: Array<{ name: string, type:string }> = [ ];\n\n        domainFieldNames.forEach((name) => {\n            const value = (<any>domain)[name];\n            if (value == null) { return; }\n            domainValues[name] = domainChecks[name](value);\n            domainTypes.push({ name, type: domainFieldTypes[name] });\n        });\n\n        const encoder = TypedDataEncoder.from(types);\n\n        const typesWithDomain = shallowCopy(types);\n        if (typesWithDomain.EIP712Domain) {\n            logger.throwArgumentError(\"types must not contain EIP712Domain type\", \"types.EIP712Domain\", types);\n        } else {\n            typesWithDomain.EIP712Domain = domainTypes;\n        }\n\n        // Validate the data structures and types\n        encoder.encode(value);\n\n        return {\n            types: typesWithDomain,\n            domain: domainValues,\n            primaryType: encoder.primaryType,\n            message: encoder.visit(value, (type: string, value: any) => {\n\n                // bytes\n                if (type.match(/^bytes(\\d*)/)) {\n                    return hexlify(arrayify(value));\n                }\n\n                // uint or int\n                if (type.match(/^u?int/)) {\n                    return BigNumber.from(value).toString();\n                }\n\n                switch (type) {\n                    case \"address\":\n                        return value.toLowerCase();\n                    case \"bool\":\n                        return !!value;\n                    case \"string\":\n                        if (typeof(value) !== \"string\") {\n                            logger.throwArgumentError(`invalid string`, \"value\", value);\n                        }\n                        return value;\n                }\n\n                return logger.throwArgumentError(\"unsupported type\", \"type\", type);\n            })\n        };\n    }\n}\n\n","\"use strict\";\n\nimport { id } from \"./id\";\nimport { dnsEncode, isValidName, namehash } from \"./namehash\";\nimport { hashMessage, messagePrefix } from \"./message\";\n\nimport { ensNormalize } from \"./namehash\";\n\nimport { TypedDataEncoder as _TypedDataEncoder } from \"./typed-data\";\n\nexport {\n    id,\n\n    dnsEncode,\n    namehash,\n    isValidName,\n\n    ensNormalize,\n\n    messagePrefix,\n    hashMessage,\n\n    _TypedDataEncoder,\n}\n","/**\n * var basex = require(\"base-x\");\n *\n * This implementation is heavily based on base-x. The main reason to\n * deviate was to prevent the dependency of Buffer.\n *\n * Contributors:\n *\n * base-x encoding\n * Forked from https://github.com/cryptocoinjs/bs58\n * Originally written by Mike Hearn for BitcoinJ\n * Copyright (c) 2011 Google Inc\n * Ported to JavaScript by Stefan Thomas\n * Merged Buffer refactorings from base58-native by Stephen Pair\n * Copyright (c) 2013 BitPay Inc\n *\n * The MIT License (MIT)\n *\n * Copyright base-x contributors (c) 2016\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n * IN THE SOFTWARE.\n *\n */\n\nimport { arrayify, BytesLike } from \"@ethersproject/bytes\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\n\nexport class BaseX {\n    readonly alphabet: string;\n    readonly base: number;\n\n    _alphabetMap: { [ character: string ]: number };\n    _leader: string;\n\n    constructor(alphabet: string) {\n        defineReadOnly(this, \"alphabet\", alphabet);\n        defineReadOnly(this, \"base\", alphabet.length);\n\n        defineReadOnly(this, \"_alphabetMap\", { });\n        defineReadOnly(this, \"_leader\", alphabet.charAt(0));\n\n        // pre-compute lookup table\n        for (let i = 0; i < alphabet.length; i++) {\n            this._alphabetMap[alphabet.charAt(i)] = i;\n        }\n    }\n\n    encode(value: BytesLike): string {\n        let source = arrayify(value);\n\n        if (source.length === 0) { return \"\"; }\n\n        let digits = [ 0 ]\n        for (let i = 0; i < source.length; ++i) {\n            let carry = source[i];\n            for (let j = 0; j < digits.length; ++j) {\n                carry += digits[j] << 8;\n                digits[j] = carry % this.base;\n                carry = (carry / this.base) | 0;\n            }\n\n            while (carry > 0) {\n                digits.push(carry % this.base);\n                carry = (carry / this.base) | 0;\n            }\n        }\n\n        let string = \"\"\n\n        // deal with leading zeros\n        for (let k = 0; source[k] === 0 && k < source.length - 1; ++k) {\n            string += this._leader;\n        }\n\n        // convert digits to a string\n        for (let q = digits.length - 1; q >= 0; --q) {\n            string += this.alphabet[digits[q]];\n        }\n\n        return string;\n    }\n\n    decode(value: string): Uint8Array {\n        if (typeof(value) !== \"string\") {\n            throw new TypeError(\"Expected String\");\n        }\n\n        let bytes: Array<number> = [];\n        if (value.length === 0) { return new Uint8Array(bytes); }\n\n        bytes.push(0);\n        for (let i = 0; i < value.length; i++) {\n            let byte = this._alphabetMap[value[i]];\n\n            if (byte === undefined) {\n                throw new Error(\"Non-base\" + this.base + \" character\");\n            }\n\n            let carry = byte;\n            for (let j = 0; j < bytes.length; ++j) {\n                carry += bytes[j] * this.base;\n                bytes[j] = carry & 0xff;\n                carry >>= 8;\n            }\n\n            while (carry > 0) {\n                bytes.push(carry & 0xff);\n                carry >>= 8;\n            }\n        }\n\n        // deal with leading zeros\n        for (let k = 0; value[k] === this._leader && k < value.length - 1; ++k) {\n            bytes.push(0)\n        }\n\n        return arrayify(new Uint8Array(bytes.reverse()))\n    }\n}\n\nconst Base32 = new BaseX(\"abcdefghijklmnopqrstuvwxyz234567\");\nconst Base58 = new BaseX(\"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\");\n\nexport { Base32, Base58 };\n\n//console.log(Base58.decode(\"Qmd2V777o5XvJbYMeMb8k2nU5f8d3ciUQ5YpYuWhzv8iDj\"))\n//console.log(Base58.encode(Base58.decode(\"Qmd2V777o5XvJbYMeMb8k2nU5f8d3ciUQ5YpYuWhzv8iDj\")))\n","export enum SupportedAlgorithm { sha256 = \"sha256\", sha512 = \"sha512\" };\n\n","export const version = \"sha2/5.7.0\";\n","\"use strict\";\n\nimport hash from \"hash.js\";\n//const _ripemd160 = _hash.ripemd160;\n\nimport { arrayify, BytesLike } from \"@ethersproject/bytes\";\n\nimport { SupportedAlgorithm } from \"./types\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nexport function ripemd160(data: BytesLike): string {\n    return \"0x\" + (hash.ripemd160().update(arrayify(data)).digest(\"hex\"));\n}\n\nexport function sha256(data: BytesLike): string {\n    return \"0x\" + (hash.sha256().update(arrayify(data)).digest(\"hex\"));\n}\n\nexport function sha512(data: BytesLike): string {\n    return \"0x\" + (hash.sha512().update(arrayify(data)).digest(\"hex\"));\n}\n\nexport function computeHmac(algorithm: SupportedAlgorithm, key: BytesLike, data: BytesLike): string {\n    if (!SupportedAlgorithm[algorithm]) {\n        logger.throwError(\"unsupported algorithm \" + algorithm, Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"hmac\",\n            algorithm: algorithm\n        });\n    }\n\n    return \"0x\" + hash.hmac((<any>hash)[algorithm], arrayify(key)).update(arrayify(data)).digest(\"hex\");\n}\n\n","\"use strict\";\n\nimport { arrayify, BytesLike, hexlify } from \"@ethersproject/bytes\";\nimport { computeHmac, SupportedAlgorithm } from \"@ethersproject/sha2\";\n\nexport function pbkdf2(password: BytesLike, salt: BytesLike, iterations: number, keylen: number, hashAlgorithm: string): string {\n    password = arrayify(password);\n    salt = arrayify(salt);\n    let hLen;\n    let l = 1;\n    const DK = new Uint8Array(keylen)\n    const block1 = new Uint8Array(salt.length + 4)\n    block1.set(salt);\n    //salt.copy(block1, 0, 0, salt.length)\n\n    let r: number;\n    let T: Uint8Array;\n\n    for (let i = 1; i <= l; i++) {\n        //block1.writeUInt32BE(i, salt.length)\n        block1[salt.length] = (i >> 24) & 0xff;\n        block1[salt.length + 1] = (i >> 16) & 0xff;\n        block1[salt.length + 2] = (i >> 8) & 0xff;\n        block1[salt.length + 3] = i & 0xff;\n\n        //let U = createHmac(password).update(block1).digest();\n        let U = arrayify(computeHmac(<SupportedAlgorithm>hashAlgorithm, password, block1));\n\n        if (!hLen) {\n            hLen = U.length\n            T = new Uint8Array(hLen)\n            l = Math.ceil(keylen / hLen)\n            r = keylen - (l - 1) * hLen\n        }\n\n        //U.copy(T, 0, 0, hLen)\n        T.set(U);\n\n\n        for (let j = 1; j < iterations; j++) {\n            //U = createHmac(password).update(U).digest();\n            U = arrayify(computeHmac(<SupportedAlgorithm>hashAlgorithm, password, U));\n            for (let k = 0; k < hLen; k++) T[k] ^= U[k]\n        }\n\n\n        const destPos = (i - 1) * hLen\n        const len = (i === l ? r : hLen)\n        //T.copy(DK, destPos, 0, len)\n        DK.set(arrayify(T).slice(0, len), destPos);\n    }\n\n    return hexlify(DK)\n}\n\n","export const version = \"wordlists/5.7.0\";\n","\"use strict\";\n\n// This gets overridden by rollup\nconst exportWordlist = false;\n\nimport { id } from \"@ethersproject/hash\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nexport const logger = new Logger(version);\n\nexport abstract class Wordlist {\n    readonly locale: string;\n\n    constructor(locale: string) {\n        logger.checkAbstract(new.target, Wordlist);\n        defineReadOnly(this, \"locale\", locale);\n    }\n\n    abstract getWord(index: number): string;\n    abstract getWordIndex(word: string): number;\n\n    // Subclasses may override this\n    split(mnemonic: string): Array<string> {\n        return mnemonic.toLowerCase().split(/ +/g)\n    }\n\n    // Subclasses may override this\n    join(words: Array<string>): string {\n        return words.join(\" \");\n    }\n\n    static check(wordlist: Wordlist): string {\n        const words = [];\n        for (let i = 0; i < 2048; i++) {\n            const word = wordlist.getWord(i);\n            /* istanbul ignore if */\n            if (i !== wordlist.getWordIndex(word)) { return \"0x\"; }\n            words.push(word);\n        }\n        return id(words.join(\"\\n\") + \"\\n\");\n    }\n\n    static register(lang: Wordlist, name?: string): void {\n        if (!name) { name = lang.locale; }\n\n        /* istanbul ignore if */\n        if (exportWordlist) {\n            try {\n                const anyGlobal = (window as any)\n                if (anyGlobal._ethers && anyGlobal._ethers.wordlists) {\n                    if (!anyGlobal._ethers.wordlists[name]) {\n                         defineReadOnly(anyGlobal._ethers.wordlists, name, lang);\n                    }\n                }\n            } catch (error) { }\n        }\n    }\n\n}\n\n","\"use strict\";\n\nimport { Wordlist } from \"./wordlist\";\n\n\nconst words = \"AbandonAbilityAbleAboutAboveAbsentAbsorbAbstractAbsurdAbuseAccessAccidentAccountAccuseAchieveAcidAcousticAcquireAcrossActActionActorActressActualAdaptAddAddictAddressAdjustAdmitAdultAdvanceAdviceAerobicAffairAffordAfraidAgainAgeAgentAgreeAheadAimAirAirportAisleAlarmAlbumAlcoholAlertAlienAllAlleyAllowAlmostAloneAlphaAlreadyAlsoAlterAlwaysAmateurAmazingAmongAmountAmusedAnalystAnchorAncientAngerAngleAngryAnimalAnkleAnnounceAnnualAnotherAnswerAntennaAntiqueAnxietyAnyApartApologyAppearAppleApproveAprilArchArcticAreaArenaArgueArmArmedArmorArmyAroundArrangeArrestArriveArrowArtArtefactArtistArtworkAskAspectAssaultAssetAssistAssumeAsthmaAthleteAtomAttackAttendAttitudeAttractAuctionAuditAugustAuntAuthorAutoAutumnAverageAvocadoAvoidAwakeAwareAwayAwesomeAwfulAwkwardAxisBabyBachelorBaconBadgeBagBalanceBalconyBallBambooBananaBannerBarBarelyBargainBarrelBaseBasicBasketBattleBeachBeanBeautyBecauseBecomeBeefBeforeBeginBehaveBehindBelieveBelowBeltBenchBenefitBestBetrayBetterBetweenBeyondBicycleBidBikeBindBiologyBirdBirthBitterBlackBladeBlameBlanketBlastBleakBlessBlindBloodBlossomBlouseBlueBlurBlushBoardBoatBodyBoilBombBoneBonusBookBoostBorderBoringBorrowBossBottomBounceBoxBoyBracketBrainBrandBrassBraveBreadBreezeBrickBridgeBriefBrightBringBriskBroccoliBrokenBronzeBroomBrotherBrownBrushBubbleBuddyBudgetBuffaloBuildBulbBulkBulletBundleBunkerBurdenBurgerBurstBusBusinessBusyButterBuyerBuzzCabbageCabinCableCactusCageCakeCallCalmCameraCampCanCanalCancelCandyCannonCanoeCanvasCanyonCapableCapitalCaptainCarCarbonCardCargoCarpetCarryCartCaseCashCasinoCastleCasualCatCatalogCatchCategoryCattleCaughtCauseCautionCaveCeilingCeleryCementCensusCenturyCerealCertainChairChalkChampionChangeChaosChapterChargeChaseChatCheapCheckCheeseChefCherryChestChickenChiefChildChimneyChoiceChooseChronicChuckleChunkChurnCigarCinnamonCircleCitizenCityCivilClaimClapClarifyClawClayCleanClerkCleverClickClientCliffClimbClinicClipClockClogCloseClothCloudClownClubClumpClusterClutchCoachCoastCoconutCodeCoffeeCoilCoinCollectColorColumnCombineComeComfortComicCommonCompanyConcertConductConfirmCongressConnectConsiderControlConvinceCookCoolCopperCopyCoralCoreCornCorrectCostCottonCouchCountryCoupleCourseCousinCoverCoyoteCrackCradleCraftCramCraneCrashCraterCrawlCrazyCreamCreditCreekCrewCricketCrimeCrispCriticCropCrossCrouchCrowdCrucialCruelCruiseCrumbleCrunchCrushCryCrystalCubeCultureCupCupboardCuriousCurrentCurtainCurveCushionCustomCuteCycleDadDamageDampDanceDangerDaringDashDaughterDawnDayDealDebateDebrisDecadeDecemberDecideDeclineDecorateDecreaseDeerDefenseDefineDefyDegreeDelayDeliverDemandDemiseDenialDentistDenyDepartDependDepositDepthDeputyDeriveDescribeDesertDesignDeskDespairDestroyDetailDetectDevelopDeviceDevoteDiagramDialDiamondDiaryDiceDieselDietDifferDigitalDignityDilemmaDinnerDinosaurDirectDirtDisagreeDiscoverDiseaseDishDismissDisorderDisplayDistanceDivertDivideDivorceDizzyDoctorDocumentDogDollDolphinDomainDonateDonkeyDonorDoorDoseDoubleDoveDraftDragonDramaDrasticDrawDreamDressDriftDrillDrinkDripDriveDropDrumDryDuckDumbDuneDuringDustDutchDutyDwarfDynamicEagerEagleEarlyEarnEarthEasilyEastEasyEchoEcologyEconomyEdgeEditEducateEffortEggEightEitherElbowElderElectricElegantElementElephantElevatorEliteElseEmbarkEmbodyEmbraceEmergeEmotionEmployEmpowerEmptyEnableEnactEndEndlessEndorseEnemyEnergyEnforceEngageEngineEnhanceEnjoyEnlistEnoughEnrichEnrollEnsureEnterEntireEntryEnvelopeEpisodeEqualEquipEraEraseErodeErosionErrorEruptEscapeEssayEssenceEstateEternalEthicsEvidenceEvilEvokeEvolveExactExampleExcessExchangeExciteExcludeExcuseExecuteExerciseExhaustExhibitExileExistExitExoticExpandExpectExpireExplainExposeExpressExtendExtraEyeEyebrowFabricFaceFacultyFadeFaintFaithFallFalseFameFamilyFamousFanFancyFantasyFarmFashionFatFatalFatherFatigueFaultFavoriteFeatureFebruaryFederalFeeFeedFeelFemaleFenceFestivalFetchFeverFewFiberFictionFieldFigureFileFilmFilterFinalFindFineFingerFinishFireFirmFirstFiscalFishFitFitnessFixFlagFlameFlashFlatFlavorFleeFlightFlipFloatFlockFloorFlowerFluidFlushFlyFoamFocusFogFoilFoldFollowFoodFootForceForestForgetForkFortuneForumForwardFossilFosterFoundFoxFragileFrameFrequentFreshFriendFringeFrogFrontFrostFrownFrozenFruitFuelFunFunnyFurnaceFuryFutureGadgetGainGalaxyGalleryGameGapGarageGarbageGardenGarlicGarmentGasGaspGateGatherGaugeGazeGeneralGeniusGenreGentleGenuineGestureGhostGiantGiftGiggleGingerGiraffeGirlGiveGladGlanceGlareGlassGlideGlimpseGlobeGloomGloryGloveGlowGlueGoatGoddessGoldGoodGooseGorillaGospelGossipGovernGownGrabGraceGrainGrantGrapeGrassGravityGreatGreenGridGriefGritGroceryGroupGrowGruntGuardGuessGuideGuiltGuitarGunGymHabitHairHalfHammerHamsterHandHappyHarborHardHarshHarvestHatHaveHawkHazardHeadHealthHeartHeavyHedgehogHeightHelloHelmetHelpHenHeroHiddenHighHillHintHipHireHistoryHobbyHockeyHoldHoleHolidayHollowHomeHoneyHoodHopeHornHorrorHorseHospitalHostHotelHourHoverHubHugeHumanHumbleHumorHundredHungryHuntHurdleHurryHurtHusbandHybridIceIconIdeaIdentifyIdleIgnoreIllIllegalIllnessImageImitateImmenseImmuneImpactImposeImproveImpulseInchIncludeIncomeIncreaseIndexIndicateIndoorIndustryInfantInflictInformInhaleInheritInitialInjectInjuryInmateInnerInnocentInputInquiryInsaneInsectInsideInspireInstallIntactInterestIntoInvestInviteInvolveIronIslandIsolateIssueItemIvoryJacketJaguarJarJazzJealousJeansJellyJewelJobJoinJokeJourneyJoyJudgeJuiceJumpJungleJuniorJunkJustKangarooKeenKeepKetchupKeyKickKidKidneyKindKingdomKissKitKitchenKiteKittenKiwiKneeKnifeKnockKnowLabLabelLaborLadderLadyLakeLampLanguageLaptopLargeLaterLatinLaughLaundryLavaLawLawnLawsuitLayerLazyLeaderLeafLearnLeaveLectureLeftLegLegalLegendLeisureLemonLendLengthLensLeopardLessonLetterLevelLiarLibertyLibraryLicenseLifeLiftLightLikeLimbLimitLinkLionLiquidListLittleLiveLizardLoadLoanLobsterLocalLockLogicLonelyLongLoopLotteryLoudLoungeLoveLoyalLuckyLuggageLumberLunarLunchLuxuryLyricsMachineMadMagicMagnetMaidMailMainMajorMakeMammalManManageMandateMangoMansionManualMapleMarbleMarchMarginMarineMarketMarriageMaskMassMasterMatchMaterialMathMatrixMatterMaximumMazeMeadowMeanMeasureMeatMechanicMedalMediaMelodyMeltMemberMemoryMentionMenuMercyMergeMeritMerryMeshMessageMetalMethodMiddleMidnightMilkMillionMimicMindMinimumMinorMinuteMiracleMirrorMiseryMissMistakeMixMixedMixtureMobileModelModifyMomMomentMonitorMonkeyMonsterMonthMoonMoralMoreMorningMosquitoMotherMotionMotorMountainMouseMoveMovieMuchMuffinMuleMultiplyMuscleMuseumMushroomMusicMustMutualMyselfMysteryMythNaiveNameNapkinNarrowNastyNationNatureNearNeckNeedNegativeNeglectNeitherNephewNerveNestNetNetworkNeutralNeverNewsNextNiceNightNobleNoiseNomineeNoodleNormalNorthNoseNotableNoteNothingNoticeNovelNowNuclearNumberNurseNutOakObeyObjectObligeObscureObserveObtainObviousOccurOceanOctoberOdorOffOfferOfficeOftenOilOkayOldOliveOlympicOmitOnceOneOnionOnlineOnlyOpenOperaOpinionOpposeOptionOrangeOrbitOrchardOrderOrdinaryOrganOrientOriginalOrphanOstrichOtherOutdoorOuterOutputOutsideOvalOvenOverOwnOwnerOxygenOysterOzonePactPaddlePagePairPalacePalmPandaPanelPanicPantherPaperParadeParentParkParrotPartyPassPatchPathPatientPatrolPatternPausePavePaymentPeacePeanutPearPeasantPelicanPenPenaltyPencilPeoplePepperPerfectPermitPersonPetPhonePhotoPhrasePhysicalPianoPicnicPicturePiecePigPigeonPillPilotPinkPioneerPipePistolPitchPizzaPlacePlanetPlasticPlatePlayPleasePledgePluckPlugPlungePoemPoetPointPolarPolePolicePondPonyPoolPopularPortionPositionPossiblePostPotatoPotteryPovertyPowderPowerPracticePraisePredictPreferPreparePresentPrettyPreventPricePridePrimaryPrintPriorityPrisonPrivatePrizeProblemProcessProduceProfitProgramProjectPromoteProofPropertyProsperProtectProudProvidePublicPuddingPullPulpPulsePumpkinPunchPupilPuppyPurchasePurityPurposePursePushPutPuzzlePyramidQualityQuantumQuarterQuestionQuickQuitQuizQuoteRabbitRaccoonRaceRackRadarRadioRailRainRaiseRallyRampRanchRandomRangeRapidRareRateRatherRavenRawRazorReadyRealReasonRebelRebuildRecallReceiveRecipeRecordRecycleReduceReflectReformRefuseRegionRegretRegularRejectRelaxReleaseReliefRelyRemainRememberRemindRemoveRenderRenewRentReopenRepairRepeatReplaceReportRequireRescueResembleResistResourceResponseResultRetireRetreatReturnReunionRevealReviewRewardRhythmRibRibbonRiceRichRideRidgeRifleRightRigidRingRiotRippleRiskRitualRivalRiverRoadRoastRobotRobustRocketRomanceRoofRookieRoomRoseRotateRoughRoundRouteRoyalRubberRudeRugRuleRunRunwayRuralSadSaddleSadnessSafeSailSaladSalmonSalonSaltSaluteSameSampleSandSatisfySatoshiSauceSausageSaveSayScaleScanScareScatterSceneSchemeSchoolScienceScissorsScorpionScoutScrapScreenScriptScrubSeaSearchSeasonSeatSecondSecretSectionSecuritySeedSeekSegmentSelectSellSeminarSeniorSenseSentenceSeriesServiceSessionSettleSetupSevenShadowShaftShallowShareShedShellSheriffShieldShiftShineShipShiverShockShoeShootShopShortShoulderShoveShrimpShrugShuffleShySiblingSickSideSiegeSightSignSilentSilkSillySilverSimilarSimpleSinceSingSirenSisterSituateSixSizeSkateSketchSkiSkillSkinSkirtSkullSlabSlamSleepSlenderSliceSlideSlightSlimSloganSlotSlowSlushSmallSmartSmileSmokeSmoothSnackSnakeSnapSniffSnowSoapSoccerSocialSockSodaSoftSolarSoldierSolidSolutionSolveSomeoneSongSoonSorrySortSoulSoundSoupSourceSouthSpaceSpareSpatialSpawnSpeakSpecialSpeedSpellSpendSphereSpiceSpiderSpikeSpinSpiritSplitSpoilSponsorSpoonSportSpotSpraySpreadSpringSpySquareSqueezeSquirrelStableStadiumStaffStageStairsStampStandStartStateStaySteakSteelStemStepStereoStickStillStingStockStomachStoneStoolStoryStoveStrategyStreetStrikeStrongStruggleStudentStuffStumbleStyleSubjectSubmitSubwaySuccessSuchSuddenSufferSugarSuggestSuitSummerSunSunnySunsetSuperSupplySupremeSureSurfaceSurgeSurpriseSurroundSurveySuspectSustainSwallowSwampSwapSwarmSwearSweetSwiftSwimSwingSwitchSwordSymbolSymptomSyrupSystemTableTackleTagTailTalentTalkTankTapeTargetTaskTasteTattooTaxiTeachTeamTellTenTenantTennisTentTermTestTextThankThatThemeThenTheoryThereTheyThingThisThoughtThreeThriveThrowThumbThunderTicketTideTigerTiltTimberTimeTinyTipTiredTissueTitleToastTobaccoTodayToddlerToeTogetherToiletTokenTomatoTomorrowToneTongueTonightToolToothTopTopicToppleTorchTornadoTortoiseTossTotalTouristTowardTowerTownToyTrackTradeTrafficTragicTrainTransferTrapTrashTravelTrayTreatTreeTrendTrialTribeTrickTriggerTrimTripTrophyTroubleTruckTrueTrulyTrumpetTrustTruthTryTubeTuitionTumbleTunaTunnelTurkeyTurnTurtleTwelveTwentyTwiceTwinTwistTwoTypeTypicalUglyUmbrellaUnableUnawareUncleUncoverUnderUndoUnfairUnfoldUnhappyUniformUniqueUnitUniverseUnknownUnlockUntilUnusualUnveilUpdateUpgradeUpholdUponUpperUpsetUrbanUrgeUsageUseUsedUsefulUselessUsualUtilityVacantVacuumVagueValidValleyValveVanVanishVaporVariousVastVaultVehicleVelvetVendorVentureVenueVerbVerifyVersionVeryVesselVeteranViableVibrantViciousVictoryVideoViewVillageVintageViolinVirtualVirusVisaVisitVisualVitalVividVocalVoiceVoidVolcanoVolumeVoteVoyageWageWagonWaitWalkWallWalnutWantWarfareWarmWarriorWashWaspWasteWaterWaveWayWealthWeaponWearWeaselWeatherWebWeddingWeekendWeirdWelcomeWestWetWhaleWhatWheatWheelWhenWhereWhipWhisperWideWidthWifeWildWillWinWindowWineWingWinkWinnerWinterWireWisdomWiseWishWitnessWolfWomanWonderWoodWoolWordWorkWorldWorryWorthWrapWreckWrestleWristWriteWrongYardYearYellowYouYoungYouthZebraZeroZoneZoo\";\n\nlet wordlist: Array<string> = null;\n\n\nfunction loadWords(lang: Wordlist): void {\n    if (wordlist != null) { return; }\n    wordlist = words.replace(/([A-Z])/g, \" $1\").toLowerCase().substring(1).split(\" \");\n\n    // Verify the computed list matches the official list\n    /* istanbul ignore if */\n    if (Wordlist.check(lang) !== \"0x3c8acc1e7b08d8e76f9fda015ef48dc8c710a73cb7e0f77b2c18a9b5a7adde60\") {\n        wordlist = null;\n        throw new Error(\"BIP39 Wordlist for en (English) FAILED\");\n    }\n}\n\nclass LangEn extends Wordlist {\n    constructor() {\n        super(\"en\");\n    }\n\n    getWord(index: number): string {\n        loadWords(this);\n        return wordlist[index];\n    }\n\n    getWordIndex(word: string): number {\n        loadWords(this);\n        return wordlist.indexOf(word);\n    }\n}\n\nconst langEn = new LangEn();\nWordlist.register(langEn);\n\nexport { langEn };\n","\"use strict\";\n\n// Wordlists\n// See: https://github.com/bitcoin/bips/blob/master/bip-0039/bip-0039-wordlists.md\n\n// Browser; only include English by default\n\nimport { Wordlist } from \"./wordlist\";\n\nimport { langEn as en } from \"./lang-en\";\n\nexport const wordlists: { [ locale: string ]: Wordlist } = {\n  en: en\n}\n","\"use strict\";\n\n// Wordlists\n// See: https://github.com/bitcoin/bips/blob/master/bip-0039/bip-0039-wordlists.md\n\nimport { logger, Wordlist } from \"./wordlist\";\n\nimport { wordlists } from \"./wordlists\";\n\nexport {\n    logger,\n    Wordlist,\n    wordlists\n}\n","export const version = \"hdnode/5.7.0\";\n","\"use strict\";\n\n// See: https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki\n// See: https://github.com/bitcoin/bips/blob/master/bip-0039.mediawiki\n\n\nimport { ExternallyOwnedAccount } from \"@ethersproject/abstract-signer\";\nimport { Base58 } from \"@ethersproject/basex\";\nimport { arrayify, BytesLike, concat, hexDataSlice, hexZeroPad, hexlify } from \"@ethersproject/bytes\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { toUtf8Bytes, UnicodeNormalizationForm } from \"@ethersproject/strings\";\nimport { pbkdf2 } from \"@ethersproject/pbkdf2\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { SigningKey } from \"@ethersproject/signing-key\";\nimport { computeHmac, ripemd160, sha256, SupportedAlgorithm } from \"@ethersproject/sha2\";\nimport { computeAddress } from \"@ethersproject/transactions\";\nimport { Wordlist, wordlists } from \"@ethersproject/wordlists\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nconst N = BigNumber.from(\"0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141\");\n\n\n// \"Bitcoin seed\"\nconst MasterSecret = toUtf8Bytes(\"Bitcoin seed\");\n\nconst HardenedBit = 0x80000000;\n\n// Returns a byte with the MSB bits set\nfunction getUpperMask(bits: number): number {\n   return ((1 << bits) - 1) << (8 - bits);\n}\n\n// Returns a byte with the LSB bits set\nfunction getLowerMask(bits: number): number {\n   return (1 << bits) - 1;\n}\n\nfunction bytes32(value: BigNumber | Uint8Array): string {\n    return hexZeroPad(hexlify(value), 32);\n}\n\nfunction base58check(data: Uint8Array): string {\n    return Base58.encode(concat([ data, hexDataSlice(sha256(sha256(data)), 0, 4) ]));\n}\n\nfunction getWordlist(wordlist: string | Wordlist): Wordlist {\n    if (wordlist == null) {\n        return wordlists[\"en\"];\n    }\n\n    if (typeof(wordlist) === \"string\") {\n        const words = wordlists[wordlist];\n        if (words == null) {\n            logger.throwArgumentError(\"unknown locale\", \"wordlist\", wordlist);\n        }\n        return words;\n    }\n\n    return wordlist;\n}\n\nconst _constructorGuard: any = {};\n\nexport const defaultPath = \"m/44'/60'/0'/0/0\";\n\nexport interface Mnemonic {\n    readonly phrase: string;\n    readonly path: string;\n    readonly locale: string;\n};\n\nexport class HDNode implements ExternallyOwnedAccount {\n    readonly privateKey: string;\n    readonly publicKey: string;\n\n    readonly fingerprint: string;\n    readonly parentFingerprint: string;\n\n    readonly address: string;\n\n    readonly mnemonic?: Mnemonic;\n    readonly path: string;\n\n    readonly chainCode: string;\n\n    readonly index: number;\n    readonly depth: number;\n\n    /**\n     *  This constructor should not be called directly.\n     *\n     *  Please use:\n     *   - fromMnemonic\n     *   - fromSeed\n     */\n    constructor(constructorGuard: any, privateKey: string, publicKey: string, parentFingerprint: string, chainCode: string, index: number, depth: number, mnemonicOrPath: Mnemonic | string) {\n        /* istanbul ignore if */\n        if (constructorGuard !== _constructorGuard) {\n            throw new Error(\"HDNode constructor cannot be called directly\");\n        }\n\n        if (privateKey) {\n            const signingKey = new SigningKey(privateKey);\n            defineReadOnly(this, \"privateKey\", signingKey.privateKey);\n            defineReadOnly(this, \"publicKey\", signingKey.compressedPublicKey);\n        } else {\n            defineReadOnly(this, \"privateKey\", null);\n            defineReadOnly(this, \"publicKey\", hexlify(publicKey));\n        }\n\n        defineReadOnly(this, \"parentFingerprint\", parentFingerprint);\n        defineReadOnly(this, \"fingerprint\", hexDataSlice(ripemd160(sha256(this.publicKey)), 0, 4));\n\n        defineReadOnly(this, \"address\", computeAddress(this.publicKey));\n\n        defineReadOnly(this, \"chainCode\", chainCode);\n\n        defineReadOnly(this, \"index\", index);\n        defineReadOnly(this, \"depth\", depth);\n\n        if (mnemonicOrPath == null) {\n            // From a source that does not preserve the path (e.g. extended keys)\n            defineReadOnly(this, \"mnemonic\", null);\n            defineReadOnly(this, \"path\", null);\n\n        } else if (typeof(mnemonicOrPath) === \"string\") {\n            // From a source that does not preserve the mnemonic (e.g. neutered)\n            defineReadOnly(this, \"mnemonic\", null);\n            defineReadOnly(this, \"path\", mnemonicOrPath);\n\n        } else {\n            // From a fully qualified source\n            defineReadOnly(this, \"mnemonic\", mnemonicOrPath);\n            defineReadOnly(this, \"path\", mnemonicOrPath.path);\n        }\n    }\n\n    get extendedKey(): string {\n        // We only support the mainnet values for now, but if anyone needs\n        // testnet values, let me know. I believe current sentiment is that\n        // we should always use mainnet, and use BIP-44 to derive the network\n        //   - Mainnet: public=0x0488B21E, private=0x0488ADE4\n        //   - Testnet: public=0x043587CF, private=0x04358394\n\n        if (this.depth >= 256) { throw new Error(\"Depth too large!\"); }\n\n        return base58check(concat([\n            ((this.privateKey != null) ? \"0x0488ADE4\": \"0x0488B21E\"),\n            hexlify(this.depth),\n            this.parentFingerprint,\n            hexZeroPad(hexlify(this.index), 4),\n            this.chainCode,\n            ((this.privateKey != null) ? concat([ \"0x00\", this.privateKey ]): this.publicKey),\n        ]));\n    }\n\n    neuter(): HDNode {\n        return new HDNode(_constructorGuard, null, this.publicKey, this.parentFingerprint, this.chainCode, this.index, this.depth, this.path);\n    }\n\n    private _derive(index: number): HDNode {\n        if (index > 0xffffffff) { throw new Error(\"invalid index - \" + String(index)); }\n\n        // Base path\n        let path = this.path;\n        if (path) { path += \"/\" + (index & ~HardenedBit); }\n\n        const data = new Uint8Array(37);\n\n        if (index & HardenedBit) {\n            if (!this.privateKey) {\n                throw new Error(\"cannot derive child of neutered node\");\n            }\n\n            // Data = 0x00 || ser_256(k_par)\n            data.set(arrayify(this.privateKey), 1);\n\n            // Hardened path\n            if (path) { path += \"'\"; }\n\n        } else {\n            // Data = ser_p(point(k_par))\n            data.set(arrayify(this.publicKey));\n        }\n\n        // Data += ser_32(i)\n        for (let i = 24; i >= 0; i -= 8) { data[33 + (i >> 3)] = ((index >> (24 - i)) & 0xff); }\n\n        const I = arrayify(computeHmac(SupportedAlgorithm.sha512, this.chainCode, data));\n        const IL = I.slice(0, 32);\n        const IR = I.slice(32);\n\n        // The private key\n        let ki: string = null\n\n        // The public key\n        let Ki: string = null;\n\n        if (this.privateKey) {\n            ki = bytes32(BigNumber.from(IL).add(this.privateKey).mod(N));\n        } else {\n            const ek = new SigningKey(hexlify(IL));\n            Ki = ek._addPoint(this.publicKey);\n        }\n\n        let mnemonicOrPath: Mnemonic | string = path;\n\n        const srcMnemonic =  this.mnemonic;\n        if (srcMnemonic) {\n            mnemonicOrPath = Object.freeze({\n                phrase: srcMnemonic.phrase,\n                path: path,\n                locale: (srcMnemonic.locale || \"en\")\n            });\n        }\n\n        return new HDNode(_constructorGuard, ki, Ki, this.fingerprint, bytes32(IR), index, this.depth + 1, mnemonicOrPath);\n    }\n\n    derivePath(path: string): HDNode {\n        const components = path.split(\"/\");\n\n        if (components.length === 0 || (components[0] === \"m\" && this.depth !== 0)) {\n            throw new Error(\"invalid path - \" + path);\n        }\n\n        if (components[0] === \"m\") { components.shift(); }\n\n        let result: HDNode = this;\n        for (let i = 0; i < components.length; i++) {\n            const component = components[i];\n            if (component.match(/^[0-9]+'$/)) {\n                const index = parseInt(component.substring(0, component.length - 1));\n                if (index >= HardenedBit) { throw new Error(\"invalid path index - \" + component); }\n                result = result._derive(HardenedBit + index);\n            } else if (component.match(/^[0-9]+$/)) {\n                const index = parseInt(component);\n                if (index >= HardenedBit) { throw new Error(\"invalid path index - \" + component); }\n                result = result._derive(index);\n            } else {\n                throw new Error(\"invalid path component - \" + component);\n            }\n        }\n\n        return result;\n    }\n\n\n    static _fromSeed(seed: BytesLike, mnemonic: Mnemonic): HDNode {\n        const seedArray: Uint8Array = arrayify(seed);\n        if (seedArray.length < 16 || seedArray.length > 64) { throw new Error(\"invalid seed\"); }\n\n        const I: Uint8Array = arrayify(computeHmac(SupportedAlgorithm.sha512, MasterSecret, seedArray));\n\n        return new HDNode(_constructorGuard, bytes32(I.slice(0, 32)), null, \"0x00000000\", bytes32(I.slice(32)), 0, 0, mnemonic);\n    }\n\n    static fromMnemonic(mnemonic: string, password?: string, wordlist?: string | Wordlist): HDNode {\n\n        // If a locale name was passed in, find the associated wordlist\n        wordlist = getWordlist(wordlist);\n\n        // Normalize the case and spacing in the mnemonic (throws if the mnemonic is invalid)\n        mnemonic = entropyToMnemonic(mnemonicToEntropy(mnemonic, wordlist), wordlist);\n\n        return HDNode._fromSeed(mnemonicToSeed(mnemonic, password), {\n            phrase: mnemonic,\n            path: \"m\",\n            locale: wordlist.locale\n        });\n    }\n\n    static fromSeed(seed: BytesLike): HDNode {\n        return HDNode._fromSeed(seed, null);\n    }\n\n    static fromExtendedKey(extendedKey: string): HDNode {\n        const bytes = Base58.decode(extendedKey);\n\n        if (bytes.length !== 82 || base58check(bytes.slice(0, 78)) !== extendedKey) {\n            logger.throwArgumentError(\"invalid extended key\", \"extendedKey\", \"[REDACTED]\");\n        }\n\n        const depth = bytes[4];\n        const parentFingerprint = hexlify(bytes.slice(5, 9));\n        const index = parseInt(hexlify(bytes.slice(9, 13)).substring(2), 16);\n        const chainCode = hexlify(bytes.slice(13, 45));\n        const key = bytes.slice(45, 78);\n\n        switch (hexlify(bytes.slice(0, 4))) {\n            // Public Key\n            case \"0x0488b21e\": case \"0x043587cf\":\n                return new HDNode(_constructorGuard, null, hexlify(key), parentFingerprint, chainCode, index, depth, null);\n\n            // Private Key\n            case \"0x0488ade4\": case \"0x04358394 \":\n                if (key[0] !== 0) { break; }\n                return new HDNode(_constructorGuard, hexlify(key.slice(1)), null, parentFingerprint, chainCode, index, depth, null);\n        }\n\n        return logger.throwArgumentError(\"invalid extended key\", \"extendedKey\", \"[REDACTED]\");\n    }\n}\n\nexport function mnemonicToSeed(mnemonic: string, password?: string): string {\n    if (!password) { password = \"\"; }\n\n    const salt = toUtf8Bytes(\"mnemonic\" + password, UnicodeNormalizationForm.NFKD);\n\n    return pbkdf2(toUtf8Bytes(mnemonic, UnicodeNormalizationForm.NFKD), salt, 2048, 64, \"sha512\");\n}\n\nexport function mnemonicToEntropy(mnemonic: string, wordlist?: string | Wordlist): string {\n    wordlist = getWordlist(wordlist);\n\n    logger.checkNormalize();\n\n    const words = wordlist.split(mnemonic);\n    if ((words.length % 3) !== 0) { throw new Error(\"invalid mnemonic\"); }\n\n    const entropy = arrayify(new Uint8Array(Math.ceil(11 * words.length / 8)));\n\n    let offset = 0;\n    for (let i = 0; i < words.length; i++) {\n        let index = wordlist.getWordIndex(words[i].normalize(\"NFKD\"));\n        if (index === -1) { throw new Error(\"invalid mnemonic\"); }\n\n        for (let bit = 0; bit < 11; bit++) {\n            if (index & (1 << (10 - bit))) {\n                entropy[offset >> 3] |= (1 << (7 - (offset % 8)));\n            }\n            offset++;\n        }\n    }\n\n    const entropyBits = 32 * words.length / 3;\n\n    const checksumBits = words.length / 3;\n    const checksumMask = getUpperMask(checksumBits);\n\n    const checksum = arrayify(sha256(entropy.slice(0, entropyBits / 8)))[0] & checksumMask;\n\n    if (checksum !== (entropy[entropy.length - 1] & checksumMask)) {\n        throw new Error(\"invalid checksum\");\n    }\n\n    return hexlify(entropy.slice(0, entropyBits / 8));\n}\n\nexport function entropyToMnemonic(entropy: BytesLike, wordlist?: string | Wordlist): string {\n    wordlist = getWordlist(wordlist);\n\n    entropy = arrayify(entropy);\n\n    if ((entropy.length % 4) !== 0 || entropy.length < 16 || entropy.length > 32) {\n        throw new Error(\"invalid entropy\");\n    }\n\n    const indices: Array<number> = [ 0 ];\n\n    let remainingBits = 11;\n    for (let i = 0; i < entropy.length; i++) {\n\n        // Consume the whole byte (with still more to go)\n        if (remainingBits > 8) {\n            indices[indices.length - 1] <<= 8;\n            indices[indices.length - 1] |= entropy[i];\n\n            remainingBits -= 8;\n\n        // This byte will complete an 11-bit index\n        } else {\n            indices[indices.length - 1] <<= remainingBits;\n            indices[indices.length - 1] |= entropy[i] >> (8 - remainingBits);\n\n            // Start the next word\n            indices.push(entropy[i] & getLowerMask(8 - remainingBits));\n\n            remainingBits += 3;\n        }\n    }\n\n    // Compute the checksum bits\n    const checksumBits = entropy.length / 4;\n    const checksum = arrayify(sha256(entropy))[0] & getUpperMask(checksumBits);\n\n    // Shift the checksum into the word indices\n    indices[indices.length - 1] <<= checksumBits;\n    indices[indices.length - 1] |= (checksum >> (8 - checksumBits));\n\n    return wordlist.join(indices.map((index) => (<Wordlist>wordlist).getWord(index)));\n}\n\nexport function isValidMnemonic(mnemonic: string, wordlist?: Wordlist): boolean {\n    try {\n        mnemonicToEntropy(mnemonic, wordlist);\n        return true;\n    } catch (error) { }\n    return false;\n}\n\nexport function getAccountPath(index: number): string {\n    if (typeof(index) !== \"number\" || index < 0 || index >= HardenedBit || index % 1) {\n        logger.throwArgumentError(\"invalid account index\", \"index\", index);\n    }\n    return `m/44'/60'/${ index }'/0/0`;\n}\n","\"use strict\";\n\nimport sha3 from \"js-sha3\";\n\nimport { arrayify, BytesLike } from \"@ethersproject/bytes\";\n\nexport function keccak256(data: BytesLike): string {\n    return '0x' + sha3.keccak_256(arrayify(data));\n}\n","export const version = \"properties/5.7.0\";\n","\"use strict\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nexport function defineReadOnly<T, K extends keyof T>(object: T, name: K, value: T[K]): void {\n    Object.defineProperty(object, name, {\n        enumerable: true,\n        value: value,\n        writable: false,\n    });\n}\n\n// Crawl up the constructor chain to find a static method\nexport function getStatic<T>(ctor: any, key: string): T {\n    for (let i = 0; i < 32; i++) {\n        if (ctor[key]) { return ctor[key]; }\n        if (!ctor.prototype || typeof(ctor.prototype) !== \"object\") { break; }\n        ctor = Object.getPrototypeOf(ctor.prototype).constructor;\n    }\n    return null;\n}\n\nexport type Deferrable<T> = {\n    [ K in keyof T ]: T[K] | Promise<T[K]>;\n}\n\n\ntype Result = { key: string, value: any};\n\nexport async function resolveProperties<T>(object: Readonly<Deferrable<T>>): Promise<T> {\n    const promises: Array<Promise<Result>> = Object.keys(object).map((key) => {\n        const value = object[<keyof Deferrable<T>>key];\n        return Promise.resolve(value).then((v) => ({ key: key, value: v }));\n    });\n\n    const results = await Promise.all(promises);\n\n    return results.reduce((accum, result) => {\n        accum[<keyof T>(result.key)] = result.value;\n        return accum;\n    }, <T>{ });\n}\n\nexport function checkProperties(object: any, properties: { [ name: string ]: boolean }): void {\n    if (!object || typeof(object) !== \"object\") {\n        logger.throwArgumentError(\"invalid object\", \"object\", object);\n    }\n\n    Object.keys(object).forEach((key) => {\n        if (!properties[key]) {\n            logger.throwArgumentError(\"invalid object key - \" + key, \"transaction:\" + key, object);\n        }\n    });\n}\n\nexport function shallowCopy<T>(object: T): T {\n    const result: any = {};\n    for (const key in object) { result[key] = object[key]; }\n    return result;\n}\n\nconst opaque: { [key: string]: boolean } = { bigint: true, boolean: true, \"function\": true, number: true, string: true };\n\nfunction _isFrozen(object: any): boolean {\n\n    // Opaque objects are not mutable, so safe to copy by assignment\n    if (object === undefined || object === null || opaque[typeof(object)]) { return true; }\n\n    if (Array.isArray(object) || typeof(object) === \"object\") {\n        if (!Object.isFrozen(object)) { return false; }\n\n        const keys = Object.keys(object);\n        for (let i = 0; i < keys.length; i++) {\n            let value: any = null;\n            try {\n                value = object[keys[i]];\n            } catch (error) {\n                // If accessing a value triggers an error, it is a getter\n                // designed to do so (e.g. Result) and is therefore \"frozen\"\n                continue;\n            }\n\n            if (!_isFrozen(value)) { return false; }\n        }\n\n        return true;\n    }\n\n    return logger.throwArgumentError(`Cannot deepCopy ${ typeof(object) }`, \"object\", object);\n}\n\n// Returns a new copy of object, such that no properties may be replaced.\n// New properties may be added only to objects.\nfunction _deepCopy(object: any): any {\n\n    if (_isFrozen(object)) { return object; }\n\n    // Arrays are mutable, so we need to create a copy\n    if (Array.isArray(object)) {\n        return Object.freeze(object.map((item) => deepCopy(item)));\n    }\n\n    if (typeof(object) === \"object\") {\n        const result: { [ key: string ]: any } = {};\n        for (const key in object) {\n            const value = object[key];\n            if (value === undefined) { continue; }\n            defineReadOnly(result, key, deepCopy(value));\n        }\n\n        return result;\n    }\n\n    return logger.throwArgumentError(`Cannot deepCopy ${ typeof(object) }`, \"object\", object);\n}\n\nexport function deepCopy<T>(object: T): T {\n    return _deepCopy(object);\n}\n\nexport class Description<T = any> {\n    constructor(info: { [ K in keyof T ]: T[K] }) {\n        for (const key in info) {\n            (<any>this)[key] = deepCopy(info[key]);\n        }\n    }\n}\n","export const version = \"random/5.7.0\";\n","\"use strict\";\n\nimport { arrayify } from \"@ethersproject/bytes\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n// Debugging line for testing browser lib in node\n//const window = { crypto: { getRandomValues: () => { } } };\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/globalThis\nfunction getGlobal(): any {\n  if (typeof self !== 'undefined') { return self; }\n  if (typeof window !== 'undefined') { return window; }\n  if (typeof global !== 'undefined') { return global; }\n  throw new Error('unable to locate global object');\n};\n\nconst anyGlobal = getGlobal();\n\nlet crypto: any = anyGlobal.crypto || anyGlobal.msCrypto;\nif (!crypto || !crypto.getRandomValues) {\n\n    logger.warn(\"WARNING: Missing strong random number source\");\n\n    crypto = {\n        getRandomValues: function(buffer: Uint8Array): Uint8Array {\n            return logger.throwError(\"no secure random source avaialble\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"crypto.getRandomValues\"\n            });\n        }\n    };\n}\n\nexport function randomBytes(length: number): Uint8Array {\n    if (length <= 0 || length > 1024 || (length % 1) || length != length) {\n        logger.throwArgumentError(\"invalid length\", \"length\", length);\n    }\n\n    const result = new Uint8Array(length);\n    crypto.getRandomValues(result);\n    return arrayify(result);\n};\n","\"use strict\";\n\nexport function shuffled(array: Array<any>): Array<any> {\n    array = array.slice();\n\n    for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        const tmp = array[i];\n        array[i] = array[j];\n        array[j] = tmp;\n    }\n\n    return array;\n}\n","\"use strict\";\n\nexport { randomBytes } from \"./random\";\nexport { shuffled } from \"./shuffle\";\n","module.exports = assert;\n\nfunction assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n","'use strict';\n\nvar utils = exports;\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg !== 'string') {\n    for (var i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n    return res;\n  }\n  if (enc === 'hex') {\n    msg = msg.replace(/[^a-z0-9]+/ig, '');\n    if (msg.length % 2 !== 0)\n      msg = '0' + msg;\n    for (var i = 0; i < msg.length; i += 2)\n      res.push(parseInt(msg[i] + msg[i + 1], 16));\n  } else {\n    for (var i = 0; i < msg.length; i++) {\n      var c = msg.charCodeAt(i);\n      var hi = c >> 8;\n      var lo = c & 0xff;\n      if (hi)\n        res.push(hi, lo);\n      else\n        res.push(lo);\n    }\n  }\n  return res;\n}\nutils.toArray = toArray;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nutils.zero2 = zero2;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nutils.toHex = toHex;\n\nutils.encode = function encode(arr, enc) {\n  if (enc === 'hex')\n    return toHex(arr);\n  else\n    return arr;\n};\n","'use strict';\n\nvar utils = exports;\nvar BN = require('bn.js');\nvar minAssert = require('minimalistic-assert');\nvar minUtils = require('minimalistic-crypto-utils');\n\nutils.assert = minAssert;\nutils.toArray = minUtils.toArray;\nutils.zero2 = minUtils.zero2;\nutils.toHex = minUtils.toHex;\nutils.encode = minUtils.encode;\n\n// Represent num in a w-NAF form\nfunction getNAF(num, w, bits) {\n  var naf = new Array(Math.max(num.bitLength(), bits) + 1);\n  naf.fill(0);\n\n  var ws = 1 << (w + 1);\n  var k = num.clone();\n\n  for (var i = 0; i < naf.length; i++) {\n    var z;\n    var mod = k.andln(ws - 1);\n    if (k.isOdd()) {\n      if (mod > (ws >> 1) - 1)\n        z = (ws >> 1) - mod;\n      else\n        z = mod;\n      k.isubn(z);\n    } else {\n      z = 0;\n    }\n\n    naf[i] = z;\n    k.iushrn(1);\n  }\n\n  return naf;\n}\nutils.getNAF = getNAF;\n\n// Represent k1, k2 in a Joint Sparse Form\nfunction getJSF(k1, k2) {\n  var jsf = [\n    [],\n    [],\n  ];\n\n  k1 = k1.clone();\n  k2 = k2.clone();\n  var d1 = 0;\n  var d2 = 0;\n  var m8;\n  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {\n    // First phase\n    var m14 = (k1.andln(3) + d1) & 3;\n    var m24 = (k2.andln(3) + d2) & 3;\n    if (m14 === 3)\n      m14 = -1;\n    if (m24 === 3)\n      m24 = -1;\n    var u1;\n    if ((m14 & 1) === 0) {\n      u1 = 0;\n    } else {\n      m8 = (k1.andln(7) + d1) & 7;\n      if ((m8 === 3 || m8 === 5) && m24 === 2)\n        u1 = -m14;\n      else\n        u1 = m14;\n    }\n    jsf[0].push(u1);\n\n    var u2;\n    if ((m24 & 1) === 0) {\n      u2 = 0;\n    } else {\n      m8 = (k2.andln(7) + d2) & 7;\n      if ((m8 === 3 || m8 === 5) && m14 === 2)\n        u2 = -m24;\n      else\n        u2 = m24;\n    }\n    jsf[1].push(u2);\n\n    // Second phase\n    if (2 * d1 === u1 + 1)\n      d1 = 1 - d1;\n    if (2 * d2 === u2 + 1)\n      d2 = 1 - d2;\n    k1.iushrn(1);\n    k2.iushrn(1);\n  }\n\n  return jsf;\n}\nutils.getJSF = getJSF;\n\nfunction cachedProperty(obj, name, computer) {\n  var key = '_' + name;\n  obj.prototype[name] = function cachedProperty() {\n    return this[key] !== undefined ? this[key] :\n      this[key] = computer.call(this);\n  };\n}\nutils.cachedProperty = cachedProperty;\n\nfunction parseBytes(bytes) {\n  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :\n    bytes;\n}\nutils.parseBytes = parseBytes;\n\nfunction intFromLE(bytes) {\n  return new BN(bytes, 'hex', 'le');\n}\nutils.intFromLE = intFromLE;\n\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar getNAF = utils.getNAF;\nvar getJSF = utils.getJSF;\nvar assert = utils.assert;\n\nfunction BaseCurve(type, conf) {\n  this.type = type;\n  this.p = new BN(conf.p, 16);\n\n  // Use Montgomery, when there is no fast reduction for the prime\n  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);\n\n  // Useful for many curves\n  this.zero = new BN(0).toRed(this.red);\n  this.one = new BN(1).toRed(this.red);\n  this.two = new BN(2).toRed(this.red);\n\n  // Curve configuration, optional\n  this.n = conf.n && new BN(conf.n, 16);\n  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);\n\n  // Temporary arrays\n  this._wnafT1 = new Array(4);\n  this._wnafT2 = new Array(4);\n  this._wnafT3 = new Array(4);\n  this._wnafT4 = new Array(4);\n\n  this._bitLength = this.n ? this.n.bitLength() : 0;\n\n  // Generalized Greg Maxwell's trick\n  var adjustCount = this.n && this.p.div(this.n);\n  if (!adjustCount || adjustCount.cmpn(100) > 0) {\n    this.redN = null;\n  } else {\n    this._maxwellTrick = true;\n    this.redN = this.n.toRed(this.red);\n  }\n}\nmodule.exports = BaseCurve;\n\nBaseCurve.prototype.point = function point() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype.validate = function validate() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {\n  assert(p.precomputed);\n  var doubles = p._getDoubles();\n\n  var naf = getNAF(k, 1, this._bitLength);\n  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);\n  I /= 3;\n\n  // Translate into more windowed form\n  var repr = [];\n  var j;\n  var nafW;\n  for (j = 0; j < naf.length; j += doubles.step) {\n    nafW = 0;\n    for (var l = j + doubles.step - 1; l >= j; l--)\n      nafW = (nafW << 1) + naf[l];\n    repr.push(nafW);\n  }\n\n  var a = this.jpoint(null, null, null);\n  var b = this.jpoint(null, null, null);\n  for (var i = I; i > 0; i--) {\n    for (j = 0; j < repr.length; j++) {\n      nafW = repr[j];\n      if (nafW === i)\n        b = b.mixedAdd(doubles.points[j]);\n      else if (nafW === -i)\n        b = b.mixedAdd(doubles.points[j].neg());\n    }\n    a = a.add(b);\n  }\n  return a.toP();\n};\n\nBaseCurve.prototype._wnafMul = function _wnafMul(p, k) {\n  var w = 4;\n\n  // Precompute window\n  var nafPoints = p._getNAFPoints(w);\n  w = nafPoints.wnd;\n  var wnd = nafPoints.points;\n\n  // Get NAF form\n  var naf = getNAF(k, w, this._bitLength);\n\n  // Add `this`*(N+1) for every w-NAF index\n  var acc = this.jpoint(null, null, null);\n  for (var i = naf.length - 1; i >= 0; i--) {\n    // Count zeroes\n    for (var l = 0; i >= 0 && naf[i] === 0; i--)\n      l++;\n    if (i >= 0)\n      l++;\n    acc = acc.dblp(l);\n\n    if (i < 0)\n      break;\n    var z = naf[i];\n    assert(z !== 0);\n    if (p.type === 'affine') {\n      // J +- P\n      if (z > 0)\n        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());\n    } else {\n      // J +- J\n      if (z > 0)\n        acc = acc.add(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.add(wnd[(-z - 1) >> 1].neg());\n    }\n  }\n  return p.type === 'affine' ? acc.toP() : acc;\n};\n\nBaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,\n  points,\n  coeffs,\n  len,\n  jacobianResult) {\n  var wndWidth = this._wnafT1;\n  var wnd = this._wnafT2;\n  var naf = this._wnafT3;\n\n  // Fill all arrays\n  var max = 0;\n  var i;\n  var j;\n  var p;\n  for (i = 0; i < len; i++) {\n    p = points[i];\n    var nafPoints = p._getNAFPoints(defW);\n    wndWidth[i] = nafPoints.wnd;\n    wnd[i] = nafPoints.points;\n  }\n\n  // Comb small window NAFs\n  for (i = len - 1; i >= 1; i -= 2) {\n    var a = i - 1;\n    var b = i;\n    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {\n      naf[a] = getNAF(coeffs[a], wndWidth[a], this._bitLength);\n      naf[b] = getNAF(coeffs[b], wndWidth[b], this._bitLength);\n      max = Math.max(naf[a].length, max);\n      max = Math.max(naf[b].length, max);\n      continue;\n    }\n\n    var comb = [\n      points[a], /* 1 */\n      null, /* 3 */\n      null, /* 5 */\n      points[b], /* 7 */\n    ];\n\n    // Try to avoid Projective points, if possible\n    if (points[a].y.cmp(points[b].y) === 0) {\n      comb[1] = points[a].add(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].add(points[b].neg());\n    } else {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    }\n\n    var index = [\n      -3, /* -1 -1 */\n      -1, /* -1 0 */\n      -5, /* -1 1 */\n      -7, /* 0 -1 */\n      0, /* 0 0 */\n      7, /* 0 1 */\n      5, /* 1 -1 */\n      1, /* 1 0 */\n      3,  /* 1 1 */\n    ];\n\n    var jsf = getJSF(coeffs[a], coeffs[b]);\n    max = Math.max(jsf[0].length, max);\n    naf[a] = new Array(max);\n    naf[b] = new Array(max);\n    for (j = 0; j < max; j++) {\n      var ja = jsf[0][j] | 0;\n      var jb = jsf[1][j] | 0;\n\n      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];\n      naf[b][j] = 0;\n      wnd[a] = comb;\n    }\n  }\n\n  var acc = this.jpoint(null, null, null);\n  var tmp = this._wnafT4;\n  for (i = max; i >= 0; i--) {\n    var k = 0;\n\n    while (i >= 0) {\n      var zero = true;\n      for (j = 0; j < len; j++) {\n        tmp[j] = naf[j][i] | 0;\n        if (tmp[j] !== 0)\n          zero = false;\n      }\n      if (!zero)\n        break;\n      k++;\n      i--;\n    }\n    if (i >= 0)\n      k++;\n    acc = acc.dblp(k);\n    if (i < 0)\n      break;\n\n    for (j = 0; j < len; j++) {\n      var z = tmp[j];\n      p;\n      if (z === 0)\n        continue;\n      else if (z > 0)\n        p = wnd[j][(z - 1) >> 1];\n      else if (z < 0)\n        p = wnd[j][(-z - 1) >> 1].neg();\n\n      if (p.type === 'affine')\n        acc = acc.mixedAdd(p);\n      else\n        acc = acc.add(p);\n    }\n  }\n  // Zeroify references\n  for (i = 0; i < len; i++)\n    wnd[i] = null;\n\n  if (jacobianResult)\n    return acc;\n  else\n    return acc.toP();\n};\n\nfunction BasePoint(curve, type) {\n  this.curve = curve;\n  this.type = type;\n  this.precomputed = null;\n}\nBaseCurve.BasePoint = BasePoint;\n\nBasePoint.prototype.eq = function eq(/*other*/) {\n  throw new Error('Not implemented');\n};\n\nBasePoint.prototype.validate = function validate() {\n  return this.curve.validate(this);\n};\n\nBaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  bytes = utils.toArray(bytes, enc);\n\n  var len = this.p.byteLength();\n\n  // uncompressed, hybrid-odd, hybrid-even\n  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) &&\n      bytes.length - 1 === 2 * len) {\n    if (bytes[0] === 0x06)\n      assert(bytes[bytes.length - 1] % 2 === 0);\n    else if (bytes[0] === 0x07)\n      assert(bytes[bytes.length - 1] % 2 === 1);\n\n    var res =  this.point(bytes.slice(1, 1 + len),\n      bytes.slice(1 + len, 1 + 2 * len));\n\n    return res;\n  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&\n              bytes.length - 1 === len) {\n    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);\n  }\n  throw new Error('Unknown point format');\n};\n\nBasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {\n  return this.encode(enc, true);\n};\n\nBasePoint.prototype._encode = function _encode(compact) {\n  var len = this.curve.p.byteLength();\n  var x = this.getX().toArray('be', len);\n\n  if (compact)\n    return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);\n\n  return [ 0x04 ].concat(x, this.getY().toArray('be', len));\n};\n\nBasePoint.prototype.encode = function encode(enc, compact) {\n  return utils.encode(this._encode(compact), enc);\n};\n\nBasePoint.prototype.precompute = function precompute(power) {\n  if (this.precomputed)\n    return this;\n\n  var precomputed = {\n    doubles: null,\n    naf: null,\n    beta: null,\n  };\n  precomputed.naf = this._getNAFPoints(8);\n  precomputed.doubles = this._getDoubles(4, power);\n  precomputed.beta = this._getBeta();\n  this.precomputed = precomputed;\n\n  return this;\n};\n\nBasePoint.prototype._hasDoubles = function _hasDoubles(k) {\n  if (!this.precomputed)\n    return false;\n\n  var doubles = this.precomputed.doubles;\n  if (!doubles)\n    return false;\n\n  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);\n};\n\nBasePoint.prototype._getDoubles = function _getDoubles(step, power) {\n  if (this.precomputed && this.precomputed.doubles)\n    return this.precomputed.doubles;\n\n  var doubles = [ this ];\n  var acc = this;\n  for (var i = 0; i < power; i += step) {\n    for (var j = 0; j < step; j++)\n      acc = acc.dbl();\n    doubles.push(acc);\n  }\n  return {\n    step: step,\n    points: doubles,\n  };\n};\n\nBasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {\n  if (this.precomputed && this.precomputed.naf)\n    return this.precomputed.naf;\n\n  var res = [ this ];\n  var max = (1 << wnd) - 1;\n  var dbl = max === 1 ? null : this.dbl();\n  for (var i = 1; i < max; i++)\n    res[i] = res[i - 1].add(dbl);\n  return {\n    wnd: wnd,\n    points: res,\n  };\n};\n\nBasePoint.prototype._getBeta = function _getBeta() {\n  return null;\n};\n\nBasePoint.prototype.dblp = function dblp(k) {\n  var r = this;\n  for (var i = 0; i < k; i++)\n    r = r.dbl();\n  return r;\n};\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","'use strict';\n\nvar utils = require('../utils');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar assert = utils.assert;\n\nfunction ShortCurve(conf) {\n  Base.call(this, 'short', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.tinv = this.two.redInvm();\n\n  this.zeroA = this.a.fromRed().cmpn(0) === 0;\n  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;\n\n  // If the curve is endomorphic, precalculate beta and lambda\n  this.endo = this._getEndomorphism(conf);\n  this._endoWnafT1 = new Array(4);\n  this._endoWnafT2 = new Array(4);\n}\ninherits(ShortCurve, Base);\nmodule.exports = ShortCurve;\n\nShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {\n  // No efficient endomorphism\n  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)\n    return;\n\n  // Compute beta and lambda, that lambda * P = (beta * Px; Py)\n  var beta;\n  var lambda;\n  if (conf.beta) {\n    beta = new BN(conf.beta, 16).toRed(this.red);\n  } else {\n    var betas = this._getEndoRoots(this.p);\n    // Choose the smallest beta\n    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];\n    beta = beta.toRed(this.red);\n  }\n  if (conf.lambda) {\n    lambda = new BN(conf.lambda, 16);\n  } else {\n    // Choose the lambda that is matching selected beta\n    var lambdas = this._getEndoRoots(this.n);\n    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {\n      lambda = lambdas[0];\n    } else {\n      lambda = lambdas[1];\n      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);\n    }\n  }\n\n  // Get basis vectors, used for balanced length-two representation\n  var basis;\n  if (conf.basis) {\n    basis = conf.basis.map(function(vec) {\n      return {\n        a: new BN(vec.a, 16),\n        b: new BN(vec.b, 16),\n      };\n    });\n  } else {\n    basis = this._getEndoBasis(lambda);\n  }\n\n  return {\n    beta: beta,\n    lambda: lambda,\n    basis: basis,\n  };\n};\n\nShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {\n  // Find roots of for x^2 + x + 1 in F\n  // Root = (-1 +- Sqrt(-3)) / 2\n  //\n  var red = num === this.p ? this.red : BN.mont(num);\n  var tinv = new BN(2).toRed(red).redInvm();\n  var ntinv = tinv.redNeg();\n\n  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);\n\n  var l1 = ntinv.redAdd(s).fromRed();\n  var l2 = ntinv.redSub(s).fromRed();\n  return [ l1, l2 ];\n};\n\nShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {\n  // aprxSqrt >= sqrt(this.n)\n  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));\n\n  // 3.74\n  // Run EGCD, until r(L + 1) < aprxSqrt\n  var u = lambda;\n  var v = this.n.clone();\n  var x1 = new BN(1);\n  var y1 = new BN(0);\n  var x2 = new BN(0);\n  var y2 = new BN(1);\n\n  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)\n  var a0;\n  var b0;\n  // First vector\n  var a1;\n  var b1;\n  // Second vector\n  var a2;\n  var b2;\n\n  var prevR;\n  var i = 0;\n  var r;\n  var x;\n  while (u.cmpn(0) !== 0) {\n    var q = v.div(u);\n    r = v.sub(q.mul(u));\n    x = x2.sub(q.mul(x1));\n    var y = y2.sub(q.mul(y1));\n\n    if (!a1 && r.cmp(aprxSqrt) < 0) {\n      a0 = prevR.neg();\n      b0 = x1;\n      a1 = r.neg();\n      b1 = x;\n    } else if (a1 && ++i === 2) {\n      break;\n    }\n    prevR = r;\n\n    v = u;\n    u = r;\n    x2 = x1;\n    x1 = x;\n    y2 = y1;\n    y1 = y;\n  }\n  a2 = r.neg();\n  b2 = x;\n\n  var len1 = a1.sqr().add(b1.sqr());\n  var len2 = a2.sqr().add(b2.sqr());\n  if (len2.cmp(len1) >= 0) {\n    a2 = a0;\n    b2 = b0;\n  }\n\n  // Normalize signs\n  if (a1.negative) {\n    a1 = a1.neg();\n    b1 = b1.neg();\n  }\n  if (a2.negative) {\n    a2 = a2.neg();\n    b2 = b2.neg();\n  }\n\n  return [\n    { a: a1, b: b1 },\n    { a: a2, b: b2 },\n  ];\n};\n\nShortCurve.prototype._endoSplit = function _endoSplit(k) {\n  var basis = this.endo.basis;\n  var v1 = basis[0];\n  var v2 = basis[1];\n\n  var c1 = v2.b.mul(k).divRound(this.n);\n  var c2 = v1.b.neg().mul(k).divRound(this.n);\n\n  var p1 = c1.mul(v1.a);\n  var p2 = c2.mul(v2.a);\n  var q1 = c1.mul(v1.b);\n  var q2 = c2.mul(v2.b);\n\n  // Calculate answer\n  var k1 = k.sub(p1).sub(p2);\n  var k2 = q1.add(q2).neg();\n  return { k1: k1, k2: k2 };\n};\n\nShortCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  // XXX Is there any way to tell if the number is odd without converting it\n  // to non-red form?\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nShortCurve.prototype.validate = function validate(point) {\n  if (point.inf)\n    return true;\n\n  var x = point.x;\n  var y = point.y;\n\n  var ax = this.a.redMul(x);\n  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);\n  return y.redSqr().redISub(rhs).cmpn(0) === 0;\n};\n\nShortCurve.prototype._endoWnafMulAdd =\n    function _endoWnafMulAdd(points, coeffs, jacobianResult) {\n      var npoints = this._endoWnafT1;\n      var ncoeffs = this._endoWnafT2;\n      for (var i = 0; i < points.length; i++) {\n        var split = this._endoSplit(coeffs[i]);\n        var p = points[i];\n        var beta = p._getBeta();\n\n        if (split.k1.negative) {\n          split.k1.ineg();\n          p = p.neg(true);\n        }\n        if (split.k2.negative) {\n          split.k2.ineg();\n          beta = beta.neg(true);\n        }\n\n        npoints[i * 2] = p;\n        npoints[i * 2 + 1] = beta;\n        ncoeffs[i * 2] = split.k1;\n        ncoeffs[i * 2 + 1] = split.k2;\n      }\n      var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);\n\n      // Clean-up references to points and coefficients\n      for (var j = 0; j < i * 2; j++) {\n        npoints[j] = null;\n        ncoeffs[j] = null;\n      }\n      return res;\n    };\n\nfunction Point(curve, x, y, isRed) {\n  Base.BasePoint.call(this, curve, 'affine');\n  if (x === null && y === null) {\n    this.x = null;\n    this.y = null;\n    this.inf = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    // Force redgomery representation when loading from JSON\n    if (isRed) {\n      this.x.forceRed(this.curve.red);\n      this.y.forceRed(this.curve.red);\n    }\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    this.inf = false;\n  }\n}\ninherits(Point, Base.BasePoint);\n\nShortCurve.prototype.point = function point(x, y, isRed) {\n  return new Point(this, x, y, isRed);\n};\n\nShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {\n  return Point.fromJSON(this, obj, red);\n};\n\nPoint.prototype._getBeta = function _getBeta() {\n  if (!this.curve.endo)\n    return;\n\n  var pre = this.precomputed;\n  if (pre && pre.beta)\n    return pre.beta;\n\n  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);\n  if (pre) {\n    var curve = this.curve;\n    var endoMul = function(p) {\n      return curve.point(p.x.redMul(curve.endo.beta), p.y);\n    };\n    pre.beta = beta;\n    beta.precomputed = {\n      beta: null,\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(endoMul),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(endoMul),\n      },\n    };\n  }\n  return beta;\n};\n\nPoint.prototype.toJSON = function toJSON() {\n  if (!this.precomputed)\n    return [ this.x, this.y ];\n\n  return [ this.x, this.y, this.precomputed && {\n    doubles: this.precomputed.doubles && {\n      step: this.precomputed.doubles.step,\n      points: this.precomputed.doubles.points.slice(1),\n    },\n    naf: this.precomputed.naf && {\n      wnd: this.precomputed.naf.wnd,\n      points: this.precomputed.naf.points.slice(1),\n    },\n  } ];\n};\n\nPoint.fromJSON = function fromJSON(curve, obj, red) {\n  if (typeof obj === 'string')\n    obj = JSON.parse(obj);\n  var res = curve.point(obj[0], obj[1], red);\n  if (!obj[2])\n    return res;\n\n  function obj2point(obj) {\n    return curve.point(obj[0], obj[1], red);\n  }\n\n  var pre = obj[2];\n  res.precomputed = {\n    beta: null,\n    doubles: pre.doubles && {\n      step: pre.doubles.step,\n      points: [ res ].concat(pre.doubles.points.map(obj2point)),\n    },\n    naf: pre.naf && {\n      wnd: pre.naf.wnd,\n      points: [ res ].concat(pre.naf.points.map(obj2point)),\n    },\n  };\n  return res;\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  return this.inf;\n};\n\nPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.inf)\n    return p;\n\n  // P + O = P\n  if (p.inf)\n    return this;\n\n  // P + P = 2P\n  if (this.eq(p))\n    return this.dbl();\n\n  // P + (-P) = O\n  if (this.neg().eq(p))\n    return this.curve.point(null, null);\n\n  // P + Q = O\n  if (this.x.cmp(p.x) === 0)\n    return this.curve.point(null, null);\n\n  var c = this.y.redSub(p.y);\n  if (c.cmpn(0) !== 0)\n    c = c.redMul(this.x.redSub(p.x).redInvm());\n  var nx = c.redSqr().redISub(this.x).redISub(p.x);\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.inf)\n    return this;\n\n  // 2P = O\n  var ys1 = this.y.redAdd(this.y);\n  if (ys1.cmpn(0) === 0)\n    return this.curve.point(null, null);\n\n  var a = this.curve.a;\n\n  var x2 = this.x.redSqr();\n  var dyinv = ys1.redInvm();\n  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);\n\n  var nx = c.redSqr().redISub(this.x.redAdd(this.x));\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.getX = function getX() {\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  return this.y.fromRed();\n};\n\nPoint.prototype.mul = function mul(k) {\n  k = new BN(k, 16);\n  if (this.isInfinity())\n    return this;\n  else if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else if (this.curve.endo)\n    return this.curve._endoWnafMulAdd([ this ], [ k ]);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs, true);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2, true);\n};\n\nPoint.prototype.eq = function eq(p) {\n  return this === p ||\n         this.inf === p.inf &&\n             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);\n};\n\nPoint.prototype.neg = function neg(_precompute) {\n  if (this.inf)\n    return this;\n\n  var res = this.curve.point(this.x, this.y.redNeg());\n  if (_precompute && this.precomputed) {\n    var pre = this.precomputed;\n    var negate = function(p) {\n      return p.neg();\n    };\n    res.precomputed = {\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(negate),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(negate),\n      },\n    };\n  }\n  return res;\n};\n\nPoint.prototype.toJ = function toJ() {\n  if (this.inf)\n    return this.curve.jpoint(null, null, null);\n\n  var res = this.curve.jpoint(this.x, this.y, this.curve.one);\n  return res;\n};\n\nfunction JPoint(curve, x, y, z) {\n  Base.BasePoint.call(this, curve, 'jacobian');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.one;\n    this.y = this.curve.one;\n    this.z = new BN(0);\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = new BN(z, 16);\n  }\n  if (!this.x.red)\n    this.x = this.x.toRed(this.curve.red);\n  if (!this.y.red)\n    this.y = this.y.toRed(this.curve.red);\n  if (!this.z.red)\n    this.z = this.z.toRed(this.curve.red);\n\n  this.zOne = this.z === this.curve.one;\n}\ninherits(JPoint, Base.BasePoint);\n\nShortCurve.prototype.jpoint = function jpoint(x, y, z) {\n  return new JPoint(this, x, y, z);\n};\n\nJPoint.prototype.toP = function toP() {\n  if (this.isInfinity())\n    return this.curve.point(null, null);\n\n  var zinv = this.z.redInvm();\n  var zinv2 = zinv.redSqr();\n  var ax = this.x.redMul(zinv2);\n  var ay = this.y.redMul(zinv2).redMul(zinv);\n\n  return this.curve.point(ax, ay);\n};\n\nJPoint.prototype.neg = function neg() {\n  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n};\n\nJPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p;\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 12M + 4S + 7A\n  var pz2 = p.z.redSqr();\n  var z2 = this.z.redSqr();\n  var u1 = this.x.redMul(pz2);\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y.redMul(pz2.redMul(p.z));\n  var s2 = p.y.redMul(z2.redMul(this.z));\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(p.z).redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mixedAdd = function mixedAdd(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p.toJ();\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 8M + 3S + 7A\n  var z2 = this.z.redSqr();\n  var u1 = this.x;\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y;\n  var s2 = p.y.redMul(z2).redMul(this.z);\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.dblp = function dblp(pow) {\n  if (pow === 0)\n    return this;\n  if (this.isInfinity())\n    return this;\n  if (!pow)\n    return this.dbl();\n\n  var i;\n  if (this.curve.zeroA || this.curve.threeA) {\n    var r = this;\n    for (i = 0; i < pow; i++)\n      r = r.dbl();\n    return r;\n  }\n\n  // 1M + 2S + 1A + N * (4S + 5M + 8A)\n  // N = 1 => 6M + 6S + 9A\n  var a = this.curve.a;\n  var tinv = this.curve.tinv;\n\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  // Reuse results\n  var jyd = jy.redAdd(jy);\n  for (i = 0; i < pow; i++) {\n    var jx2 = jx.redSqr();\n    var jyd2 = jyd.redSqr();\n    var jyd4 = jyd2.redSqr();\n    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n    var t1 = jx.redMul(jyd2);\n    var nx = c.redSqr().redISub(t1.redAdd(t1));\n    var t2 = t1.redISub(nx);\n    var dny = c.redMul(t2);\n    dny = dny.redIAdd(dny).redISub(jyd4);\n    var nz = jyd.redMul(jz);\n    if (i + 1 < pow)\n      jz4 = jz4.redMul(jyd4);\n\n    jx = nx;\n    jz = nz;\n    jyd = dny;\n  }\n\n  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);\n};\n\nJPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  if (this.curve.zeroA)\n    return this._zeroDbl();\n  else if (this.curve.threeA)\n    return this._threeDbl();\n  else\n    return this._dbl();\n};\n\nJPoint.prototype._zeroDbl = function _zeroDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 14A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a; a = 0\n    var m = xx.redAdd(xx).redIAdd(xx);\n    // T = M ^ 2 - 2*S\n    var t = m.redSqr().redISub(s).redISub(s);\n\n    // 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2*Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-dbl-2009-l\n    // 2M + 5S + 13A\n\n    // A = X1^2\n    var a = this.x.redSqr();\n    // B = Y1^2\n    var b = this.y.redSqr();\n    // C = B^2\n    var c = b.redSqr();\n    // D = 2 * ((X1 + B)^2 - A - C)\n    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);\n    d = d.redIAdd(d);\n    // E = 3 * A\n    var e = a.redAdd(a).redIAdd(a);\n    // F = E^2\n    var f = e.redSqr();\n\n    // 8 * C\n    var c8 = c.redIAdd(c);\n    c8 = c8.redIAdd(c8);\n    c8 = c8.redIAdd(c8);\n\n    // X3 = F - 2 * D\n    nx = f.redISub(d).redISub(d);\n    // Y3 = E * (D - X3) - 8 * C\n    ny = e.redMul(d.redISub(nx)).redISub(c8);\n    // Z3 = 2 * Y1 * Z1\n    nz = this.y.redMul(this.z);\n    nz = nz.redIAdd(nz);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._threeDbl = function _threeDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 15A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a\n    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);\n    // T = M^2 - 2 * S\n    var t = m.redSqr().redISub(s).redISub(s);\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2 * Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b\n    // 3M + 5S\n\n    // delta = Z1^2\n    var delta = this.z.redSqr();\n    // gamma = Y1^2\n    var gamma = this.y.redSqr();\n    // beta = X1 * gamma\n    var beta = this.x.redMul(gamma);\n    // alpha = 3 * (X1 - delta) * (X1 + delta)\n    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));\n    alpha = alpha.redAdd(alpha).redIAdd(alpha);\n    // X3 = alpha^2 - 8 * beta\n    var beta4 = beta.redIAdd(beta);\n    beta4 = beta4.redIAdd(beta4);\n    var beta8 = beta4.redAdd(beta4);\n    nx = alpha.redSqr().redISub(beta8);\n    // Z3 = (Y1 + Z1)^2 - gamma - delta\n    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);\n    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2\n    var ggamma8 = gamma.redSqr();\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._dbl = function _dbl() {\n  var a = this.curve.a;\n\n  // 4M + 6S + 10A\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  var jx2 = jx.redSqr();\n  var jy2 = jy.redSqr();\n\n  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n  var jxd4 = jx.redAdd(jx);\n  jxd4 = jxd4.redIAdd(jxd4);\n  var t1 = jxd4.redMul(jy2);\n  var nx = c.redSqr().redISub(t1.redAdd(t1));\n  var t2 = t1.redISub(nx);\n\n  var jyd8 = jy2.redSqr();\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  var ny = c.redMul(t2).redISub(jyd8);\n  var nz = jy.redAdd(jy).redMul(jz);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.trpl = function trpl() {\n  if (!this.curve.zeroA)\n    return this.dbl().add(this);\n\n  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl\n  // 5M + 10S + ...\n\n  // XX = X1^2\n  var xx = this.x.redSqr();\n  // YY = Y1^2\n  var yy = this.y.redSqr();\n  // ZZ = Z1^2\n  var zz = this.z.redSqr();\n  // YYYY = YY^2\n  var yyyy = yy.redSqr();\n  // M = 3 * XX + a * ZZ2; a = 0\n  var m = xx.redAdd(xx).redIAdd(xx);\n  // MM = M^2\n  var mm = m.redSqr();\n  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM\n  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n  e = e.redIAdd(e);\n  e = e.redAdd(e).redIAdd(e);\n  e = e.redISub(mm);\n  // EE = E^2\n  var ee = e.redSqr();\n  // T = 16*YYYY\n  var t = yyyy.redIAdd(yyyy);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  // U = (M + E)^2 - MM - EE - T\n  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);\n  // X3 = 4 * (X1 * EE - 4 * YY * U)\n  var yyu4 = yy.redMul(u);\n  yyu4 = yyu4.redIAdd(yyu4);\n  yyu4 = yyu4.redIAdd(yyu4);\n  var nx = this.x.redMul(ee).redISub(yyu4);\n  nx = nx.redIAdd(nx);\n  nx = nx.redIAdd(nx);\n  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)\n  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  // Z3 = (Z1 + E)^2 - ZZ - EE\n  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mul = function mul(k, kbase) {\n  k = new BN(k, kbase);\n\n  return this.curve._wnafMul(this, k);\n};\n\nJPoint.prototype.eq = function eq(p) {\n  if (p.type === 'affine')\n    return this.eq(p.toJ());\n\n  if (this === p)\n    return true;\n\n  // x1 * z2^2 == x2 * z1^2\n  var z2 = this.z.redSqr();\n  var pz2 = p.z.redSqr();\n  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)\n    return false;\n\n  // y1 * z2^3 == y2 * z1^3\n  var z3 = z2.redMul(this.z);\n  var pz3 = pz2.redMul(p.z);\n  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;\n};\n\nJPoint.prototype.eqXToP = function eqXToP(x) {\n  var zs = this.z.redSqr();\n  var rx = x.toRed(this.curve.red).redMul(zs);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(zs);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\nJPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC JPoint Infinity>';\n  return '<EC JPoint x: ' + this.x.toString(16, 2) +\n      ' y: ' + this.y.toString(16, 2) +\n      ' z: ' + this.z.toString(16, 2) + '>';\n};\n\nJPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n","'use strict';\n\nvar curve = exports;\n\ncurve.base = require('./base');\ncurve.short = require('./short');\ncurve.mont = require('./mont');\ncurve.edwards = require('./edwards');\n","'use strict';\n\nvar curves = exports;\n\nvar hash = require('hash.js');\nvar curve = require('./curve');\nvar utils = require('./utils');\n\nvar assert = utils.assert;\n\nfunction PresetCurve(options) {\n  if (options.type === 'short')\n    this.curve = new curve.short(options);\n  else if (options.type === 'edwards')\n    this.curve = new curve.edwards(options);\n  else\n    this.curve = new curve.mont(options);\n  this.g = this.curve.g;\n  this.n = this.curve.n;\n  this.hash = options.hash;\n\n  assert(this.g.validate(), 'Invalid curve');\n  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');\n}\ncurves.PresetCurve = PresetCurve;\n\nfunction defineCurve(name, options) {\n  Object.defineProperty(curves, name, {\n    configurable: true,\n    enumerable: true,\n    get: function() {\n      var curve = new PresetCurve(options);\n      Object.defineProperty(curves, name, {\n        configurable: true,\n        enumerable: true,\n        value: curve,\n      });\n      return curve;\n    },\n  });\n}\n\ndefineCurve('p192', {\n  type: 'short',\n  prime: 'p192',\n  p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',\n  b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',\n  n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',\n    '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811',\n  ],\n});\n\ndefineCurve('p224', {\n  type: 'short',\n  prime: 'p224',\n  p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',\n  b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',\n  n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',\n    'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34',\n  ],\n});\n\ndefineCurve('p256', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',\n  a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',\n  b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',\n  n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',\n    '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5',\n  ],\n});\n\ndefineCurve('p384', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 ffffffff',\n  a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 fffffffc',\n  b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' +\n     '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',\n  n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' +\n     'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',\n  hash: hash.sha384,\n  gRed: false,\n  g: [\n    'aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' +\n    '5502f25d bf55296c 3a545e38 72760ab7',\n    '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' +\n    '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f',\n  ],\n});\n\ndefineCurve('p521', {\n  type: 'short',\n  prime: null,\n  p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff',\n  a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff fffffffc',\n  b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' +\n     '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' +\n     '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',\n  n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' +\n     'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',\n  hash: hash.sha512,\n  gRed: false,\n  g: [\n    '000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' +\n    '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' +\n    'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66',\n    '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' +\n    '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' +\n    '3fad0761 353c7086 a272c240 88be9476 9fd16650',\n  ],\n});\n\ndefineCurve('curve25519', {\n  type: 'mont',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '76d06',\n  b: '1',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '9',\n  ],\n});\n\ndefineCurve('ed25519', {\n  type: 'edwards',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '-1',\n  c: '1',\n  // -121665 * (121666^(-1)) (mod P)\n  d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',\n\n    // 4/5\n    '6666666666666666666666666666666666666666666666666666666666666658',\n  ],\n});\n\nvar pre;\ntry {\n  pre = require('./precomputed/secp256k1');\n} catch (e) {\n  pre = undefined;\n}\n\ndefineCurve('secp256k1', {\n  type: 'short',\n  prime: 'k256',\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',\n  a: '0',\n  b: '7',\n  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',\n  h: '1',\n  hash: hash.sha256,\n\n  // Precomputed endomorphism\n  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',\n  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',\n  basis: [\n    {\n      a: '3086d221a7d46bcde86c90e49284eb15',\n      b: '-e4437ed6010e88286f547fa90abfe4c3',\n    },\n    {\n      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',\n      b: '3086d221a7d46bcde86c90e49284eb15',\n    },\n  ],\n\n  gRed: false,\n  g: [\n    '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',\n    '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',\n    pre,\n  ],\n});\n","'use strict';\n\nvar hash = require('hash.js');\nvar utils = require('minimalistic-crypto-utils');\nvar assert = require('minimalistic-assert');\n\nfunction HmacDRBG(options) {\n  if (!(this instanceof HmacDRBG))\n    return new HmacDRBG(options);\n  this.hash = options.hash;\n  this.predResist = !!options.predResist;\n\n  this.outLen = this.hash.outSize;\n  this.minEntropy = options.minEntropy || this.hash.hmacStrength;\n\n  this._reseed = null;\n  this.reseedInterval = null;\n  this.K = null;\n  this.V = null;\n\n  var entropy = utils.toArray(options.entropy, options.entropyEnc || 'hex');\n  var nonce = utils.toArray(options.nonce, options.nonceEnc || 'hex');\n  var pers = utils.toArray(options.pers, options.persEnc || 'hex');\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n  this._init(entropy, nonce, pers);\n}\nmodule.exports = HmacDRBG;\n\nHmacDRBG.prototype._init = function init(entropy, nonce, pers) {\n  var seed = entropy.concat(nonce).concat(pers);\n\n  this.K = new Array(this.outLen / 8);\n  this.V = new Array(this.outLen / 8);\n  for (var i = 0; i < this.V.length; i++) {\n    this.K[i] = 0x00;\n    this.V[i] = 0x01;\n  }\n\n  this._update(seed);\n  this._reseed = 1;\n  this.reseedInterval = 0x1000000000000;  // 2^48\n};\n\nHmacDRBG.prototype._hmac = function hmac() {\n  return new hash.hmac(this.hash, this.K);\n};\n\nHmacDRBG.prototype._update = function update(seed) {\n  var kmac = this._hmac()\n                 .update(this.V)\n                 .update([ 0x00 ]);\n  if (seed)\n    kmac = kmac.update(seed);\n  this.K = kmac.digest();\n  this.V = this._hmac().update(this.V).digest();\n  if (!seed)\n    return;\n\n  this.K = this._hmac()\n               .update(this.V)\n               .update([ 0x01 ])\n               .update(seed)\n               .digest();\n  this.V = this._hmac().update(this.V).digest();\n};\n\nHmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {\n  // Optional entropy enc\n  if (typeof entropyEnc !== 'string') {\n    addEnc = add;\n    add = entropyEnc;\n    entropyEnc = null;\n  }\n\n  entropy = utils.toArray(entropy, entropyEnc);\n  add = utils.toArray(add, addEnc);\n\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n\n  this._update(entropy.concat(add || []));\n  this._reseed = 1;\n};\n\nHmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {\n  if (this._reseed > this.reseedInterval)\n    throw new Error('Reseed is required');\n\n  // Optional encoding\n  if (typeof enc !== 'string') {\n    addEnc = add;\n    add = enc;\n    enc = null;\n  }\n\n  // Optional additional data\n  if (add) {\n    add = utils.toArray(add, addEnc || 'hex');\n    this._update(add);\n  }\n\n  var temp = [];\n  while (temp.length < len) {\n    this.V = this._hmac().update(this.V).digest();\n    temp = temp.concat(this.V);\n  }\n\n  var res = temp.slice(0, len);\n  this._update(add);\n  this._reseed++;\n  return utils.encode(res, enc);\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction KeyPair(ec, options) {\n  this.ec = ec;\n  this.priv = null;\n  this.pub = null;\n\n  // KeyPair(ec, { priv: ..., pub: ... })\n  if (options.priv)\n    this._importPrivate(options.priv, options.privEnc);\n  if (options.pub)\n    this._importPublic(options.pub, options.pubEnc);\n}\nmodule.exports = KeyPair;\n\nKeyPair.fromPublic = function fromPublic(ec, pub, enc) {\n  if (pub instanceof KeyPair)\n    return pub;\n\n  return new KeyPair(ec, {\n    pub: pub,\n    pubEnc: enc,\n  });\n};\n\nKeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {\n  if (priv instanceof KeyPair)\n    return priv;\n\n  return new KeyPair(ec, {\n    priv: priv,\n    privEnc: enc,\n  });\n};\n\nKeyPair.prototype.validate = function validate() {\n  var pub = this.getPublic();\n\n  if (pub.isInfinity())\n    return { result: false, reason: 'Invalid public key' };\n  if (!pub.validate())\n    return { result: false, reason: 'Public key is not a point' };\n  if (!pub.mul(this.ec.curve.n).isInfinity())\n    return { result: false, reason: 'Public key * N != O' };\n\n  return { result: true, reason: null };\n};\n\nKeyPair.prototype.getPublic = function getPublic(compact, enc) {\n  // compact is optional argument\n  if (typeof compact === 'string') {\n    enc = compact;\n    compact = null;\n  }\n\n  if (!this.pub)\n    this.pub = this.ec.g.mul(this.priv);\n\n  if (!enc)\n    return this.pub;\n\n  return this.pub.encode(enc, compact);\n};\n\nKeyPair.prototype.getPrivate = function getPrivate(enc) {\n  if (enc === 'hex')\n    return this.priv.toString(16, 2);\n  else\n    return this.priv;\n};\n\nKeyPair.prototype._importPrivate = function _importPrivate(key, enc) {\n  this.priv = new BN(key, enc || 16);\n\n  // Ensure that the priv won't be bigger than n, otherwise we may fail\n  // in fixed multiplication method\n  this.priv = this.priv.umod(this.ec.curve.n);\n};\n\nKeyPair.prototype._importPublic = function _importPublic(key, enc) {\n  if (key.x || key.y) {\n    // Montgomery points only have an `x` coordinate.\n    // Weierstrass/Edwards points on the other hand have both `x` and\n    // `y` coordinates.\n    if (this.ec.curve.type === 'mont') {\n      assert(key.x, 'Need x coordinate');\n    } else if (this.ec.curve.type === 'short' ||\n               this.ec.curve.type === 'edwards') {\n      assert(key.x && key.y, 'Need both x and y coordinate');\n    }\n    this.pub = this.ec.curve.point(key.x, key.y);\n    return;\n  }\n  this.pub = this.ec.curve.decodePoint(key, enc);\n};\n\n// ECDH\nKeyPair.prototype.derive = function derive(pub) {\n  if(!pub.validate()) {\n    assert(pub.validate(), 'public point not validated');\n  }\n  return pub.mul(this.priv).getX();\n};\n\n// ECDSA\nKeyPair.prototype.sign = function sign(msg, enc, options) {\n  return this.ec.sign(msg, this, enc, options);\n};\n\nKeyPair.prototype.verify = function verify(msg, signature) {\n  return this.ec.verify(msg, signature, this);\n};\n\nKeyPair.prototype.inspect = function inspect() {\n  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +\n         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';\n};\n","'use strict';\n\nvar BN = require('bn.js');\n\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction Signature(options, enc) {\n  if (options instanceof Signature)\n    return options;\n\n  if (this._importDER(options, enc))\n    return;\n\n  assert(options.r && options.s, 'Signature without r or s');\n  this.r = new BN(options.r, 16);\n  this.s = new BN(options.s, 16);\n  if (options.recoveryParam === undefined)\n    this.recoveryParam = null;\n  else\n    this.recoveryParam = options.recoveryParam;\n}\nmodule.exports = Signature;\n\nfunction Position() {\n  this.place = 0;\n}\n\nfunction getLength(buf, p) {\n  var initial = buf[p.place++];\n  if (!(initial & 0x80)) {\n    return initial;\n  }\n  var octetLen = initial & 0xf;\n\n  // Indefinite length or overflow\n  if (octetLen === 0 || octetLen > 4) {\n    return false;\n  }\n\n  var val = 0;\n  for (var i = 0, off = p.place; i < octetLen; i++, off++) {\n    val <<= 8;\n    val |= buf[off];\n    val >>>= 0;\n  }\n\n  // Leading zeroes\n  if (val <= 0x7f) {\n    return false;\n  }\n\n  p.place = off;\n  return val;\n}\n\nfunction rmPadding(buf) {\n  var i = 0;\n  var len = buf.length - 1;\n  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {\n    i++;\n  }\n  if (i === 0) {\n    return buf;\n  }\n  return buf.slice(i);\n}\n\nSignature.prototype._importDER = function _importDER(data, enc) {\n  data = utils.toArray(data, enc);\n  var p = new Position();\n  if (data[p.place++] !== 0x30) {\n    return false;\n  }\n  var len = getLength(data, p);\n  if (len === false) {\n    return false;\n  }\n  if ((len + p.place) !== data.length) {\n    return false;\n  }\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var rlen = getLength(data, p);\n  if (rlen === false) {\n    return false;\n  }\n  var r = data.slice(p.place, rlen + p.place);\n  p.place += rlen;\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var slen = getLength(data, p);\n  if (slen === false) {\n    return false;\n  }\n  if (data.length !== slen + p.place) {\n    return false;\n  }\n  var s = data.slice(p.place, slen + p.place);\n  if (r[0] === 0) {\n    if (r[1] & 0x80) {\n      r = r.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n  if (s[0] === 0) {\n    if (s[1] & 0x80) {\n      s = s.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n\n  this.r = new BN(r);\n  this.s = new BN(s);\n  this.recoveryParam = null;\n\n  return true;\n};\n\nfunction constructLength(arr, len) {\n  if (len < 0x80) {\n    arr.push(len);\n    return;\n  }\n  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);\n  arr.push(octets | 0x80);\n  while (--octets) {\n    arr.push((len >>> (octets << 3)) & 0xff);\n  }\n  arr.push(len);\n}\n\nSignature.prototype.toDER = function toDER(enc) {\n  var r = this.r.toArray();\n  var s = this.s.toArray();\n\n  // Pad values\n  if (r[0] & 0x80)\n    r = [ 0 ].concat(r);\n  // Pad values\n  if (s[0] & 0x80)\n    s = [ 0 ].concat(s);\n\n  r = rmPadding(r);\n  s = rmPadding(s);\n\n  while (!s[0] && !(s[1] & 0x80)) {\n    s = s.slice(1);\n  }\n  var arr = [ 0x02 ];\n  constructLength(arr, r.length);\n  arr = arr.concat(r);\n  arr.push(0x02);\n  constructLength(arr, s.length);\n  var backHalf = arr.concat(s);\n  var res = [ 0x30 ];\n  constructLength(res, backHalf.length);\n  res = res.concat(backHalf);\n  return utils.encode(res, enc);\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar HmacDRBG = require('hmac-drbg');\nvar utils = require('../utils');\nvar curves = require('../curves');\nvar rand = require('brorand');\nvar assert = utils.assert;\n\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EC(options) {\n  if (!(this instanceof EC))\n    return new EC(options);\n\n  // Shortcut `elliptic.ec(curve-name)`\n  if (typeof options === 'string') {\n    assert(Object.prototype.hasOwnProperty.call(curves, options),\n      'Unknown curve ' + options);\n\n    options = curves[options];\n  }\n\n  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`\n  if (options instanceof curves.PresetCurve)\n    options = { curve: options };\n\n  this.curve = options.curve.curve;\n  this.n = this.curve.n;\n  this.nh = this.n.ushrn(1);\n  this.g = this.curve.g;\n\n  // Point on curve\n  this.g = options.curve.g;\n  this.g.precompute(options.curve.n.bitLength() + 1);\n\n  // Hash for function for DRBG\n  this.hash = options.hash || options.curve.hash;\n}\nmodule.exports = EC;\n\nEC.prototype.keyPair = function keyPair(options) {\n  return new KeyPair(this, options);\n};\n\nEC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {\n  return KeyPair.fromPrivate(this, priv, enc);\n};\n\nEC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {\n  return KeyPair.fromPublic(this, pub, enc);\n};\n\nEC.prototype.genKeyPair = function genKeyPair(options) {\n  if (!options)\n    options = {};\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n    entropy: options.entropy || rand(this.hash.hmacStrength),\n    entropyEnc: options.entropy && options.entropyEnc || 'utf8',\n    nonce: this.n.toArray(),\n  });\n\n  var bytes = this.n.byteLength();\n  var ns2 = this.n.sub(new BN(2));\n  for (;;) {\n    var priv = new BN(drbg.generate(bytes));\n    if (priv.cmp(ns2) > 0)\n      continue;\n\n    priv.iaddn(1);\n    return this.keyFromPrivate(priv);\n  }\n};\n\nEC.prototype._truncateToN = function _truncateToN(msg, truncOnly) {\n  var delta = msg.byteLength() * 8 - this.n.bitLength();\n  if (delta > 0)\n    msg = msg.ushrn(delta);\n  if (!truncOnly && msg.cmp(this.n) >= 0)\n    return msg.sub(this.n);\n  else\n    return msg;\n};\n\nEC.prototype.sign = function sign(msg, key, enc, options) {\n  if (typeof enc === 'object') {\n    options = enc;\n    enc = null;\n  }\n  if (!options)\n    options = {};\n\n  key = this.keyFromPrivate(key, enc);\n  msg = this._truncateToN(new BN(msg, 16));\n\n  // Zero-extend key to provide enough entropy\n  var bytes = this.n.byteLength();\n  var bkey = key.getPrivate().toArray('be', bytes);\n\n  // Zero-extend nonce to have the same byte size as N\n  var nonce = msg.toArray('be', bytes);\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    entropy: bkey,\n    nonce: nonce,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n  });\n\n  // Number of bytes to generate\n  var ns1 = this.n.sub(new BN(1));\n\n  for (var iter = 0; ; iter++) {\n    var k = options.k ?\n      options.k(iter) :\n      new BN(drbg.generate(this.n.byteLength()));\n    k = this._truncateToN(k, true);\n    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)\n      continue;\n\n    var kp = this.g.mul(k);\n    if (kp.isInfinity())\n      continue;\n\n    var kpX = kp.getX();\n    var r = kpX.umod(this.n);\n    if (r.cmpn(0) === 0)\n      continue;\n\n    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));\n    s = s.umod(this.n);\n    if (s.cmpn(0) === 0)\n      continue;\n\n    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |\n                        (kpX.cmp(r) !== 0 ? 2 : 0);\n\n    // Use complement of `s`, if it is > `n / 2`\n    if (options.canonical && s.cmp(this.nh) > 0) {\n      s = this.n.sub(s);\n      recoveryParam ^= 1;\n    }\n\n    return new Signature({ r: r, s: s, recoveryParam: recoveryParam });\n  }\n};\n\nEC.prototype.verify = function verify(msg, signature, key, enc) {\n  msg = this._truncateToN(new BN(msg, 16));\n  key = this.keyFromPublic(key, enc);\n  signature = new Signature(signature, 'hex');\n\n  // Perform primitive values validation\n  var r = signature.r;\n  var s = signature.s;\n  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)\n    return false;\n  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)\n    return false;\n\n  // Validate signature\n  var sinv = s.invm(this.n);\n  var u1 = sinv.mul(msg).umod(this.n);\n  var u2 = sinv.mul(r).umod(this.n);\n  var p;\n\n  if (!this.curve._maxwellTrick) {\n    p = this.g.mulAdd(u1, key.getPublic(), u2);\n    if (p.isInfinity())\n      return false;\n\n    return p.getX().umod(this.n).cmp(r) === 0;\n  }\n\n  // NOTE: Greg Maxwell's trick, inspired by:\n  // https://git.io/vad3K\n\n  p = this.g.jmulAdd(u1, key.getPublic(), u2);\n  if (p.isInfinity())\n    return false;\n\n  // Compare `p.x` of Jacobian point with `r`,\n  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the\n  // inverse of `p.z^2`\n  return p.eqXToP(r);\n};\n\nEC.prototype.recoverPubKey = function(msg, signature, j, enc) {\n  assert((3 & j) === j, 'The recovery param is more than two bits');\n  signature = new Signature(signature, enc);\n\n  var n = this.n;\n  var e = new BN(msg);\n  var r = signature.r;\n  var s = signature.s;\n\n  // A set LSB signifies that the y-coordinate is odd\n  var isYOdd = j & 1;\n  var isSecondKey = j >> 1;\n  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)\n    throw new Error('Unable to find sencond key candinate');\n\n  // 1.1. Let x = r + jn.\n  if (isSecondKey)\n    r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);\n  else\n    r = this.curve.pointFromX(r, isYOdd);\n\n  var rInv = signature.r.invm(n);\n  var s1 = n.sub(e).mul(rInv).umod(n);\n  var s2 = s.mul(rInv).umod(n);\n\n  // 1.6.1 Compute Q = r^-1 (sR -  eG)\n  //               Q = r^-1 (sR + -eG)\n  return this.g.mulAdd(s1, r, s2);\n};\n\nEC.prototype.getKeyRecoveryParam = function(e, signature, Q, enc) {\n  signature = new Signature(signature, enc);\n  if (signature.recoveryParam !== null)\n    return signature.recoveryParam;\n\n  for (var i = 0; i < 4; i++) {\n    var Qprime;\n    try {\n      Qprime = this.recoverPubKey(e, signature, i);\n    } catch (e) {\n      continue;\n    }\n\n    if (Qprime.eq(Q))\n      return i;\n  }\n  throw new Error('Unable to find valid recovery factor');\n};\n","'use strict';\n\nvar elliptic = exports;\n\nelliptic.version = require('../package.json').version;\nelliptic.utils = require('./elliptic/utils');\nelliptic.rand = require('brorand');\nelliptic.curve = require('./elliptic/curve');\nelliptic.curves = require('./elliptic/curves');\n\n// Protocols\nelliptic.ec = require('./elliptic/ec');\nelliptic.eddsa = require('./elliptic/eddsa');\n","import _ec from \"elliptic\";\nvar EC = _ec.ec;\nexport { EC };\n//# sourceMappingURL=elliptic.js.map","export const version = \"signing-key/5.7.0\";\n","\"use strict\";\n\nimport { EC } from \"./elliptic\";\n\nimport { arrayify, BytesLike, hexDataLength, hexlify, hexZeroPad, Signature, SignatureLike, splitSignature } from \"@ethersproject/bytes\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nlet _curve: EC = null\nfunction getCurve() {\n    if (!_curve) {\n        _curve = new EC(\"secp256k1\");\n    }\n    return _curve;\n}\n\nexport class SigningKey {\n\n    readonly curve: string;\n\n    readonly privateKey: string;\n    readonly publicKey: string;\n    readonly compressedPublicKey: string;\n\n    //readonly address: string;\n\n    readonly _isSigningKey: boolean;\n\n    constructor(privateKey: BytesLike) {\n        defineReadOnly(this, \"curve\", \"secp256k1\");\n\n        defineReadOnly(this, \"privateKey\", hexlify(privateKey));\n        if (hexDataLength(this.privateKey) !== 32) {\n            logger.throwArgumentError(\"invalid private key\", \"privateKey\", \"[[ REDACTED ]]\");\n        }\n\n        const keyPair = getCurve().keyFromPrivate(arrayify(this.privateKey));\n\n        defineReadOnly(this, \"publicKey\", \"0x\" + keyPair.getPublic(false, \"hex\"));\n        defineReadOnly(this, \"compressedPublicKey\", \"0x\" + keyPair.getPublic(true, \"hex\"));\n\n        defineReadOnly(this, \"_isSigningKey\", true);\n    }\n\n    _addPoint(other: BytesLike): string {\n        const p0 =  getCurve().keyFromPublic(arrayify(this.publicKey));\n        const p1 =  getCurve().keyFromPublic(arrayify(other));\n        return \"0x\" + p0.pub.add(p1.pub).encodeCompressed(\"hex\");\n    }\n\n    signDigest(digest: BytesLike): Signature {\n        const keyPair = getCurve().keyFromPrivate(arrayify(this.privateKey));\n        const digestBytes = arrayify(digest);\n        if (digestBytes.length !== 32) {\n            logger.throwArgumentError(\"bad digest length\", \"digest\", digest);\n        }\n        const signature = keyPair.sign(digestBytes, { canonical: true });\n        return splitSignature({\n            recoveryParam: signature.recoveryParam,\n            r: hexZeroPad(\"0x\" + signature.r.toString(16), 32),\n            s: hexZeroPad(\"0x\" + signature.s.toString(16), 32),\n        })\n    }\n\n    computeSharedSecret(otherKey: BytesLike): string {\n        const keyPair = getCurve().keyFromPrivate(arrayify(this.privateKey));\n        const otherKeyPair = getCurve().keyFromPublic(arrayify(computePublicKey(otherKey)));\n        return hexZeroPad(\"0x\" + keyPair.derive(otherKeyPair.getPublic()).toString(16), 32);\n    }\n\n    static isSigningKey(value: any): value is SigningKey {\n        return !!(value && value._isSigningKey);\n    }\n}\n\nexport function recoverPublicKey(digest: BytesLike, signature: SignatureLike): string {\n    const sig = splitSignature(signature);\n    const rs = { r: arrayify(sig.r), s: arrayify(sig.s) };\n    return \"0x\" + getCurve().recoverPubKey(arrayify(digest), rs, sig.recoveryParam).encode(\"hex\", false);\n}\n\nexport function computePublicKey(key: BytesLike, compressed?: boolean): string {\n    const bytes = arrayify(key);\n\n    if (bytes.length === 32) {\n        const signingKey = new SigningKey(bytes);\n        if (compressed) {\n            return \"0x\" + getCurve().keyFromPrivate(bytes).getPublic(true, \"hex\");\n        }\n        return signingKey.publicKey;\n\n    } else if (bytes.length === 33) {\n        if (compressed) { return hexlify(bytes); }\n        return \"0x\" + getCurve().keyFromPublic(bytes).getPublic(false, \"hex\");\n\n    } else if (bytes.length === 65) {\n        if (!compressed) { return hexlify(bytes); }\n        return \"0x\" + getCurve().keyFromPublic(bytes).getPublic(true, \"hex\");\n    }\n\n    return logger.throwArgumentError(\"invalid public or private key\", \"key\", \"[REDACTED]\");\n}\n\n","\"use strict\";\n\n(function(root) {\n\n    function checkInt(value) {\n        return (parseInt(value) === value);\n    }\n\n    function checkInts(arrayish) {\n        if (!checkInt(arrayish.length)) { return false; }\n\n        for (var i = 0; i < arrayish.length; i++) {\n            if (!checkInt(arrayish[i]) || arrayish[i] < 0 || arrayish[i] > 255) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    function coerceArray(arg, copy) {\n\n        // ArrayBuffer view\n        if (arg.buffer && ArrayBuffer.isView(arg) && arg.name === 'Uint8Array') {\n\n            if (copy) {\n                if (arg.slice) {\n                    arg = arg.slice();\n                } else {\n                    arg = Array.prototype.slice.call(arg);\n                }\n            }\n\n            return arg;\n        }\n\n        // It's an array; check it is a valid representation of a byte\n        if (Array.isArray(arg)) {\n            if (!checkInts(arg)) {\n                throw new Error('Array contains invalid value: ' + arg);\n            }\n\n            return new Uint8Array(arg);\n        }\n\n        // Something else, but behaves like an array (maybe a Buffer? Arguments?)\n        if (checkInt(arg.length) && checkInts(arg)) {\n            return new Uint8Array(arg);\n        }\n\n        throw new Error('unsupported array-like object');\n    }\n\n    function createArray(length) {\n        return new Uint8Array(length);\n    }\n\n    function copyArray(sourceArray, targetArray, targetStart, sourceStart, sourceEnd) {\n        if (sourceStart != null || sourceEnd != null) {\n            if (sourceArray.slice) {\n                sourceArray = sourceArray.slice(sourceStart, sourceEnd);\n            } else {\n                sourceArray = Array.prototype.slice.call(sourceArray, sourceStart, sourceEnd);\n            }\n        }\n        targetArray.set(sourceArray, targetStart);\n    }\n\n\n\n    var convertUtf8 = (function() {\n        function toBytes(text) {\n            var result = [], i = 0;\n            text = encodeURI(text);\n            while (i < text.length) {\n                var c = text.charCodeAt(i++);\n\n                // if it is a % sign, encode the following 2 bytes as a hex value\n                if (c === 37) {\n                    result.push(parseInt(text.substr(i, 2), 16))\n                    i += 2;\n\n                // otherwise, just the actual byte\n                } else {\n                    result.push(c)\n                }\n            }\n\n            return coerceArray(result);\n        }\n\n        function fromBytes(bytes) {\n            var result = [], i = 0;\n\n            while (i < bytes.length) {\n                var c = bytes[i];\n\n                if (c < 128) {\n                    result.push(String.fromCharCode(c));\n                    i++;\n                } else if (c > 191 && c < 224) {\n                    result.push(String.fromCharCode(((c & 0x1f) << 6) | (bytes[i + 1] & 0x3f)));\n                    i += 2;\n                } else {\n                    result.push(String.fromCharCode(((c & 0x0f) << 12) | ((bytes[i + 1] & 0x3f) << 6) | (bytes[i + 2] & 0x3f)));\n                    i += 3;\n                }\n            }\n\n            return result.join('');\n        }\n\n        return {\n            toBytes: toBytes,\n            fromBytes: fromBytes,\n        }\n    })();\n\n    var convertHex = (function() {\n        function toBytes(text) {\n            var result = [];\n            for (var i = 0; i < text.length; i += 2) {\n                result.push(parseInt(text.substr(i, 2), 16));\n            }\n\n            return result;\n        }\n\n        // http://ixti.net/development/javascript/2011/11/11/base64-encodedecode-of-utf8-in-browser-with-js.html\n        var Hex = '0123456789abcdef';\n\n        function fromBytes(bytes) {\n                var result = [];\n                for (var i = 0; i < bytes.length; i++) {\n                    var v = bytes[i];\n                    result.push(Hex[(v & 0xf0) >> 4] + Hex[v & 0x0f]);\n                }\n                return result.join('');\n        }\n\n        return {\n            toBytes: toBytes,\n            fromBytes: fromBytes,\n        }\n    })();\n\n\n    // Number of rounds by keysize\n    var numberOfRounds = {16: 10, 24: 12, 32: 14}\n\n    // Round constant words\n    var rcon = [0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91];\n\n    // S-box and Inverse S-box (S is for Substitution)\n    var S = [0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16];\n    var Si =[0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d];\n\n    // Transformations for encryption\n    var T1 = [0xc66363a5, 0xf87c7c84, 0xee777799, 0xf67b7b8d, 0xfff2f20d, 0xd66b6bbd, 0xde6f6fb1, 0x91c5c554, 0x60303050, 0x02010103, 0xce6767a9, 0x562b2b7d, 0xe7fefe19, 0xb5d7d762, 0x4dababe6, 0xec76769a, 0x8fcaca45, 0x1f82829d, 0x89c9c940, 0xfa7d7d87, 0xeffafa15, 0xb25959eb, 0x8e4747c9, 0xfbf0f00b, 0x41adadec, 0xb3d4d467, 0x5fa2a2fd, 0x45afafea, 0x239c9cbf, 0x53a4a4f7, 0xe4727296, 0x9bc0c05b, 0x75b7b7c2, 0xe1fdfd1c, 0x3d9393ae, 0x4c26266a, 0x6c36365a, 0x7e3f3f41, 0xf5f7f702, 0x83cccc4f, 0x6834345c, 0x51a5a5f4, 0xd1e5e534, 0xf9f1f108, 0xe2717193, 0xabd8d873, 0x62313153, 0x2a15153f, 0x0804040c, 0x95c7c752, 0x46232365, 0x9dc3c35e, 0x30181828, 0x379696a1, 0x0a05050f, 0x2f9a9ab5, 0x0e070709, 0x24121236, 0x1b80809b, 0xdfe2e23d, 0xcdebeb26, 0x4e272769, 0x7fb2b2cd, 0xea75759f, 0x1209091b, 0x1d83839e, 0x582c2c74, 0x341a1a2e, 0x361b1b2d, 0xdc6e6eb2, 0xb45a5aee, 0x5ba0a0fb, 0xa45252f6, 0x763b3b4d, 0xb7d6d661, 0x7db3b3ce, 0x5229297b, 0xdde3e33e, 0x5e2f2f71, 0x13848497, 0xa65353f5, 0xb9d1d168, 0x00000000, 0xc1eded2c, 0x40202060, 0xe3fcfc1f, 0x79b1b1c8, 0xb65b5bed, 0xd46a6abe, 0x8dcbcb46, 0x67bebed9, 0x7239394b, 0x944a4ade, 0x984c4cd4, 0xb05858e8, 0x85cfcf4a, 0xbbd0d06b, 0xc5efef2a, 0x4faaaae5, 0xedfbfb16, 0x864343c5, 0x9a4d4dd7, 0x66333355, 0x11858594, 0x8a4545cf, 0xe9f9f910, 0x04020206, 0xfe7f7f81, 0xa05050f0, 0x783c3c44, 0x259f9fba, 0x4ba8a8e3, 0xa25151f3, 0x5da3a3fe, 0x804040c0, 0x058f8f8a, 0x3f9292ad, 0x219d9dbc, 0x70383848, 0xf1f5f504, 0x63bcbcdf, 0x77b6b6c1, 0xafdada75, 0x42212163, 0x20101030, 0xe5ffff1a, 0xfdf3f30e, 0xbfd2d26d, 0x81cdcd4c, 0x180c0c14, 0x26131335, 0xc3ecec2f, 0xbe5f5fe1, 0x359797a2, 0x884444cc, 0x2e171739, 0x93c4c457, 0x55a7a7f2, 0xfc7e7e82, 0x7a3d3d47, 0xc86464ac, 0xba5d5de7, 0x3219192b, 0xe6737395, 0xc06060a0, 0x19818198, 0x9e4f4fd1, 0xa3dcdc7f, 0x44222266, 0x542a2a7e, 0x3b9090ab, 0x0b888883, 0x8c4646ca, 0xc7eeee29, 0x6bb8b8d3, 0x2814143c, 0xa7dede79, 0xbc5e5ee2, 0x160b0b1d, 0xaddbdb76, 0xdbe0e03b, 0x64323256, 0x743a3a4e, 0x140a0a1e, 0x924949db, 0x0c06060a, 0x4824246c, 0xb85c5ce4, 0x9fc2c25d, 0xbdd3d36e, 0x43acacef, 0xc46262a6, 0x399191a8, 0x319595a4, 0xd3e4e437, 0xf279798b, 0xd5e7e732, 0x8bc8c843, 0x6e373759, 0xda6d6db7, 0x018d8d8c, 0xb1d5d564, 0x9c4e4ed2, 0x49a9a9e0, 0xd86c6cb4, 0xac5656fa, 0xf3f4f407, 0xcfeaea25, 0xca6565af, 0xf47a7a8e, 0x47aeaee9, 0x10080818, 0x6fbabad5, 0xf0787888, 0x4a25256f, 0x5c2e2e72, 0x381c1c24, 0x57a6a6f1, 0x73b4b4c7, 0x97c6c651, 0xcbe8e823, 0xa1dddd7c, 0xe874749c, 0x3e1f1f21, 0x964b4bdd, 0x61bdbddc, 0x0d8b8b86, 0x0f8a8a85, 0xe0707090, 0x7c3e3e42, 0x71b5b5c4, 0xcc6666aa, 0x904848d8, 0x06030305, 0xf7f6f601, 0x1c0e0e12, 0xc26161a3, 0x6a35355f, 0xae5757f9, 0x69b9b9d0, 0x17868691, 0x99c1c158, 0x3a1d1d27, 0x279e9eb9, 0xd9e1e138, 0xebf8f813, 0x2b9898b3, 0x22111133, 0xd26969bb, 0xa9d9d970, 0x078e8e89, 0x339494a7, 0x2d9b9bb6, 0x3c1e1e22, 0x15878792, 0xc9e9e920, 0x87cece49, 0xaa5555ff, 0x50282878, 0xa5dfdf7a, 0x038c8c8f, 0x59a1a1f8, 0x09898980, 0x1a0d0d17, 0x65bfbfda, 0xd7e6e631, 0x844242c6, 0xd06868b8, 0x824141c3, 0x299999b0, 0x5a2d2d77, 0x1e0f0f11, 0x7bb0b0cb, 0xa85454fc, 0x6dbbbbd6, 0x2c16163a];\n    var T2 = [0xa5c66363, 0x84f87c7c, 0x99ee7777, 0x8df67b7b, 0x0dfff2f2, 0xbdd66b6b, 0xb1de6f6f, 0x5491c5c5, 0x50603030, 0x03020101, 0xa9ce6767, 0x7d562b2b, 0x19e7fefe, 0x62b5d7d7, 0xe64dabab, 0x9aec7676, 0x458fcaca, 0x9d1f8282, 0x4089c9c9, 0x87fa7d7d, 0x15effafa, 0xebb25959, 0xc98e4747, 0x0bfbf0f0, 0xec41adad, 0x67b3d4d4, 0xfd5fa2a2, 0xea45afaf, 0xbf239c9c, 0xf753a4a4, 0x96e47272, 0x5b9bc0c0, 0xc275b7b7, 0x1ce1fdfd, 0xae3d9393, 0x6a4c2626, 0x5a6c3636, 0x417e3f3f, 0x02f5f7f7, 0x4f83cccc, 0x5c683434, 0xf451a5a5, 0x34d1e5e5, 0x08f9f1f1, 0x93e27171, 0x73abd8d8, 0x53623131, 0x3f2a1515, 0x0c080404, 0x5295c7c7, 0x65462323, 0x5e9dc3c3, 0x28301818, 0xa1379696, 0x0f0a0505, 0xb52f9a9a, 0x090e0707, 0x36241212, 0x9b1b8080, 0x3ddfe2e2, 0x26cdebeb, 0x694e2727, 0xcd7fb2b2, 0x9fea7575, 0x1b120909, 0x9e1d8383, 0x74582c2c, 0x2e341a1a, 0x2d361b1b, 0xb2dc6e6e, 0xeeb45a5a, 0xfb5ba0a0, 0xf6a45252, 0x4d763b3b, 0x61b7d6d6, 0xce7db3b3, 0x7b522929, 0x3edde3e3, 0x715e2f2f, 0x97138484, 0xf5a65353, 0x68b9d1d1, 0x00000000, 0x2cc1eded, 0x60402020, 0x1fe3fcfc, 0xc879b1b1, 0xedb65b5b, 0xbed46a6a, 0x468dcbcb, 0xd967bebe, 0x4b723939, 0xde944a4a, 0xd4984c4c, 0xe8b05858, 0x4a85cfcf, 0x6bbbd0d0, 0x2ac5efef, 0xe54faaaa, 0x16edfbfb, 0xc5864343, 0xd79a4d4d, 0x55663333, 0x94118585, 0xcf8a4545, 0x10e9f9f9, 0x06040202, 0x81fe7f7f, 0xf0a05050, 0x44783c3c, 0xba259f9f, 0xe34ba8a8, 0xf3a25151, 0xfe5da3a3, 0xc0804040, 0x8a058f8f, 0xad3f9292, 0xbc219d9d, 0x48703838, 0x04f1f5f5, 0xdf63bcbc, 0xc177b6b6, 0x75afdada, 0x63422121, 0x30201010, 0x1ae5ffff, 0x0efdf3f3, 0x6dbfd2d2, 0x4c81cdcd, 0x14180c0c, 0x35261313, 0x2fc3ecec, 0xe1be5f5f, 0xa2359797, 0xcc884444, 0x392e1717, 0x5793c4c4, 0xf255a7a7, 0x82fc7e7e, 0x477a3d3d, 0xacc86464, 0xe7ba5d5d, 0x2b321919, 0x95e67373, 0xa0c06060, 0x98198181, 0xd19e4f4f, 0x7fa3dcdc, 0x66442222, 0x7e542a2a, 0xab3b9090, 0x830b8888, 0xca8c4646, 0x29c7eeee, 0xd36bb8b8, 0x3c281414, 0x79a7dede, 0xe2bc5e5e, 0x1d160b0b, 0x76addbdb, 0x3bdbe0e0, 0x56643232, 0x4e743a3a, 0x1e140a0a, 0xdb924949, 0x0a0c0606, 0x6c482424, 0xe4b85c5c, 0x5d9fc2c2, 0x6ebdd3d3, 0xef43acac, 0xa6c46262, 0xa8399191, 0xa4319595, 0x37d3e4e4, 0x8bf27979, 0x32d5e7e7, 0x438bc8c8, 0x596e3737, 0xb7da6d6d, 0x8c018d8d, 0x64b1d5d5, 0xd29c4e4e, 0xe049a9a9, 0xb4d86c6c, 0xfaac5656, 0x07f3f4f4, 0x25cfeaea, 0xafca6565, 0x8ef47a7a, 0xe947aeae, 0x18100808, 0xd56fbaba, 0x88f07878, 0x6f4a2525, 0x725c2e2e, 0x24381c1c, 0xf157a6a6, 0xc773b4b4, 0x5197c6c6, 0x23cbe8e8, 0x7ca1dddd, 0x9ce87474, 0x213e1f1f, 0xdd964b4b, 0xdc61bdbd, 0x860d8b8b, 0x850f8a8a, 0x90e07070, 0x427c3e3e, 0xc471b5b5, 0xaacc6666, 0xd8904848, 0x05060303, 0x01f7f6f6, 0x121c0e0e, 0xa3c26161, 0x5f6a3535, 0xf9ae5757, 0xd069b9b9, 0x91178686, 0x5899c1c1, 0x273a1d1d, 0xb9279e9e, 0x38d9e1e1, 0x13ebf8f8, 0xb32b9898, 0x33221111, 0xbbd26969, 0x70a9d9d9, 0x89078e8e, 0xa7339494, 0xb62d9b9b, 0x223c1e1e, 0x92158787, 0x20c9e9e9, 0x4987cece, 0xffaa5555, 0x78502828, 0x7aa5dfdf, 0x8f038c8c, 0xf859a1a1, 0x80098989, 0x171a0d0d, 0xda65bfbf, 0x31d7e6e6, 0xc6844242, 0xb8d06868, 0xc3824141, 0xb0299999, 0x775a2d2d, 0x111e0f0f, 0xcb7bb0b0, 0xfca85454, 0xd66dbbbb, 0x3a2c1616];\n    var T3 = [0x63a5c663, 0x7c84f87c, 0x7799ee77, 0x7b8df67b, 0xf20dfff2, 0x6bbdd66b, 0x6fb1de6f, 0xc55491c5, 0x30506030, 0x01030201, 0x67a9ce67, 0x2b7d562b, 0xfe19e7fe, 0xd762b5d7, 0xabe64dab, 0x769aec76, 0xca458fca, 0x829d1f82, 0xc94089c9, 0x7d87fa7d, 0xfa15effa, 0x59ebb259, 0x47c98e47, 0xf00bfbf0, 0xadec41ad, 0xd467b3d4, 0xa2fd5fa2, 0xafea45af, 0x9cbf239c, 0xa4f753a4, 0x7296e472, 0xc05b9bc0, 0xb7c275b7, 0xfd1ce1fd, 0x93ae3d93, 0x266a4c26, 0x365a6c36, 0x3f417e3f, 0xf702f5f7, 0xcc4f83cc, 0x345c6834, 0xa5f451a5, 0xe534d1e5, 0xf108f9f1, 0x7193e271, 0xd873abd8, 0x31536231, 0x153f2a15, 0x040c0804, 0xc75295c7, 0x23654623, 0xc35e9dc3, 0x18283018, 0x96a13796, 0x050f0a05, 0x9ab52f9a, 0x07090e07, 0x12362412, 0x809b1b80, 0xe23ddfe2, 0xeb26cdeb, 0x27694e27, 0xb2cd7fb2, 0x759fea75, 0x091b1209, 0x839e1d83, 0x2c74582c, 0x1a2e341a, 0x1b2d361b, 0x6eb2dc6e, 0x5aeeb45a, 0xa0fb5ba0, 0x52f6a452, 0x3b4d763b, 0xd661b7d6, 0xb3ce7db3, 0x297b5229, 0xe33edde3, 0x2f715e2f, 0x84971384, 0x53f5a653, 0xd168b9d1, 0x00000000, 0xed2cc1ed, 0x20604020, 0xfc1fe3fc, 0xb1c879b1, 0x5bedb65b, 0x6abed46a, 0xcb468dcb, 0xbed967be, 0x394b7239, 0x4ade944a, 0x4cd4984c, 0x58e8b058, 0xcf4a85cf, 0xd06bbbd0, 0xef2ac5ef, 0xaae54faa, 0xfb16edfb, 0x43c58643, 0x4dd79a4d, 0x33556633, 0x85941185, 0x45cf8a45, 0xf910e9f9, 0x02060402, 0x7f81fe7f, 0x50f0a050, 0x3c44783c, 0x9fba259f, 0xa8e34ba8, 0x51f3a251, 0xa3fe5da3, 0x40c08040, 0x8f8a058f, 0x92ad3f92, 0x9dbc219d, 0x38487038, 0xf504f1f5, 0xbcdf63bc, 0xb6c177b6, 0xda75afda, 0x21634221, 0x10302010, 0xff1ae5ff, 0xf30efdf3, 0xd26dbfd2, 0xcd4c81cd, 0x0c14180c, 0x13352613, 0xec2fc3ec, 0x5fe1be5f, 0x97a23597, 0x44cc8844, 0x17392e17, 0xc45793c4, 0xa7f255a7, 0x7e82fc7e, 0x3d477a3d, 0x64acc864, 0x5de7ba5d, 0x192b3219, 0x7395e673, 0x60a0c060, 0x81981981, 0x4fd19e4f, 0xdc7fa3dc, 0x22664422, 0x2a7e542a, 0x90ab3b90, 0x88830b88, 0x46ca8c46, 0xee29c7ee, 0xb8d36bb8, 0x143c2814, 0xde79a7de, 0x5ee2bc5e, 0x0b1d160b, 0xdb76addb, 0xe03bdbe0, 0x32566432, 0x3a4e743a, 0x0a1e140a, 0x49db9249, 0x060a0c06, 0x246c4824, 0x5ce4b85c, 0xc25d9fc2, 0xd36ebdd3, 0xacef43ac, 0x62a6c462, 0x91a83991, 0x95a43195, 0xe437d3e4, 0x798bf279, 0xe732d5e7, 0xc8438bc8, 0x37596e37, 0x6db7da6d, 0x8d8c018d, 0xd564b1d5, 0x4ed29c4e, 0xa9e049a9, 0x6cb4d86c, 0x56faac56, 0xf407f3f4, 0xea25cfea, 0x65afca65, 0x7a8ef47a, 0xaee947ae, 0x08181008, 0xbad56fba, 0x7888f078, 0x256f4a25, 0x2e725c2e, 0x1c24381c, 0xa6f157a6, 0xb4c773b4, 0xc65197c6, 0xe823cbe8, 0xdd7ca1dd, 0x749ce874, 0x1f213e1f, 0x4bdd964b, 0xbddc61bd, 0x8b860d8b, 0x8a850f8a, 0x7090e070, 0x3e427c3e, 0xb5c471b5, 0x66aacc66, 0x48d89048, 0x03050603, 0xf601f7f6, 0x0e121c0e, 0x61a3c261, 0x355f6a35, 0x57f9ae57, 0xb9d069b9, 0x86911786, 0xc15899c1, 0x1d273a1d, 0x9eb9279e, 0xe138d9e1, 0xf813ebf8, 0x98b32b98, 0x11332211, 0x69bbd269, 0xd970a9d9, 0x8e89078e, 0x94a73394, 0x9bb62d9b, 0x1e223c1e, 0x87921587, 0xe920c9e9, 0xce4987ce, 0x55ffaa55, 0x28785028, 0xdf7aa5df, 0x8c8f038c, 0xa1f859a1, 0x89800989, 0x0d171a0d, 0xbfda65bf, 0xe631d7e6, 0x42c68442, 0x68b8d068, 0x41c38241, 0x99b02999, 0x2d775a2d, 0x0f111e0f, 0xb0cb7bb0, 0x54fca854, 0xbbd66dbb, 0x163a2c16];\n    var T4 = [0x6363a5c6, 0x7c7c84f8, 0x777799ee, 0x7b7b8df6, 0xf2f20dff, 0x6b6bbdd6, 0x6f6fb1de, 0xc5c55491, 0x30305060, 0x01010302, 0x6767a9ce, 0x2b2b7d56, 0xfefe19e7, 0xd7d762b5, 0xababe64d, 0x76769aec, 0xcaca458f, 0x82829d1f, 0xc9c94089, 0x7d7d87fa, 0xfafa15ef, 0x5959ebb2, 0x4747c98e, 0xf0f00bfb, 0xadadec41, 0xd4d467b3, 0xa2a2fd5f, 0xafafea45, 0x9c9cbf23, 0xa4a4f753, 0x727296e4, 0xc0c05b9b, 0xb7b7c275, 0xfdfd1ce1, 0x9393ae3d, 0x26266a4c, 0x36365a6c, 0x3f3f417e, 0xf7f702f5, 0xcccc4f83, 0x34345c68, 0xa5a5f451, 0xe5e534d1, 0xf1f108f9, 0x717193e2, 0xd8d873ab, 0x31315362, 0x15153f2a, 0x04040c08, 0xc7c75295, 0x23236546, 0xc3c35e9d, 0x18182830, 0x9696a137, 0x05050f0a, 0x9a9ab52f, 0x0707090e, 0x12123624, 0x80809b1b, 0xe2e23ddf, 0xebeb26cd, 0x2727694e, 0xb2b2cd7f, 0x75759fea, 0x09091b12, 0x83839e1d, 0x2c2c7458, 0x1a1a2e34, 0x1b1b2d36, 0x6e6eb2dc, 0x5a5aeeb4, 0xa0a0fb5b, 0x5252f6a4, 0x3b3b4d76, 0xd6d661b7, 0xb3b3ce7d, 0x29297b52, 0xe3e33edd, 0x2f2f715e, 0x84849713, 0x5353f5a6, 0xd1d168b9, 0x00000000, 0xeded2cc1, 0x20206040, 0xfcfc1fe3, 0xb1b1c879, 0x5b5bedb6, 0x6a6abed4, 0xcbcb468d, 0xbebed967, 0x39394b72, 0x4a4ade94, 0x4c4cd498, 0x5858e8b0, 0xcfcf4a85, 0xd0d06bbb, 0xefef2ac5, 0xaaaae54f, 0xfbfb16ed, 0x4343c586, 0x4d4dd79a, 0x33335566, 0x85859411, 0x4545cf8a, 0xf9f910e9, 0x02020604, 0x7f7f81fe, 0x5050f0a0, 0x3c3c4478, 0x9f9fba25, 0xa8a8e34b, 0x5151f3a2, 0xa3a3fe5d, 0x4040c080, 0x8f8f8a05, 0x9292ad3f, 0x9d9dbc21, 0x38384870, 0xf5f504f1, 0xbcbcdf63, 0xb6b6c177, 0xdada75af, 0x21216342, 0x10103020, 0xffff1ae5, 0xf3f30efd, 0xd2d26dbf, 0xcdcd4c81, 0x0c0c1418, 0x13133526, 0xecec2fc3, 0x5f5fe1be, 0x9797a235, 0x4444cc88, 0x1717392e, 0xc4c45793, 0xa7a7f255, 0x7e7e82fc, 0x3d3d477a, 0x6464acc8, 0x5d5de7ba, 0x19192b32, 0x737395e6, 0x6060a0c0, 0x81819819, 0x4f4fd19e, 0xdcdc7fa3, 0x22226644, 0x2a2a7e54, 0x9090ab3b, 0x8888830b, 0x4646ca8c, 0xeeee29c7, 0xb8b8d36b, 0x14143c28, 0xdede79a7, 0x5e5ee2bc, 0x0b0b1d16, 0xdbdb76ad, 0xe0e03bdb, 0x32325664, 0x3a3a4e74, 0x0a0a1e14, 0x4949db92, 0x06060a0c, 0x24246c48, 0x5c5ce4b8, 0xc2c25d9f, 0xd3d36ebd, 0xacacef43, 0x6262a6c4, 0x9191a839, 0x9595a431, 0xe4e437d3, 0x79798bf2, 0xe7e732d5, 0xc8c8438b, 0x3737596e, 0x6d6db7da, 0x8d8d8c01, 0xd5d564b1, 0x4e4ed29c, 0xa9a9e049, 0x6c6cb4d8, 0x5656faac, 0xf4f407f3, 0xeaea25cf, 0x6565afca, 0x7a7a8ef4, 0xaeaee947, 0x08081810, 0xbabad56f, 0x787888f0, 0x25256f4a, 0x2e2e725c, 0x1c1c2438, 0xa6a6f157, 0xb4b4c773, 0xc6c65197, 0xe8e823cb, 0xdddd7ca1, 0x74749ce8, 0x1f1f213e, 0x4b4bdd96, 0xbdbddc61, 0x8b8b860d, 0x8a8a850f, 0x707090e0, 0x3e3e427c, 0xb5b5c471, 0x6666aacc, 0x4848d890, 0x03030506, 0xf6f601f7, 0x0e0e121c, 0x6161a3c2, 0x35355f6a, 0x5757f9ae, 0xb9b9d069, 0x86869117, 0xc1c15899, 0x1d1d273a, 0x9e9eb927, 0xe1e138d9, 0xf8f813eb, 0x9898b32b, 0x11113322, 0x6969bbd2, 0xd9d970a9, 0x8e8e8907, 0x9494a733, 0x9b9bb62d, 0x1e1e223c, 0x87879215, 0xe9e920c9, 0xcece4987, 0x5555ffaa, 0x28287850, 0xdfdf7aa5, 0x8c8c8f03, 0xa1a1f859, 0x89898009, 0x0d0d171a, 0xbfbfda65, 0xe6e631d7, 0x4242c684, 0x6868b8d0, 0x4141c382, 0x9999b029, 0x2d2d775a, 0x0f0f111e, 0xb0b0cb7b, 0x5454fca8, 0xbbbbd66d, 0x16163a2c];\n\n    // Transformations for decryption\n    var T5 = [0x51f4a750, 0x7e416553, 0x1a17a4c3, 0x3a275e96, 0x3bab6bcb, 0x1f9d45f1, 0xacfa58ab, 0x4be30393, 0x2030fa55, 0xad766df6, 0x88cc7691, 0xf5024c25, 0x4fe5d7fc, 0xc52acbd7, 0x26354480, 0xb562a38f, 0xdeb15a49, 0x25ba1b67, 0x45ea0e98, 0x5dfec0e1, 0xc32f7502, 0x814cf012, 0x8d4697a3, 0x6bd3f9c6, 0x038f5fe7, 0x15929c95, 0xbf6d7aeb, 0x955259da, 0xd4be832d, 0x587421d3, 0x49e06929, 0x8ec9c844, 0x75c2896a, 0xf48e7978, 0x99583e6b, 0x27b971dd, 0xbee14fb6, 0xf088ad17, 0xc920ac66, 0x7dce3ab4, 0x63df4a18, 0xe51a3182, 0x97513360, 0x62537f45, 0xb16477e0, 0xbb6bae84, 0xfe81a01c, 0xf9082b94, 0x70486858, 0x8f45fd19, 0x94de6c87, 0x527bf8b7, 0xab73d323, 0x724b02e2, 0xe31f8f57, 0x6655ab2a, 0xb2eb2807, 0x2fb5c203, 0x86c57b9a, 0xd33708a5, 0x302887f2, 0x23bfa5b2, 0x02036aba, 0xed16825c, 0x8acf1c2b, 0xa779b492, 0xf307f2f0, 0x4e69e2a1, 0x65daf4cd, 0x0605bed5, 0xd134621f, 0xc4a6fe8a, 0x342e539d, 0xa2f355a0, 0x058ae132, 0xa4f6eb75, 0x0b83ec39, 0x4060efaa, 0x5e719f06, 0xbd6e1051, 0x3e218af9, 0x96dd063d, 0xdd3e05ae, 0x4de6bd46, 0x91548db5, 0x71c45d05, 0x0406d46f, 0x605015ff, 0x1998fb24, 0xd6bde997, 0x894043cc, 0x67d99e77, 0xb0e842bd, 0x07898b88, 0xe7195b38, 0x79c8eedb, 0xa17c0a47, 0x7c420fe9, 0xf8841ec9, 0x00000000, 0x09808683, 0x322bed48, 0x1e1170ac, 0x6c5a724e, 0xfd0efffb, 0x0f853856, 0x3daed51e, 0x362d3927, 0x0a0fd964, 0x685ca621, 0x9b5b54d1, 0x24362e3a, 0x0c0a67b1, 0x9357e70f, 0xb4ee96d2, 0x1b9b919e, 0x80c0c54f, 0x61dc20a2, 0x5a774b69, 0x1c121a16, 0xe293ba0a, 0xc0a02ae5, 0x3c22e043, 0x121b171d, 0x0e090d0b, 0xf28bc7ad, 0x2db6a8b9, 0x141ea9c8, 0x57f11985, 0xaf75074c, 0xee99ddbb, 0xa37f60fd, 0xf701269f, 0x5c72f5bc, 0x44663bc5, 0x5bfb7e34, 0x8b432976, 0xcb23c6dc, 0xb6edfc68, 0xb8e4f163, 0xd731dcca, 0x42638510, 0x13972240, 0x84c61120, 0x854a247d, 0xd2bb3df8, 0xaef93211, 0xc729a16d, 0x1d9e2f4b, 0xdcb230f3, 0x0d8652ec, 0x77c1e3d0, 0x2bb3166c, 0xa970b999, 0x119448fa, 0x47e96422, 0xa8fc8cc4, 0xa0f03f1a, 0x567d2cd8, 0x223390ef, 0x87494ec7, 0xd938d1c1, 0x8ccaa2fe, 0x98d40b36, 0xa6f581cf, 0xa57ade28, 0xdab78e26, 0x3fadbfa4, 0x2c3a9de4, 0x5078920d, 0x6a5fcc9b, 0x547e4662, 0xf68d13c2, 0x90d8b8e8, 0x2e39f75e, 0x82c3aff5, 0x9f5d80be, 0x69d0937c, 0x6fd52da9, 0xcf2512b3, 0xc8ac993b, 0x10187da7, 0xe89c636e, 0xdb3bbb7b, 0xcd267809, 0x6e5918f4, 0xec9ab701, 0x834f9aa8, 0xe6956e65, 0xaaffe67e, 0x21bccf08, 0xef15e8e6, 0xbae79bd9, 0x4a6f36ce, 0xea9f09d4, 0x29b07cd6, 0x31a4b2af, 0x2a3f2331, 0xc6a59430, 0x35a266c0, 0x744ebc37, 0xfc82caa6, 0xe090d0b0, 0x33a7d815, 0xf104984a, 0x41ecdaf7, 0x7fcd500e, 0x1791f62f, 0x764dd68d, 0x43efb04d, 0xccaa4d54, 0xe49604df, 0x9ed1b5e3, 0x4c6a881b, 0xc12c1fb8, 0x4665517f, 0x9d5eea04, 0x018c355d, 0xfa877473, 0xfb0b412e, 0xb3671d5a, 0x92dbd252, 0xe9105633, 0x6dd64713, 0x9ad7618c, 0x37a10c7a, 0x59f8148e, 0xeb133c89, 0xcea927ee, 0xb761c935, 0xe11ce5ed, 0x7a47b13c, 0x9cd2df59, 0x55f2733f, 0x1814ce79, 0x73c737bf, 0x53f7cdea, 0x5ffdaa5b, 0xdf3d6f14, 0x7844db86, 0xcaaff381, 0xb968c43e, 0x3824342c, 0xc2a3405f, 0x161dc372, 0xbce2250c, 0x283c498b, 0xff0d9541, 0x39a80171, 0x080cb3de, 0xd8b4e49c, 0x6456c190, 0x7bcb8461, 0xd532b670, 0x486c5c74, 0xd0b85742];\n    var T6 = [0x5051f4a7, 0x537e4165, 0xc31a17a4, 0x963a275e, 0xcb3bab6b, 0xf11f9d45, 0xabacfa58, 0x934be303, 0x552030fa, 0xf6ad766d, 0x9188cc76, 0x25f5024c, 0xfc4fe5d7, 0xd7c52acb, 0x80263544, 0x8fb562a3, 0x49deb15a, 0x6725ba1b, 0x9845ea0e, 0xe15dfec0, 0x02c32f75, 0x12814cf0, 0xa38d4697, 0xc66bd3f9, 0xe7038f5f, 0x9515929c, 0xebbf6d7a, 0xda955259, 0x2dd4be83, 0xd3587421, 0x2949e069, 0x448ec9c8, 0x6a75c289, 0x78f48e79, 0x6b99583e, 0xdd27b971, 0xb6bee14f, 0x17f088ad, 0x66c920ac, 0xb47dce3a, 0x1863df4a, 0x82e51a31, 0x60975133, 0x4562537f, 0xe0b16477, 0x84bb6bae, 0x1cfe81a0, 0x94f9082b, 0x58704868, 0x198f45fd, 0x8794de6c, 0xb7527bf8, 0x23ab73d3, 0xe2724b02, 0x57e31f8f, 0x2a6655ab, 0x07b2eb28, 0x032fb5c2, 0x9a86c57b, 0xa5d33708, 0xf2302887, 0xb223bfa5, 0xba02036a, 0x5ced1682, 0x2b8acf1c, 0x92a779b4, 0xf0f307f2, 0xa14e69e2, 0xcd65daf4, 0xd50605be, 0x1fd13462, 0x8ac4a6fe, 0x9d342e53, 0xa0a2f355, 0x32058ae1, 0x75a4f6eb, 0x390b83ec, 0xaa4060ef, 0x065e719f, 0x51bd6e10, 0xf93e218a, 0x3d96dd06, 0xaedd3e05, 0x464de6bd, 0xb591548d, 0x0571c45d, 0x6f0406d4, 0xff605015, 0x241998fb, 0x97d6bde9, 0xcc894043, 0x7767d99e, 0xbdb0e842, 0x8807898b, 0x38e7195b, 0xdb79c8ee, 0x47a17c0a, 0xe97c420f, 0xc9f8841e, 0x00000000, 0x83098086, 0x48322bed, 0xac1e1170, 0x4e6c5a72, 0xfbfd0eff, 0x560f8538, 0x1e3daed5, 0x27362d39, 0x640a0fd9, 0x21685ca6, 0xd19b5b54, 0x3a24362e, 0xb10c0a67, 0x0f9357e7, 0xd2b4ee96, 0x9e1b9b91, 0x4f80c0c5, 0xa261dc20, 0x695a774b, 0x161c121a, 0x0ae293ba, 0xe5c0a02a, 0x433c22e0, 0x1d121b17, 0x0b0e090d, 0xadf28bc7, 0xb92db6a8, 0xc8141ea9, 0x8557f119, 0x4caf7507, 0xbbee99dd, 0xfda37f60, 0x9ff70126, 0xbc5c72f5, 0xc544663b, 0x345bfb7e, 0x768b4329, 0xdccb23c6, 0x68b6edfc, 0x63b8e4f1, 0xcad731dc, 0x10426385, 0x40139722, 0x2084c611, 0x7d854a24, 0xf8d2bb3d, 0x11aef932, 0x6dc729a1, 0x4b1d9e2f, 0xf3dcb230, 0xec0d8652, 0xd077c1e3, 0x6c2bb316, 0x99a970b9, 0xfa119448, 0x2247e964, 0xc4a8fc8c, 0x1aa0f03f, 0xd8567d2c, 0xef223390, 0xc787494e, 0xc1d938d1, 0xfe8ccaa2, 0x3698d40b, 0xcfa6f581, 0x28a57ade, 0x26dab78e, 0xa43fadbf, 0xe42c3a9d, 0x0d507892, 0x9b6a5fcc, 0x62547e46, 0xc2f68d13, 0xe890d8b8, 0x5e2e39f7, 0xf582c3af, 0xbe9f5d80, 0x7c69d093, 0xa96fd52d, 0xb3cf2512, 0x3bc8ac99, 0xa710187d, 0x6ee89c63, 0x7bdb3bbb, 0x09cd2678, 0xf46e5918, 0x01ec9ab7, 0xa8834f9a, 0x65e6956e, 0x7eaaffe6, 0x0821bccf, 0xe6ef15e8, 0xd9bae79b, 0xce4a6f36, 0xd4ea9f09, 0xd629b07c, 0xaf31a4b2, 0x312a3f23, 0x30c6a594, 0xc035a266, 0x37744ebc, 0xa6fc82ca, 0xb0e090d0, 0x1533a7d8, 0x4af10498, 0xf741ecda, 0x0e7fcd50, 0x2f1791f6, 0x8d764dd6, 0x4d43efb0, 0x54ccaa4d, 0xdfe49604, 0xe39ed1b5, 0x1b4c6a88, 0xb8c12c1f, 0x7f466551, 0x049d5eea, 0x5d018c35, 0x73fa8774, 0x2efb0b41, 0x5ab3671d, 0x5292dbd2, 0x33e91056, 0x136dd647, 0x8c9ad761, 0x7a37a10c, 0x8e59f814, 0x89eb133c, 0xeecea927, 0x35b761c9, 0xede11ce5, 0x3c7a47b1, 0x599cd2df, 0x3f55f273, 0x791814ce, 0xbf73c737, 0xea53f7cd, 0x5b5ffdaa, 0x14df3d6f, 0x867844db, 0x81caaff3, 0x3eb968c4, 0x2c382434, 0x5fc2a340, 0x72161dc3, 0x0cbce225, 0x8b283c49, 0x41ff0d95, 0x7139a801, 0xde080cb3, 0x9cd8b4e4, 0x906456c1, 0x617bcb84, 0x70d532b6, 0x74486c5c, 0x42d0b857];\n    var T7 = [0xa75051f4, 0x65537e41, 0xa4c31a17, 0x5e963a27, 0x6bcb3bab, 0x45f11f9d, 0x58abacfa, 0x03934be3, 0xfa552030, 0x6df6ad76, 0x769188cc, 0x4c25f502, 0xd7fc4fe5, 0xcbd7c52a, 0x44802635, 0xa38fb562, 0x5a49deb1, 0x1b6725ba, 0x0e9845ea, 0xc0e15dfe, 0x7502c32f, 0xf012814c, 0x97a38d46, 0xf9c66bd3, 0x5fe7038f, 0x9c951592, 0x7aebbf6d, 0x59da9552, 0x832dd4be, 0x21d35874, 0x692949e0, 0xc8448ec9, 0x896a75c2, 0x7978f48e, 0x3e6b9958, 0x71dd27b9, 0x4fb6bee1, 0xad17f088, 0xac66c920, 0x3ab47dce, 0x4a1863df, 0x3182e51a, 0x33609751, 0x7f456253, 0x77e0b164, 0xae84bb6b, 0xa01cfe81, 0x2b94f908, 0x68587048, 0xfd198f45, 0x6c8794de, 0xf8b7527b, 0xd323ab73, 0x02e2724b, 0x8f57e31f, 0xab2a6655, 0x2807b2eb, 0xc2032fb5, 0x7b9a86c5, 0x08a5d337, 0x87f23028, 0xa5b223bf, 0x6aba0203, 0x825ced16, 0x1c2b8acf, 0xb492a779, 0xf2f0f307, 0xe2a14e69, 0xf4cd65da, 0xbed50605, 0x621fd134, 0xfe8ac4a6, 0x539d342e, 0x55a0a2f3, 0xe132058a, 0xeb75a4f6, 0xec390b83, 0xefaa4060, 0x9f065e71, 0x1051bd6e, 0x8af93e21, 0x063d96dd, 0x05aedd3e, 0xbd464de6, 0x8db59154, 0x5d0571c4, 0xd46f0406, 0x15ff6050, 0xfb241998, 0xe997d6bd, 0x43cc8940, 0x9e7767d9, 0x42bdb0e8, 0x8b880789, 0x5b38e719, 0xeedb79c8, 0x0a47a17c, 0x0fe97c42, 0x1ec9f884, 0x00000000, 0x86830980, 0xed48322b, 0x70ac1e11, 0x724e6c5a, 0xfffbfd0e, 0x38560f85, 0xd51e3dae, 0x3927362d, 0xd9640a0f, 0xa621685c, 0x54d19b5b, 0x2e3a2436, 0x67b10c0a, 0xe70f9357, 0x96d2b4ee, 0x919e1b9b, 0xc54f80c0, 0x20a261dc, 0x4b695a77, 0x1a161c12, 0xba0ae293, 0x2ae5c0a0, 0xe0433c22, 0x171d121b, 0x0d0b0e09, 0xc7adf28b, 0xa8b92db6, 0xa9c8141e, 0x198557f1, 0x074caf75, 0xddbbee99, 0x60fda37f, 0x269ff701, 0xf5bc5c72, 0x3bc54466, 0x7e345bfb, 0x29768b43, 0xc6dccb23, 0xfc68b6ed, 0xf163b8e4, 0xdccad731, 0x85104263, 0x22401397, 0x112084c6, 0x247d854a, 0x3df8d2bb, 0x3211aef9, 0xa16dc729, 0x2f4b1d9e, 0x30f3dcb2, 0x52ec0d86, 0xe3d077c1, 0x166c2bb3, 0xb999a970, 0x48fa1194, 0x642247e9, 0x8cc4a8fc, 0x3f1aa0f0, 0x2cd8567d, 0x90ef2233, 0x4ec78749, 0xd1c1d938, 0xa2fe8cca, 0x0b3698d4, 0x81cfa6f5, 0xde28a57a, 0x8e26dab7, 0xbfa43fad, 0x9de42c3a, 0x920d5078, 0xcc9b6a5f, 0x4662547e, 0x13c2f68d, 0xb8e890d8, 0xf75e2e39, 0xaff582c3, 0x80be9f5d, 0x937c69d0, 0x2da96fd5, 0x12b3cf25, 0x993bc8ac, 0x7da71018, 0x636ee89c, 0xbb7bdb3b, 0x7809cd26, 0x18f46e59, 0xb701ec9a, 0x9aa8834f, 0x6e65e695, 0xe67eaaff, 0xcf0821bc, 0xe8e6ef15, 0x9bd9bae7, 0x36ce4a6f, 0x09d4ea9f, 0x7cd629b0, 0xb2af31a4, 0x23312a3f, 0x9430c6a5, 0x66c035a2, 0xbc37744e, 0xcaa6fc82, 0xd0b0e090, 0xd81533a7, 0x984af104, 0xdaf741ec, 0x500e7fcd, 0xf62f1791, 0xd68d764d, 0xb04d43ef, 0x4d54ccaa, 0x04dfe496, 0xb5e39ed1, 0x881b4c6a, 0x1fb8c12c, 0x517f4665, 0xea049d5e, 0x355d018c, 0x7473fa87, 0x412efb0b, 0x1d5ab367, 0xd25292db, 0x5633e910, 0x47136dd6, 0x618c9ad7, 0x0c7a37a1, 0x148e59f8, 0x3c89eb13, 0x27eecea9, 0xc935b761, 0xe5ede11c, 0xb13c7a47, 0xdf599cd2, 0x733f55f2, 0xce791814, 0x37bf73c7, 0xcdea53f7, 0xaa5b5ffd, 0x6f14df3d, 0xdb867844, 0xf381caaf, 0xc43eb968, 0x342c3824, 0x405fc2a3, 0xc372161d, 0x250cbce2, 0x498b283c, 0x9541ff0d, 0x017139a8, 0xb3de080c, 0xe49cd8b4, 0xc1906456, 0x84617bcb, 0xb670d532, 0x5c74486c, 0x5742d0b8];\n    var T8 = [0xf4a75051, 0x4165537e, 0x17a4c31a, 0x275e963a, 0xab6bcb3b, 0x9d45f11f, 0xfa58abac, 0xe303934b, 0x30fa5520, 0x766df6ad, 0xcc769188, 0x024c25f5, 0xe5d7fc4f, 0x2acbd7c5, 0x35448026, 0x62a38fb5, 0xb15a49de, 0xba1b6725, 0xea0e9845, 0xfec0e15d, 0x2f7502c3, 0x4cf01281, 0x4697a38d, 0xd3f9c66b, 0x8f5fe703, 0x929c9515, 0x6d7aebbf, 0x5259da95, 0xbe832dd4, 0x7421d358, 0xe0692949, 0xc9c8448e, 0xc2896a75, 0x8e7978f4, 0x583e6b99, 0xb971dd27, 0xe14fb6be, 0x88ad17f0, 0x20ac66c9, 0xce3ab47d, 0xdf4a1863, 0x1a3182e5, 0x51336097, 0x537f4562, 0x6477e0b1, 0x6bae84bb, 0x81a01cfe, 0x082b94f9, 0x48685870, 0x45fd198f, 0xde6c8794, 0x7bf8b752, 0x73d323ab, 0x4b02e272, 0x1f8f57e3, 0x55ab2a66, 0xeb2807b2, 0xb5c2032f, 0xc57b9a86, 0x3708a5d3, 0x2887f230, 0xbfa5b223, 0x036aba02, 0x16825ced, 0xcf1c2b8a, 0x79b492a7, 0x07f2f0f3, 0x69e2a14e, 0xdaf4cd65, 0x05bed506, 0x34621fd1, 0xa6fe8ac4, 0x2e539d34, 0xf355a0a2, 0x8ae13205, 0xf6eb75a4, 0x83ec390b, 0x60efaa40, 0x719f065e, 0x6e1051bd, 0x218af93e, 0xdd063d96, 0x3e05aedd, 0xe6bd464d, 0x548db591, 0xc45d0571, 0x06d46f04, 0x5015ff60, 0x98fb2419, 0xbde997d6, 0x4043cc89, 0xd99e7767, 0xe842bdb0, 0x898b8807, 0x195b38e7, 0xc8eedb79, 0x7c0a47a1, 0x420fe97c, 0x841ec9f8, 0x00000000, 0x80868309, 0x2bed4832, 0x1170ac1e, 0x5a724e6c, 0x0efffbfd, 0x8538560f, 0xaed51e3d, 0x2d392736, 0x0fd9640a, 0x5ca62168, 0x5b54d19b, 0x362e3a24, 0x0a67b10c, 0x57e70f93, 0xee96d2b4, 0x9b919e1b, 0xc0c54f80, 0xdc20a261, 0x774b695a, 0x121a161c, 0x93ba0ae2, 0xa02ae5c0, 0x22e0433c, 0x1b171d12, 0x090d0b0e, 0x8bc7adf2, 0xb6a8b92d, 0x1ea9c814, 0xf1198557, 0x75074caf, 0x99ddbbee, 0x7f60fda3, 0x01269ff7, 0x72f5bc5c, 0x663bc544, 0xfb7e345b, 0x4329768b, 0x23c6dccb, 0xedfc68b6, 0xe4f163b8, 0x31dccad7, 0x63851042, 0x97224013, 0xc6112084, 0x4a247d85, 0xbb3df8d2, 0xf93211ae, 0x29a16dc7, 0x9e2f4b1d, 0xb230f3dc, 0x8652ec0d, 0xc1e3d077, 0xb3166c2b, 0x70b999a9, 0x9448fa11, 0xe9642247, 0xfc8cc4a8, 0xf03f1aa0, 0x7d2cd856, 0x3390ef22, 0x494ec787, 0x38d1c1d9, 0xcaa2fe8c, 0xd40b3698, 0xf581cfa6, 0x7ade28a5, 0xb78e26da, 0xadbfa43f, 0x3a9de42c, 0x78920d50, 0x5fcc9b6a, 0x7e466254, 0x8d13c2f6, 0xd8b8e890, 0x39f75e2e, 0xc3aff582, 0x5d80be9f, 0xd0937c69, 0xd52da96f, 0x2512b3cf, 0xac993bc8, 0x187da710, 0x9c636ee8, 0x3bbb7bdb, 0x267809cd, 0x5918f46e, 0x9ab701ec, 0x4f9aa883, 0x956e65e6, 0xffe67eaa, 0xbccf0821, 0x15e8e6ef, 0xe79bd9ba, 0x6f36ce4a, 0x9f09d4ea, 0xb07cd629, 0xa4b2af31, 0x3f23312a, 0xa59430c6, 0xa266c035, 0x4ebc3774, 0x82caa6fc, 0x90d0b0e0, 0xa7d81533, 0x04984af1, 0xecdaf741, 0xcd500e7f, 0x91f62f17, 0x4dd68d76, 0xefb04d43, 0xaa4d54cc, 0x9604dfe4, 0xd1b5e39e, 0x6a881b4c, 0x2c1fb8c1, 0x65517f46, 0x5eea049d, 0x8c355d01, 0x877473fa, 0x0b412efb, 0x671d5ab3, 0xdbd25292, 0x105633e9, 0xd647136d, 0xd7618c9a, 0xa10c7a37, 0xf8148e59, 0x133c89eb, 0xa927eece, 0x61c935b7, 0x1ce5ede1, 0x47b13c7a, 0xd2df599c, 0xf2733f55, 0x14ce7918, 0xc737bf73, 0xf7cdea53, 0xfdaa5b5f, 0x3d6f14df, 0x44db8678, 0xaff381ca, 0x68c43eb9, 0x24342c38, 0xa3405fc2, 0x1dc37216, 0xe2250cbc, 0x3c498b28, 0x0d9541ff, 0xa8017139, 0x0cb3de08, 0xb4e49cd8, 0x56c19064, 0xcb84617b, 0x32b670d5, 0x6c5c7448, 0xb85742d0];\n\n    // Transformations for decryption key expansion\n    var U1 = [0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927, 0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf, 0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66, 0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec, 0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e, 0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd, 0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7, 0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89, 0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b, 0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815, 0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c, 0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742, 0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e, 0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360, 0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502, 0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87, 0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd, 0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3, 0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621, 0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f, 0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55, 0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26, 0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844, 0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba, 0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67, 0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713, 0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed, 0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3];\n    var U2 = [0x00000000, 0x0b0e090d, 0x161c121a, 0x1d121b17, 0x2c382434, 0x27362d39, 0x3a24362e, 0x312a3f23, 0x58704868, 0x537e4165, 0x4e6c5a72, 0x4562537f, 0x74486c5c, 0x7f466551, 0x62547e46, 0x695a774b, 0xb0e090d0, 0xbbee99dd, 0xa6fc82ca, 0xadf28bc7, 0x9cd8b4e4, 0x97d6bde9, 0x8ac4a6fe, 0x81caaff3, 0xe890d8b8, 0xe39ed1b5, 0xfe8ccaa2, 0xf582c3af, 0xc4a8fc8c, 0xcfa6f581, 0xd2b4ee96, 0xd9bae79b, 0x7bdb3bbb, 0x70d532b6, 0x6dc729a1, 0x66c920ac, 0x57e31f8f, 0x5ced1682, 0x41ff0d95, 0x4af10498, 0x23ab73d3, 0x28a57ade, 0x35b761c9, 0x3eb968c4, 0x0f9357e7, 0x049d5eea, 0x198f45fd, 0x12814cf0, 0xcb3bab6b, 0xc035a266, 0xdd27b971, 0xd629b07c, 0xe7038f5f, 0xec0d8652, 0xf11f9d45, 0xfa119448, 0x934be303, 0x9845ea0e, 0x8557f119, 0x8e59f814, 0xbf73c737, 0xb47dce3a, 0xa96fd52d, 0xa261dc20, 0xf6ad766d, 0xfda37f60, 0xe0b16477, 0xebbf6d7a, 0xda955259, 0xd19b5b54, 0xcc894043, 0xc787494e, 0xaedd3e05, 0xa5d33708, 0xb8c12c1f, 0xb3cf2512, 0x82e51a31, 0x89eb133c, 0x94f9082b, 0x9ff70126, 0x464de6bd, 0x4d43efb0, 0x5051f4a7, 0x5b5ffdaa, 0x6a75c289, 0x617bcb84, 0x7c69d093, 0x7767d99e, 0x1e3daed5, 0x1533a7d8, 0x0821bccf, 0x032fb5c2, 0x32058ae1, 0x390b83ec, 0x241998fb, 0x2f1791f6, 0x8d764dd6, 0x867844db, 0x9b6a5fcc, 0x906456c1, 0xa14e69e2, 0xaa4060ef, 0xb7527bf8, 0xbc5c72f5, 0xd50605be, 0xde080cb3, 0xc31a17a4, 0xc8141ea9, 0xf93e218a, 0xf2302887, 0xef223390, 0xe42c3a9d, 0x3d96dd06, 0x3698d40b, 0x2b8acf1c, 0x2084c611, 0x11aef932, 0x1aa0f03f, 0x07b2eb28, 0x0cbce225, 0x65e6956e, 0x6ee89c63, 0x73fa8774, 0x78f48e79, 0x49deb15a, 0x42d0b857, 0x5fc2a340, 0x54ccaa4d, 0xf741ecda, 0xfc4fe5d7, 0xe15dfec0, 0xea53f7cd, 0xdb79c8ee, 0xd077c1e3, 0xcd65daf4, 0xc66bd3f9, 0xaf31a4b2, 0xa43fadbf, 0xb92db6a8, 0xb223bfa5, 0x83098086, 0x8807898b, 0x9515929c, 0x9e1b9b91, 0x47a17c0a, 0x4caf7507, 0x51bd6e10, 0x5ab3671d, 0x6b99583e, 0x60975133, 0x7d854a24, 0x768b4329, 0x1fd13462, 0x14df3d6f, 0x09cd2678, 0x02c32f75, 0x33e91056, 0x38e7195b, 0x25f5024c, 0x2efb0b41, 0x8c9ad761, 0x8794de6c, 0x9a86c57b, 0x9188cc76, 0xa0a2f355, 0xabacfa58, 0xb6bee14f, 0xbdb0e842, 0xd4ea9f09, 0xdfe49604, 0xc2f68d13, 0xc9f8841e, 0xf8d2bb3d, 0xf3dcb230, 0xeecea927, 0xe5c0a02a, 0x3c7a47b1, 0x37744ebc, 0x2a6655ab, 0x21685ca6, 0x10426385, 0x1b4c6a88, 0x065e719f, 0x0d507892, 0x640a0fd9, 0x6f0406d4, 0x72161dc3, 0x791814ce, 0x48322bed, 0x433c22e0, 0x5e2e39f7, 0x552030fa, 0x01ec9ab7, 0x0ae293ba, 0x17f088ad, 0x1cfe81a0, 0x2dd4be83, 0x26dab78e, 0x3bc8ac99, 0x30c6a594, 0x599cd2df, 0x5292dbd2, 0x4f80c0c5, 0x448ec9c8, 0x75a4f6eb, 0x7eaaffe6, 0x63b8e4f1, 0x68b6edfc, 0xb10c0a67, 0xba02036a, 0xa710187d, 0xac1e1170, 0x9d342e53, 0x963a275e, 0x8b283c49, 0x80263544, 0xe97c420f, 0xe2724b02, 0xff605015, 0xf46e5918, 0xc544663b, 0xce4a6f36, 0xd3587421, 0xd8567d2c, 0x7a37a10c, 0x7139a801, 0x6c2bb316, 0x6725ba1b, 0x560f8538, 0x5d018c35, 0x40139722, 0x4b1d9e2f, 0x2247e964, 0x2949e069, 0x345bfb7e, 0x3f55f273, 0x0e7fcd50, 0x0571c45d, 0x1863df4a, 0x136dd647, 0xcad731dc, 0xc1d938d1, 0xdccb23c6, 0xd7c52acb, 0xe6ef15e8, 0xede11ce5, 0xf0f307f2, 0xfbfd0eff, 0x92a779b4, 0x99a970b9, 0x84bb6bae, 0x8fb562a3, 0xbe9f5d80, 0xb591548d, 0xa8834f9a, 0xa38d4697];\n    var U3 = [0x00000000, 0x0d0b0e09, 0x1a161c12, 0x171d121b, 0x342c3824, 0x3927362d, 0x2e3a2436, 0x23312a3f, 0x68587048, 0x65537e41, 0x724e6c5a, 0x7f456253, 0x5c74486c, 0x517f4665, 0x4662547e, 0x4b695a77, 0xd0b0e090, 0xddbbee99, 0xcaa6fc82, 0xc7adf28b, 0xe49cd8b4, 0xe997d6bd, 0xfe8ac4a6, 0xf381caaf, 0xb8e890d8, 0xb5e39ed1, 0xa2fe8cca, 0xaff582c3, 0x8cc4a8fc, 0x81cfa6f5, 0x96d2b4ee, 0x9bd9bae7, 0xbb7bdb3b, 0xb670d532, 0xa16dc729, 0xac66c920, 0x8f57e31f, 0x825ced16, 0x9541ff0d, 0x984af104, 0xd323ab73, 0xde28a57a, 0xc935b761, 0xc43eb968, 0xe70f9357, 0xea049d5e, 0xfd198f45, 0xf012814c, 0x6bcb3bab, 0x66c035a2, 0x71dd27b9, 0x7cd629b0, 0x5fe7038f, 0x52ec0d86, 0x45f11f9d, 0x48fa1194, 0x03934be3, 0x0e9845ea, 0x198557f1, 0x148e59f8, 0x37bf73c7, 0x3ab47dce, 0x2da96fd5, 0x20a261dc, 0x6df6ad76, 0x60fda37f, 0x77e0b164, 0x7aebbf6d, 0x59da9552, 0x54d19b5b, 0x43cc8940, 0x4ec78749, 0x05aedd3e, 0x08a5d337, 0x1fb8c12c, 0x12b3cf25, 0x3182e51a, 0x3c89eb13, 0x2b94f908, 0x269ff701, 0xbd464de6, 0xb04d43ef, 0xa75051f4, 0xaa5b5ffd, 0x896a75c2, 0x84617bcb, 0x937c69d0, 0x9e7767d9, 0xd51e3dae, 0xd81533a7, 0xcf0821bc, 0xc2032fb5, 0xe132058a, 0xec390b83, 0xfb241998, 0xf62f1791, 0xd68d764d, 0xdb867844, 0xcc9b6a5f, 0xc1906456, 0xe2a14e69, 0xefaa4060, 0xf8b7527b, 0xf5bc5c72, 0xbed50605, 0xb3de080c, 0xa4c31a17, 0xa9c8141e, 0x8af93e21, 0x87f23028, 0x90ef2233, 0x9de42c3a, 0x063d96dd, 0x0b3698d4, 0x1c2b8acf, 0x112084c6, 0x3211aef9, 0x3f1aa0f0, 0x2807b2eb, 0x250cbce2, 0x6e65e695, 0x636ee89c, 0x7473fa87, 0x7978f48e, 0x5a49deb1, 0x5742d0b8, 0x405fc2a3, 0x4d54ccaa, 0xdaf741ec, 0xd7fc4fe5, 0xc0e15dfe, 0xcdea53f7, 0xeedb79c8, 0xe3d077c1, 0xf4cd65da, 0xf9c66bd3, 0xb2af31a4, 0xbfa43fad, 0xa8b92db6, 0xa5b223bf, 0x86830980, 0x8b880789, 0x9c951592, 0x919e1b9b, 0x0a47a17c, 0x074caf75, 0x1051bd6e, 0x1d5ab367, 0x3e6b9958, 0x33609751, 0x247d854a, 0x29768b43, 0x621fd134, 0x6f14df3d, 0x7809cd26, 0x7502c32f, 0x5633e910, 0x5b38e719, 0x4c25f502, 0x412efb0b, 0x618c9ad7, 0x6c8794de, 0x7b9a86c5, 0x769188cc, 0x55a0a2f3, 0x58abacfa, 0x4fb6bee1, 0x42bdb0e8, 0x09d4ea9f, 0x04dfe496, 0x13c2f68d, 0x1ec9f884, 0x3df8d2bb, 0x30f3dcb2, 0x27eecea9, 0x2ae5c0a0, 0xb13c7a47, 0xbc37744e, 0xab2a6655, 0xa621685c, 0x85104263, 0x881b4c6a, 0x9f065e71, 0x920d5078, 0xd9640a0f, 0xd46f0406, 0xc372161d, 0xce791814, 0xed48322b, 0xe0433c22, 0xf75e2e39, 0xfa552030, 0xb701ec9a, 0xba0ae293, 0xad17f088, 0xa01cfe81, 0x832dd4be, 0x8e26dab7, 0x993bc8ac, 0x9430c6a5, 0xdf599cd2, 0xd25292db, 0xc54f80c0, 0xc8448ec9, 0xeb75a4f6, 0xe67eaaff, 0xf163b8e4, 0xfc68b6ed, 0x67b10c0a, 0x6aba0203, 0x7da71018, 0x70ac1e11, 0x539d342e, 0x5e963a27, 0x498b283c, 0x44802635, 0x0fe97c42, 0x02e2724b, 0x15ff6050, 0x18f46e59, 0x3bc54466, 0x36ce4a6f, 0x21d35874, 0x2cd8567d, 0x0c7a37a1, 0x017139a8, 0x166c2bb3, 0x1b6725ba, 0x38560f85, 0x355d018c, 0x22401397, 0x2f4b1d9e, 0x642247e9, 0x692949e0, 0x7e345bfb, 0x733f55f2, 0x500e7fcd, 0x5d0571c4, 0x4a1863df, 0x47136dd6, 0xdccad731, 0xd1c1d938, 0xc6dccb23, 0xcbd7c52a, 0xe8e6ef15, 0xe5ede11c, 0xf2f0f307, 0xfffbfd0e, 0xb492a779, 0xb999a970, 0xae84bb6b, 0xa38fb562, 0x80be9f5d, 0x8db59154, 0x9aa8834f, 0x97a38d46];\n    var U4 = [0x00000000, 0x090d0b0e, 0x121a161c, 0x1b171d12, 0x24342c38, 0x2d392736, 0x362e3a24, 0x3f23312a, 0x48685870, 0x4165537e, 0x5a724e6c, 0x537f4562, 0x6c5c7448, 0x65517f46, 0x7e466254, 0x774b695a, 0x90d0b0e0, 0x99ddbbee, 0x82caa6fc, 0x8bc7adf2, 0xb4e49cd8, 0xbde997d6, 0xa6fe8ac4, 0xaff381ca, 0xd8b8e890, 0xd1b5e39e, 0xcaa2fe8c, 0xc3aff582, 0xfc8cc4a8, 0xf581cfa6, 0xee96d2b4, 0xe79bd9ba, 0x3bbb7bdb, 0x32b670d5, 0x29a16dc7, 0x20ac66c9, 0x1f8f57e3, 0x16825ced, 0x0d9541ff, 0x04984af1, 0x73d323ab, 0x7ade28a5, 0x61c935b7, 0x68c43eb9, 0x57e70f93, 0x5eea049d, 0x45fd198f, 0x4cf01281, 0xab6bcb3b, 0xa266c035, 0xb971dd27, 0xb07cd629, 0x8f5fe703, 0x8652ec0d, 0x9d45f11f, 0x9448fa11, 0xe303934b, 0xea0e9845, 0xf1198557, 0xf8148e59, 0xc737bf73, 0xce3ab47d, 0xd52da96f, 0xdc20a261, 0x766df6ad, 0x7f60fda3, 0x6477e0b1, 0x6d7aebbf, 0x5259da95, 0x5b54d19b, 0x4043cc89, 0x494ec787, 0x3e05aedd, 0x3708a5d3, 0x2c1fb8c1, 0x2512b3cf, 0x1a3182e5, 0x133c89eb, 0x082b94f9, 0x01269ff7, 0xe6bd464d, 0xefb04d43, 0xf4a75051, 0xfdaa5b5f, 0xc2896a75, 0xcb84617b, 0xd0937c69, 0xd99e7767, 0xaed51e3d, 0xa7d81533, 0xbccf0821, 0xb5c2032f, 0x8ae13205, 0x83ec390b, 0x98fb2419, 0x91f62f17, 0x4dd68d76, 0x44db8678, 0x5fcc9b6a, 0x56c19064, 0x69e2a14e, 0x60efaa40, 0x7bf8b752, 0x72f5bc5c, 0x05bed506, 0x0cb3de08, 0x17a4c31a, 0x1ea9c814, 0x218af93e, 0x2887f230, 0x3390ef22, 0x3a9de42c, 0xdd063d96, 0xd40b3698, 0xcf1c2b8a, 0xc6112084, 0xf93211ae, 0xf03f1aa0, 0xeb2807b2, 0xe2250cbc, 0x956e65e6, 0x9c636ee8, 0x877473fa, 0x8e7978f4, 0xb15a49de, 0xb85742d0, 0xa3405fc2, 0xaa4d54cc, 0xecdaf741, 0xe5d7fc4f, 0xfec0e15d, 0xf7cdea53, 0xc8eedb79, 0xc1e3d077, 0xdaf4cd65, 0xd3f9c66b, 0xa4b2af31, 0xadbfa43f, 0xb6a8b92d, 0xbfa5b223, 0x80868309, 0x898b8807, 0x929c9515, 0x9b919e1b, 0x7c0a47a1, 0x75074caf, 0x6e1051bd, 0x671d5ab3, 0x583e6b99, 0x51336097, 0x4a247d85, 0x4329768b, 0x34621fd1, 0x3d6f14df, 0x267809cd, 0x2f7502c3, 0x105633e9, 0x195b38e7, 0x024c25f5, 0x0b412efb, 0xd7618c9a, 0xde6c8794, 0xc57b9a86, 0xcc769188, 0xf355a0a2, 0xfa58abac, 0xe14fb6be, 0xe842bdb0, 0x9f09d4ea, 0x9604dfe4, 0x8d13c2f6, 0x841ec9f8, 0xbb3df8d2, 0xb230f3dc, 0xa927eece, 0xa02ae5c0, 0x47b13c7a, 0x4ebc3774, 0x55ab2a66, 0x5ca62168, 0x63851042, 0x6a881b4c, 0x719f065e, 0x78920d50, 0x0fd9640a, 0x06d46f04, 0x1dc37216, 0x14ce7918, 0x2bed4832, 0x22e0433c, 0x39f75e2e, 0x30fa5520, 0x9ab701ec, 0x93ba0ae2, 0x88ad17f0, 0x81a01cfe, 0xbe832dd4, 0xb78e26da, 0xac993bc8, 0xa59430c6, 0xd2df599c, 0xdbd25292, 0xc0c54f80, 0xc9c8448e, 0xf6eb75a4, 0xffe67eaa, 0xe4f163b8, 0xedfc68b6, 0x0a67b10c, 0x036aba02, 0x187da710, 0x1170ac1e, 0x2e539d34, 0x275e963a, 0x3c498b28, 0x35448026, 0x420fe97c, 0x4b02e272, 0x5015ff60, 0x5918f46e, 0x663bc544, 0x6f36ce4a, 0x7421d358, 0x7d2cd856, 0xa10c7a37, 0xa8017139, 0xb3166c2b, 0xba1b6725, 0x8538560f, 0x8c355d01, 0x97224013, 0x9e2f4b1d, 0xe9642247, 0xe0692949, 0xfb7e345b, 0xf2733f55, 0xcd500e7f, 0xc45d0571, 0xdf4a1863, 0xd647136d, 0x31dccad7, 0x38d1c1d9, 0x23c6dccb, 0x2acbd7c5, 0x15e8e6ef, 0x1ce5ede1, 0x07f2f0f3, 0x0efffbfd, 0x79b492a7, 0x70b999a9, 0x6bae84bb, 0x62a38fb5, 0x5d80be9f, 0x548db591, 0x4f9aa883, 0x4697a38d];\n\n    function convertToInt32(bytes) {\n        var result = [];\n        for (var i = 0; i < bytes.length; i += 4) {\n            result.push(\n                (bytes[i    ] << 24) |\n                (bytes[i + 1] << 16) |\n                (bytes[i + 2] <<  8) |\n                 bytes[i + 3]\n            );\n        }\n        return result;\n    }\n\n    var AES = function(key) {\n        if (!(this instanceof AES)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        Object.defineProperty(this, 'key', {\n            value: coerceArray(key, true)\n        });\n\n        this._prepare();\n    }\n\n\n    AES.prototype._prepare = function() {\n\n        var rounds = numberOfRounds[this.key.length];\n        if (rounds == null) {\n            throw new Error('invalid key size (must be 16, 24 or 32 bytes)');\n        }\n\n        // encryption round keys\n        this._Ke = [];\n\n        // decryption round keys\n        this._Kd = [];\n\n        for (var i = 0; i <= rounds; i++) {\n            this._Ke.push([0, 0, 0, 0]);\n            this._Kd.push([0, 0, 0, 0]);\n        }\n\n        var roundKeyCount = (rounds + 1) * 4;\n        var KC = this.key.length / 4;\n\n        // convert the key into ints\n        var tk = convertToInt32(this.key);\n\n        // copy values into round key arrays\n        var index;\n        for (var i = 0; i < KC; i++) {\n            index = i >> 2;\n            this._Ke[index][i % 4] = tk[i];\n            this._Kd[rounds - index][i % 4] = tk[i];\n        }\n\n        // key expansion (fips-197 section 5.2)\n        var rconpointer = 0;\n        var t = KC, tt;\n        while (t < roundKeyCount) {\n            tt = tk[KC - 1];\n            tk[0] ^= ((S[(tt >> 16) & 0xFF] << 24) ^\n                      (S[(tt >>  8) & 0xFF] << 16) ^\n                      (S[ tt        & 0xFF] <<  8) ^\n                       S[(tt >> 24) & 0xFF]        ^\n                      (rcon[rconpointer] << 24));\n            rconpointer += 1;\n\n            // key expansion (for non-256 bit)\n            if (KC != 8) {\n                for (var i = 1; i < KC; i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n\n            // key expansion for 256-bit keys is \"slightly different\" (fips-197)\n            } else {\n                for (var i = 1; i < (KC / 2); i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n                tt = tk[(KC / 2) - 1];\n\n                tk[KC / 2] ^= (S[ tt        & 0xFF]        ^\n                              (S[(tt >>  8) & 0xFF] <<  8) ^\n                              (S[(tt >> 16) & 0xFF] << 16) ^\n                              (S[(tt >> 24) & 0xFF] << 24));\n\n                for (var i = (KC / 2) + 1; i < KC; i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n            }\n\n            // copy values into round key arrays\n            var i = 0, r, c;\n            while (i < KC && t < roundKeyCount) {\n                r = t >> 2;\n                c = t % 4;\n                this._Ke[r][c] = tk[i];\n                this._Kd[rounds - r][c] = tk[i++];\n                t++;\n            }\n        }\n\n        // inverse-cipher-ify the decryption round key (fips-197 section 5.3)\n        for (var r = 1; r < rounds; r++) {\n            for (var c = 0; c < 4; c++) {\n                tt = this._Kd[r][c];\n                this._Kd[r][c] = (U1[(tt >> 24) & 0xFF] ^\n                                  U2[(tt >> 16) & 0xFF] ^\n                                  U3[(tt >>  8) & 0xFF] ^\n                                  U4[ tt        & 0xFF]);\n            }\n        }\n    }\n\n    AES.prototype.encrypt = function(plaintext) {\n        if (plaintext.length != 16) {\n            throw new Error('invalid plaintext size (must be 16 bytes)');\n        }\n\n        var rounds = this._Ke.length - 1;\n        var a = [0, 0, 0, 0];\n\n        // convert plaintext to (ints ^ key)\n        var t = convertToInt32(plaintext);\n        for (var i = 0; i < 4; i++) {\n            t[i] ^= this._Ke[0][i];\n        }\n\n        // apply round transforms\n        for (var r = 1; r < rounds; r++) {\n            for (var i = 0; i < 4; i++) {\n                a[i] = (T1[(t[ i         ] >> 24) & 0xff] ^\n                        T2[(t[(i + 1) % 4] >> 16) & 0xff] ^\n                        T3[(t[(i + 2) % 4] >>  8) & 0xff] ^\n                        T4[ t[(i + 3) % 4]        & 0xff] ^\n                        this._Ke[r][i]);\n            }\n            t = a.slice();\n        }\n\n        // the last round is special\n        var result = createArray(16), tt;\n        for (var i = 0; i < 4; i++) {\n            tt = this._Ke[rounds][i];\n            result[4 * i    ] = (S[(t[ i         ] >> 24) & 0xff] ^ (tt >> 24)) & 0xff;\n            result[4 * i + 1] = (S[(t[(i + 1) % 4] >> 16) & 0xff] ^ (tt >> 16)) & 0xff;\n            result[4 * i + 2] = (S[(t[(i + 2) % 4] >>  8) & 0xff] ^ (tt >>  8)) & 0xff;\n            result[4 * i + 3] = (S[ t[(i + 3) % 4]        & 0xff] ^  tt       ) & 0xff;\n        }\n\n        return result;\n    }\n\n    AES.prototype.decrypt = function(ciphertext) {\n        if (ciphertext.length != 16) {\n            throw new Error('invalid ciphertext size (must be 16 bytes)');\n        }\n\n        var rounds = this._Kd.length - 1;\n        var a = [0, 0, 0, 0];\n\n        // convert plaintext to (ints ^ key)\n        var t = convertToInt32(ciphertext);\n        for (var i = 0; i < 4; i++) {\n            t[i] ^= this._Kd[0][i];\n        }\n\n        // apply round transforms\n        for (var r = 1; r < rounds; r++) {\n            for (var i = 0; i < 4; i++) {\n                a[i] = (T5[(t[ i          ] >> 24) & 0xff] ^\n                        T6[(t[(i + 3) % 4] >> 16) & 0xff] ^\n                        T7[(t[(i + 2) % 4] >>  8) & 0xff] ^\n                        T8[ t[(i + 1) % 4]        & 0xff] ^\n                        this._Kd[r][i]);\n            }\n            t = a.slice();\n        }\n\n        // the last round is special\n        var result = createArray(16), tt;\n        for (var i = 0; i < 4; i++) {\n            tt = this._Kd[rounds][i];\n            result[4 * i    ] = (Si[(t[ i         ] >> 24) & 0xff] ^ (tt >> 24)) & 0xff;\n            result[4 * i + 1] = (Si[(t[(i + 3) % 4] >> 16) & 0xff] ^ (tt >> 16)) & 0xff;\n            result[4 * i + 2] = (Si[(t[(i + 2) % 4] >>  8) & 0xff] ^ (tt >>  8)) & 0xff;\n            result[4 * i + 3] = (Si[ t[(i + 1) % 4]        & 0xff] ^  tt       ) & 0xff;\n        }\n\n        return result;\n    }\n\n\n    /**\n     *  Mode Of Operation - Electonic Codebook (ECB)\n     */\n    var ModeOfOperationECB = function(key) {\n        if (!(this instanceof ModeOfOperationECB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Electronic Code Block\";\n        this.name = \"ecb\";\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationECB.prototype.encrypt = function(plaintext) {\n        plaintext = coerceArray(plaintext);\n\n        if ((plaintext.length % 16) !== 0) {\n            throw new Error('invalid plaintext size (must be multiple of 16 bytes)');\n        }\n\n        var ciphertext = createArray(plaintext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < plaintext.length; i += 16) {\n            copyArray(plaintext, block, 0, i, i + 16);\n            block = this._aes.encrypt(block);\n            copyArray(block, ciphertext, i);\n        }\n\n        return ciphertext;\n    }\n\n    ModeOfOperationECB.prototype.decrypt = function(ciphertext) {\n        ciphertext = coerceArray(ciphertext);\n\n        if ((ciphertext.length % 16) !== 0) {\n            throw new Error('invalid ciphertext size (must be multiple of 16 bytes)');\n        }\n\n        var plaintext = createArray(ciphertext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < ciphertext.length; i += 16) {\n            copyArray(ciphertext, block, 0, i, i + 16);\n            block = this._aes.decrypt(block);\n            copyArray(block, plaintext, i);\n        }\n\n        return plaintext;\n    }\n\n\n    /**\n     *  Mode Of Operation - Cipher Block Chaining (CBC)\n     */\n    var ModeOfOperationCBC = function(key, iv) {\n        if (!(this instanceof ModeOfOperationCBC)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Cipher Block Chaining\";\n        this.name = \"cbc\";\n\n        if (!iv) {\n            iv = createArray(16);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 bytes)');\n        }\n\n        this._lastCipherblock = coerceArray(iv, true);\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationCBC.prototype.encrypt = function(plaintext) {\n        plaintext = coerceArray(plaintext);\n\n        if ((plaintext.length % 16) !== 0) {\n            throw new Error('invalid plaintext size (must be multiple of 16 bytes)');\n        }\n\n        var ciphertext = createArray(plaintext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < plaintext.length; i += 16) {\n            copyArray(plaintext, block, 0, i, i + 16);\n\n            for (var j = 0; j < 16; j++) {\n                block[j] ^= this._lastCipherblock[j];\n            }\n\n            this._lastCipherblock = this._aes.encrypt(block);\n            copyArray(this._lastCipherblock, ciphertext, i);\n        }\n\n        return ciphertext;\n    }\n\n    ModeOfOperationCBC.prototype.decrypt = function(ciphertext) {\n        ciphertext = coerceArray(ciphertext);\n\n        if ((ciphertext.length % 16) !== 0) {\n            throw new Error('invalid ciphertext size (must be multiple of 16 bytes)');\n        }\n\n        var plaintext = createArray(ciphertext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < ciphertext.length; i += 16) {\n            copyArray(ciphertext, block, 0, i, i + 16);\n            block = this._aes.decrypt(block);\n\n            for (var j = 0; j < 16; j++) {\n                plaintext[i + j] = block[j] ^ this._lastCipherblock[j];\n            }\n\n            copyArray(ciphertext, this._lastCipherblock, 0, i, i + 16);\n        }\n\n        return plaintext;\n    }\n\n\n    /**\n     *  Mode Of Operation - Cipher Feedback (CFB)\n     */\n    var ModeOfOperationCFB = function(key, iv, segmentSize) {\n        if (!(this instanceof ModeOfOperationCFB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Cipher Feedback\";\n        this.name = \"cfb\";\n\n        if (!iv) {\n            iv = createArray(16);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 size)');\n        }\n\n        if (!segmentSize) { segmentSize = 1; }\n\n        this.segmentSize = segmentSize;\n\n        this._shiftRegister = coerceArray(iv, true);\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationCFB.prototype.encrypt = function(plaintext) {\n        if ((plaintext.length % this.segmentSize) != 0) {\n            throw new Error('invalid plaintext size (must be segmentSize bytes)');\n        }\n\n        var encrypted = coerceArray(plaintext, true);\n\n        var xorSegment;\n        for (var i = 0; i < encrypted.length; i += this.segmentSize) {\n            xorSegment = this._aes.encrypt(this._shiftRegister);\n            for (var j = 0; j < this.segmentSize; j++) {\n                encrypted[i + j] ^= xorSegment[j];\n            }\n\n            // Shift the register\n            copyArray(this._shiftRegister, this._shiftRegister, 0, this.segmentSize);\n            copyArray(encrypted, this._shiftRegister, 16 - this.segmentSize, i, i + this.segmentSize);\n        }\n\n        return encrypted;\n    }\n\n    ModeOfOperationCFB.prototype.decrypt = function(ciphertext) {\n        if ((ciphertext.length % this.segmentSize) != 0) {\n            throw new Error('invalid ciphertext size (must be segmentSize bytes)');\n        }\n\n        var plaintext = coerceArray(ciphertext, true);\n\n        var xorSegment;\n        for (var i = 0; i < plaintext.length; i += this.segmentSize) {\n            xorSegment = this._aes.encrypt(this._shiftRegister);\n\n            for (var j = 0; j < this.segmentSize; j++) {\n                plaintext[i + j] ^= xorSegment[j];\n            }\n\n            // Shift the register\n            copyArray(this._shiftRegister, this._shiftRegister, 0, this.segmentSize);\n            copyArray(ciphertext, this._shiftRegister, 16 - this.segmentSize, i, i + this.segmentSize);\n        }\n\n        return plaintext;\n    }\n\n    /**\n     *  Mode Of Operation - Output Feedback (OFB)\n     */\n    var ModeOfOperationOFB = function(key, iv) {\n        if (!(this instanceof ModeOfOperationOFB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Output Feedback\";\n        this.name = \"ofb\";\n\n        if (!iv) {\n            iv = createArray(16);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 bytes)');\n        }\n\n        this._lastPrecipher = coerceArray(iv, true);\n        this._lastPrecipherIndex = 16;\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationOFB.prototype.encrypt = function(plaintext) {\n        var encrypted = coerceArray(plaintext, true);\n\n        for (var i = 0; i < encrypted.length; i++) {\n            if (this._lastPrecipherIndex === 16) {\n                this._lastPrecipher = this._aes.encrypt(this._lastPrecipher);\n                this._lastPrecipherIndex = 0;\n            }\n            encrypted[i] ^= this._lastPrecipher[this._lastPrecipherIndex++];\n        }\n\n        return encrypted;\n    }\n\n    // Decryption is symetric\n    ModeOfOperationOFB.prototype.decrypt = ModeOfOperationOFB.prototype.encrypt;\n\n\n    /**\n     *  Counter object for CTR common mode of operation\n     */\n    var Counter = function(initialValue) {\n        if (!(this instanceof Counter)) {\n            throw Error('Counter must be instanitated with `new`');\n        }\n\n        // We allow 0, but anything false-ish uses the default 1\n        if (initialValue !== 0 && !initialValue) { initialValue = 1; }\n\n        if (typeof(initialValue) === 'number') {\n            this._counter = createArray(16);\n            this.setValue(initialValue);\n\n        } else {\n            this.setBytes(initialValue);\n        }\n    }\n\n    Counter.prototype.setValue = function(value) {\n        if (typeof(value) !== 'number' || parseInt(value) != value) {\n            throw new Error('invalid counter value (must be an integer)');\n        }\n\n        for (var index = 15; index >= 0; --index) {\n            this._counter[index] = value % 256;\n            value = value >> 8;\n        }\n    }\n\n    Counter.prototype.setBytes = function(bytes) {\n        bytes = coerceArray(bytes, true);\n\n        if (bytes.length != 16) {\n            throw new Error('invalid counter bytes size (must be 16 bytes)');\n        }\n\n        this._counter = bytes;\n    };\n\n    Counter.prototype.increment = function() {\n        for (var i = 15; i >= 0; i--) {\n            if (this._counter[i] === 255) {\n                this._counter[i] = 0;\n            } else {\n                this._counter[i]++;\n                break;\n            }\n        }\n    }\n\n\n    /**\n     *  Mode Of Operation - Counter (CTR)\n     */\n    var ModeOfOperationCTR = function(key, counter) {\n        if (!(this instanceof ModeOfOperationCTR)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Counter\";\n        this.name = \"ctr\";\n\n        if (!(counter instanceof Counter)) {\n            counter = new Counter(counter)\n        }\n\n        this._counter = counter;\n\n        this._remainingCounter = null;\n        this._remainingCounterIndex = 16;\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationCTR.prototype.encrypt = function(plaintext) {\n        var encrypted = coerceArray(plaintext, true);\n\n        for (var i = 0; i < encrypted.length; i++) {\n            if (this._remainingCounterIndex === 16) {\n                this._remainingCounter = this._aes.encrypt(this._counter._counter);\n                this._remainingCounterIndex = 0;\n                this._counter.increment();\n            }\n            encrypted[i] ^= this._remainingCounter[this._remainingCounterIndex++];\n        }\n\n        return encrypted;\n    }\n\n    // Decryption is symetric\n    ModeOfOperationCTR.prototype.decrypt = ModeOfOperationCTR.prototype.encrypt;\n\n\n    ///////////////////////\n    // Padding\n\n    // See:https://tools.ietf.org/html/rfc2315\n    function pkcs7pad(data) {\n        data = coerceArray(data, true);\n        var padder = 16 - (data.length % 16);\n        var result = createArray(data.length + padder);\n        copyArray(data, result);\n        for (var i = data.length; i < result.length; i++) {\n            result[i] = padder;\n        }\n        return result;\n    }\n\n    function pkcs7strip(data) {\n        data = coerceArray(data, true);\n        if (data.length < 16) { throw new Error('PKCS#7 invalid length'); }\n\n        var padder = data[data.length - 1];\n        if (padder > 16) { throw new Error('PKCS#7 padding byte out of range'); }\n\n        var length = data.length - padder;\n        for (var i = 0; i < padder; i++) {\n            if (data[length + i] !== padder) {\n                throw new Error('PKCS#7 invalid padding byte');\n            }\n        }\n\n        var result = createArray(length);\n        copyArray(data, result, 0, 0, length);\n        return result;\n    }\n\n    ///////////////////////\n    // Exporting\n\n\n    // The block cipher\n    var aesjs = {\n        AES: AES,\n        Counter: Counter,\n\n        ModeOfOperation: {\n            ecb: ModeOfOperationECB,\n            cbc: ModeOfOperationCBC,\n            cfb: ModeOfOperationCFB,\n            ofb: ModeOfOperationOFB,\n            ctr: ModeOfOperationCTR\n        },\n\n        utils: {\n            hex: convertHex,\n            utf8: convertUtf8\n        },\n\n        padding: {\n            pkcs7: {\n                pad: pkcs7pad,\n                strip: pkcs7strip\n            }\n        },\n\n        _arrayTest: {\n            coerceArray: coerceArray,\n            createArray: createArray,\n            copyArray: copyArray,\n        }\n    };\n\n\n    // node.js\n    if (typeof exports !== 'undefined') {\n        module.exports = aesjs\n\n    // RequireJS/AMD\n    // http://www.requirejs.org/docs/api.html\n    // https://github.com/amdjs/amdjs-api/wiki/AMD\n    } else if (typeof(define) === 'function' && define.amd) {\n        define(aesjs);\n\n    // Web Browsers\n    } else {\n\n        // If there was an existing library at \"aesjs\" make sure it's still available\n        if (root.aesjs) {\n            aesjs._aesjs = root.aesjs;\n        }\n\n        root.aesjs = aesjs;\n    }\n\n\n})(this);\n","export const version = \"json-wallets/5.7.0\";\n","\"use strict\";\n\nimport { arrayify, Bytes, BytesLike, hexlify } from \"@ethersproject/bytes\";\nimport { toUtf8Bytes, UnicodeNormalizationForm } from '@ethersproject/strings';\n\nexport function looseArrayify(hexString: string): Uint8Array {\n    if (typeof(hexString) === 'string' && hexString.substring(0, 2) !== '0x') {\n        hexString = '0x' + hexString;\n    }\n    return arrayify(hexString);\n}\n\nexport function zpad(value: String | number, length: number): String {\n    value = String(value);\n    while (value.length < length) { value = '0' + value; }\n    return value;\n}\n\nexport function getPassword(password: Bytes | string): Uint8Array {\n    if (typeof(password) === 'string') {\n        return toUtf8Bytes(password, UnicodeNormalizationForm.NFKC);\n    }\n    return arrayify(password);\n}\n\nexport function searchPath(object: any, path: string): string {\n    let currentChild = object;\n\n    const comps = path.toLowerCase().split('/');\n    for (let i = 0; i < comps.length; i++) {\n\n        // Search for a child object with a case-insensitive matching key\n        let matchingChild = null;\n        for (const key in currentChild) {\n             if (key.toLowerCase() === comps[i]) {\n                 matchingChild = currentChild[key];\n                 break;\n             }\n        }\n\n        // Didn't find one. :'(\n        if (matchingChild === null) {\n            return null;\n        }\n\n        // Now check this child...\n        currentChild = matchingChild;\n    }\n\n    return currentChild;\n}\n\n// See: https://www.ietf.org/rfc/rfc4122.txt (Section 4.4)\nexport function uuidV4(randomBytes: BytesLike): string {\n    const bytes = arrayify(randomBytes);\n\n    // Section: 4.1.3:\n    // - time_hi_and_version[12:16] = 0b0100\n    bytes[6] = (bytes[6] & 0x0f) | 0x40;\n\n    // Section 4.4\n    // - clock_seq_hi_and_reserved[6] = 0b0\n    // - clock_seq_hi_and_reserved[7] = 0b1\n    bytes[8] = (bytes[8] & 0x3f) | 0x80;\n\n    const value = hexlify(bytes);\n\n    return [\n       value.substring(2, 10),\n       value.substring(10, 14),\n       value.substring(14, 18),\n       value.substring(18, 22),\n       value.substring(22, 34),\n    ].join(\"-\");\n}\n\n","\"use strict\";\n\nimport aes from \"aes-js\";\n\nimport { ExternallyOwnedAccount } from \"@ethersproject/abstract-signer\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { arrayify, Bytes } from \"@ethersproject/bytes\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { pbkdf2 } from \"@ethersproject/pbkdf2\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\nimport { Description } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { getPassword, looseArrayify, searchPath } from \"./utils\";\n\nexport interface _CrowdsaleAccount {\n    address: string;\n    privateKey: string;\n\n    _isCrowdsaleAccount: boolean;\n}\n\nexport class CrowdsaleAccount extends Description<_CrowdsaleAccount> implements ExternallyOwnedAccount {\n    readonly address: string;\n    readonly privateKey: string;\n    readonly mnemonic?: string;\n    readonly path?: string;\n\n    readonly _isCrowdsaleAccount: boolean;\n\n    isCrowdsaleAccount(value: any): value is CrowdsaleAccount {\n        return !!(value && value._isCrowdsaleAccount);\n    }\n}\n\n// See: https://github.com/ethereum/pyethsaletool\nexport function decrypt(json: string, password: Bytes | string): ExternallyOwnedAccount {\n    const data = JSON.parse(json);\n\n    password = getPassword(password);\n\n    // Ethereum Address\n    const ethaddr = getAddress(searchPath(data, \"ethaddr\"));\n\n    // Encrypted Seed\n    const encseed = looseArrayify(searchPath(data, \"encseed\"));\n    if (!encseed || (encseed.length % 16) !== 0) {\n        logger.throwArgumentError(\"invalid encseed\", \"json\", json);\n    }\n\n    const key = arrayify(pbkdf2(password, password, 2000, 32, \"sha256\")).slice(0, 16);\n\n    const iv = encseed.slice(0, 16);\n    const encryptedSeed = encseed.slice(16);\n\n    // Decrypt the seed\n    const aesCbc = new aes.ModeOfOperation.cbc(key, iv);\n    const seed = aes.padding.pkcs7.strip(arrayify(aesCbc.decrypt(encryptedSeed)));\n\n    // This wallet format is weird... Convert the binary encoded hex to a string.\n    let seedHex = \"\";\n    for (let i = 0; i < seed.length; i++) {\n        seedHex += String.fromCharCode(seed[i]);\n    }\n\n    const seedHexBytes = toUtf8Bytes(seedHex);\n\n    const privateKey = keccak256(seedHexBytes);\n\n    return new CrowdsaleAccount ({\n        _isCrowdsaleAccount: true,\n        address: ethaddr,\n        privateKey: privateKey\n    });\n}\n\n","\"use strict\";\n\nimport { getAddress } from \"@ethersproject/address\";\n\n\nexport function isCrowdsaleWallet(json: string): boolean {\n    let data: any = null;\n    try {\n        data = JSON.parse(json);\n    } catch (error) { return false; }\n\n    return (data.encseed && data.ethaddr);\n}\n\nexport function isKeystoreWallet(json: string): boolean {\n    let data: any = null;\n    try {\n        data = JSON.parse(json);\n    } catch (error) { return false; }\n\n    if (!data.version || parseInt(data.version) !== data.version || parseInt(data.version) !== 3) {\n        return false;\n    }\n\n    // @TODO: Put more checks to make sure it has kdf, iv and all that good stuff\n    return true;\n}\n\n//export function isJsonWallet(json: string): boolean {\n//    return (isSecretStorageWallet(json) || isCrowdsaleWallet(json));\n//}\n\nexport function getJsonWalletAddress(json: string): string {\n    if (isCrowdsaleWallet(json)) {\n        try {\n            return getAddress(JSON.parse(json).ethaddr);\n        } catch (error) { return null; }\n    }\n\n    if (isKeystoreWallet(json)) {\n        try {\n            return getAddress(JSON.parse(json).address);\n        } catch (error) { return null; }\n    }\n\n    return null;\n}\n\n","\"use strict\";\n\n(function(root) {\n    const MAX_VALUE = 0x7fffffff;\n\n    // The SHA256 and PBKDF2 implementation are from scrypt-async-js:\n    // See: https://github.com/dchest/scrypt-async-js\n    function SHA256(m) {\n        const K = new Uint32Array([\n           0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b,\n           0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01,\n           0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7,\n           0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n           0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152,\n           0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147,\n           0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc,\n           0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n           0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819,\n           0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08,\n           0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f,\n           0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n           0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n       ]);\n\n        let h0 = 0x6a09e667, h1 = 0xbb67ae85, h2 = 0x3c6ef372, h3 = 0xa54ff53a;\n        let h4 = 0x510e527f, h5 = 0x9b05688c, h6 = 0x1f83d9ab, h7 = 0x5be0cd19;\n        const w = new Uint32Array(64);\n\n        function blocks(p) {\n            let off = 0, len = p.length;\n            while (len >= 64) {\n                let a = h0, b = h1, c = h2, d = h3, e = h4, f = h5, g = h6, h = h7, u, i, j, t1, t2;\n\n                for (i = 0; i < 16; i++) {\n                    j = off + i*4;\n                    w[i] = ((p[j] & 0xff)<<24) | ((p[j+1] & 0xff)<<16) |\n                    ((p[j+2] & 0xff)<<8) | (p[j+3] & 0xff);\n                }\n\n                for (i = 16; i < 64; i++) {\n                    u = w[i-2];\n                    t1 = ((u>>>17) | (u<<(32-17))) ^ ((u>>>19) | (u<<(32-19))) ^ (u>>>10);\n\n                    u = w[i-15];\n                    t2 = ((u>>>7) | (u<<(32-7))) ^ ((u>>>18) | (u<<(32-18))) ^ (u>>>3);\n\n                    w[i] = (((t1 + w[i-7]) | 0) + ((t2 + w[i-16]) | 0)) | 0;\n                }\n\n                for (i = 0; i < 64; i++) {\n                    t1 = ((((((e>>>6) | (e<<(32-6))) ^ ((e>>>11) | (e<<(32-11))) ^\n                             ((e>>>25) | (e<<(32-25)))) + ((e & f) ^ (~e & g))) | 0) +\n                          ((h + ((K[i] + w[i]) | 0)) | 0)) | 0;\n\n                    t2 = ((((a>>>2) | (a<<(32-2))) ^ ((a>>>13) | (a<<(32-13))) ^\n                           ((a>>>22) | (a<<(32-22)))) + ((a & b) ^ (a & c) ^ (b & c))) | 0;\n\n                    h = g;\n                    g = f;\n                    f = e;\n                    e = (d + t1) | 0;\n                    d = c;\n                    c = b;\n                    b = a;\n                    a = (t1 + t2) | 0;\n                }\n\n                h0 = (h0 + a) | 0;\n                h1 = (h1 + b) | 0;\n                h2 = (h2 + c) | 0;\n                h3 = (h3 + d) | 0;\n                h4 = (h4 + e) | 0;\n                h5 = (h5 + f) | 0;\n                h6 = (h6 + g) | 0;\n                h7 = (h7 + h) | 0;\n\n                off += 64;\n                len -= 64;\n            }\n        }\n\n        blocks(m);\n\n        let i, bytesLeft = m.length % 64,\n        bitLenHi = (m.length / 0x20000000) | 0,\n        bitLenLo = m.length << 3,\n        numZeros = (bytesLeft < 56) ? 56 : 120,\n        p = m.slice(m.length - bytesLeft, m.length);\n\n        p.push(0x80);\n        for (i = bytesLeft + 1; i < numZeros; i++) { p.push(0); }\n        p.push((bitLenHi >>> 24) & 0xff);\n        p.push((bitLenHi >>> 16) & 0xff);\n        p.push((bitLenHi >>> 8)  & 0xff);\n        p.push((bitLenHi >>> 0)  & 0xff);\n        p.push((bitLenLo >>> 24) & 0xff);\n        p.push((bitLenLo >>> 16) & 0xff);\n        p.push((bitLenLo >>> 8)  & 0xff);\n        p.push((bitLenLo >>> 0)  & 0xff);\n\n        blocks(p);\n\n        return [\n            (h0 >>> 24) & 0xff, (h0 >>> 16) & 0xff, (h0 >>> 8) & 0xff, (h0 >>> 0) & 0xff,\n            (h1 >>> 24) & 0xff, (h1 >>> 16) & 0xff, (h1 >>> 8) & 0xff, (h1 >>> 0) & 0xff,\n            (h2 >>> 24) & 0xff, (h2 >>> 16) & 0xff, (h2 >>> 8) & 0xff, (h2 >>> 0) & 0xff,\n            (h3 >>> 24) & 0xff, (h3 >>> 16) & 0xff, (h3 >>> 8) & 0xff, (h3 >>> 0) & 0xff,\n            (h4 >>> 24) & 0xff, (h4 >>> 16) & 0xff, (h4 >>> 8) & 0xff, (h4 >>> 0) & 0xff,\n            (h5 >>> 24) & 0xff, (h5 >>> 16) & 0xff, (h5 >>> 8) & 0xff, (h5 >>> 0) & 0xff,\n            (h6 >>> 24) & 0xff, (h6 >>> 16) & 0xff, (h6 >>> 8) & 0xff, (h6 >>> 0) & 0xff,\n            (h7 >>> 24) & 0xff, (h7 >>> 16) & 0xff, (h7 >>> 8) & 0xff, (h7 >>> 0) & 0xff\n        ];\n    }\n\n    function PBKDF2_HMAC_SHA256_OneIter(password, salt, dkLen) {\n        // compress password if it's longer than hash block length\n        password = (password.length <= 64) ? password : SHA256(password);\n\n        const innerLen = 64 + salt.length + 4;\n        const inner = new Array(innerLen);\n        const outerKey = new Array(64);\n\n        let i;\n        let dk = [];\n\n        // inner = (password ^ ipad) || salt || counter\n        for (i = 0; i < 64; i++) { inner[i] = 0x36; }\n        for (i = 0; i < password.length; i++) { inner[i] ^= password[i]; }\n        for (i = 0; i < salt.length; i++) { inner[64 + i] = salt[i]; }\n        for (i = innerLen - 4; i < innerLen; i++) { inner[i] = 0; }\n\n        // outerKey = password ^ opad\n        for (i = 0; i < 64; i++) outerKey[i] = 0x5c;\n        for (i = 0; i < password.length; i++) outerKey[i] ^= password[i];\n\n        // increments counter inside inner\n        function incrementCounter() {\n            for (let i = innerLen - 1; i >= innerLen - 4; i--) {\n                inner[i]++;\n                if (inner[i] <= 0xff) return;\n                inner[i] = 0;\n            }\n        }\n\n        // output blocks = SHA256(outerKey || SHA256(inner)) ...\n        while (dkLen >= 32) {\n            incrementCounter();\n            dk = dk.concat(SHA256(outerKey.concat(SHA256(inner))));\n            dkLen -= 32;\n        }\n        if (dkLen > 0) {\n            incrementCounter();\n            dk = dk.concat(SHA256(outerKey.concat(SHA256(inner))).slice(0, dkLen));\n        }\n\n        return dk;\n    }\n\n    // The following is an adaptation of scryptsy\n    // See: https://www.npmjs.com/package/scryptsy\n    function blockmix_salsa8(BY, Yi, r, x, _X) {\n        let i;\n\n        arraycopy(BY, (2 * r - 1) * 16, _X, 0, 16);\n        for (i = 0; i < 2 * r; i++) {\n            blockxor(BY, i * 16, _X, 16);\n            salsa20_8(_X, x);\n            arraycopy(_X, 0, BY, Yi + (i * 16), 16);\n        }\n\n        for (i = 0; i < r; i++) {\n            arraycopy(BY, Yi + (i * 2) * 16, BY, (i * 16), 16);\n        }\n\n        for (i = 0; i < r; i++) {\n            arraycopy(BY, Yi + (i * 2 + 1) * 16, BY, (i + r) * 16, 16);\n        }\n    }\n\n    function R(a, b) {\n        return (a << b) | (a >>> (32 - b));\n    }\n\n    function salsa20_8(B, x) {\n        arraycopy(B, 0, x, 0, 16);\n\n        for (let i = 8; i > 0; i -= 2) {\n            x[ 4] ^= R(x[ 0] + x[12], 7);\n            x[ 8] ^= R(x[ 4] + x[ 0], 9);\n            x[12] ^= R(x[ 8] + x[ 4], 13);\n            x[ 0] ^= R(x[12] + x[ 8], 18);\n            x[ 9] ^= R(x[ 5] + x[ 1], 7);\n            x[13] ^= R(x[ 9] + x[ 5], 9);\n            x[ 1] ^= R(x[13] + x[ 9], 13);\n            x[ 5] ^= R(x[ 1] + x[13], 18);\n            x[14] ^= R(x[10] + x[ 6], 7);\n            x[ 2] ^= R(x[14] + x[10], 9);\n            x[ 6] ^= R(x[ 2] + x[14], 13);\n            x[10] ^= R(x[ 6] + x[ 2], 18);\n            x[ 3] ^= R(x[15] + x[11], 7);\n            x[ 7] ^= R(x[ 3] + x[15], 9);\n            x[11] ^= R(x[ 7] + x[ 3], 13);\n            x[15] ^= R(x[11] + x[ 7], 18);\n            x[ 1] ^= R(x[ 0] + x[ 3], 7);\n            x[ 2] ^= R(x[ 1] + x[ 0], 9);\n            x[ 3] ^= R(x[ 2] + x[ 1], 13);\n            x[ 0] ^= R(x[ 3] + x[ 2], 18);\n            x[ 6] ^= R(x[ 5] + x[ 4], 7);\n            x[ 7] ^= R(x[ 6] + x[ 5], 9);\n            x[ 4] ^= R(x[ 7] + x[ 6], 13);\n            x[ 5] ^= R(x[ 4] + x[ 7], 18);\n            x[11] ^= R(x[10] + x[ 9], 7);\n            x[ 8] ^= R(x[11] + x[10], 9);\n            x[ 9] ^= R(x[ 8] + x[11], 13);\n            x[10] ^= R(x[ 9] + x[ 8], 18);\n            x[12] ^= R(x[15] + x[14], 7);\n            x[13] ^= R(x[12] + x[15], 9);\n            x[14] ^= R(x[13] + x[12], 13);\n            x[15] ^= R(x[14] + x[13], 18);\n        }\n\n        for (let i = 0; i < 16; ++i) {\n            B[i] += x[i];\n        }\n    }\n\n    // naive approach... going back to loop unrolling may yield additional performance\n    function blockxor(S, Si, D, len) {\n        for (let i = 0; i < len; i++) {\n            D[i] ^= S[Si + i]\n        }\n    }\n\n    function arraycopy(src, srcPos, dest, destPos, length) {\n        while (length--) {\n            dest[destPos++] = src[srcPos++];\n        }\n    }\n\n    function checkBufferish(o) {\n        if (!o || typeof(o.length) !== 'number') { return false; }\n\n        for (let i = 0; i < o.length; i++) {\n            const v = o[i];\n            if (typeof(v) !== 'number' || v % 1 || v < 0 || v >= 256) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    function ensureInteger(value, name) {\n        if (typeof(value) !== \"number\" || (value % 1)) { throw new Error('invalid ' + name); }\n        return value;\n    }\n\n    // N = Cpu cost, r = Memory cost, p = parallelization cost\n    // callback(error, progress, key)\n    function _scrypt(password, salt, N, r, p, dkLen, callback) {\n\n        N = ensureInteger(N, 'N');\n        r = ensureInteger(r, 'r');\n        p = ensureInteger(p, 'p');\n\n        dkLen = ensureInteger(dkLen, 'dkLen');\n\n        if (N === 0 || (N & (N - 1)) !== 0) { throw new Error('N must be power of 2'); }\n\n        if (N > MAX_VALUE / 128 / r) { throw new Error('N too large'); }\n        if (r > MAX_VALUE / 128 / p) { throw new Error('r too large'); }\n\n        if (!checkBufferish(password)) {\n            throw new Error('password must be an array or buffer');\n        }\n        password = Array.prototype.slice.call(password);\n\n        if (!checkBufferish(salt)) {\n            throw new Error('salt must be an array or buffer');\n        }\n        salt = Array.prototype.slice.call(salt);\n\n        let b = PBKDF2_HMAC_SHA256_OneIter(password, salt, p * 128 * r);\n        const B = new Uint32Array(p * 32 * r)\n        for (let i = 0; i < B.length; i++) {\n            const j = i * 4;\n            B[i] = ((b[j + 3] & 0xff) << 24) |\n                   ((b[j + 2] & 0xff) << 16) |\n                   ((b[j + 1] & 0xff) << 8) |\n                   ((b[j + 0] & 0xff) << 0);\n        }\n\n        const XY = new Uint32Array(64 * r);\n        const V = new Uint32Array(32 * r * N);\n\n        const Yi = 32 * r;\n\n        // scratch space\n        const x = new Uint32Array(16);       // salsa20_8\n        const _X = new Uint32Array(16);      // blockmix_salsa8\n\n        const totalOps = p * N * 2;\n        let currentOp = 0;\n        let lastPercent10 = null;\n\n        // Set this to true to abandon the scrypt on the next step\n        let stop = false;\n\n        // State information\n        let state = 0;\n        let i0 = 0, i1;\n        let Bi;\n\n        // How many blockmix_salsa8 can we do per step?\n        const limit = callback ? parseInt(1000 / r): 0xffffffff;\n\n        // Trick from scrypt-async; if there is a setImmediate shim in place, use it\n        const nextTick = (typeof(setImmediate) !== 'undefined') ? setImmediate : setTimeout;\n\n        // This is really all I changed; making scryptsy a state machine so we occasionally\n        // stop and give other evnts on the evnt loop a chance to run. ~RicMoo\n        const incrementalSMix = function() {\n            if (stop) {\n                return callback(new Error('cancelled'), currentOp / totalOps);\n            }\n\n            let steps;\n\n            switch (state) {\n                case 0:\n                    // for (var i = 0; i < p; i++)...\n                    Bi = i0 * 32 * r;\n\n                    arraycopy(B, Bi, XY, 0, Yi);                       // ROMix - 1\n\n                    state = 1;                                         // Move to ROMix 2\n                    i1 = 0;\n\n                    // Fall through\n\n                case 1:\n\n                    // Run up to 1000 steps of the first inner smix loop\n                    steps = N - i1;\n                    if (steps > limit) { steps = limit; }\n                    for (let i = 0; i < steps; i++) {                  // ROMix - 2\n                        arraycopy(XY, 0, V, (i1 + i) * Yi, Yi)         // ROMix - 3\n                        blockmix_salsa8(XY, Yi, r, x, _X);             // ROMix - 4\n                    }\n\n                    // for (var i = 0; i < N; i++)\n                    i1 += steps;\n                    currentOp += steps;\n\n                    if (callback) {\n                        // Call the callback with the progress (optionally stopping us)\n                        const percent10 = parseInt(1000 * currentOp / totalOps);\n                        if (percent10 !== lastPercent10) {\n                            stop = callback(null, currentOp / totalOps);\n                            if (stop) { break; }\n                            lastPercent10 = percent10;\n                        }\n                    }\n\n                    if (i1 < N) { break; }\n\n                    i1 = 0;                                          // Move to ROMix 6\n                    state = 2;\n\n                    // Fall through\n\n                case 2:\n\n                    // Run up to 1000 steps of the second inner smix loop\n                    steps = N - i1;\n                    if (steps > limit) { steps = limit; }\n                    for (let i = 0; i < steps; i++) {                // ROMix - 6\n                        const offset = (2 * r - 1) * 16;             // ROMix - 7\n                        const j = XY[offset] & (N - 1);\n                        blockxor(V, j * Yi, XY, Yi);                 // ROMix - 8 (inner)\n                        blockmix_salsa8(XY, Yi, r, x, _X);           // ROMix - 9 (outer)\n                    }\n\n                    // for (var i = 0; i < N; i++)...\n                    i1 += steps;\n                    currentOp += steps;\n\n                    // Call the callback with the progress (optionally stopping us)\n                    if (callback) {\n                        const percent10 = parseInt(1000 * currentOp / totalOps);\n                        if (percent10 !== lastPercent10) {\n                            stop = callback(null, currentOp / totalOps);\n                            if (stop) { break; }\n                            lastPercent10 = percent10;\n                        }\n                    }\n\n                    if (i1 < N) { break; }\n\n                    arraycopy(XY, 0, B, Bi, Yi);                     // ROMix - 10\n\n                    // for (var i = 0; i < p; i++)...\n                    i0++;\n                    if (i0 < p) {\n                        state = 0;\n                        break;\n                    }\n\n                    b = [];\n                    for (let i = 0; i < B.length; i++) {\n                        b.push((B[i] >>  0) & 0xff);\n                        b.push((B[i] >>  8) & 0xff);\n                        b.push((B[i] >> 16) & 0xff);\n                        b.push((B[i] >> 24) & 0xff);\n                    }\n\n                    const derivedKey = PBKDF2_HMAC_SHA256_OneIter(password, b, dkLen);\n\n                    // Send the result to the callback\n                    if (callback) { callback(null, 1.0, derivedKey); }\n\n                    // Done; don't break (which would reschedule)\n                    return derivedKey;\n            }\n\n            // Schedule the next steps\n            if (callback) { nextTick(incrementalSMix); }\n        }\n\n        // Run the smix state machine until completion\n        if (!callback) {\n            while (true) {\n                const derivedKey = incrementalSMix();\n                if (derivedKey != undefined) { return derivedKey; }\n            }\n        }\n\n        // Bootstrap the async incremental smix\n        incrementalSMix();\n    }\n\n    const lib = {\n        scrypt: function(password, salt, N, r, p, dkLen, progressCallback) {\n            return new Promise(function(resolve, reject) {\n                let lastProgress = 0;\n                if (progressCallback) { progressCallback(0); }\n                _scrypt(password, salt, N, r, p, dkLen, function(error, progress, key) {\n                    if (error) {\n                        reject(error);\n                    } else if (key) {\n                        if (progressCallback && lastProgress !== 1) {\n                            progressCallback(1);\n                        }\n                        resolve(new Uint8Array(key));\n                    } else if (progressCallback && progress !== lastProgress) {\n                        lastProgress = progress;\n                        return progressCallback(progress);\n                    }\n                });\n            });\n        },\n        syncScrypt: function(password, salt, N, r, p, dkLen) {\n            return new Uint8Array(_scrypt(password, salt, N, r, p, dkLen));\n        }\n    };\n\n    // node.js\n    if (typeof(exports) !== 'undefined') {\n       module.exports = lib;\n\n    // RequireJS/AMD\n    // http://www.requirejs.org/docs/api.html\n    // https://github.com/amdjs/amdjs-api/wiki/AMD\n    } else if (typeof(define) === 'function' && define.amd) {\n        define(lib);\n\n    // Web Browsers\n    } else if (root) {\n\n        // If there was an existing library \"scrypt\", make sure it is still available\n        if (root.scrypt) {\n            root._scrypt = root.scrypt;\n        }\n\n        root.scrypt = lib;\n    }\n\n})(this);\n","export const version = \"hdnode/5.7.0\";\n","\"use strict\";\n\n// See: https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki\n// See: https://github.com/bitcoin/bips/blob/master/bip-0039.mediawiki\n\n\nimport { ExternallyOwnedAccount } from \"@ethersproject/abstract-signer\";\nimport { Base58 } from \"@ethersproject/basex\";\nimport { arrayify, BytesLike, concat, hexDataSlice, hexZeroPad, hexlify } from \"@ethersproject/bytes\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { toUtf8Bytes, UnicodeNormalizationForm } from \"@ethersproject/strings\";\nimport { pbkdf2 } from \"@ethersproject/pbkdf2\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { SigningKey } from \"@ethersproject/signing-key\";\nimport { computeHmac, ripemd160, sha256, SupportedAlgorithm } from \"@ethersproject/sha2\";\nimport { computeAddress } from \"@ethersproject/transactions\";\nimport { Wordlist, wordlists } from \"@ethersproject/wordlists\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nconst N = BigNumber.from(\"0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141\");\n\n\n// \"Bitcoin seed\"\nconst MasterSecret = toUtf8Bytes(\"Bitcoin seed\");\n\nconst HardenedBit = 0x80000000;\n\n// Returns a byte with the MSB bits set\nfunction getUpperMask(bits: number): number {\n   return ((1 << bits) - 1) << (8 - bits);\n}\n\n// Returns a byte with the LSB bits set\nfunction getLowerMask(bits: number): number {\n   return (1 << bits) - 1;\n}\n\nfunction bytes32(value: BigNumber | Uint8Array): string {\n    return hexZeroPad(hexlify(value), 32);\n}\n\nfunction base58check(data: Uint8Array): string {\n    return Base58.encode(concat([ data, hexDataSlice(sha256(sha256(data)), 0, 4) ]));\n}\n\nfunction getWordlist(wordlist: string | Wordlist): Wordlist {\n    if (wordlist == null) {\n        return wordlists[\"en\"];\n    }\n\n    if (typeof(wordlist) === \"string\") {\n        const words = wordlists[wordlist];\n        if (words == null) {\n            logger.throwArgumentError(\"unknown locale\", \"wordlist\", wordlist);\n        }\n        return words;\n    }\n\n    return wordlist;\n}\n\nconst _constructorGuard: any = {};\n\nexport const defaultPath = \"m/44'/60'/0'/0/0\";\n\nexport interface Mnemonic {\n    readonly phrase: string;\n    readonly path: string;\n    readonly locale: string;\n};\n\nexport class HDNode implements ExternallyOwnedAccount {\n    readonly privateKey: string;\n    readonly publicKey: string;\n\n    readonly fingerprint: string;\n    readonly parentFingerprint: string;\n\n    readonly address: string;\n\n    readonly mnemonic?: Mnemonic;\n    readonly path: string;\n\n    readonly chainCode: string;\n\n    readonly index: number;\n    readonly depth: number;\n\n    /**\n     *  This constructor should not be called directly.\n     *\n     *  Please use:\n     *   - fromMnemonic\n     *   - fromSeed\n     */\n    constructor(constructorGuard: any, privateKey: string, publicKey: string, parentFingerprint: string, chainCode: string, index: number, depth: number, mnemonicOrPath: Mnemonic | string) {\n        /* istanbul ignore if */\n        if (constructorGuard !== _constructorGuard) {\n            throw new Error(\"HDNode constructor cannot be called directly\");\n        }\n\n        if (privateKey) {\n            const signingKey = new SigningKey(privateKey);\n            defineReadOnly(this, \"privateKey\", signingKey.privateKey);\n            defineReadOnly(this, \"publicKey\", signingKey.compressedPublicKey);\n        } else {\n            defineReadOnly(this, \"privateKey\", null);\n            defineReadOnly(this, \"publicKey\", hexlify(publicKey));\n        }\n\n        defineReadOnly(this, \"parentFingerprint\", parentFingerprint);\n        defineReadOnly(this, \"fingerprint\", hexDataSlice(ripemd160(sha256(this.publicKey)), 0, 4));\n\n        defineReadOnly(this, \"address\", computeAddress(this.publicKey));\n\n        defineReadOnly(this, \"chainCode\", chainCode);\n\n        defineReadOnly(this, \"index\", index);\n        defineReadOnly(this, \"depth\", depth);\n\n        if (mnemonicOrPath == null) {\n            // From a source that does not preserve the path (e.g. extended keys)\n            defineReadOnly(this, \"mnemonic\", null);\n            defineReadOnly(this, \"path\", null);\n\n        } else if (typeof(mnemonicOrPath) === \"string\") {\n            // From a source that does not preserve the mnemonic (e.g. neutered)\n            defineReadOnly(this, \"mnemonic\", null);\n            defineReadOnly(this, \"path\", mnemonicOrPath);\n\n        } else {\n            // From a fully qualified source\n            defineReadOnly(this, \"mnemonic\", mnemonicOrPath);\n            defineReadOnly(this, \"path\", mnemonicOrPath.path);\n        }\n    }\n\n    get extendedKey(): string {\n        // We only support the mainnet values for now, but if anyone needs\n        // testnet values, let me know. I believe current sentiment is that\n        // we should always use mainnet, and use BIP-44 to derive the network\n        //   - Mainnet: public=0x0488B21E, private=0x0488ADE4\n        //   - Testnet: public=0x043587CF, private=0x04358394\n\n        if (this.depth >= 256) { throw new Error(\"Depth too large!\"); }\n\n        return base58check(concat([\n            ((this.privateKey != null) ? \"0x0488ADE4\": \"0x0488B21E\"),\n            hexlify(this.depth),\n            this.parentFingerprint,\n            hexZeroPad(hexlify(this.index), 4),\n            this.chainCode,\n            ((this.privateKey != null) ? concat([ \"0x00\", this.privateKey ]): this.publicKey),\n        ]));\n    }\n\n    neuter(): HDNode {\n        return new HDNode(_constructorGuard, null, this.publicKey, this.parentFingerprint, this.chainCode, this.index, this.depth, this.path);\n    }\n\n    private _derive(index: number): HDNode {\n        if (index > 0xffffffff) { throw new Error(\"invalid index - \" + String(index)); }\n\n        // Base path\n        let path = this.path;\n        if (path) { path += \"/\" + (index & ~HardenedBit); }\n\n        const data = new Uint8Array(37);\n\n        if (index & HardenedBit) {\n            if (!this.privateKey) {\n                throw new Error(\"cannot derive child of neutered node\");\n            }\n\n            // Data = 0x00 || ser_256(k_par)\n            data.set(arrayify(this.privateKey), 1);\n\n            // Hardened path\n            if (path) { path += \"'\"; }\n\n        } else {\n            // Data = ser_p(point(k_par))\n            data.set(arrayify(this.publicKey));\n        }\n\n        // Data += ser_32(i)\n        for (let i = 24; i >= 0; i -= 8) { data[33 + (i >> 3)] = ((index >> (24 - i)) & 0xff); }\n\n        const I = arrayify(computeHmac(SupportedAlgorithm.sha512, this.chainCode, data));\n        const IL = I.slice(0, 32);\n        const IR = I.slice(32);\n\n        // The private key\n        let ki: string = null\n\n        // The public key\n        let Ki: string = null;\n\n        if (this.privateKey) {\n            ki = bytes32(BigNumber.from(IL).add(this.privateKey).mod(N));\n        } else {\n            const ek = new SigningKey(hexlify(IL));\n            Ki = ek._addPoint(this.publicKey);\n        }\n\n        let mnemonicOrPath: Mnemonic | string = path;\n\n        const srcMnemonic =  this.mnemonic;\n        if (srcMnemonic) {\n            mnemonicOrPath = Object.freeze({\n                phrase: srcMnemonic.phrase,\n                path: path,\n                locale: (srcMnemonic.locale || \"en\")\n            });\n        }\n\n        return new HDNode(_constructorGuard, ki, Ki, this.fingerprint, bytes32(IR), index, this.depth + 1, mnemonicOrPath);\n    }\n\n    derivePath(path: string): HDNode {\n        const components = path.split(\"/\");\n\n        if (components.length === 0 || (components[0] === \"m\" && this.depth !== 0)) {\n            throw new Error(\"invalid path - \" + path);\n        }\n\n        if (components[0] === \"m\") { components.shift(); }\n\n        let result: HDNode = this;\n        for (let i = 0; i < components.length; i++) {\n            const component = components[i];\n            if (component.match(/^[0-9]+'$/)) {\n                const index = parseInt(component.substring(0, component.length - 1));\n                if (index >= HardenedBit) { throw new Error(\"invalid path index - \" + component); }\n                result = result._derive(HardenedBit + index);\n            } else if (component.match(/^[0-9]+$/)) {\n                const index = parseInt(component);\n                if (index >= HardenedBit) { throw new Error(\"invalid path index - \" + component); }\n                result = result._derive(index);\n            } else {\n                throw new Error(\"invalid path component - \" + component);\n            }\n        }\n\n        return result;\n    }\n\n\n    static _fromSeed(seed: BytesLike, mnemonic: Mnemonic): HDNode {\n        const seedArray: Uint8Array = arrayify(seed);\n        if (seedArray.length < 16 || seedArray.length > 64) { throw new Error(\"invalid seed\"); }\n\n        const I: Uint8Array = arrayify(computeHmac(SupportedAlgorithm.sha512, MasterSecret, seedArray));\n\n        return new HDNode(_constructorGuard, bytes32(I.slice(0, 32)), null, \"0x00000000\", bytes32(I.slice(32)), 0, 0, mnemonic);\n    }\n\n    static fromMnemonic(mnemonic: string, password?: string, wordlist?: string | Wordlist): HDNode {\n\n        // If a locale name was passed in, find the associated wordlist\n        wordlist = getWordlist(wordlist);\n\n        // Normalize the case and spacing in the mnemonic (throws if the mnemonic is invalid)\n        mnemonic = entropyToMnemonic(mnemonicToEntropy(mnemonic, wordlist), wordlist);\n\n        return HDNode._fromSeed(mnemonicToSeed(mnemonic, password), {\n            phrase: mnemonic,\n            path: \"m\",\n            locale: wordlist.locale\n        });\n    }\n\n    static fromSeed(seed: BytesLike): HDNode {\n        return HDNode._fromSeed(seed, null);\n    }\n\n    static fromExtendedKey(extendedKey: string): HDNode {\n        const bytes = Base58.decode(extendedKey);\n\n        if (bytes.length !== 82 || base58check(bytes.slice(0, 78)) !== extendedKey) {\n            logger.throwArgumentError(\"invalid extended key\", \"extendedKey\", \"[REDACTED]\");\n        }\n\n        const depth = bytes[4];\n        const parentFingerprint = hexlify(bytes.slice(5, 9));\n        const index = parseInt(hexlify(bytes.slice(9, 13)).substring(2), 16);\n        const chainCode = hexlify(bytes.slice(13, 45));\n        const key = bytes.slice(45, 78);\n\n        switch (hexlify(bytes.slice(0, 4))) {\n            // Public Key\n            case \"0x0488b21e\": case \"0x043587cf\":\n                return new HDNode(_constructorGuard, null, hexlify(key), parentFingerprint, chainCode, index, depth, null);\n\n            // Private Key\n            case \"0x0488ade4\": case \"0x04358394 \":\n                if (key[0] !== 0) { break; }\n                return new HDNode(_constructorGuard, hexlify(key.slice(1)), null, parentFingerprint, chainCode, index, depth, null);\n        }\n\n        return logger.throwArgumentError(\"invalid extended key\", \"extendedKey\", \"[REDACTED]\");\n    }\n}\n\nexport function mnemonicToSeed(mnemonic: string, password?: string): string {\n    if (!password) { password = \"\"; }\n\n    const salt = toUtf8Bytes(\"mnemonic\" + password, UnicodeNormalizationForm.NFKD);\n\n    return pbkdf2(toUtf8Bytes(mnemonic, UnicodeNormalizationForm.NFKD), salt, 2048, 64, \"sha512\");\n}\n\nexport function mnemonicToEntropy(mnemonic: string, wordlist?: string | Wordlist): string {\n    wordlist = getWordlist(wordlist);\n\n    logger.checkNormalize();\n\n    const words = wordlist.split(mnemonic);\n    if ((words.length % 3) !== 0) { throw new Error(\"invalid mnemonic\"); }\n\n    const entropy = arrayify(new Uint8Array(Math.ceil(11 * words.length / 8)));\n\n    let offset = 0;\n    for (let i = 0; i < words.length; i++) {\n        let index = wordlist.getWordIndex(words[i].normalize(\"NFKD\"));\n        if (index === -1) { throw new Error(\"invalid mnemonic\"); }\n\n        for (let bit = 0; bit < 11; bit++) {\n            if (index & (1 << (10 - bit))) {\n                entropy[offset >> 3] |= (1 << (7 - (offset % 8)));\n            }\n            offset++;\n        }\n    }\n\n    const entropyBits = 32 * words.length / 3;\n\n    const checksumBits = words.length / 3;\n    const checksumMask = getUpperMask(checksumBits);\n\n    const checksum = arrayify(sha256(entropy.slice(0, entropyBits / 8)))[0] & checksumMask;\n\n    if (checksum !== (entropy[entropy.length - 1] & checksumMask)) {\n        throw new Error(\"invalid checksum\");\n    }\n\n    return hexlify(entropy.slice(0, entropyBits / 8));\n}\n\nexport function entropyToMnemonic(entropy: BytesLike, wordlist?: string | Wordlist): string {\n    wordlist = getWordlist(wordlist);\n\n    entropy = arrayify(entropy);\n\n    if ((entropy.length % 4) !== 0 || entropy.length < 16 || entropy.length > 32) {\n        throw new Error(\"invalid entropy\");\n    }\n\n    const indices: Array<number> = [ 0 ];\n\n    let remainingBits = 11;\n    for (let i = 0; i < entropy.length; i++) {\n\n        // Consume the whole byte (with still more to go)\n        if (remainingBits > 8) {\n            indices[indices.length - 1] <<= 8;\n            indices[indices.length - 1] |= entropy[i];\n\n            remainingBits -= 8;\n\n        // This byte will complete an 11-bit index\n        } else {\n            indices[indices.length - 1] <<= remainingBits;\n            indices[indices.length - 1] |= entropy[i] >> (8 - remainingBits);\n\n            // Start the next word\n            indices.push(entropy[i] & getLowerMask(8 - remainingBits));\n\n            remainingBits += 3;\n        }\n    }\n\n    // Compute the checksum bits\n    const checksumBits = entropy.length / 4;\n    const checksum = arrayify(sha256(entropy))[0] & getUpperMask(checksumBits);\n\n    // Shift the checksum into the word indices\n    indices[indices.length - 1] <<= checksumBits;\n    indices[indices.length - 1] |= (checksum >> (8 - checksumBits));\n\n    return wordlist.join(indices.map((index) => (<Wordlist>wordlist).getWord(index)));\n}\n\nexport function isValidMnemonic(mnemonic: string, wordlist?: Wordlist): boolean {\n    try {\n        mnemonicToEntropy(mnemonic, wordlist);\n        return true;\n    } catch (error) { }\n    return false;\n}\n\nexport function getAccountPath(index: number): string {\n    if (typeof(index) !== \"number\" || index < 0 || index >= HardenedBit || index % 1) {\n        logger.throwArgumentError(\"invalid account index\", \"index\", index);\n    }\n    return `m/44'/60'/${ index }'/0/0`;\n}\n","export const version = \"random/5.7.0\";\n","\"use strict\";\n\nimport { arrayify } from \"@ethersproject/bytes\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n// Debugging line for testing browser lib in node\n//const window = { crypto: { getRandomValues: () => { } } };\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/globalThis\nfunction getGlobal(): any {\n  if (typeof self !== 'undefined') { return self; }\n  if (typeof window !== 'undefined') { return window; }\n  if (typeof global !== 'undefined') { return global; }\n  throw new Error('unable to locate global object');\n};\n\nconst anyGlobal = getGlobal();\n\nlet crypto: any = anyGlobal.crypto || anyGlobal.msCrypto;\nif (!crypto || !crypto.getRandomValues) {\n\n    logger.warn(\"WARNING: Missing strong random number source\");\n\n    crypto = {\n        getRandomValues: function(buffer: Uint8Array): Uint8Array {\n            return logger.throwError(\"no secure random source avaialble\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"crypto.getRandomValues\"\n            });\n        }\n    };\n}\n\nexport function randomBytes(length: number): Uint8Array {\n    if (length <= 0 || length > 1024 || (length % 1) || length != length) {\n        logger.throwArgumentError(\"invalid length\", \"length\", length);\n    }\n\n    const result = new Uint8Array(length);\n    crypto.getRandomValues(result);\n    return arrayify(result);\n};\n","\"use strict\";\n\nexport function shuffled(array: Array<any>): Array<any> {\n    array = array.slice();\n\n    for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        const tmp = array[i];\n        array[i] = array[j];\n        array[j] = tmp;\n    }\n\n    return array;\n}\n","\"use strict\";\n\nexport { randomBytes } from \"./random\";\nexport { shuffled } from \"./shuffle\";\n","\"use strict\";\n\nimport aes from \"aes-js\";\nimport scrypt from \"scrypt-js\";\n\nimport { ExternallyOwnedAccount } from \"@ethersproject/abstract-signer\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { arrayify, Bytes, BytesLike, concat, hexlify } from \"@ethersproject/bytes\";\nimport { defaultPath, entropyToMnemonic, HDNode, Mnemonic, mnemonicToEntropy } from \"@ethersproject/hdnode\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { pbkdf2 as _pbkdf2 } from \"@ethersproject/pbkdf2\";\nimport { randomBytes } from \"@ethersproject/random\";\nimport { Description } from \"@ethersproject/properties\";\nimport { computeAddress } from \"@ethersproject/transactions\";\n\nimport { getPassword, looseArrayify, searchPath, uuidV4, zpad } from \"./utils\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n// Exported Types\n\nfunction hasMnemonic(value: any): value is { mnemonic: Mnemonic } {\n    return (value != null && value.mnemonic && value.mnemonic.phrase);\n}\n\nexport interface _KeystoreAccount {\n    address: string;\n    privateKey: string;\n    mnemonic?: Mnemonic;\n\n    _isKeystoreAccount: boolean;\n}\n\nexport class KeystoreAccount extends Description<_KeystoreAccount> implements ExternallyOwnedAccount {\n    readonly address: string;\n    readonly privateKey: string;\n    readonly mnemonic?: Mnemonic;\n\n    readonly _isKeystoreAccount: boolean;\n\n    isKeystoreAccount(value: any): value is KeystoreAccount {\n        return !!(value && value._isKeystoreAccount);\n    }\n}\n\nexport type ProgressCallback = (percent: number) => void;\n\nexport type EncryptOptions = {\n   iv?: BytesLike;\n   entropy?: BytesLike;\n   client?: string;\n   salt?: BytesLike;\n   uuid?: string;\n   scrypt?: {\n       N?: number;\n       r?: number;\n       p?: number;\n   }\n}\n\nfunction _decrypt(data: any, key: Uint8Array, ciphertext: Uint8Array): Uint8Array {\n    const cipher = searchPath(data, \"crypto/cipher\");\n    if (cipher === \"aes-128-ctr\") {\n        const iv = looseArrayify(searchPath(data, \"crypto/cipherparams/iv\"))\n        const counter = new aes.Counter(iv);\n\n        const aesCtr = new aes.ModeOfOperation.ctr(key, counter);\n\n        return arrayify(aesCtr.decrypt(ciphertext));\n    }\n\n    return null;\n}\n\nfunction _getAccount(data: any, key: Uint8Array): KeystoreAccount {\n    const ciphertext = looseArrayify(searchPath(data, \"crypto/ciphertext\"));\n\n    const computedMAC = hexlify(keccak256(concat([ key.slice(16, 32), ciphertext ]))).substring(2);\n    if (computedMAC !== searchPath(data, \"crypto/mac\").toLowerCase()) {\n        throw new Error(\"invalid password\");\n    }\n\n    const privateKey = _decrypt(data, key.slice(0, 16), ciphertext);\n\n    if (!privateKey) {\n        logger.throwError(\"unsupported cipher\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"decrypt\"\n        });\n    }\n\n    const mnemonicKey = key.slice(32, 64);\n\n    const address = computeAddress(privateKey);\n    if (data.address) {\n        let check = data.address.toLowerCase();\n        if (check.substring(0, 2) !== \"0x\") { check = \"0x\" + check; }\n\n        if (getAddress(check) !== address) {\n            throw new Error(\"address mismatch\");\n        }\n    }\n\n    const account: _KeystoreAccount = {\n        _isKeystoreAccount: true,\n        address: address,\n        privateKey: hexlify(privateKey)\n    };\n\n    // Version 0.1 x-ethers metadata must contain an encrypted mnemonic phrase\n    if (searchPath(data, \"x-ethers/version\") === \"0.1\") {\n        const mnemonicCiphertext = looseArrayify(searchPath(data, \"x-ethers/mnemonicCiphertext\"));\n        const mnemonicIv = looseArrayify(searchPath(data, \"x-ethers/mnemonicCounter\"));\n\n        const mnemonicCounter = new aes.Counter(mnemonicIv);\n        const mnemonicAesCtr = new aes.ModeOfOperation.ctr(mnemonicKey, mnemonicCounter);\n\n        const path = searchPath(data, \"x-ethers/path\") || defaultPath;\n        const locale = searchPath(data, \"x-ethers/locale\") || \"en\";\n\n        const entropy = arrayify(mnemonicAesCtr.decrypt(mnemonicCiphertext));\n\n        try {\n            const mnemonic = entropyToMnemonic(entropy, locale);\n            const node = HDNode.fromMnemonic(mnemonic, null, locale).derivePath(path);\n\n            if (node.privateKey != account.privateKey) {\n                throw new Error(\"mnemonic mismatch\");\n            }\n\n            account.mnemonic = node.mnemonic;\n\n        } catch (error) {\n            // If we don't have the locale wordlist installed to\n            // read this mnemonic, just bail and don't set the\n            // mnemonic\n            if (error.code !== Logger.errors.INVALID_ARGUMENT || error.argument !== \"wordlist\") {\n                throw error;\n            }\n        }\n    }\n\n    return new KeystoreAccount(account);\n}\n\ntype ScryptFunc<T> = (pw: Uint8Array, salt: Uint8Array, n: number, r: number, p: number, dkLen: number, callback?: ProgressCallback) => T;\ntype Pbkdf2Func<T> = (pw: Uint8Array, salt: Uint8Array, c: number, dkLen: number, prfFunc: string) => T;\n\nfunction pbkdf2Sync(passwordBytes: Uint8Array, salt: Uint8Array, count: number, dkLen: number, prfFunc: string): Uint8Array {\n    return arrayify(_pbkdf2(passwordBytes, salt, count, dkLen, prfFunc));\n}\n\nfunction pbkdf2(passwordBytes: Uint8Array, salt: Uint8Array, count: number, dkLen: number, prfFunc: string): Promise<Uint8Array> {\n    return Promise.resolve(pbkdf2Sync(passwordBytes, salt, count, dkLen, prfFunc));\n}\n\nfunction _computeKdfKey<T>(data: any, password: Bytes | string, pbkdf2Func: Pbkdf2Func<T>, scryptFunc: ScryptFunc<T>, progressCallback?: ProgressCallback): T {\n    const passwordBytes = getPassword(password);\n\n    const kdf = searchPath(data, \"crypto/kdf\");\n\n    if (kdf && typeof(kdf) === \"string\") {\n        const throwError = function(name: string, value: any): never {\n            return logger.throwArgumentError(\"invalid key-derivation function parameters\", name, value);\n        }\n\n        if (kdf.toLowerCase() === \"scrypt\") {\n            const salt = looseArrayify(searchPath(data, \"crypto/kdfparams/salt\"));\n            const N = parseInt(searchPath(data, \"crypto/kdfparams/n\"));\n            const r = parseInt(searchPath(data, \"crypto/kdfparams/r\"));\n            const p = parseInt(searchPath(data, \"crypto/kdfparams/p\"));\n\n            // Check for all required parameters\n            if (!N || !r || !p) { throwError(\"kdf\", kdf); }\n\n            // Make sure N is a power of 2\n            if ((N & (N - 1)) !== 0) { throwError(\"N\", N); }\n\n            const dkLen = parseInt(searchPath(data, \"crypto/kdfparams/dklen\"));\n            if (dkLen !== 32) { throwError(\"dklen\", dkLen); }\n\n            return scryptFunc(passwordBytes, salt, N, r, p, 64, progressCallback);\n\n        } else if (kdf.toLowerCase() === \"pbkdf2\") {\n\n            const salt = looseArrayify(searchPath(data, \"crypto/kdfparams/salt\"));\n\n            let prfFunc: string = null;\n            const prf = searchPath(data, \"crypto/kdfparams/prf\");\n            if (prf === \"hmac-sha256\") {\n                prfFunc = \"sha256\";\n            } else if (prf === \"hmac-sha512\") {\n                prfFunc = \"sha512\";\n            } else {\n                throwError(\"prf\", prf);\n            }\n\n            const count = parseInt(searchPath(data, \"crypto/kdfparams/c\"));\n\n            const dkLen = parseInt(searchPath(data, \"crypto/kdfparams/dklen\"));\n            if (dkLen !== 32) { throwError(\"dklen\", dkLen); }\n\n            return pbkdf2Func(passwordBytes, salt, count, dkLen, prfFunc);\n        }\n    }\n\n    return logger.throwArgumentError(\"unsupported key-derivation function\", \"kdf\", kdf);\n}\n\n\nexport function decryptSync(json: string, password: Bytes | string): KeystoreAccount {\n    const data = JSON.parse(json);\n\n    const key = _computeKdfKey(data, password, pbkdf2Sync, scrypt.syncScrypt);\n    return _getAccount(data, key);\n}\n\nexport async function decrypt(json: string, password: Bytes | string, progressCallback?: ProgressCallback): Promise<KeystoreAccount> {\n    const data = JSON.parse(json);\n\n    const key = await _computeKdfKey(data, password, pbkdf2, scrypt.scrypt, progressCallback);\n    return _getAccount(data, key);\n}\n\n\nexport function encrypt(account: ExternallyOwnedAccount, password: Bytes | string, options?: EncryptOptions, progressCallback?: ProgressCallback): Promise<string> {\n\n    try {\n        // Check the address matches the private key\n        if (getAddress(account.address) !== computeAddress(account.privateKey)) {\n            throw new Error(\"address/privateKey mismatch\");\n        }\n\n        // Check the mnemonic (if any) matches the private key\n        if (hasMnemonic(account)) {\n            const mnemonic = account.mnemonic;\n            const node = HDNode.fromMnemonic(mnemonic.phrase, null, mnemonic.locale).derivePath(mnemonic.path || defaultPath);\n\n            if (node.privateKey != account.privateKey) {\n                throw new Error(\"mnemonic mismatch\");\n            }\n        }\n\n    } catch (e) {\n        return Promise.reject(e);\n    }\n\n    // The options are optional, so adjust the call as needed\n    if (typeof(options) === \"function\" && !progressCallback) {\n        progressCallback = options;\n        options = {};\n    }\n    if (!options) { options = {}; }\n\n    const privateKey: Uint8Array = arrayify(account.privateKey);\n    const passwordBytes = getPassword(password);\n\n    let entropy: Uint8Array = null\n    let path: string = null;\n    let locale: string = null;\n    if (hasMnemonic(account)) {\n        const srcMnemonic = account.mnemonic;\n        entropy = arrayify(mnemonicToEntropy(srcMnemonic.phrase, srcMnemonic.locale || \"en\"));\n        path = srcMnemonic.path || defaultPath;\n        locale = srcMnemonic.locale || \"en\";\n    }\n\n    let client = options.client;\n    if (!client) { client = \"ethers.js\"; }\n\n    // Check/generate the salt\n    let salt: Uint8Array = null;\n    if (options.salt) {\n        salt = arrayify(options.salt);\n    } else {\n        salt = randomBytes(32);;\n    }\n\n    // Override initialization vector\n    let iv: Uint8Array = null;\n    if (options.iv) {\n        iv = arrayify(options.iv);\n        if (iv.length !== 16) { throw new Error(\"invalid iv\"); }\n    } else {\n       iv = randomBytes(16);\n    }\n\n    // Override the uuid\n    let uuidRandom: Uint8Array = null;\n    if (options.uuid) {\n        uuidRandom = arrayify(options.uuid);\n        if (uuidRandom.length !== 16) { throw new Error(\"invalid uuid\"); }\n    } else {\n        uuidRandom = randomBytes(16);\n    }\n\n    // Override the scrypt password-based key derivation function parameters\n    let N = (1 << 17), r = 8, p = 1;\n    if (options.scrypt) {\n        if (options.scrypt.N) { N = options.scrypt.N; }\n        if (options.scrypt.r) { r = options.scrypt.r; }\n        if (options.scrypt.p) { p = options.scrypt.p; }\n    }\n\n    // We take 64 bytes:\n    //   - 32 bytes   As normal for the Web3 secret storage (derivedKey, macPrefix)\n    //   - 32 bytes   AES key to encrypt mnemonic with (required here to be Ethers Wallet)\n    return scrypt.scrypt(passwordBytes, salt, N, r, p, 64, progressCallback).then((key) => {\n        key = arrayify(key);\n\n        // This will be used to encrypt the wallet (as per Web3 secret storage)\n        const derivedKey = key.slice(0, 16);\n        const macPrefix = key.slice(16, 32);\n\n        // This will be used to encrypt the mnemonic phrase (if any)\n        const mnemonicKey = key.slice(32, 64);\n\n        // Encrypt the private key\n        const counter = new aes.Counter(iv);\n        const aesCtr = new aes.ModeOfOperation.ctr(derivedKey, counter);\n        const ciphertext = arrayify(aesCtr.encrypt(privateKey));\n\n        // Compute the message authentication code, used to check the password\n        const mac = keccak256(concat([macPrefix, ciphertext]))\n\n        // See: https://github.com/ethereum/wiki/wiki/Web3-Secret-Storage-Definition\n        const data: { [key: string]: any } = {\n            address: account.address.substring(2).toLowerCase(),\n            id: uuidV4(uuidRandom),\n            version: 3,\n            crypto: {\n                cipher: \"aes-128-ctr\",\n                cipherparams: {\n                    iv: hexlify(iv).substring(2),\n                },\n                ciphertext: hexlify(ciphertext).substring(2),\n                kdf: \"scrypt\",\n                kdfparams: {\n                    salt: hexlify(salt).substring(2),\n                    n: N,\n                    dklen: 32,\n                    p: p,\n                    r: r\n                },\n                mac: mac.substring(2)\n            }\n        };\n\n        // If we have a mnemonic, encrypt it into the JSON wallet\n        if (entropy) {\n            const mnemonicIv = randomBytes(16);\n            const mnemonicCounter = new aes.Counter(mnemonicIv);\n            const mnemonicAesCtr = new aes.ModeOfOperation.ctr(mnemonicKey, mnemonicCounter);\n            const mnemonicCiphertext = arrayify(mnemonicAesCtr.encrypt(entropy));\n            const now = new Date();\n            const timestamp = (now.getUTCFullYear() + \"-\" +\n                               zpad(now.getUTCMonth() + 1, 2) + \"-\" +\n                               zpad(now.getUTCDate(), 2) + \"T\" +\n                               zpad(now.getUTCHours(), 2) + \"-\" +\n                               zpad(now.getUTCMinutes(), 2) + \"-\" +\n                               zpad(now.getUTCSeconds(), 2) + \".0Z\"\n                              );\n            data[\"x-ethers\"] = {\n                client: client,\n                gethFilename: (\"UTC--\" + timestamp + \"--\" + data.address),\n                mnemonicCounter: hexlify(mnemonicIv).substring(2),\n                mnemonicCiphertext: hexlify(mnemonicCiphertext).substring(2),\n                path: path,\n                locale: locale,\n                version: \"0.1\"\n            };\n        }\n\n        return JSON.stringify(data);\n    });\n}\n","\"use strict\";\n\nimport { Bytes } from \"@ethersproject/bytes\";\nimport { ExternallyOwnedAccount } from \"@ethersproject/abstract-signer\";\n\nimport { decrypt as decryptCrowdsale } from \"./crowdsale\";\nimport { getJsonWalletAddress, isCrowdsaleWallet, isKeystoreWallet } from \"./inspect\";\nimport { decrypt as decryptKeystore, decryptSync as decryptKeystoreSync, encrypt as encryptKeystore, EncryptOptions, ProgressCallback } from \"./keystore\";\n\nfunction decryptJsonWallet(json: string, password: Bytes | string, progressCallback?: ProgressCallback): Promise<ExternallyOwnedAccount> {\n    if (isCrowdsaleWallet(json)) {\n        if (progressCallback) { progressCallback(0); }\n        const account = decryptCrowdsale(json, password)\n        if (progressCallback) { progressCallback(1); }\n        return Promise.resolve(account);\n    }\n\n    if (isKeystoreWallet(json)) {\n        return decryptKeystore(json, password, progressCallback);\n    }\n\n    return Promise.reject(new Error(\"invalid JSON wallet\"));\n}\n\nfunction decryptJsonWalletSync(json: string, password: Bytes | string): ExternallyOwnedAccount {\n    if (isCrowdsaleWallet(json)) {\n        return decryptCrowdsale(json, password)\n    }\n\n    if (isKeystoreWallet(json)) {\n        return decryptKeystoreSync(json, password);\n    }\n\n    throw new Error(\"invalid JSON wallet\");\n}\n\nexport {\n    decryptCrowdsale,\n\n    decryptKeystore,\n    decryptKeystoreSync,\n    encryptKeystore,\n\n    isCrowdsaleWallet,\n    isKeystoreWallet,\n    getJsonWalletAddress,\n\n    decryptJsonWallet,\n    decryptJsonWalletSync,\n\n    ProgressCallback,\n    EncryptOptions,\n};\n","export const version = \"transactions/5.7.0\";\n","\"use strict\";\n\nimport { getAddress } from \"@ethersproject/address\";\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { arrayify, BytesLike, DataOptions, hexConcat, hexDataLength, hexDataSlice, hexlify, hexZeroPad, isBytesLike, SignatureLike, splitSignature, stripZeros, } from \"@ethersproject/bytes\";\nimport { Zero } from \"@ethersproject/constants\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { checkProperties } from \"@ethersproject/properties\";\nimport * as RLP from \"@ethersproject/rlp\";\nimport { computePublicKey, recoverPublicKey } from \"@ethersproject/signing-key\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n///////////////////////////////\n// Exported Types\n\nexport type AccessList = Array<{ address: string, storageKeys: Array<string> }>;\n\n// Input allows flexibility in describing an access list\nexport type AccessListish = AccessList |\n                            Array<[ string, Array<string> ]> |\n                            Record<string, Array<string>>;\n\nexport enum TransactionTypes {\n    legacy = 0,\n    eip2930 = 1,\n    eip1559 = 2,\n};\n\nexport type UnsignedTransaction = {\n    to?: string;\n    nonce?: number;\n\n    gasLimit?: BigNumberish;\n    gasPrice?: BigNumberish;\n\n    data?: BytesLike;\n    value?: BigNumberish;\n    chainId?: number;\n\n    // Typed-Transaction features\n    type?: number | null;\n\n    // EIP-2930; Type 1 & EIP-1559; Type 2\n    accessList?: AccessListish;\n\n    // EIP-1559; Type 2\n    maxPriorityFeePerGas?: BigNumberish;\n    maxFeePerGas?: BigNumberish;\n}\n\nexport interface Transaction {\n    hash?: string;\n\n    to?: string;\n    from?: string;\n    nonce: number;\n\n    gasLimit: BigNumber;\n    gasPrice?: BigNumber;\n\n    data: string;\n    value: BigNumber;\n    chainId: number;\n\n    r?: string;\n    s?: string;\n    v?: number;\n\n    // Typed-Transaction features\n    type?: number | null;\n\n    // EIP-2930; Type 1 & EIP-1559; Type 2\n    accessList?: AccessList;\n\n    // EIP-1559; Type 2\n    maxPriorityFeePerGas?: BigNumber;\n    maxFeePerGas?: BigNumber;\n}\n\n///////////////////////////////\n\nfunction handleAddress(value: string): string {\n    if (value === \"0x\") { return null; }\n    return getAddress(value);\n}\n\nfunction handleNumber(value: string): BigNumber {\n    if (value === \"0x\") { return Zero; }\n    return BigNumber.from(value);\n}\n\n// Legacy Transaction Fields\nconst transactionFields = [\n    { name: \"nonce\",    maxLength: 32, numeric: true },\n    { name: \"gasPrice\", maxLength: 32, numeric: true },\n    { name: \"gasLimit\", maxLength: 32, numeric: true },\n    { name: \"to\",          length: 20 },\n    { name: \"value\",    maxLength: 32, numeric: true },\n    { name: \"data\" },\n];\n\nconst allowedTransactionKeys: { [ key: string ]: boolean } = {\n    chainId: true, data: true, gasLimit: true, gasPrice:true, nonce: true, to: true, type: true, value: true\n}\n\nexport function computeAddress(key: BytesLike | string): string {\n    const publicKey = computePublicKey(key);\n    return getAddress(hexDataSlice(keccak256(hexDataSlice(publicKey, 1)), 12));\n}\n\nexport function recoverAddress(digest: BytesLike, signature: SignatureLike): string {\n    return computeAddress(recoverPublicKey(arrayify(digest), signature));\n}\n\nfunction formatNumber(value: BigNumberish, name: string): Uint8Array {\n    const result = stripZeros(BigNumber.from(value).toHexString());\n    if (result.length > 32) {\n        logger.throwArgumentError(\"invalid length for \" + name, (\"transaction:\" + name), value);\n    }\n    return result;\n}\n\nfunction accessSetify(addr: string, storageKeys: Array<string>): { address: string,storageKeys: Array<string> } {\n    return {\n        address: getAddress(addr),\n        storageKeys: (storageKeys || []).map((storageKey, index) => {\n            if (hexDataLength(storageKey) !== 32) {\n                logger.throwArgumentError(\"invalid access list storageKey\", `accessList[${ addr }:${ index }]`, storageKey)\n            }\n            return storageKey.toLowerCase();\n        })\n    };\n}\n\nexport function accessListify(value: AccessListish): AccessList {\n    if (Array.isArray(value)) {\n        return (<Array<[ string, Array<string>] | { address: string, storageKeys: Array<string>}>>value).map((set, index) => {\n            if (Array.isArray(set)) {\n                if (set.length > 2) {\n                    logger.throwArgumentError(\"access list expected to be [ address, storageKeys[] ]\", `value[${ index }]`, set);\n                }\n                return accessSetify(set[0], set[1])\n            }\n            return accessSetify(set.address, set.storageKeys);\n        });\n    }\n\n    const result: Array<{ address: string, storageKeys: Array<string> }> = Object.keys(value).map((addr) => {\n        const storageKeys: Record<string, true> = value[addr].reduce((accum, storageKey) => {\n            accum[storageKey] = true;\n            return accum;\n        }, <Record<string, true>>{ });\n        return accessSetify(addr, Object.keys(storageKeys).sort())\n    });\n    result.sort((a, b) => (a.address.localeCompare(b.address)));\n    return result;\n}\n\nfunction formatAccessList(value: AccessListish): Array<[ string, Array<string> ]> {\n    return accessListify(value).map((set) => [ set.address, set.storageKeys ]);\n}\n\nfunction _serializeEip1559(transaction: UnsignedTransaction, signature?: SignatureLike): string {\n    // If there is an explicit gasPrice, make sure it matches the\n    // EIP-1559 fees; otherwise they may not understand what they\n    // think they are setting in terms of fee.\n    if (transaction.gasPrice != null) {\n        const gasPrice = BigNumber.from(transaction.gasPrice);\n        const maxFeePerGas = BigNumber.from(transaction.maxFeePerGas || 0);\n        if (!gasPrice.eq(maxFeePerGas)) {\n            logger.throwArgumentError(\"mismatch EIP-1559 gasPrice != maxFeePerGas\", \"tx\", {\n                gasPrice, maxFeePerGas\n            });\n        }\n    }\n\n    const fields: any = [\n        formatNumber(transaction.chainId || 0, \"chainId\"),\n        formatNumber(transaction.nonce || 0, \"nonce\"),\n        formatNumber(transaction.maxPriorityFeePerGas || 0, \"maxPriorityFeePerGas\"),\n        formatNumber(transaction.maxFeePerGas || 0, \"maxFeePerGas\"),\n        formatNumber(transaction.gasLimit || 0, \"gasLimit\"),\n        ((transaction.to != null) ? getAddress(transaction.to): \"0x\"),\n        formatNumber(transaction.value || 0, \"value\"),\n        (transaction.data || \"0x\"),\n        (formatAccessList(transaction.accessList || []))\n    ];\n\n    if (signature) {\n        const sig = splitSignature(signature);\n        fields.push(formatNumber(sig.recoveryParam, \"recoveryParam\"));\n        fields.push(stripZeros(sig.r));\n        fields.push(stripZeros(sig.s));\n    }\n\n    return hexConcat([ \"0x02\", RLP.encode(fields)]);\n}\n\nfunction _serializeEip2930(transaction: UnsignedTransaction, signature?: SignatureLike): string {\n    const fields: any = [\n        formatNumber(transaction.chainId || 0, \"chainId\"),\n        formatNumber(transaction.nonce || 0, \"nonce\"),\n        formatNumber(transaction.gasPrice || 0, \"gasPrice\"),\n        formatNumber(transaction.gasLimit || 0, \"gasLimit\"),\n        ((transaction.to != null) ? getAddress(transaction.to): \"0x\"),\n        formatNumber(transaction.value || 0, \"value\"),\n        (transaction.data || \"0x\"),\n        (formatAccessList(transaction.accessList || []))\n    ];\n\n    if (signature) {\n        const sig = splitSignature(signature);\n        fields.push(formatNumber(sig.recoveryParam, \"recoveryParam\"));\n        fields.push(stripZeros(sig.r));\n        fields.push(stripZeros(sig.s));\n    }\n\n    return hexConcat([ \"0x01\", RLP.encode(fields)]);\n}\n\n// Legacy Transactions and EIP-155\nfunction _serialize(transaction: UnsignedTransaction, signature?: SignatureLike): string {\n    checkProperties(transaction, allowedTransactionKeys);\n\n    const raw: Array<string | Uint8Array> = [];\n\n    transactionFields.forEach(function(fieldInfo) {\n        let value = (<any>transaction)[fieldInfo.name] || ([]);\n        const options: DataOptions = { };\n        if (fieldInfo.numeric) { options.hexPad = \"left\"; }\n        value = arrayify(hexlify(value, options));\n\n        // Fixed-width field\n        if (fieldInfo.length && value.length !== fieldInfo.length && value.length > 0) {\n            logger.throwArgumentError(\"invalid length for \" + fieldInfo.name, (\"transaction:\" + fieldInfo.name), value);\n        }\n\n        // Variable-width (with a maximum)\n        if (fieldInfo.maxLength) {\n            value = stripZeros(value);\n            if (value.length > fieldInfo.maxLength) {\n                logger.throwArgumentError(\"invalid length for \" + fieldInfo.name, (\"transaction:\" + fieldInfo.name), value );\n            }\n        }\n\n        raw.push(hexlify(value));\n    });\n\n    let chainId = 0;\n    if (transaction.chainId != null) {\n        // A chainId was provided; if non-zero we'll use EIP-155\n        chainId = transaction.chainId;\n\n        if (typeof(chainId) !== \"number\") {\n            logger.throwArgumentError(\"invalid transaction.chainId\", \"transaction\", transaction);\n        }\n\n    } else if (signature && !isBytesLike(signature) && signature.v > 28) {\n        // No chainId provided, but the signature is signing with EIP-155; derive chainId\n        chainId = Math.floor((signature.v - 35) / 2);\n    }\n\n    // We have an EIP-155 transaction (chainId was specified and non-zero)\n    if (chainId !== 0) {\n        raw.push(hexlify(chainId)); // @TODO: hexValue?\n        raw.push(\"0x\");\n        raw.push(\"0x\");\n    }\n\n    // Requesting an unsigned transaction\n    if (!signature) {\n        return RLP.encode(raw);\n    }\n\n    // The splitSignature will ensure the transaction has a recoveryParam in the\n    // case that the signTransaction function only adds a v.\n    const sig = splitSignature(signature);\n\n    // We pushed a chainId and null r, s on for hashing only; remove those\n    let v = 27 + sig.recoveryParam\n    if (chainId !== 0) {\n        raw.pop();\n        raw.pop();\n        raw.pop();\n        v += chainId * 2 + 8;\n\n        // If an EIP-155 v (directly or indirectly; maybe _vs) was provided, check it!\n        if (sig.v > 28 && sig.v !== v) {\n             logger.throwArgumentError(\"transaction.chainId/signature.v mismatch\", \"signature\", signature);\n        }\n    } else if (sig.v !== v) {\n         logger.throwArgumentError(\"transaction.chainId/signature.v mismatch\", \"signature\", signature);\n    }\n\n    raw.push(hexlify(v));\n    raw.push(stripZeros(arrayify(sig.r)));\n    raw.push(stripZeros(arrayify(sig.s)));\n\n    return RLP.encode(raw);\n}\n\nexport function serialize(transaction: UnsignedTransaction, signature?: SignatureLike): string {\n    // Legacy and EIP-155 Transactions\n    if (transaction.type == null || transaction.type === 0) {\n        if (transaction.accessList != null) {\n            logger.throwArgumentError(\"untyped transactions do not support accessList; include type: 1\", \"transaction\", transaction);\n        }\n        return _serialize(transaction, signature);\n    }\n\n    // Typed Transactions (EIP-2718)\n    switch (transaction.type) {\n        case 1:\n            return _serializeEip2930(transaction, signature);\n        case 2:\n            return _serializeEip1559(transaction, signature);\n        default:\n            break;\n    }\n\n    return logger.throwError(`unsupported transaction type: ${ transaction.type }`, Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"serializeTransaction\",\n        transactionType: transaction.type\n    });\n}\n\nfunction _parseEipSignature(tx: Transaction, fields: Array<string>, serialize: (tx: UnsignedTransaction) => string): void {\n    try {\n        const recid = handleNumber(fields[0]).toNumber();\n        if (recid !== 0 && recid !== 1) { throw new Error(\"bad recid\"); }\n        tx.v = recid;\n    } catch (error) {\n        logger.throwArgumentError(\"invalid v for transaction type: 1\", \"v\", fields[0]);\n    }\n\n    tx.r = hexZeroPad(fields[1], 32);\n    tx.s = hexZeroPad(fields[2], 32);\n\n    try {\n        const digest = keccak256(serialize(tx));\n        tx.from = recoverAddress(digest, { r: tx.r, s: tx.s, recoveryParam: tx.v });\n    } catch (error) { }\n}\n\nfunction _parseEip1559(payload: Uint8Array): Transaction {\n    const transaction = RLP.decode(payload.slice(1));\n\n    if (transaction.length !== 9 && transaction.length !== 12) {\n        logger.throwArgumentError(\"invalid component count for transaction type: 2\", \"payload\", hexlify(payload));\n    }\n\n    const maxPriorityFeePerGas = handleNumber(transaction[2]);\n    const maxFeePerGas = handleNumber(transaction[3]);\n    const tx: Transaction = {\n        type:                  2,\n        chainId:               handleNumber(transaction[0]).toNumber(),\n        nonce:                 handleNumber(transaction[1]).toNumber(),\n        maxPriorityFeePerGas:  maxPriorityFeePerGas,\n        maxFeePerGas:          maxFeePerGas,\n        gasPrice:              null,\n        gasLimit:              handleNumber(transaction[4]),\n        to:                    handleAddress(transaction[5]),\n        value:                 handleNumber(transaction[6]),\n        data:                  transaction[7],\n        accessList:            accessListify(transaction[8]),\n    };\n\n    // Unsigned EIP-1559 Transaction\n    if (transaction.length === 9) { return tx; }\n\n    tx.hash = keccak256(payload);\n\n    _parseEipSignature(tx, transaction.slice(9), _serializeEip1559);\n\n    return tx;\n}\n\nfunction _parseEip2930(payload: Uint8Array): Transaction {\n    const transaction = RLP.decode(payload.slice(1));\n\n    if (transaction.length !== 8 && transaction.length !== 11) {\n        logger.throwArgumentError(\"invalid component count for transaction type: 1\", \"payload\", hexlify(payload));\n    }\n\n    const tx: Transaction = {\n        type:       1,\n        chainId:    handleNumber(transaction[0]).toNumber(),\n        nonce:      handleNumber(transaction[1]).toNumber(),\n        gasPrice:   handleNumber(transaction[2]),\n        gasLimit:   handleNumber(transaction[3]),\n        to:         handleAddress(transaction[4]),\n        value:      handleNumber(transaction[5]),\n        data:       transaction[6],\n        accessList: accessListify(transaction[7])\n    };\n\n    // Unsigned EIP-2930 Transaction\n    if (transaction.length === 8) { return tx; }\n\n    tx.hash = keccak256(payload);\n\n    _parseEipSignature(tx, transaction.slice(8), _serializeEip2930);\n\n    return tx;\n}\n\n// Legacy Transactions and EIP-155\nfunction _parse(rawTransaction: Uint8Array): Transaction {\n    const transaction = RLP.decode(rawTransaction);\n\n    if (transaction.length !== 9 && transaction.length !== 6) {\n        logger.throwArgumentError(\"invalid raw transaction\", \"rawTransaction\", rawTransaction);\n    }\n\n    const tx: Transaction = {\n        nonce:    handleNumber(transaction[0]).toNumber(),\n        gasPrice: handleNumber(transaction[1]),\n        gasLimit: handleNumber(transaction[2]),\n        to:       handleAddress(transaction[3]),\n        value:    handleNumber(transaction[4]),\n        data:     transaction[5],\n        chainId:  0\n    };\n\n    // Legacy unsigned transaction\n    if (transaction.length === 6) { return tx; }\n\n    try {\n        tx.v = BigNumber.from(transaction[6]).toNumber();\n\n    } catch (error) {\n        // @TODO: What makes snese to do? The v is too big\n        return tx;\n    }\n\n    tx.r = hexZeroPad(transaction[7], 32);\n    tx.s = hexZeroPad(transaction[8], 32);\n\n    if (BigNumber.from(tx.r).isZero() && BigNumber.from(tx.s).isZero()) {\n        // EIP-155 unsigned transaction\n        tx.chainId = tx.v;\n        tx.v = 0;\n\n    } else {\n        // Signed Transaction\n\n        tx.chainId = Math.floor((tx.v - 35) / 2);\n        if (tx.chainId < 0) { tx.chainId = 0; }\n\n        let recoveryParam = tx.v - 27;\n\n        const raw = transaction.slice(0, 6);\n\n        if (tx.chainId !== 0) {\n            raw.push(hexlify(tx.chainId));\n            raw.push(\"0x\");\n            raw.push(\"0x\");\n            recoveryParam -= tx.chainId * 2 + 8;\n        }\n\n        const digest = keccak256(RLP.encode(raw));\n        try {\n            tx.from = recoverAddress(digest, { r: hexlify(tx.r), s: hexlify(tx.s), recoveryParam: recoveryParam });\n        } catch (error) { }\n\n        tx.hash = keccak256(rawTransaction);\n    }\n\n    tx.type = null;\n\n    return tx;\n}\n\n\nexport function parse(rawTransaction: BytesLike): Transaction {\n    const payload = arrayify(rawTransaction);\n\n    // Legacy and EIP-155 Transactions\n    if (payload[0] > 0x7f) { return _parse(payload); }\n\n    // Typed Transaction (EIP-2718)\n    switch (payload[0]) {\n        case 1:\n            return _parseEip2930(payload);\n        case 2:\n            return _parseEip1559(payload);\n        default:\n            break;\n    }\n\n    return logger.throwError(`unsupported transaction type: ${ payload[0] }`, Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"parseTransaction\",\n        transactionType: payload[0]\n    });\n}\n\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","(function(nacl) {\n'use strict';\n\n// Ported in 2014 by Dmitry Chestnykh and Devi Mandiri.\n// Public domain.\n//\n// Implementation derived from TweetNaCl version 20140427.\n// See for details: http://tweetnacl.cr.yp.to/\n\nvar gf = function(init) {\n  var i, r = new Float64Array(16);\n  if (init) for (i = 0; i < init.length; i++) r[i] = init[i];\n  return r;\n};\n\n//  Pluggable, initialized in high-level API below.\nvar randombytes = function(/* x, n */) { throw new Error('no PRNG'); };\n\nvar _0 = new Uint8Array(16);\nvar _9 = new Uint8Array(32); _9[0] = 9;\n\nvar gf0 = gf(),\n    gf1 = gf([1]),\n    _121665 = gf([0xdb41, 1]),\n    D = gf([0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070, 0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203]),\n    D2 = gf([0xf159, 0x26b2, 0x9b94, 0xebd6, 0xb156, 0x8283, 0x149a, 0x00e0, 0xd130, 0xeef3, 0x80f2, 0x198e, 0xfce7, 0x56df, 0xd9dc, 0x2406]),\n    X = gf([0xd51a, 0x8f25, 0x2d60, 0xc956, 0xa7b2, 0x9525, 0xc760, 0x692c, 0xdc5c, 0xfdd6, 0xe231, 0xc0a4, 0x53fe, 0xcd6e, 0x36d3, 0x2169]),\n    Y = gf([0x6658, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666]),\n    I = gf([0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83]);\n\nfunction ts64(x, i, h, l) {\n  x[i]   = (h >> 24) & 0xff;\n  x[i+1] = (h >> 16) & 0xff;\n  x[i+2] = (h >>  8) & 0xff;\n  x[i+3] = h & 0xff;\n  x[i+4] = (l >> 24)  & 0xff;\n  x[i+5] = (l >> 16)  & 0xff;\n  x[i+6] = (l >>  8)  & 0xff;\n  x[i+7] = l & 0xff;\n}\n\nfunction vn(x, xi, y, yi, n) {\n  var i,d = 0;\n  for (i = 0; i < n; i++) d |= x[xi+i]^y[yi+i];\n  return (1 & ((d - 1) >>> 8)) - 1;\n}\n\nfunction crypto_verify_16(x, xi, y, yi) {\n  return vn(x,xi,y,yi,16);\n}\n\nfunction crypto_verify_32(x, xi, y, yi) {\n  return vn(x,xi,y,yi,32);\n}\n\nfunction core_salsa20(o, p, k, c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n   x0 =  x0 +  j0 | 0;\n   x1 =  x1 +  j1 | 0;\n   x2 =  x2 +  j2 | 0;\n   x3 =  x3 +  j3 | 0;\n   x4 =  x4 +  j4 | 0;\n   x5 =  x5 +  j5 | 0;\n   x6 =  x6 +  j6 | 0;\n   x7 =  x7 +  j7 | 0;\n   x8 =  x8 +  j8 | 0;\n   x9 =  x9 +  j9 | 0;\n  x10 = x10 + j10 | 0;\n  x11 = x11 + j11 | 0;\n  x12 = x12 + j12 | 0;\n  x13 = x13 + j13 | 0;\n  x14 = x14 + j14 | 0;\n  x15 = x15 + j15 | 0;\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x1 >>>  0 & 0xff;\n  o[ 5] = x1 >>>  8 & 0xff;\n  o[ 6] = x1 >>> 16 & 0xff;\n  o[ 7] = x1 >>> 24 & 0xff;\n\n  o[ 8] = x2 >>>  0 & 0xff;\n  o[ 9] = x2 >>>  8 & 0xff;\n  o[10] = x2 >>> 16 & 0xff;\n  o[11] = x2 >>> 24 & 0xff;\n\n  o[12] = x3 >>>  0 & 0xff;\n  o[13] = x3 >>>  8 & 0xff;\n  o[14] = x3 >>> 16 & 0xff;\n  o[15] = x3 >>> 24 & 0xff;\n\n  o[16] = x4 >>>  0 & 0xff;\n  o[17] = x4 >>>  8 & 0xff;\n  o[18] = x4 >>> 16 & 0xff;\n  o[19] = x4 >>> 24 & 0xff;\n\n  o[20] = x5 >>>  0 & 0xff;\n  o[21] = x5 >>>  8 & 0xff;\n  o[22] = x5 >>> 16 & 0xff;\n  o[23] = x5 >>> 24 & 0xff;\n\n  o[24] = x6 >>>  0 & 0xff;\n  o[25] = x6 >>>  8 & 0xff;\n  o[26] = x6 >>> 16 & 0xff;\n  o[27] = x6 >>> 24 & 0xff;\n\n  o[28] = x7 >>>  0 & 0xff;\n  o[29] = x7 >>>  8 & 0xff;\n  o[30] = x7 >>> 16 & 0xff;\n  o[31] = x7 >>> 24 & 0xff;\n\n  o[32] = x8 >>>  0 & 0xff;\n  o[33] = x8 >>>  8 & 0xff;\n  o[34] = x8 >>> 16 & 0xff;\n  o[35] = x8 >>> 24 & 0xff;\n\n  o[36] = x9 >>>  0 & 0xff;\n  o[37] = x9 >>>  8 & 0xff;\n  o[38] = x9 >>> 16 & 0xff;\n  o[39] = x9 >>> 24 & 0xff;\n\n  o[40] = x10 >>>  0 & 0xff;\n  o[41] = x10 >>>  8 & 0xff;\n  o[42] = x10 >>> 16 & 0xff;\n  o[43] = x10 >>> 24 & 0xff;\n\n  o[44] = x11 >>>  0 & 0xff;\n  o[45] = x11 >>>  8 & 0xff;\n  o[46] = x11 >>> 16 & 0xff;\n  o[47] = x11 >>> 24 & 0xff;\n\n  o[48] = x12 >>>  0 & 0xff;\n  o[49] = x12 >>>  8 & 0xff;\n  o[50] = x12 >>> 16 & 0xff;\n  o[51] = x12 >>> 24 & 0xff;\n\n  o[52] = x13 >>>  0 & 0xff;\n  o[53] = x13 >>>  8 & 0xff;\n  o[54] = x13 >>> 16 & 0xff;\n  o[55] = x13 >>> 24 & 0xff;\n\n  o[56] = x14 >>>  0 & 0xff;\n  o[57] = x14 >>>  8 & 0xff;\n  o[58] = x14 >>> 16 & 0xff;\n  o[59] = x14 >>> 24 & 0xff;\n\n  o[60] = x15 >>>  0 & 0xff;\n  o[61] = x15 >>>  8 & 0xff;\n  o[62] = x15 >>> 16 & 0xff;\n  o[63] = x15 >>> 24 & 0xff;\n}\n\nfunction core_hsalsa20(o,p,k,c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x5 >>>  0 & 0xff;\n  o[ 5] = x5 >>>  8 & 0xff;\n  o[ 6] = x5 >>> 16 & 0xff;\n  o[ 7] = x5 >>> 24 & 0xff;\n\n  o[ 8] = x10 >>>  0 & 0xff;\n  o[ 9] = x10 >>>  8 & 0xff;\n  o[10] = x10 >>> 16 & 0xff;\n  o[11] = x10 >>> 24 & 0xff;\n\n  o[12] = x15 >>>  0 & 0xff;\n  o[13] = x15 >>>  8 & 0xff;\n  o[14] = x15 >>> 16 & 0xff;\n  o[15] = x15 >>> 24 & 0xff;\n\n  o[16] = x6 >>>  0 & 0xff;\n  o[17] = x6 >>>  8 & 0xff;\n  o[18] = x6 >>> 16 & 0xff;\n  o[19] = x6 >>> 24 & 0xff;\n\n  o[20] = x7 >>>  0 & 0xff;\n  o[21] = x7 >>>  8 & 0xff;\n  o[22] = x7 >>> 16 & 0xff;\n  o[23] = x7 >>> 24 & 0xff;\n\n  o[24] = x8 >>>  0 & 0xff;\n  o[25] = x8 >>>  8 & 0xff;\n  o[26] = x8 >>> 16 & 0xff;\n  o[27] = x8 >>> 24 & 0xff;\n\n  o[28] = x9 >>>  0 & 0xff;\n  o[29] = x9 >>>  8 & 0xff;\n  o[30] = x9 >>> 16 & 0xff;\n  o[31] = x9 >>> 24 & 0xff;\n}\n\nfunction crypto_core_salsa20(out,inp,k,c) {\n  core_salsa20(out,inp,k,c);\n}\n\nfunction crypto_core_hsalsa20(out,inp,k,c) {\n  core_hsalsa20(out,inp,k,c);\n}\n\nvar sigma = new Uint8Array([101, 120, 112, 97, 110, 100, 32, 51, 50, 45, 98, 121, 116, 101, 32, 107]);\n            // \"expand 32-byte k\"\n\nfunction crypto_stream_salsa20_xor(c,cpos,m,mpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n    mpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream_salsa20(c,cpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream(c,cpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20(c,cpos,d,sn,s);\n}\n\nfunction crypto_stream_xor(c,cpos,m,mpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20_xor(c,cpos,m,mpos,d,sn,s);\n}\n\n/*\n* Port of Andrew Moon's Poly1305-donna-16. Public domain.\n* https://github.com/floodyberry/poly1305-donna\n*/\n\nvar poly1305 = function(key) {\n  this.buffer = new Uint8Array(16);\n  this.r = new Uint16Array(10);\n  this.h = new Uint16Array(10);\n  this.pad = new Uint16Array(8);\n  this.leftover = 0;\n  this.fin = 0;\n\n  var t0, t1, t2, t3, t4, t5, t6, t7;\n\n  t0 = key[ 0] & 0xff | (key[ 1] & 0xff) << 8; this.r[0] = ( t0                     ) & 0x1fff;\n  t1 = key[ 2] & 0xff | (key[ 3] & 0xff) << 8; this.r[1] = ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n  t2 = key[ 4] & 0xff | (key[ 5] & 0xff) << 8; this.r[2] = ((t1 >>> 10) | (t2 <<  6)) & 0x1f03;\n  t3 = key[ 6] & 0xff | (key[ 7] & 0xff) << 8; this.r[3] = ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n  t4 = key[ 8] & 0xff | (key[ 9] & 0xff) << 8; this.r[4] = ((t3 >>>  4) | (t4 << 12)) & 0x00ff;\n  this.r[5] = ((t4 >>>  1)) & 0x1ffe;\n  t5 = key[10] & 0xff | (key[11] & 0xff) << 8; this.r[6] = ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n  t6 = key[12] & 0xff | (key[13] & 0xff) << 8; this.r[7] = ((t5 >>> 11) | (t6 <<  5)) & 0x1f81;\n  t7 = key[14] & 0xff | (key[15] & 0xff) << 8; this.r[8] = ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n  this.r[9] = ((t7 >>>  5)) & 0x007f;\n\n  this.pad[0] = key[16] & 0xff | (key[17] & 0xff) << 8;\n  this.pad[1] = key[18] & 0xff | (key[19] & 0xff) << 8;\n  this.pad[2] = key[20] & 0xff | (key[21] & 0xff) << 8;\n  this.pad[3] = key[22] & 0xff | (key[23] & 0xff) << 8;\n  this.pad[4] = key[24] & 0xff | (key[25] & 0xff) << 8;\n  this.pad[5] = key[26] & 0xff | (key[27] & 0xff) << 8;\n  this.pad[6] = key[28] & 0xff | (key[29] & 0xff) << 8;\n  this.pad[7] = key[30] & 0xff | (key[31] & 0xff) << 8;\n};\n\npoly1305.prototype.blocks = function(m, mpos, bytes) {\n  var hibit = this.fin ? 0 : (1 << 11);\n  var t0, t1, t2, t3, t4, t5, t6, t7, c;\n  var d0, d1, d2, d3, d4, d5, d6, d7, d8, d9;\n\n  var h0 = this.h[0],\n      h1 = this.h[1],\n      h2 = this.h[2],\n      h3 = this.h[3],\n      h4 = this.h[4],\n      h5 = this.h[5],\n      h6 = this.h[6],\n      h7 = this.h[7],\n      h8 = this.h[8],\n      h9 = this.h[9];\n\n  var r0 = this.r[0],\n      r1 = this.r[1],\n      r2 = this.r[2],\n      r3 = this.r[3],\n      r4 = this.r[4],\n      r5 = this.r[5],\n      r6 = this.r[6],\n      r7 = this.r[7],\n      r8 = this.r[8],\n      r9 = this.r[9];\n\n  while (bytes >= 16) {\n    t0 = m[mpos+ 0] & 0xff | (m[mpos+ 1] & 0xff) << 8; h0 += ( t0                     ) & 0x1fff;\n    t1 = m[mpos+ 2] & 0xff | (m[mpos+ 3] & 0xff) << 8; h1 += ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n    t2 = m[mpos+ 4] & 0xff | (m[mpos+ 5] & 0xff) << 8; h2 += ((t1 >>> 10) | (t2 <<  6)) & 0x1fff;\n    t3 = m[mpos+ 6] & 0xff | (m[mpos+ 7] & 0xff) << 8; h3 += ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n    t4 = m[mpos+ 8] & 0xff | (m[mpos+ 9] & 0xff) << 8; h4 += ((t3 >>>  4) | (t4 << 12)) & 0x1fff;\n    h5 += ((t4 >>>  1)) & 0x1fff;\n    t5 = m[mpos+10] & 0xff | (m[mpos+11] & 0xff) << 8; h6 += ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n    t6 = m[mpos+12] & 0xff | (m[mpos+13] & 0xff) << 8; h7 += ((t5 >>> 11) | (t6 <<  5)) & 0x1fff;\n    t7 = m[mpos+14] & 0xff | (m[mpos+15] & 0xff) << 8; h8 += ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n    h9 += ((t7 >>> 5)) | hibit;\n\n    c = 0;\n\n    d0 = c;\n    d0 += h0 * r0;\n    d0 += h1 * (5 * r9);\n    d0 += h2 * (5 * r8);\n    d0 += h3 * (5 * r7);\n    d0 += h4 * (5 * r6);\n    c = (d0 >>> 13); d0 &= 0x1fff;\n    d0 += h5 * (5 * r5);\n    d0 += h6 * (5 * r4);\n    d0 += h7 * (5 * r3);\n    d0 += h8 * (5 * r2);\n    d0 += h9 * (5 * r1);\n    c += (d0 >>> 13); d0 &= 0x1fff;\n\n    d1 = c;\n    d1 += h0 * r1;\n    d1 += h1 * r0;\n    d1 += h2 * (5 * r9);\n    d1 += h3 * (5 * r8);\n    d1 += h4 * (5 * r7);\n    c = (d1 >>> 13); d1 &= 0x1fff;\n    d1 += h5 * (5 * r6);\n    d1 += h6 * (5 * r5);\n    d1 += h7 * (5 * r4);\n    d1 += h8 * (5 * r3);\n    d1 += h9 * (5 * r2);\n    c += (d1 >>> 13); d1 &= 0x1fff;\n\n    d2 = c;\n    d2 += h0 * r2;\n    d2 += h1 * r1;\n    d2 += h2 * r0;\n    d2 += h3 * (5 * r9);\n    d2 += h4 * (5 * r8);\n    c = (d2 >>> 13); d2 &= 0x1fff;\n    d2 += h5 * (5 * r7);\n    d2 += h6 * (5 * r6);\n    d2 += h7 * (5 * r5);\n    d2 += h8 * (5 * r4);\n    d2 += h9 * (5 * r3);\n    c += (d2 >>> 13); d2 &= 0x1fff;\n\n    d3 = c;\n    d3 += h0 * r3;\n    d3 += h1 * r2;\n    d3 += h2 * r1;\n    d3 += h3 * r0;\n    d3 += h4 * (5 * r9);\n    c = (d3 >>> 13); d3 &= 0x1fff;\n    d3 += h5 * (5 * r8);\n    d3 += h6 * (5 * r7);\n    d3 += h7 * (5 * r6);\n    d3 += h8 * (5 * r5);\n    d3 += h9 * (5 * r4);\n    c += (d3 >>> 13); d3 &= 0x1fff;\n\n    d4 = c;\n    d4 += h0 * r4;\n    d4 += h1 * r3;\n    d4 += h2 * r2;\n    d4 += h3 * r1;\n    d4 += h4 * r0;\n    c = (d4 >>> 13); d4 &= 0x1fff;\n    d4 += h5 * (5 * r9);\n    d4 += h6 * (5 * r8);\n    d4 += h7 * (5 * r7);\n    d4 += h8 * (5 * r6);\n    d4 += h9 * (5 * r5);\n    c += (d4 >>> 13); d4 &= 0x1fff;\n\n    d5 = c;\n    d5 += h0 * r5;\n    d5 += h1 * r4;\n    d5 += h2 * r3;\n    d5 += h3 * r2;\n    d5 += h4 * r1;\n    c = (d5 >>> 13); d5 &= 0x1fff;\n    d5 += h5 * r0;\n    d5 += h6 * (5 * r9);\n    d5 += h7 * (5 * r8);\n    d5 += h8 * (5 * r7);\n    d5 += h9 * (5 * r6);\n    c += (d5 >>> 13); d5 &= 0x1fff;\n\n    d6 = c;\n    d6 += h0 * r6;\n    d6 += h1 * r5;\n    d6 += h2 * r4;\n    d6 += h3 * r3;\n    d6 += h4 * r2;\n    c = (d6 >>> 13); d6 &= 0x1fff;\n    d6 += h5 * r1;\n    d6 += h6 * r0;\n    d6 += h7 * (5 * r9);\n    d6 += h8 * (5 * r8);\n    d6 += h9 * (5 * r7);\n    c += (d6 >>> 13); d6 &= 0x1fff;\n\n    d7 = c;\n    d7 += h0 * r7;\n    d7 += h1 * r6;\n    d7 += h2 * r5;\n    d7 += h3 * r4;\n    d7 += h4 * r3;\n    c = (d7 >>> 13); d7 &= 0x1fff;\n    d7 += h5 * r2;\n    d7 += h6 * r1;\n    d7 += h7 * r0;\n    d7 += h8 * (5 * r9);\n    d7 += h9 * (5 * r8);\n    c += (d7 >>> 13); d7 &= 0x1fff;\n\n    d8 = c;\n    d8 += h0 * r8;\n    d8 += h1 * r7;\n    d8 += h2 * r6;\n    d8 += h3 * r5;\n    d8 += h4 * r4;\n    c = (d8 >>> 13); d8 &= 0x1fff;\n    d8 += h5 * r3;\n    d8 += h6 * r2;\n    d8 += h7 * r1;\n    d8 += h8 * r0;\n    d8 += h9 * (5 * r9);\n    c += (d8 >>> 13); d8 &= 0x1fff;\n\n    d9 = c;\n    d9 += h0 * r9;\n    d9 += h1 * r8;\n    d9 += h2 * r7;\n    d9 += h3 * r6;\n    d9 += h4 * r5;\n    c = (d9 >>> 13); d9 &= 0x1fff;\n    d9 += h5 * r4;\n    d9 += h6 * r3;\n    d9 += h7 * r2;\n    d9 += h8 * r1;\n    d9 += h9 * r0;\n    c += (d9 >>> 13); d9 &= 0x1fff;\n\n    c = (((c << 2) + c)) | 0;\n    c = (c + d0) | 0;\n    d0 = c & 0x1fff;\n    c = (c >>> 13);\n    d1 += c;\n\n    h0 = d0;\n    h1 = d1;\n    h2 = d2;\n    h3 = d3;\n    h4 = d4;\n    h5 = d5;\n    h6 = d6;\n    h7 = d7;\n    h8 = d8;\n    h9 = d9;\n\n    mpos += 16;\n    bytes -= 16;\n  }\n  this.h[0] = h0;\n  this.h[1] = h1;\n  this.h[2] = h2;\n  this.h[3] = h3;\n  this.h[4] = h4;\n  this.h[5] = h5;\n  this.h[6] = h6;\n  this.h[7] = h7;\n  this.h[8] = h8;\n  this.h[9] = h9;\n};\n\npoly1305.prototype.finish = function(mac, macpos) {\n  var g = new Uint16Array(10);\n  var c, mask, f, i;\n\n  if (this.leftover) {\n    i = this.leftover;\n    this.buffer[i++] = 1;\n    for (; i < 16; i++) this.buffer[i] = 0;\n    this.fin = 1;\n    this.blocks(this.buffer, 0, 16);\n  }\n\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  for (i = 2; i < 10; i++) {\n    this.h[i] += c;\n    c = this.h[i] >>> 13;\n    this.h[i] &= 0x1fff;\n  }\n  this.h[0] += (c * 5);\n  c = this.h[0] >>> 13;\n  this.h[0] &= 0x1fff;\n  this.h[1] += c;\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  this.h[2] += c;\n\n  g[0] = this.h[0] + 5;\n  c = g[0] >>> 13;\n  g[0] &= 0x1fff;\n  for (i = 1; i < 10; i++) {\n    g[i] = this.h[i] + c;\n    c = g[i] >>> 13;\n    g[i] &= 0x1fff;\n  }\n  g[9] -= (1 << 13);\n\n  mask = (c ^ 1) - 1;\n  for (i = 0; i < 10; i++) g[i] &= mask;\n  mask = ~mask;\n  for (i = 0; i < 10; i++) this.h[i] = (this.h[i] & mask) | g[i];\n\n  this.h[0] = ((this.h[0]       ) | (this.h[1] << 13)                    ) & 0xffff;\n  this.h[1] = ((this.h[1] >>>  3) | (this.h[2] << 10)                    ) & 0xffff;\n  this.h[2] = ((this.h[2] >>>  6) | (this.h[3] <<  7)                    ) & 0xffff;\n  this.h[3] = ((this.h[3] >>>  9) | (this.h[4] <<  4)                    ) & 0xffff;\n  this.h[4] = ((this.h[4] >>> 12) | (this.h[5] <<  1) | (this.h[6] << 14)) & 0xffff;\n  this.h[5] = ((this.h[6] >>>  2) | (this.h[7] << 11)                    ) & 0xffff;\n  this.h[6] = ((this.h[7] >>>  5) | (this.h[8] <<  8)                    ) & 0xffff;\n  this.h[7] = ((this.h[8] >>>  8) | (this.h[9] <<  5)                    ) & 0xffff;\n\n  f = this.h[0] + this.pad[0];\n  this.h[0] = f & 0xffff;\n  for (i = 1; i < 8; i++) {\n    f = (((this.h[i] + this.pad[i]) | 0) + (f >>> 16)) | 0;\n    this.h[i] = f & 0xffff;\n  }\n\n  mac[macpos+ 0] = (this.h[0] >>> 0) & 0xff;\n  mac[macpos+ 1] = (this.h[0] >>> 8) & 0xff;\n  mac[macpos+ 2] = (this.h[1] >>> 0) & 0xff;\n  mac[macpos+ 3] = (this.h[1] >>> 8) & 0xff;\n  mac[macpos+ 4] = (this.h[2] >>> 0) & 0xff;\n  mac[macpos+ 5] = (this.h[2] >>> 8) & 0xff;\n  mac[macpos+ 6] = (this.h[3] >>> 0) & 0xff;\n  mac[macpos+ 7] = (this.h[3] >>> 8) & 0xff;\n  mac[macpos+ 8] = (this.h[4] >>> 0) & 0xff;\n  mac[macpos+ 9] = (this.h[4] >>> 8) & 0xff;\n  mac[macpos+10] = (this.h[5] >>> 0) & 0xff;\n  mac[macpos+11] = (this.h[5] >>> 8) & 0xff;\n  mac[macpos+12] = (this.h[6] >>> 0) & 0xff;\n  mac[macpos+13] = (this.h[6] >>> 8) & 0xff;\n  mac[macpos+14] = (this.h[7] >>> 0) & 0xff;\n  mac[macpos+15] = (this.h[7] >>> 8) & 0xff;\n};\n\npoly1305.prototype.update = function(m, mpos, bytes) {\n  var i, want;\n\n  if (this.leftover) {\n    want = (16 - this.leftover);\n    if (want > bytes)\n      want = bytes;\n    for (i = 0; i < want; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    bytes -= want;\n    mpos += want;\n    this.leftover += want;\n    if (this.leftover < 16)\n      return;\n    this.blocks(this.buffer, 0, 16);\n    this.leftover = 0;\n  }\n\n  if (bytes >= 16) {\n    want = bytes - (bytes % 16);\n    this.blocks(m, mpos, want);\n    mpos += want;\n    bytes -= want;\n  }\n\n  if (bytes) {\n    for (i = 0; i < bytes; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    this.leftover += bytes;\n  }\n};\n\nfunction crypto_onetimeauth(out, outpos, m, mpos, n, k) {\n  var s = new poly1305(k);\n  s.update(m, mpos, n);\n  s.finish(out, outpos);\n  return 0;\n}\n\nfunction crypto_onetimeauth_verify(h, hpos, m, mpos, n, k) {\n  var x = new Uint8Array(16);\n  crypto_onetimeauth(x,0,m,mpos,n,k);\n  return crypto_verify_16(h,hpos,x,0);\n}\n\nfunction crypto_secretbox(c,m,d,n,k) {\n  var i;\n  if (d < 32) return -1;\n  crypto_stream_xor(c,0,m,0,d,n,k);\n  crypto_onetimeauth(c, 16, c, 32, d - 32, c);\n  for (i = 0; i < 16; i++) c[i] = 0;\n  return 0;\n}\n\nfunction crypto_secretbox_open(m,c,d,n,k) {\n  var i;\n  var x = new Uint8Array(32);\n  if (d < 32) return -1;\n  crypto_stream(x,0,32,n,k);\n  if (crypto_onetimeauth_verify(c, 16,c, 32,d - 32,x) !== 0) return -1;\n  crypto_stream_xor(m,0,c,0,d,n,k);\n  for (i = 0; i < 32; i++) m[i] = 0;\n  return 0;\n}\n\nfunction set25519(r, a) {\n  var i;\n  for (i = 0; i < 16; i++) r[i] = a[i]|0;\n}\n\nfunction car25519(o) {\n  var i, v, c = 1;\n  for (i = 0; i < 16; i++) {\n    v = o[i] + c + 65535;\n    c = Math.floor(v / 65536);\n    o[i] = v - c * 65536;\n  }\n  o[0] += c-1 + 37 * (c-1);\n}\n\nfunction sel25519(p, q, b) {\n  var t, c = ~(b-1);\n  for (var i = 0; i < 16; i++) {\n    t = c & (p[i] ^ q[i]);\n    p[i] ^= t;\n    q[i] ^= t;\n  }\n}\n\nfunction pack25519(o, n) {\n  var i, j, b;\n  var m = gf(), t = gf();\n  for (i = 0; i < 16; i++) t[i] = n[i];\n  car25519(t);\n  car25519(t);\n  car25519(t);\n  for (j = 0; j < 2; j++) {\n    m[0] = t[0] - 0xffed;\n    for (i = 1; i < 15; i++) {\n      m[i] = t[i] - 0xffff - ((m[i-1]>>16) & 1);\n      m[i-1] &= 0xffff;\n    }\n    m[15] = t[15] - 0x7fff - ((m[14]>>16) & 1);\n    b = (m[15]>>16) & 1;\n    m[14] &= 0xffff;\n    sel25519(t, m, 1-b);\n  }\n  for (i = 0; i < 16; i++) {\n    o[2*i] = t[i] & 0xff;\n    o[2*i+1] = t[i]>>8;\n  }\n}\n\nfunction neq25519(a, b) {\n  var c = new Uint8Array(32), d = new Uint8Array(32);\n  pack25519(c, a);\n  pack25519(d, b);\n  return crypto_verify_32(c, 0, d, 0);\n}\n\nfunction par25519(a) {\n  var d = new Uint8Array(32);\n  pack25519(d, a);\n  return d[0] & 1;\n}\n\nfunction unpack25519(o, n) {\n  var i;\n  for (i = 0; i < 16; i++) o[i] = n[2*i] + (n[2*i+1] << 8);\n  o[15] &= 0x7fff;\n}\n\nfunction A(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] + b[i];\n}\n\nfunction Z(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] - b[i];\n}\n\nfunction M(o, a, b) {\n  var v, c,\n     t0 = 0,  t1 = 0,  t2 = 0,  t3 = 0,  t4 = 0,  t5 = 0,  t6 = 0,  t7 = 0,\n     t8 = 0,  t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0,\n    t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0,\n    t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0,\n    b0 = b[0],\n    b1 = b[1],\n    b2 = b[2],\n    b3 = b[3],\n    b4 = b[4],\n    b5 = b[5],\n    b6 = b[6],\n    b7 = b[7],\n    b8 = b[8],\n    b9 = b[9],\n    b10 = b[10],\n    b11 = b[11],\n    b12 = b[12],\n    b13 = b[13],\n    b14 = b[14],\n    b15 = b[15];\n\n  v = a[0];\n  t0 += v * b0;\n  t1 += v * b1;\n  t2 += v * b2;\n  t3 += v * b3;\n  t4 += v * b4;\n  t5 += v * b5;\n  t6 += v * b6;\n  t7 += v * b7;\n  t8 += v * b8;\n  t9 += v * b9;\n  t10 += v * b10;\n  t11 += v * b11;\n  t12 += v * b12;\n  t13 += v * b13;\n  t14 += v * b14;\n  t15 += v * b15;\n  v = a[1];\n  t1 += v * b0;\n  t2 += v * b1;\n  t3 += v * b2;\n  t4 += v * b3;\n  t5 += v * b4;\n  t6 += v * b5;\n  t7 += v * b6;\n  t8 += v * b7;\n  t9 += v * b8;\n  t10 += v * b9;\n  t11 += v * b10;\n  t12 += v * b11;\n  t13 += v * b12;\n  t14 += v * b13;\n  t15 += v * b14;\n  t16 += v * b15;\n  v = a[2];\n  t2 += v * b0;\n  t3 += v * b1;\n  t4 += v * b2;\n  t5 += v * b3;\n  t6 += v * b4;\n  t7 += v * b5;\n  t8 += v * b6;\n  t9 += v * b7;\n  t10 += v * b8;\n  t11 += v * b9;\n  t12 += v * b10;\n  t13 += v * b11;\n  t14 += v * b12;\n  t15 += v * b13;\n  t16 += v * b14;\n  t17 += v * b15;\n  v = a[3];\n  t3 += v * b0;\n  t4 += v * b1;\n  t5 += v * b2;\n  t6 += v * b3;\n  t7 += v * b4;\n  t8 += v * b5;\n  t9 += v * b6;\n  t10 += v * b7;\n  t11 += v * b8;\n  t12 += v * b9;\n  t13 += v * b10;\n  t14 += v * b11;\n  t15 += v * b12;\n  t16 += v * b13;\n  t17 += v * b14;\n  t18 += v * b15;\n  v = a[4];\n  t4 += v * b0;\n  t5 += v * b1;\n  t6 += v * b2;\n  t7 += v * b3;\n  t8 += v * b4;\n  t9 += v * b5;\n  t10 += v * b6;\n  t11 += v * b7;\n  t12 += v * b8;\n  t13 += v * b9;\n  t14 += v * b10;\n  t15 += v * b11;\n  t16 += v * b12;\n  t17 += v * b13;\n  t18 += v * b14;\n  t19 += v * b15;\n  v = a[5];\n  t5 += v * b0;\n  t6 += v * b1;\n  t7 += v * b2;\n  t8 += v * b3;\n  t9 += v * b4;\n  t10 += v * b5;\n  t11 += v * b6;\n  t12 += v * b7;\n  t13 += v * b8;\n  t14 += v * b9;\n  t15 += v * b10;\n  t16 += v * b11;\n  t17 += v * b12;\n  t18 += v * b13;\n  t19 += v * b14;\n  t20 += v * b15;\n  v = a[6];\n  t6 += v * b0;\n  t7 += v * b1;\n  t8 += v * b2;\n  t9 += v * b3;\n  t10 += v * b4;\n  t11 += v * b5;\n  t12 += v * b6;\n  t13 += v * b7;\n  t14 += v * b8;\n  t15 += v * b9;\n  t16 += v * b10;\n  t17 += v * b11;\n  t18 += v * b12;\n  t19 += v * b13;\n  t20 += v * b14;\n  t21 += v * b15;\n  v = a[7];\n  t7 += v * b0;\n  t8 += v * b1;\n  t9 += v * b2;\n  t10 += v * b3;\n  t11 += v * b4;\n  t12 += v * b5;\n  t13 += v * b6;\n  t14 += v * b7;\n  t15 += v * b8;\n  t16 += v * b9;\n  t17 += v * b10;\n  t18 += v * b11;\n  t19 += v * b12;\n  t20 += v * b13;\n  t21 += v * b14;\n  t22 += v * b15;\n  v = a[8];\n  t8 += v * b0;\n  t9 += v * b1;\n  t10 += v * b2;\n  t11 += v * b3;\n  t12 += v * b4;\n  t13 += v * b5;\n  t14 += v * b6;\n  t15 += v * b7;\n  t16 += v * b8;\n  t17 += v * b9;\n  t18 += v * b10;\n  t19 += v * b11;\n  t20 += v * b12;\n  t21 += v * b13;\n  t22 += v * b14;\n  t23 += v * b15;\n  v = a[9];\n  t9 += v * b0;\n  t10 += v * b1;\n  t11 += v * b2;\n  t12 += v * b3;\n  t13 += v * b4;\n  t14 += v * b5;\n  t15 += v * b6;\n  t16 += v * b7;\n  t17 += v * b8;\n  t18 += v * b9;\n  t19 += v * b10;\n  t20 += v * b11;\n  t21 += v * b12;\n  t22 += v * b13;\n  t23 += v * b14;\n  t24 += v * b15;\n  v = a[10];\n  t10 += v * b0;\n  t11 += v * b1;\n  t12 += v * b2;\n  t13 += v * b3;\n  t14 += v * b4;\n  t15 += v * b5;\n  t16 += v * b6;\n  t17 += v * b7;\n  t18 += v * b8;\n  t19 += v * b9;\n  t20 += v * b10;\n  t21 += v * b11;\n  t22 += v * b12;\n  t23 += v * b13;\n  t24 += v * b14;\n  t25 += v * b15;\n  v = a[11];\n  t11 += v * b0;\n  t12 += v * b1;\n  t13 += v * b2;\n  t14 += v * b3;\n  t15 += v * b4;\n  t16 += v * b5;\n  t17 += v * b6;\n  t18 += v * b7;\n  t19 += v * b8;\n  t20 += v * b9;\n  t21 += v * b10;\n  t22 += v * b11;\n  t23 += v * b12;\n  t24 += v * b13;\n  t25 += v * b14;\n  t26 += v * b15;\n  v = a[12];\n  t12 += v * b0;\n  t13 += v * b1;\n  t14 += v * b2;\n  t15 += v * b3;\n  t16 += v * b4;\n  t17 += v * b5;\n  t18 += v * b6;\n  t19 += v * b7;\n  t20 += v * b8;\n  t21 += v * b9;\n  t22 += v * b10;\n  t23 += v * b11;\n  t24 += v * b12;\n  t25 += v * b13;\n  t26 += v * b14;\n  t27 += v * b15;\n  v = a[13];\n  t13 += v * b0;\n  t14 += v * b1;\n  t15 += v * b2;\n  t16 += v * b3;\n  t17 += v * b4;\n  t18 += v * b5;\n  t19 += v * b6;\n  t20 += v * b7;\n  t21 += v * b8;\n  t22 += v * b9;\n  t23 += v * b10;\n  t24 += v * b11;\n  t25 += v * b12;\n  t26 += v * b13;\n  t27 += v * b14;\n  t28 += v * b15;\n  v = a[14];\n  t14 += v * b0;\n  t15 += v * b1;\n  t16 += v * b2;\n  t17 += v * b3;\n  t18 += v * b4;\n  t19 += v * b5;\n  t20 += v * b6;\n  t21 += v * b7;\n  t22 += v * b8;\n  t23 += v * b9;\n  t24 += v * b10;\n  t25 += v * b11;\n  t26 += v * b12;\n  t27 += v * b13;\n  t28 += v * b14;\n  t29 += v * b15;\n  v = a[15];\n  t15 += v * b0;\n  t16 += v * b1;\n  t17 += v * b2;\n  t18 += v * b3;\n  t19 += v * b4;\n  t20 += v * b5;\n  t21 += v * b6;\n  t22 += v * b7;\n  t23 += v * b8;\n  t24 += v * b9;\n  t25 += v * b10;\n  t26 += v * b11;\n  t27 += v * b12;\n  t28 += v * b13;\n  t29 += v * b14;\n  t30 += v * b15;\n\n  t0  += 38 * t16;\n  t1  += 38 * t17;\n  t2  += 38 * t18;\n  t3  += 38 * t19;\n  t4  += 38 * t20;\n  t5  += 38 * t21;\n  t6  += 38 * t22;\n  t7  += 38 * t23;\n  t8  += 38 * t24;\n  t9  += 38 * t25;\n  t10 += 38 * t26;\n  t11 += 38 * t27;\n  t12 += 38 * t28;\n  t13 += 38 * t29;\n  t14 += 38 * t30;\n  // t15 left as is\n\n  // first car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  // second car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  o[ 0] = t0;\n  o[ 1] = t1;\n  o[ 2] = t2;\n  o[ 3] = t3;\n  o[ 4] = t4;\n  o[ 5] = t5;\n  o[ 6] = t6;\n  o[ 7] = t7;\n  o[ 8] = t8;\n  o[ 9] = t9;\n  o[10] = t10;\n  o[11] = t11;\n  o[12] = t12;\n  o[13] = t13;\n  o[14] = t14;\n  o[15] = t15;\n}\n\nfunction S(o, a) {\n  M(o, a, a);\n}\n\nfunction inv25519(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 253; a >= 0; a--) {\n    S(c, c);\n    if(a !== 2 && a !== 4) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction pow2523(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 250; a >= 0; a--) {\n      S(c, c);\n      if(a !== 1) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction crypto_scalarmult(q, n, p) {\n  var z = new Uint8Array(32);\n  var x = new Float64Array(80), r, i;\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf();\n  for (i = 0; i < 31; i++) z[i] = n[i];\n  z[31]=(n[31]&127)|64;\n  z[0]&=248;\n  unpack25519(x,p);\n  for (i = 0; i < 16; i++) {\n    b[i]=x[i];\n    d[i]=a[i]=c[i]=0;\n  }\n  a[0]=d[0]=1;\n  for (i=254; i>=0; --i) {\n    r=(z[i>>>3]>>>(i&7))&1;\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n    A(e,a,c);\n    Z(a,a,c);\n    A(c,b,d);\n    Z(b,b,d);\n    S(d,e);\n    S(f,a);\n    M(a,c,a);\n    M(c,b,e);\n    A(e,a,c);\n    Z(a,a,c);\n    S(b,a);\n    Z(c,d,f);\n    M(a,c,_121665);\n    A(a,a,d);\n    M(c,c,a);\n    M(a,d,f);\n    M(d,b,x);\n    S(b,e);\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n  }\n  for (i = 0; i < 16; i++) {\n    x[i+16]=a[i];\n    x[i+32]=c[i];\n    x[i+48]=b[i];\n    x[i+64]=d[i];\n  }\n  var x32 = x.subarray(32);\n  var x16 = x.subarray(16);\n  inv25519(x32,x32);\n  M(x16,x16,x32);\n  pack25519(q,x16);\n  return 0;\n}\n\nfunction crypto_scalarmult_base(q, n) {\n  return crypto_scalarmult(q, n, _9);\n}\n\nfunction crypto_box_keypair(y, x) {\n  randombytes(x, 32);\n  return crypto_scalarmult_base(y, x);\n}\n\nfunction crypto_box_beforenm(k, y, x) {\n  var s = new Uint8Array(32);\n  crypto_scalarmult(s, x, y);\n  return crypto_core_hsalsa20(k, _0, s, sigma);\n}\n\nvar crypto_box_afternm = crypto_secretbox;\nvar crypto_box_open_afternm = crypto_secretbox_open;\n\nfunction crypto_box(c, m, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_afternm(c, m, d, n, k);\n}\n\nfunction crypto_box_open(m, c, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_open_afternm(m, c, d, n, k);\n}\n\nvar K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction crypto_hashblocks_hl(hh, hl, m, n) {\n  var wh = new Int32Array(16), wl = new Int32Array(16),\n      bh0, bh1, bh2, bh3, bh4, bh5, bh6, bh7,\n      bl0, bl1, bl2, bl3, bl4, bl5, bl6, bl7,\n      th, tl, i, j, h, l, a, b, c, d;\n\n  var ah0 = hh[0],\n      ah1 = hh[1],\n      ah2 = hh[2],\n      ah3 = hh[3],\n      ah4 = hh[4],\n      ah5 = hh[5],\n      ah6 = hh[6],\n      ah7 = hh[7],\n\n      al0 = hl[0],\n      al1 = hl[1],\n      al2 = hl[2],\n      al3 = hl[3],\n      al4 = hl[4],\n      al5 = hl[5],\n      al6 = hl[6],\n      al7 = hl[7];\n\n  var pos = 0;\n  while (n >= 128) {\n    for (i = 0; i < 16; i++) {\n      j = 8 * i + pos;\n      wh[i] = (m[j+0] << 24) | (m[j+1] << 16) | (m[j+2] << 8) | m[j+3];\n      wl[i] = (m[j+4] << 24) | (m[j+5] << 16) | (m[j+6] << 8) | m[j+7];\n    }\n    for (i = 0; i < 80; i++) {\n      bh0 = ah0;\n      bh1 = ah1;\n      bh2 = ah2;\n      bh3 = ah3;\n      bh4 = ah4;\n      bh5 = ah5;\n      bh6 = ah6;\n      bh7 = ah7;\n\n      bl0 = al0;\n      bl1 = al1;\n      bl2 = al2;\n      bl3 = al3;\n      bl4 = al4;\n      bl5 = al5;\n      bl6 = al6;\n      bl7 = al7;\n\n      // add\n      h = ah7;\n      l = al7;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma1\n      h = ((ah4 >>> 14) | (al4 << (32-14))) ^ ((ah4 >>> 18) | (al4 << (32-18))) ^ ((al4 >>> (41-32)) | (ah4 << (32-(41-32))));\n      l = ((al4 >>> 14) | (ah4 << (32-14))) ^ ((al4 >>> 18) | (ah4 << (32-18))) ^ ((ah4 >>> (41-32)) | (al4 << (32-(41-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Ch\n      h = (ah4 & ah5) ^ (~ah4 & ah6);\n      l = (al4 & al5) ^ (~al4 & al6);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // K\n      h = K[i*2];\n      l = K[i*2+1];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // w\n      h = wh[i%16];\n      l = wl[i%16];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      th = c & 0xffff | d << 16;\n      tl = a & 0xffff | b << 16;\n\n      // add\n      h = th;\n      l = tl;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma0\n      h = ((ah0 >>> 28) | (al0 << (32-28))) ^ ((al0 >>> (34-32)) | (ah0 << (32-(34-32)))) ^ ((al0 >>> (39-32)) | (ah0 << (32-(39-32))));\n      l = ((al0 >>> 28) | (ah0 << (32-28))) ^ ((ah0 >>> (34-32)) | (al0 << (32-(34-32)))) ^ ((ah0 >>> (39-32)) | (al0 << (32-(39-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Maj\n      h = (ah0 & ah1) ^ (ah0 & ah2) ^ (ah1 & ah2);\n      l = (al0 & al1) ^ (al0 & al2) ^ (al1 & al2);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh7 = (c & 0xffff) | (d << 16);\n      bl7 = (a & 0xffff) | (b << 16);\n\n      // add\n      h = bh3;\n      l = bl3;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      h = th;\n      l = tl;\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh3 = (c & 0xffff) | (d << 16);\n      bl3 = (a & 0xffff) | (b << 16);\n\n      ah1 = bh0;\n      ah2 = bh1;\n      ah3 = bh2;\n      ah4 = bh3;\n      ah5 = bh4;\n      ah6 = bh5;\n      ah7 = bh6;\n      ah0 = bh7;\n\n      al1 = bl0;\n      al2 = bl1;\n      al3 = bl2;\n      al4 = bl3;\n      al5 = bl4;\n      al6 = bl5;\n      al7 = bl6;\n      al0 = bl7;\n\n      if (i%16 === 15) {\n        for (j = 0; j < 16; j++) {\n          // add\n          h = wh[j];\n          l = wl[j];\n\n          a = l & 0xffff; b = l >>> 16;\n          c = h & 0xffff; d = h >>> 16;\n\n          h = wh[(j+9)%16];\n          l = wl[(j+9)%16];\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma0\n          th = wh[(j+1)%16];\n          tl = wl[(j+1)%16];\n          h = ((th >>> 1) | (tl << (32-1))) ^ ((th >>> 8) | (tl << (32-8))) ^ (th >>> 7);\n          l = ((tl >>> 1) | (th << (32-1))) ^ ((tl >>> 8) | (th << (32-8))) ^ ((tl >>> 7) | (th << (32-7)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma1\n          th = wh[(j+14)%16];\n          tl = wl[(j+14)%16];\n          h = ((th >>> 19) | (tl << (32-19))) ^ ((tl >>> (61-32)) | (th << (32-(61-32)))) ^ (th >>> 6);\n          l = ((tl >>> 19) | (th << (32-19))) ^ ((th >>> (61-32)) | (tl << (32-(61-32)))) ^ ((tl >>> 6) | (th << (32-6)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          b += a >>> 16;\n          c += b >>> 16;\n          d += c >>> 16;\n\n          wh[j] = (c & 0xffff) | (d << 16);\n          wl[j] = (a & 0xffff) | (b << 16);\n        }\n      }\n    }\n\n    // add\n    h = ah0;\n    l = al0;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[0];\n    l = hl[0];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[0] = ah0 = (c & 0xffff) | (d << 16);\n    hl[0] = al0 = (a & 0xffff) | (b << 16);\n\n    h = ah1;\n    l = al1;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[1];\n    l = hl[1];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[1] = ah1 = (c & 0xffff) | (d << 16);\n    hl[1] = al1 = (a & 0xffff) | (b << 16);\n\n    h = ah2;\n    l = al2;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[2];\n    l = hl[2];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[2] = ah2 = (c & 0xffff) | (d << 16);\n    hl[2] = al2 = (a & 0xffff) | (b << 16);\n\n    h = ah3;\n    l = al3;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[3];\n    l = hl[3];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[3] = ah3 = (c & 0xffff) | (d << 16);\n    hl[3] = al3 = (a & 0xffff) | (b << 16);\n\n    h = ah4;\n    l = al4;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[4];\n    l = hl[4];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[4] = ah4 = (c & 0xffff) | (d << 16);\n    hl[4] = al4 = (a & 0xffff) | (b << 16);\n\n    h = ah5;\n    l = al5;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[5];\n    l = hl[5];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[5] = ah5 = (c & 0xffff) | (d << 16);\n    hl[5] = al5 = (a & 0xffff) | (b << 16);\n\n    h = ah6;\n    l = al6;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[6];\n    l = hl[6];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[6] = ah6 = (c & 0xffff) | (d << 16);\n    hl[6] = al6 = (a & 0xffff) | (b << 16);\n\n    h = ah7;\n    l = al7;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[7];\n    l = hl[7];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[7] = ah7 = (c & 0xffff) | (d << 16);\n    hl[7] = al7 = (a & 0xffff) | (b << 16);\n\n    pos += 128;\n    n -= 128;\n  }\n\n  return n;\n}\n\nfunction crypto_hash(out, m, n) {\n  var hh = new Int32Array(8),\n      hl = new Int32Array(8),\n      x = new Uint8Array(256),\n      i, b = n;\n\n  hh[0] = 0x6a09e667;\n  hh[1] = 0xbb67ae85;\n  hh[2] = 0x3c6ef372;\n  hh[3] = 0xa54ff53a;\n  hh[4] = 0x510e527f;\n  hh[5] = 0x9b05688c;\n  hh[6] = 0x1f83d9ab;\n  hh[7] = 0x5be0cd19;\n\n  hl[0] = 0xf3bcc908;\n  hl[1] = 0x84caa73b;\n  hl[2] = 0xfe94f82b;\n  hl[3] = 0x5f1d36f1;\n  hl[4] = 0xade682d1;\n  hl[5] = 0x2b3e6c1f;\n  hl[6] = 0xfb41bd6b;\n  hl[7] = 0x137e2179;\n\n  crypto_hashblocks_hl(hh, hl, m, n);\n  n %= 128;\n\n  for (i = 0; i < n; i++) x[i] = m[b-n+i];\n  x[n] = 128;\n\n  n = 256-128*(n<112?1:0);\n  x[n-9] = 0;\n  ts64(x, n-8,  (b / 0x20000000) | 0, b << 3);\n  crypto_hashblocks_hl(hh, hl, x, n);\n\n  for (i = 0; i < 8; i++) ts64(out, 8*i, hh[i], hl[i]);\n\n  return 0;\n}\n\nfunction add(p, q) {\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf(),\n      g = gf(), h = gf(), t = gf();\n\n  Z(a, p[1], p[0]);\n  Z(t, q[1], q[0]);\n  M(a, a, t);\n  A(b, p[0], p[1]);\n  A(t, q[0], q[1]);\n  M(b, b, t);\n  M(c, p[3], q[3]);\n  M(c, c, D2);\n  M(d, p[2], q[2]);\n  A(d, d, d);\n  Z(e, b, a);\n  Z(f, d, c);\n  A(g, d, c);\n  A(h, b, a);\n\n  M(p[0], e, f);\n  M(p[1], h, g);\n  M(p[2], g, f);\n  M(p[3], e, h);\n}\n\nfunction cswap(p, q, b) {\n  var i;\n  for (i = 0; i < 4; i++) {\n    sel25519(p[i], q[i], b);\n  }\n}\n\nfunction pack(r, p) {\n  var tx = gf(), ty = gf(), zi = gf();\n  inv25519(zi, p[2]);\n  M(tx, p[0], zi);\n  M(ty, p[1], zi);\n  pack25519(r, ty);\n  r[31] ^= par25519(tx) << 7;\n}\n\nfunction scalarmult(p, q, s) {\n  var b, i;\n  set25519(p[0], gf0);\n  set25519(p[1], gf1);\n  set25519(p[2], gf1);\n  set25519(p[3], gf0);\n  for (i = 255; i >= 0; --i) {\n    b = (s[(i/8)|0] >> (i&7)) & 1;\n    cswap(p, q, b);\n    add(q, p);\n    add(p, p);\n    cswap(p, q, b);\n  }\n}\n\nfunction scalarbase(p, s) {\n  var q = [gf(), gf(), gf(), gf()];\n  set25519(q[0], X);\n  set25519(q[1], Y);\n  set25519(q[2], gf1);\n  M(q[3], X, Y);\n  scalarmult(p, q, s);\n}\n\nfunction crypto_sign_keypair(pk, sk, seeded) {\n  var d = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n  var i;\n\n  if (!seeded) randombytes(sk, 32);\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  scalarbase(p, d);\n  pack(pk, p);\n\n  for (i = 0; i < 32; i++) sk[i+32] = pk[i];\n  return 0;\n}\n\nvar L = new Float64Array([0xed, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58, 0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x10]);\n\nfunction modL(r, x) {\n  var carry, i, j, k;\n  for (i = 63; i >= 32; --i) {\n    carry = 0;\n    for (j = i - 32, k = i - 12; j < k; ++j) {\n      x[j] += carry - 16 * x[i] * L[j - (i - 32)];\n      carry = (x[j] + 128) >> 8;\n      x[j] -= carry * 256;\n    }\n    x[j] += carry;\n    x[i] = 0;\n  }\n  carry = 0;\n  for (j = 0; j < 32; j++) {\n    x[j] += carry - (x[31] >> 4) * L[j];\n    carry = x[j] >> 8;\n    x[j] &= 255;\n  }\n  for (j = 0; j < 32; j++) x[j] -= carry * L[j];\n  for (i = 0; i < 32; i++) {\n    x[i+1] += x[i] >> 8;\n    r[i] = x[i] & 255;\n  }\n}\n\nfunction reduce(r) {\n  var x = new Float64Array(64), i;\n  for (i = 0; i < 64; i++) x[i] = r[i];\n  for (i = 0; i < 64; i++) r[i] = 0;\n  modL(r, x);\n}\n\n// Note: difference from C - smlen returned, not passed as argument.\nfunction crypto_sign(sm, m, n, sk) {\n  var d = new Uint8Array(64), h = new Uint8Array(64), r = new Uint8Array(64);\n  var i, j, x = new Float64Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  var smlen = n + 64;\n  for (i = 0; i < n; i++) sm[64 + i] = m[i];\n  for (i = 0; i < 32; i++) sm[32 + i] = d[32 + i];\n\n  crypto_hash(r, sm.subarray(32), n+32);\n  reduce(r);\n  scalarbase(p, r);\n  pack(sm, p);\n\n  for (i = 32; i < 64; i++) sm[i] = sk[i];\n  crypto_hash(h, sm, n + 64);\n  reduce(h);\n\n  for (i = 0; i < 64; i++) x[i] = 0;\n  for (i = 0; i < 32; i++) x[i] = r[i];\n  for (i = 0; i < 32; i++) {\n    for (j = 0; j < 32; j++) {\n      x[i+j] += h[i] * d[j];\n    }\n  }\n\n  modL(sm.subarray(32), x);\n  return smlen;\n}\n\nfunction unpackneg(r, p) {\n  var t = gf(), chk = gf(), num = gf(),\n      den = gf(), den2 = gf(), den4 = gf(),\n      den6 = gf();\n\n  set25519(r[2], gf1);\n  unpack25519(r[1], p);\n  S(num, r[1]);\n  M(den, num, D);\n  Z(num, num, r[2]);\n  A(den, r[2], den);\n\n  S(den2, den);\n  S(den4, den2);\n  M(den6, den4, den2);\n  M(t, den6, num);\n  M(t, t, den);\n\n  pow2523(t, t);\n  M(t, t, num);\n  M(t, t, den);\n  M(t, t, den);\n  M(r[0], t, den);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) M(r[0], r[0], I);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) return -1;\n\n  if (par25519(r[0]) === (p[31]>>7)) Z(r[0], gf0, r[0]);\n\n  M(r[3], r[0], r[1]);\n  return 0;\n}\n\nfunction crypto_sign_open(m, sm, n, pk) {\n  var i, mlen;\n  var t = new Uint8Array(32), h = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()],\n      q = [gf(), gf(), gf(), gf()];\n\n  mlen = -1;\n  if (n < 64) return -1;\n\n  if (unpackneg(q, pk)) return -1;\n\n  for (i = 0; i < n; i++) m[i] = sm[i];\n  for (i = 0; i < 32; i++) m[i+32] = pk[i];\n  crypto_hash(h, m, n);\n  reduce(h);\n  scalarmult(p, q, h);\n\n  scalarbase(q, sm.subarray(32));\n  add(p, q);\n  pack(t, p);\n\n  n -= 64;\n  if (crypto_verify_32(sm, 0, t, 0)) {\n    for (i = 0; i < n; i++) m[i] = 0;\n    return -1;\n  }\n\n  for (i = 0; i < n; i++) m[i] = sm[i + 64];\n  mlen = n;\n  return mlen;\n}\n\nvar crypto_secretbox_KEYBYTES = 32,\n    crypto_secretbox_NONCEBYTES = 24,\n    crypto_secretbox_ZEROBYTES = 32,\n    crypto_secretbox_BOXZEROBYTES = 16,\n    crypto_scalarmult_BYTES = 32,\n    crypto_scalarmult_SCALARBYTES = 32,\n    crypto_box_PUBLICKEYBYTES = 32,\n    crypto_box_SECRETKEYBYTES = 32,\n    crypto_box_BEFORENMBYTES = 32,\n    crypto_box_NONCEBYTES = crypto_secretbox_NONCEBYTES,\n    crypto_box_ZEROBYTES = crypto_secretbox_ZEROBYTES,\n    crypto_box_BOXZEROBYTES = crypto_secretbox_BOXZEROBYTES,\n    crypto_sign_BYTES = 64,\n    crypto_sign_PUBLICKEYBYTES = 32,\n    crypto_sign_SECRETKEYBYTES = 64,\n    crypto_sign_SEEDBYTES = 32,\n    crypto_hash_BYTES = 64;\n\nnacl.lowlevel = {\n  crypto_core_hsalsa20: crypto_core_hsalsa20,\n  crypto_stream_xor: crypto_stream_xor,\n  crypto_stream: crypto_stream,\n  crypto_stream_salsa20_xor: crypto_stream_salsa20_xor,\n  crypto_stream_salsa20: crypto_stream_salsa20,\n  crypto_onetimeauth: crypto_onetimeauth,\n  crypto_onetimeauth_verify: crypto_onetimeauth_verify,\n  crypto_verify_16: crypto_verify_16,\n  crypto_verify_32: crypto_verify_32,\n  crypto_secretbox: crypto_secretbox,\n  crypto_secretbox_open: crypto_secretbox_open,\n  crypto_scalarmult: crypto_scalarmult,\n  crypto_scalarmult_base: crypto_scalarmult_base,\n  crypto_box_beforenm: crypto_box_beforenm,\n  crypto_box_afternm: crypto_box_afternm,\n  crypto_box: crypto_box,\n  crypto_box_open: crypto_box_open,\n  crypto_box_keypair: crypto_box_keypair,\n  crypto_hash: crypto_hash,\n  crypto_sign: crypto_sign,\n  crypto_sign_keypair: crypto_sign_keypair,\n  crypto_sign_open: crypto_sign_open,\n\n  crypto_secretbox_KEYBYTES: crypto_secretbox_KEYBYTES,\n  crypto_secretbox_NONCEBYTES: crypto_secretbox_NONCEBYTES,\n  crypto_secretbox_ZEROBYTES: crypto_secretbox_ZEROBYTES,\n  crypto_secretbox_BOXZEROBYTES: crypto_secretbox_BOXZEROBYTES,\n  crypto_scalarmult_BYTES: crypto_scalarmult_BYTES,\n  crypto_scalarmult_SCALARBYTES: crypto_scalarmult_SCALARBYTES,\n  crypto_box_PUBLICKEYBYTES: crypto_box_PUBLICKEYBYTES,\n  crypto_box_SECRETKEYBYTES: crypto_box_SECRETKEYBYTES,\n  crypto_box_BEFORENMBYTES: crypto_box_BEFORENMBYTES,\n  crypto_box_NONCEBYTES: crypto_box_NONCEBYTES,\n  crypto_box_ZEROBYTES: crypto_box_ZEROBYTES,\n  crypto_box_BOXZEROBYTES: crypto_box_BOXZEROBYTES,\n  crypto_sign_BYTES: crypto_sign_BYTES,\n  crypto_sign_PUBLICKEYBYTES: crypto_sign_PUBLICKEYBYTES,\n  crypto_sign_SECRETKEYBYTES: crypto_sign_SECRETKEYBYTES,\n  crypto_sign_SEEDBYTES: crypto_sign_SEEDBYTES,\n  crypto_hash_BYTES: crypto_hash_BYTES\n};\n\n/* High-level API */\n\nfunction checkLengths(k, n) {\n  if (k.length !== crypto_secretbox_KEYBYTES) throw new Error('bad key size');\n  if (n.length !== crypto_secretbox_NONCEBYTES) throw new Error('bad nonce size');\n}\n\nfunction checkBoxLengths(pk, sk) {\n  if (pk.length !== crypto_box_PUBLICKEYBYTES) throw new Error('bad public key size');\n  if (sk.length !== crypto_box_SECRETKEYBYTES) throw new Error('bad secret key size');\n}\n\nfunction checkArrayTypes() {\n  var t, i;\n  for (i = 0; i < arguments.length; i++) {\n     if ((t = Object.prototype.toString.call(arguments[i])) !== '[object Uint8Array]')\n       throw new TypeError('unexpected type ' + t + ', use Uint8Array');\n  }\n}\n\nfunction cleanup(arr) {\n  for (var i = 0; i < arr.length; i++) arr[i] = 0;\n}\n\n// TODO: Completely remove this in v0.15.\nif (!nacl.util) {\n  nacl.util = {};\n  nacl.util.decodeUTF8 = nacl.util.encodeUTF8 = nacl.util.encodeBase64 = nacl.util.decodeBase64 = function() {\n    throw new Error('nacl.util moved into separate package: https://github.com/dchest/tweetnacl-util-js');\n  };\n}\n\nnacl.randomBytes = function(n) {\n  var b = new Uint8Array(n);\n  randombytes(b, n);\n  return b;\n};\n\nnacl.secretbox = function(msg, nonce, key) {\n  checkArrayTypes(msg, nonce, key);\n  checkLengths(key, nonce);\n  var m = new Uint8Array(crypto_secretbox_ZEROBYTES + msg.length);\n  var c = new Uint8Array(m.length);\n  for (var i = 0; i < msg.length; i++) m[i+crypto_secretbox_ZEROBYTES] = msg[i];\n  crypto_secretbox(c, m, m.length, nonce, key);\n  return c.subarray(crypto_secretbox_BOXZEROBYTES);\n};\n\nnacl.secretbox.open = function(box, nonce, key) {\n  checkArrayTypes(box, nonce, key);\n  checkLengths(key, nonce);\n  var c = new Uint8Array(crypto_secretbox_BOXZEROBYTES + box.length);\n  var m = new Uint8Array(c.length);\n  for (var i = 0; i < box.length; i++) c[i+crypto_secretbox_BOXZEROBYTES] = box[i];\n  if (c.length < 32) return false;\n  if (crypto_secretbox_open(m, c, c.length, nonce, key) !== 0) return false;\n  return m.subarray(crypto_secretbox_ZEROBYTES);\n};\n\nnacl.secretbox.keyLength = crypto_secretbox_KEYBYTES;\nnacl.secretbox.nonceLength = crypto_secretbox_NONCEBYTES;\nnacl.secretbox.overheadLength = crypto_secretbox_BOXZEROBYTES;\n\nnacl.scalarMult = function(n, p) {\n  checkArrayTypes(n, p);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  if (p.length !== crypto_scalarmult_BYTES) throw new Error('bad p size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult(q, n, p);\n  return q;\n};\n\nnacl.scalarMult.base = function(n) {\n  checkArrayTypes(n);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult_base(q, n);\n  return q;\n};\n\nnacl.scalarMult.scalarLength = crypto_scalarmult_SCALARBYTES;\nnacl.scalarMult.groupElementLength = crypto_scalarmult_BYTES;\n\nnacl.box = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox(msg, nonce, k);\n};\n\nnacl.box.before = function(publicKey, secretKey) {\n  checkArrayTypes(publicKey, secretKey);\n  checkBoxLengths(publicKey, secretKey);\n  var k = new Uint8Array(crypto_box_BEFORENMBYTES);\n  crypto_box_beforenm(k, publicKey, secretKey);\n  return k;\n};\n\nnacl.box.after = nacl.secretbox;\n\nnacl.box.open = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox.open(msg, nonce, k);\n};\n\nnacl.box.open.after = nacl.secretbox.open;\n\nnacl.box.keyPair = function() {\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_box_SECRETKEYBYTES);\n  crypto_box_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.box.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_box_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  crypto_scalarmult_base(pk, secretKey);\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.box.publicKeyLength = crypto_box_PUBLICKEYBYTES;\nnacl.box.secretKeyLength = crypto_box_SECRETKEYBYTES;\nnacl.box.sharedKeyLength = crypto_box_BEFORENMBYTES;\nnacl.box.nonceLength = crypto_box_NONCEBYTES;\nnacl.box.overheadLength = nacl.secretbox.overheadLength;\n\nnacl.sign = function(msg, secretKey) {\n  checkArrayTypes(msg, secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var signedMsg = new Uint8Array(crypto_sign_BYTES+msg.length);\n  crypto_sign(signedMsg, msg, msg.length, secretKey);\n  return signedMsg;\n};\n\nnacl.sign.open = function(signedMsg, publicKey) {\n  if (arguments.length !== 2)\n    throw new Error('nacl.sign.open accepts 2 arguments; did you mean to use nacl.sign.detached.verify?');\n  checkArrayTypes(signedMsg, publicKey);\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var tmp = new Uint8Array(signedMsg.length);\n  var mlen = crypto_sign_open(tmp, signedMsg, signedMsg.length, publicKey);\n  if (mlen < 0) return null;\n  var m = new Uint8Array(mlen);\n  for (var i = 0; i < m.length; i++) m[i] = tmp[i];\n  return m;\n};\n\nnacl.sign.detached = function(msg, secretKey) {\n  var signedMsg = nacl.sign(msg, secretKey);\n  var sig = new Uint8Array(crypto_sign_BYTES);\n  for (var i = 0; i < sig.length; i++) sig[i] = signedMsg[i];\n  return sig;\n};\n\nnacl.sign.detached.verify = function(msg, sig, publicKey) {\n  checkArrayTypes(msg, sig, publicKey);\n  if (sig.length !== crypto_sign_BYTES)\n    throw new Error('bad signature size');\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var sm = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var m = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var i;\n  for (i = 0; i < crypto_sign_BYTES; i++) sm[i] = sig[i];\n  for (i = 0; i < msg.length; i++) sm[i+crypto_sign_BYTES] = msg[i];\n  return (crypto_sign_open(m, sm, sm.length, publicKey) >= 0);\n};\n\nnacl.sign.keyPair = function() {\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  crypto_sign_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  for (var i = 0; i < pk.length; i++) pk[i] = secretKey[32+i];\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.sign.keyPair.fromSeed = function(seed) {\n  checkArrayTypes(seed);\n  if (seed.length !== crypto_sign_SEEDBYTES)\n    throw new Error('bad seed size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  for (var i = 0; i < 32; i++) sk[i] = seed[i];\n  crypto_sign_keypair(pk, sk, true);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.publicKeyLength = crypto_sign_PUBLICKEYBYTES;\nnacl.sign.secretKeyLength = crypto_sign_SECRETKEYBYTES;\nnacl.sign.seedLength = crypto_sign_SEEDBYTES;\nnacl.sign.signatureLength = crypto_sign_BYTES;\n\nnacl.hash = function(msg) {\n  checkArrayTypes(msg);\n  var h = new Uint8Array(crypto_hash_BYTES);\n  crypto_hash(h, msg, msg.length);\n  return h;\n};\n\nnacl.hash.hashLength = crypto_hash_BYTES;\n\nnacl.verify = function(x, y) {\n  checkArrayTypes(x, y);\n  // Zero length arguments are considered not equal.\n  if (x.length === 0 || y.length === 0) return false;\n  if (x.length !== y.length) return false;\n  return (vn(x, 0, y, 0, x.length) === 0) ? true : false;\n};\n\nnacl.setPRNG = function(fn) {\n  randombytes = fn;\n};\n\n(function() {\n  // Initialize PRNG if environment provides CSPRNG.\n  // If not, methods calling randombytes will throw.\n  var crypto = typeof self !== 'undefined' ? (self.crypto || self.msCrypto) : null;\n  if (crypto && crypto.getRandomValues) {\n    // Browsers.\n    var QUOTA = 65536;\n    nacl.setPRNG(function(x, n) {\n      var i, v = new Uint8Array(n);\n      for (i = 0; i < n; i += QUOTA) {\n        crypto.getRandomValues(v.subarray(i, i + Math.min(n - i, QUOTA)));\n      }\n      for (i = 0; i < n; i++) x[i] = v[i];\n      cleanup(v);\n    });\n  } else if (typeof require !== 'undefined') {\n    // Node.js.\n    crypto = require('crypto');\n    if (crypto && crypto.randomBytes) {\n      nacl.setPRNG(function(x, n) {\n        var i, v = crypto.randomBytes(n);\n        for (i = 0; i < n; i++) x[i] = v[i];\n        cleanup(v);\n      });\n    }\n  }\n})();\n\n})(typeof module !== 'undefined' && module.exports ? module.exports : (self.nacl = self.nacl || {}));\n","export const version = \"units/5.7.0\";\n","\"use strict\";\n\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { formatFixed, parseFixed } from \"@ethersproject/bignumber\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nconst names = [\n    \"wei\",\n    \"kwei\",\n    \"mwei\",\n    \"gwei\",\n    \"szabo\",\n    \"finney\",\n    \"ether\",\n];\n\n\n// Some environments have issues with RegEx that contain back-tracking, so we cannot\n// use them.\nexport function commify(value: string | number): string {\n    const comps = String(value).split(\".\");\n\n    if (comps.length > 2 || !comps[0].match(/^-?[0-9]*$/) || (comps[1] && !comps[1].match(/^[0-9]*$/)) || value === \".\" || value === \"-.\") {\n        logger.throwArgumentError(\"invalid value\", \"value\", value);\n    }\n\n    // Make sure we have at least one whole digit (0 if none)\n    let whole = comps[0];\n\n    let negative = \"\";\n    if (whole.substring(0, 1) === \"-\") {\n        negative = \"-\";\n        whole = whole.substring(1);\n    }\n\n    // Make sure we have at least 1 whole digit with no leading zeros\n    while (whole.substring(0, 1) === \"0\") { whole = whole.substring(1); }\n    if (whole === \"\") { whole = \"0\"; }\n\n    let suffix = \"\";\n    if (comps.length === 2) { suffix = \".\" + (comps[1] || \"0\"); }\n    while (suffix.length > 2 && suffix[suffix.length - 1] === \"0\") {\n        suffix = suffix.substring(0, suffix.length - 1);\n    }\n\n    const formatted = [];\n    while (whole.length) {\n        if (whole.length <= 3) {\n            formatted.unshift(whole);\n            break;\n        } else {\n            const index = whole.length - 3;\n            formatted.unshift(whole.substring(index));\n            whole = whole.substring(0, index);\n        }\n    }\n\n    return negative + formatted.join(\",\") + suffix;\n}\n\nexport function formatUnits(value: BigNumberish, unitName?: string | BigNumberish): string {\n    if (typeof(unitName) === \"string\") {\n        const index = names.indexOf(unitName);\n        if (index !== -1) { unitName = 3 * index; }\n    }\n    return formatFixed(value, (unitName != null) ? unitName: 18);\n}\n\nexport function parseUnits(value: string, unitName?: BigNumberish): BigNumber {\n    if (typeof(value) !== \"string\") {\n        logger.throwArgumentError(\"value must be a string\", \"value\", value);\n    }\n    if (typeof(unitName) === \"string\") {\n        const index = names.indexOf(unitName);\n        if (index !== -1) { unitName = 3 * index; }\n    }\n    return parseFixed(value, (unitName != null) ? unitName: 18);\n}\n\nexport function formatEther(wei: BigNumberish): string {\n    return formatUnits(wei, 18);\n}\n\nexport function parseEther(ether: string): BigNumber {\n    return parseUnits(ether, 18);\n}\n\n","export const version = \"networks/5.7.1\";\n","\"use strict\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { Network, Networkish } from \"./types\";\n\nexport {\n    Network,\n    Networkish\n};\n\ntype DefaultProviderFunc = (providers: any, options?: any) => any;\n\ninterface Renetworkable extends DefaultProviderFunc {\n    renetwork: (network: Network) => DefaultProviderFunc;\n};\n\nfunction isRenetworkable(value: any): value is Renetworkable {\n    return (value && typeof(value.renetwork) === \"function\");\n}\n\nfunction ethDefaultProvider(network: string | Network): Renetworkable {\n    const func = function(providers: any, options?: any): any {\n        if (options == null) { options = { }; }\n        const providerList: Array<any> = [];\n\n        if (providers.InfuraProvider && options.infura !== \"-\") {\n            try {\n                providerList.push(new providers.InfuraProvider(network, options.infura));\n            } catch(error) { }\n        }\n\n        if (providers.EtherscanProvider && options.etherscan !== \"-\") {\n            try {\n                providerList.push(new providers.EtherscanProvider(network, options.etherscan));\n            } catch(error) { }\n        }\n\n        if (providers.AlchemyProvider && options.alchemy !== \"-\") {\n            try {\n                providerList.push(new providers.AlchemyProvider(network, options.alchemy));\n            } catch(error) { }\n        }\n\n        if (providers.PocketProvider && options.pocket !== \"-\") {\n            // These networks are currently faulty on Pocket as their\n            // network does not handle the Berlin hardfork, which is\n            // live on these ones.\n            // @TODO: This goes away once Pocket has upgraded their nodes\n            const skip = [ \"goerli\", \"ropsten\", \"rinkeby\", \"sepolia\" ];\n            try {\n                const provider = new providers.PocketProvider(network, options.pocket);\n                if (provider.network && skip.indexOf(provider.network.name) === -1) {\n                    providerList.push(provider);\n                }\n            } catch(error) { }\n        }\n\n        if (providers.CloudflareProvider && options.cloudflare !== \"-\") {\n            try {\n                providerList.push(new providers.CloudflareProvider(network));\n            } catch(error) { }\n        }\n\n        if (providers.AnkrProvider && options.ankr !== \"-\") {\n            try {\n                const skip = [ \"ropsten\" ];\n                const provider = new providers.AnkrProvider(network, options.ankr);\n                if (provider.network && skip.indexOf(provider.network.name) === -1) {\n                    providerList.push(provider);\n                }\n            } catch(error) { }\n        }\n\n        if (providerList.length === 0) { return null; }\n\n        if (providers.FallbackProvider) {\n            let quorum = 1;\n            if (options.quorum != null) {\n                quorum = options.quorum;\n            } else if (network === \"homestead\") {\n                quorum = 2;\n            }\n            return new providers.FallbackProvider(providerList, quorum);\n        }\n\n        return providerList[0];\n    };\n\n    func.renetwork = function(network: Network) {\n        return ethDefaultProvider(network);\n    };\n\n    return func;\n}\n\nfunction etcDefaultProvider(url: string, network: string | Network): Renetworkable {\n    const func = function(providers: any, options?: any): any {\n        if (providers.JsonRpcProvider) {\n            return new providers.JsonRpcProvider(url, network);\n        }\n\n        return null;\n    };\n\n    func.renetwork = function(network: Network) {\n        return etcDefaultProvider(url, network);\n    };\n\n    return func;\n}\n\nconst homestead: Network = {\n    chainId: 1,\n    ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n    name: \"homestead\",\n    _defaultProvider: ethDefaultProvider(\"homestead\")\n};\n\nconst ropsten: Network = {\n    chainId: 3,\n    ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n    name: \"ropsten\",\n    _defaultProvider: ethDefaultProvider(\"ropsten\")\n};\n\nconst classicMordor: Network = {\n    chainId: 63,\n    name: \"classicMordor\",\n    _defaultProvider: etcDefaultProvider(\"https://www.ethercluster.com/mordor\", \"classicMordor\")\n};\n\n// See: https://chainlist.org\nconst networks: { [name: string]: Network } = {\n    unspecified: { chainId: 0, name: \"unspecified\" },\n\n    homestead: homestead,\n    mainnet: homestead,\n\n    morden: { chainId: 2, name: \"morden\" },\n\n    ropsten: ropsten,\n    testnet: ropsten,\n\n    rinkeby: {\n        chainId: 4,\n        ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n        name: \"rinkeby\",\n        _defaultProvider: ethDefaultProvider(\"rinkeby\")\n    },\n\n    kovan: {\n        chainId: 42,\n        name: \"kovan\",\n        _defaultProvider: ethDefaultProvider(\"kovan\")\n    },\n\n    goerli: {\n        chainId: 5,\n        ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n        name: \"goerli\",\n        _defaultProvider: ethDefaultProvider(\"goerli\")\n    },\n\n    kintsugi: { chainId: 1337702, name: \"kintsugi\" },\n\n    sepolia: {\n        chainId: 11155111,\n        name: \"sepolia\",\n        _defaultProvider: ethDefaultProvider(\"sepolia\")\n    },\n\n\n    // ETC (See: #351)\n    classic: {\n        chainId: 61,\n        name: \"classic\",\n        _defaultProvider: etcDefaultProvider(\"https:/\\/www.ethercluster.com/etc\", \"classic\")\n    },\n\n    classicMorden: { chainId: 62, name: \"classicMorden\" },\n\n    classicMordor: classicMordor,\n    classicTestnet: classicMordor,\n\n    classicKotti: {\n        chainId: 6,\n        name: \"classicKotti\",\n        _defaultProvider: etcDefaultProvider(\"https:/\\/www.ethercluster.com/kotti\", \"classicKotti\")\n    },\n\n    xdai: { chainId: 100, name: \"xdai\" },\n\n    matic: {\n        chainId: 137,\n        name: \"matic\",\n        _defaultProvider: ethDefaultProvider(\"matic\")\n    },\n    maticmum: { chainId: 80001, name: \"maticmum\" },\n\n    optimism: {\n        chainId: 10,\n        name: \"optimism\",\n        _defaultProvider: ethDefaultProvider(\"optimism\")\n    },\n    \"optimism-kovan\": { chainId: 69, name: \"optimism-kovan\" },\n    \"optimism-goerli\": { chainId: 420, name: \"optimism-goerli\" },\n\n    arbitrum: { chainId: 42161, name: \"arbitrum\" },\n    \"arbitrum-rinkeby\": { chainId: 421611, name: \"arbitrum-rinkeby\" },\n    \"arbitrum-goerli\": { chainId: 421613, name: \"arbitrum-goerli\" },\n\n    bnb: { chainId: 56, name: \"bnb\" },\n    bnbt: { chainId: 97, name: \"bnbt\" },\n}\n\n/**\n *  getNetwork\n *\n *  Converts a named common networks or chain ID (network ID) to a Network\n *  and verifies a network is a valid Network..\n */\nexport function getNetwork(network: Networkish): Network {\n    // No network (null)\n    if (network == null) { return null; }\n\n    if (typeof(network) === \"number\") {\n        for (const name in networks) {\n            const standard = networks[name];\n            if (standard.chainId === network) {\n                return {\n                    name: standard.name,\n                    chainId: standard.chainId,\n                    ensAddress: (standard.ensAddress || null),\n                    _defaultProvider: (standard._defaultProvider || null)\n                };\n            }\n        }\n\n        return {\n            chainId: network,\n            name: \"unknown\"\n        };\n    }\n\n    if (typeof(network) === \"string\") {\n        const standard = networks[network];\n        if (standard == null) { return null; }\n        return {\n            name: standard.name,\n            chainId: standard.chainId,\n            ensAddress: standard.ensAddress,\n            _defaultProvider: (standard._defaultProvider || null)\n        };\n    }\n\n    const standard  = networks[network.name];\n\n    // Not a standard network; check that it is a valid network in general\n    if (!standard) {\n        if (typeof(network.chainId) !== \"number\") {\n            logger.throwArgumentError(\"invalid network chainId\", \"network\", network);\n        }\n        return network;\n    }\n\n    // Make sure the chainId matches the expected network chainId (or is 0; disable EIP-155)\n    if (network.chainId !== 0 && network.chainId !== standard.chainId) {\n        logger.throwArgumentError(\"network chainId mismatch\", \"network\", network);\n    }\n\n    // @TODO: In the next major version add an attach function to a defaultProvider\n    // class and move the _defaultProvider internal to this file (extend Network)\n    let defaultProvider: DefaultProviderFunc = network._defaultProvider || null;\n    if (defaultProvider == null && standard._defaultProvider) {\n        if (isRenetworkable(standard._defaultProvider)) {\n            defaultProvider = standard._defaultProvider.renetwork(network);\n        } else {\n            defaultProvider = standard._defaultProvider;\n        }\n    }\n\n    // Standard Network (allow overriding the ENS address)\n    return {\n        name: network.name,\n        chainId: standard.chainId,\n        ensAddress: (network.ensAddress || standard.ensAddress || null),\n        _defaultProvider: defaultProvider\n    };\n}\n","export const version = \"web/5.7.1\";\n","\"use strict\";\n\nimport { arrayify } from \"@ethersproject/bytes\";\n\nimport type { GetUrlResponse, Options } from \"./types\";\n\nexport { GetUrlResponse, Options };\n\nexport async function getUrl(href: string, options?: Options): Promise<GetUrlResponse> {\n    if (options == null) { options = { }; }\n\n    const request: RequestInit = {\n        method: (options.method || \"GET\"),\n        headers: (options.headers || { }),\n        body: (options.body || undefined),\n    };\n\n    if (options.skipFetchSetup !== true) {\n        request.mode = <RequestMode>\"cors\";              // no-cors, cors, *same-origin\n        request.cache = <RequestCache>\"no-cache\";        // *default, no-cache, reload, force-cache, only-if-cached\n        request.credentials = <RequestCredentials>\"same-origin\";  // include, *same-origin, omit\n        request.redirect = <RequestRedirect>\"follow\";    // manual, *follow, error\n        request.referrer = \"client\";                     // no-referrer, *client\n    };\n\n    if (options.fetchOptions != null) {\n        const opts = options.fetchOptions;\n        if (opts.mode) { request.mode = <RequestMode>(opts.mode); }\n        if (opts.cache) { request.cache = <RequestCache>(opts.cache); }\n        if (opts.credentials) { request.credentials = <RequestCredentials>(opts.credentials); }\n        if (opts.redirect) { request.redirect = <RequestRedirect>(opts.redirect); }\n        if (opts.referrer) { request.referrer = opts.referrer; }\n    }\n\n    const response = await fetch(href, request);\n    const body = await response.arrayBuffer();\n\n    const headers: { [ name: string ]: string } = { };\n    if (response.headers.forEach) {\n        response.headers.forEach((value, key) => {\n            headers[key.toLowerCase()] = value;\n        });\n    } else {\n        (<() => Array<string>>((<any>(response.headers)).keys))().forEach((key) => {\n            headers[key.toLowerCase()] = response.headers.get(key);\n        });\n    }\n\n    return {\n        headers: headers,\n        statusCode: response.status,\n        statusMessage: response.statusText,\n        body: arrayify(new Uint8Array(body)),\n    }\n}\n","\"use strict\";\n\nimport { decode as base64Decode, encode as base64Encode } from \"@ethersproject/base64\";\nimport { hexlify, isBytesLike } from \"@ethersproject/bytes\";\nimport { shallowCopy } from \"@ethersproject/properties\";\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { getUrl, GetUrlResponse, Options } from \"./geturl\";\n\nfunction staller(duration: number): Promise<void> {\n    return new Promise((resolve) => {\n        setTimeout(resolve, duration);\n    });\n}\n\nfunction bodyify(value: any, type: string): string {\n    if (value == null) { return null; }\n\n    if (typeof(value) === \"string\") { return value; }\n\n    if (isBytesLike(value)) {\n        if (type && (type.split(\"/\")[0] === \"text\" || type.split(\";\")[0].trim() === \"application/json\")) {\n            try {\n                return toUtf8String(value);\n            } catch (error) { };\n        }\n        return hexlify(value);\n    }\n\n    return value;\n}\n\n// Exported Types\nexport type ConnectionInfo = {\n    url: string,\n    headers?: { [key: string]: string | number }\n\n    user?: string,\n    password?: string,\n\n    allowInsecureAuthentication?: boolean,\n    allowGzip?: boolean,\n\n    throttleLimit?: number,\n    throttleSlotInterval?: number;\n    throttleCallback?: (attempt: number, url: string) => Promise<boolean>,\n\n    skipFetchSetup?: boolean;\n    fetchOptions?: Record<string, string>;\n    errorPassThrough?: boolean;\n\n    timeout?: number,\n};\n\nexport interface OnceBlockable {\n    once(eventName: \"block\", handler: () => void): void;\n}\n\nexport interface OncePollable {\n    once(eventName: \"poll\", handler: () => void): void;\n}\n\nexport type PollOptions = {\n    timeout?: number,\n    floor?: number,\n    ceiling?: number,\n    interval?: number,\n    retryLimit?: number,\n    onceBlock?: OnceBlockable\n    oncePoll?: OncePollable\n};\n\nexport type FetchJsonResponse = {\n    statusCode: number;\n    headers: { [ header: string ]: string };\n};\n\n\ntype Header = { key: string, value: string };\n\nfunction unpercent(value: string): Uint8Array {\n    return toUtf8Bytes(value.replace(/%([0-9a-f][0-9a-f])/gi, (all, code) => {\n        return String.fromCharCode(parseInt(code, 16));\n    }));\n}\n\n// This API is still a work in progress; the future changes will likely be:\n// - ConnectionInfo => FetchDataRequest<T = any>\n// - FetchDataRequest.body? = string | Uint8Array | { contentType: string, data: string | Uint8Array }\n//   - If string => text/plain, Uint8Array => application/octet-stream (if content-type unspecified)\n// - FetchDataRequest.processFunc = (body: Uint8Array, response: FetchDataResponse) => T\n// For this reason, it should be considered internal until the API is finalized\nexport function _fetchData<T = Uint8Array>(connection: string | ConnectionInfo, body?: Uint8Array, processFunc?: (value: Uint8Array, response: FetchJsonResponse) => T): Promise<T> {\n\n    // How many times to retry in the event of a throttle\n    const attemptLimit = (typeof(connection) === \"object\" && connection.throttleLimit != null) ? connection.throttleLimit: 12;\n    logger.assertArgument((attemptLimit > 0 && (attemptLimit % 1) === 0),\n        \"invalid connection throttle limit\", \"connection.throttleLimit\", attemptLimit);\n\n    const throttleCallback = ((typeof(connection) === \"object\") ? connection.throttleCallback: null);\n    const throttleSlotInterval = ((typeof(connection) === \"object\" && typeof(connection.throttleSlotInterval) === \"number\") ? connection.throttleSlotInterval: 100);\n    logger.assertArgument((throttleSlotInterval > 0 && (throttleSlotInterval % 1) === 0),\n        \"invalid connection throttle slot interval\", \"connection.throttleSlotInterval\", throttleSlotInterval);\n\n    const errorPassThrough = ((typeof(connection) === \"object\") ? !!(connection.errorPassThrough): false);\n\n    const headers: { [key: string]: Header } = { };\n\n    let url: string = null;\n\n    // @TODO: Allow ConnectionInfo to override some of these values\n    const options: Options = {\n        method: \"GET\",\n    };\n\n    let allow304 = false;\n\n    let timeout = 2 * 60 * 1000;\n\n    if (typeof(connection) === \"string\") {\n        url = connection;\n\n    } else if (typeof(connection) === \"object\") {\n        if (connection == null || connection.url == null) {\n            logger.throwArgumentError(\"missing URL\", \"connection.url\", connection);\n        }\n\n        url = connection.url;\n\n        if (typeof(connection.timeout) === \"number\" && connection.timeout > 0) {\n            timeout = connection.timeout;\n        }\n\n        if (connection.headers) {\n            for (const key in connection.headers) {\n                headers[key.toLowerCase()] = { key: key, value: String(connection.headers[key]) };\n                if ([\"if-none-match\", \"if-modified-since\"].indexOf(key.toLowerCase()) >= 0) {\n                    allow304 = true;\n                }\n            }\n        }\n\n        options.allowGzip = !!connection.allowGzip;\n\n        if (connection.user != null && connection.password != null) {\n            if (url.substring(0, 6) !== \"https:\" && connection.allowInsecureAuthentication !== true) {\n                logger.throwError(\n                    \"basic authentication requires a secure https url\",\n                    Logger.errors.INVALID_ARGUMENT,\n                    { argument: \"url\", url: url, user: connection.user, password: \"[REDACTED]\" }\n                );\n            }\n\n            const authorization = connection.user + \":\" + connection.password;\n            headers[\"authorization\"] = {\n                key: \"Authorization\",\n                value: \"Basic \" + base64Encode(toUtf8Bytes(authorization))\n            };\n        }\n\n        if (connection.skipFetchSetup != null) {\n            options.skipFetchSetup = !!connection.skipFetchSetup;\n        }\n\n        if (connection.fetchOptions != null) {\n            options.fetchOptions = shallowCopy(connection.fetchOptions);\n        }\n    }\n\n    const reData = new RegExp(\"^data:([^;:]*)?(;base64)?,(.*)$\", \"i\");\n    const dataMatch = ((url) ? url.match(reData): null);\n    if (dataMatch) {\n        try {\n            const response = {\n                statusCode: 200,\n                statusMessage: \"OK\",\n                headers: { \"content-type\": (dataMatch[1] || \"text/plain\")},\n                body: (dataMatch[2] ? base64Decode(dataMatch[3]): unpercent(dataMatch[3]))\n            };\n\n            let result: T = <T><unknown>response.body;\n            if (processFunc) {\n                result = processFunc(response.body, response);\n            }\n            return Promise.resolve(<T><unknown>result);\n\n        } catch (error) {\n            logger.throwError(\"processing response error\", Logger.errors.SERVER_ERROR, {\n                body: bodyify(dataMatch[1], dataMatch[2]),\n                error: error,\n                requestBody: null,\n                requestMethod: \"GET\",\n                url: url\n            });\n        }\n    }\n\n    if (body) {\n        options.method = \"POST\";\n        options.body = body;\n        if (headers[\"content-type\"] == null) {\n            headers[\"content-type\"] = { key: \"Content-Type\", value: \"application/octet-stream\" };\n        }\n        if (headers[\"content-length\"] == null) {\n            headers[\"content-length\"] = { key: \"Content-Length\", value: String(body.length) };\n        }\n    }\n\n    const flatHeaders: { [ key: string ]: string } = { };\n    Object.keys(headers).forEach((key) => {\n        const header = headers[key];\n        flatHeaders[header.key] = header.value;\n    });\n    options.headers = flatHeaders;\n\n    const runningTimeout = (function() {\n        let timer: NodeJS.Timer = null;\n        const promise: Promise<never> = new Promise(function(resolve, reject) {\n            if (timeout) {\n                timer = setTimeout(() => {\n                    if (timer == null) { return; }\n                    timer = null;\n\n                    reject(logger.makeError(\"timeout\", Logger.errors.TIMEOUT, {\n                        requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                        requestMethod: options.method,\n                        timeout: timeout,\n                        url: url\n                    }));\n                }, timeout);\n            }\n        });\n\n        const cancel = function() {\n            if (timer == null) { return; }\n            clearTimeout(timer);\n            timer = null;\n        }\n\n        return { promise, cancel };\n    })();\n\n    const runningFetch = (async function() {\n\n        for (let attempt = 0; attempt < attemptLimit; attempt++) {\n            let response: GetUrlResponse = null;\n\n            try {\n                response = await getUrl(url, options);\n\n                if (attempt < attemptLimit) {\n                    if (response.statusCode === 301 || response.statusCode === 302) {\n                        // Redirection; for now we only support absolute locataions\n                        const location = response.headers.location || \"\";\n                        if (options.method === \"GET\" && location.match(/^https:/)) {\n                            url = response.headers.location;\n                            continue;\n                        }\n\n                    } else if (response.statusCode === 429) {\n                        // Exponential back-off throttling\n                        let tryAgain = true;\n                        if (throttleCallback) {\n                            tryAgain = await throttleCallback(attempt, url);\n                        }\n\n                        if (tryAgain) {\n                            let stall = 0;\n\n                            const retryAfter = response.headers[\"retry-after\"];\n                            if (typeof(retryAfter) === \"string\" && retryAfter.match(/^[1-9][0-9]*$/)) {\n                                stall = parseInt(retryAfter) * 1000;\n                            } else {\n                                stall = throttleSlotInterval * parseInt(String(Math.random() * Math.pow(2, attempt)));\n                            }\n\n                            //console.log(\"Stalling 429\");\n                            await staller(stall);\n                            continue;\n                        }\n                    }\n                }\n\n            } catch (error) {\n                response = (<any>error).response;\n                if (response == null) {\n                    runningTimeout.cancel();\n                    logger.throwError(\"missing response\", Logger.errors.SERVER_ERROR, {\n                        requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                        requestMethod: options.method,\n                        serverError: error,\n                        url: url\n                    });\n                }\n            }\n\n\n            let body = response.body;\n\n            if (allow304 && response.statusCode === 304) {\n                body = null;\n            } else if (!errorPassThrough && (response.statusCode < 200 || response.statusCode >= 300)) {\n                runningTimeout.cancel();\n                logger.throwError(\"bad response\", Logger.errors.SERVER_ERROR, {\n                    status: response.statusCode,\n                    headers: response.headers,\n                    body: bodyify(body, ((response.headers) ? response.headers[\"content-type\"]: null)),\n                    requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                    requestMethod: options.method,\n                    url: url\n                });\n            }\n\n            if (processFunc) {\n                try {\n                    const result = await processFunc(body, response);\n                    runningTimeout.cancel();\n                    return result;\n\n                } catch (error) {\n                    // Allow the processFunc to trigger a throttle\n                    if (error.throttleRetry && attempt < attemptLimit) {\n                        let tryAgain = true;\n                        if (throttleCallback) {\n                            tryAgain = await throttleCallback(attempt, url);\n                        }\n\n                        if (tryAgain) {\n                            const timeout = throttleSlotInterval * parseInt(String(Math.random() * Math.pow(2, attempt)));\n                            //console.log(\"Stalling callback\");\n                            await staller(timeout);\n                            continue;\n                        }\n                    }\n\n                    runningTimeout.cancel();\n                    logger.throwError(\"processing response error\", Logger.errors.SERVER_ERROR, {\n                        body: bodyify(body, ((response.headers) ? response.headers[\"content-type\"]: null)),\n                        error: error,\n                        requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                        requestMethod: options.method,\n                        url: url\n                    });\n                }\n            }\n\n            runningTimeout.cancel();\n\n            // If we had a processFunc, it either returned a T or threw above.\n            // The \"body\" is now a Uint8Array.\n            return <T>(<unknown>body);\n        }\n\n        return logger.throwError(\"failed response\", Logger.errors.SERVER_ERROR, {\n            requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n            requestMethod: options.method,\n            url: url\n        });\n    })();\n\n    return Promise.race([ runningTimeout.promise, runningFetch ]);\n}\n\nexport function fetchJson(connection: string | ConnectionInfo, json?: string, processFunc?: (value: any, response: FetchJsonResponse) => any): Promise<any> {\n    let processJsonFunc = (value: Uint8Array, response: FetchJsonResponse) => {\n        let result: any = null;\n        if (value != null) {\n            try {\n                result = JSON.parse(toUtf8String(value));\n            } catch (error) {\n                logger.throwError(\"invalid JSON\", Logger.errors.SERVER_ERROR, {\n                    body: value,\n                    error: error\n                });\n            }\n        }\n\n        if (processFunc) {\n            result = processFunc(result, response);\n        }\n\n        return result;\n    }\n\n    // If we have json to send, we must\n    // - add content-type of application/json (unless already overridden)\n    // - convert the json to bytes\n    let body: Uint8Array = null;\n    if (json != null) {\n        body = toUtf8Bytes(json);\n\n        // Create a connection with the content-type set for JSON\n        const updated: ConnectionInfo = (typeof(connection) === \"string\") ? ({ url: connection }): shallowCopy(connection);\n        if (updated.headers) {\n            const hasContentType = (Object.keys(updated.headers).filter((k) => (k.toLowerCase() === \"content-type\")).length) !== 0;\n            if (!hasContentType) {\n                updated.headers = shallowCopy(updated.headers);\n                updated.headers[\"content-type\"] = \"application/json\";\n            }\n        } else {\n            updated.headers = { \"content-type\": \"application/json\" };\n        }\n        connection = updated;\n    }\n\n    return _fetchData<any>(connection, body, processJsonFunc);\n}\n\nexport function poll<T>(func: () => Promise<T>, options?: PollOptions): Promise<T> {\n    if (!options) { options = {}; }\n    options = shallowCopy(options);\n    if (options.floor == null) { options.floor = 0; }\n    if (options.ceiling == null) { options.ceiling = 10000; }\n    if (options.interval == null) { options.interval = 250; }\n\n    return new Promise(function(resolve, reject) {\n\n        let timer: NodeJS.Timer = null;\n        let done: boolean = false;\n\n        // Returns true if cancel was successful. Unsuccessful cancel means we're already done.\n        const cancel = (): boolean => {\n            if (done) { return false; }\n            done = true;\n            if (timer) { clearTimeout(timer); }\n            return true;\n        };\n\n        if (options.timeout) {\n            timer = setTimeout(() => {\n                if (cancel()) { reject(new Error(\"timeout\")); }\n            }, options.timeout)\n        }\n\n        const retryLimit = options.retryLimit;\n\n        let attempt = 0;\n        function check() {\n            return func().then(function(result) {\n\n                // If we have a result, or are allowed null then we're done\n                if (result !== undefined) {\n                    if (cancel()) { resolve(result); }\n\n                } else if (options.oncePoll) {\n                    options.oncePoll.once(\"poll\", check);\n\n                } else if (options.onceBlock) {\n                    options.onceBlock.once(\"block\", check);\n\n                // Otherwise, exponential back-off (up to 10s) our next request\n                } else if (!done) {\n                    attempt++;\n                    if (attempt > retryLimit) {\n                        if (cancel()) { reject(new Error(\"retry limit reached\")); }\n                        return;\n                    }\n\n                    let timeout = options.interval * parseInt(String(Math.random() * Math.pow(2, attempt)));\n                    if (timeout < options.floor) { timeout = options.floor; }\n                    if (timeout > options.ceiling) { timeout = options.ceiling; }\n\n                    setTimeout(check, timeout);\n                }\n\n                return null;\n            }, function(error) {\n                if (cancel()) { reject(error); }\n            });\n        }\n        check();\n    });\n}\n\n","'use strict'\nvar ALPHABET = 'qpzry9x8gf2tvdw0s3jn54khce6mua7l'\n\n// pre-compute lookup table\nvar ALPHABET_MAP = {}\nfor (var z = 0; z < ALPHABET.length; z++) {\n  var x = ALPHABET.charAt(z)\n\n  if (ALPHABET_MAP[x] !== undefined) throw new TypeError(x + ' is ambiguous')\n  ALPHABET_MAP[x] = z\n}\n\nfunction polymodStep (pre) {\n  var b = pre >> 25\n  return ((pre & 0x1FFFFFF) << 5) ^\n    (-((b >> 0) & 1) & 0x3b6a57b2) ^\n    (-((b >> 1) & 1) & 0x26508e6d) ^\n    (-((b >> 2) & 1) & 0x1ea119fa) ^\n    (-((b >> 3) & 1) & 0x3d4233dd) ^\n    (-((b >> 4) & 1) & 0x2a1462b3)\n}\n\nfunction prefixChk (prefix) {\n  var chk = 1\n  for (var i = 0; i < prefix.length; ++i) {\n    var c = prefix.charCodeAt(i)\n    if (c < 33 || c > 126) return 'Invalid prefix (' + prefix + ')'\n\n    chk = polymodStep(chk) ^ (c >> 5)\n  }\n  chk = polymodStep(chk)\n\n  for (i = 0; i < prefix.length; ++i) {\n    var v = prefix.charCodeAt(i)\n    chk = polymodStep(chk) ^ (v & 0x1f)\n  }\n  return chk\n}\n\nfunction encode (prefix, words, LIMIT) {\n  LIMIT = LIMIT || 90\n  if ((prefix.length + 7 + words.length) > LIMIT) throw new TypeError('Exceeds length limit')\n\n  prefix = prefix.toLowerCase()\n\n  // determine chk mod\n  var chk = prefixChk(prefix)\n  if (typeof chk === 'string') throw new Error(chk)\n\n  var result = prefix + '1'\n  for (var i = 0; i < words.length; ++i) {\n    var x = words[i]\n    if ((x >> 5) !== 0) throw new Error('Non 5-bit word')\n\n    chk = polymodStep(chk) ^ x\n    result += ALPHABET.charAt(x)\n  }\n\n  for (i = 0; i < 6; ++i) {\n    chk = polymodStep(chk)\n  }\n  chk ^= 1\n\n  for (i = 0; i < 6; ++i) {\n    var v = (chk >> ((5 - i) * 5)) & 0x1f\n    result += ALPHABET.charAt(v)\n  }\n\n  return result\n}\n\nfunction __decode (str, LIMIT) {\n  LIMIT = LIMIT || 90\n  if (str.length < 8) return str + ' too short'\n  if (str.length > LIMIT) return 'Exceeds length limit'\n\n  // don't allow mixed case\n  var lowered = str.toLowerCase()\n  var uppered = str.toUpperCase()\n  if (str !== lowered && str !== uppered) return 'Mixed-case string ' + str\n  str = lowered\n\n  var split = str.lastIndexOf('1')\n  if (split === -1) return 'No separator character for ' + str\n  if (split === 0) return 'Missing prefix for ' + str\n\n  var prefix = str.slice(0, split)\n  var wordChars = str.slice(split + 1)\n  if (wordChars.length < 6) return 'Data too short'\n\n  var chk = prefixChk(prefix)\n  if (typeof chk === 'string') return chk\n\n  var words = []\n  for (var i = 0; i < wordChars.length; ++i) {\n    var c = wordChars.charAt(i)\n    var v = ALPHABET_MAP[c]\n    if (v === undefined) return 'Unknown character ' + c\n    chk = polymodStep(chk) ^ v\n\n    // not in the checksum?\n    if (i + 6 >= wordChars.length) continue\n    words.push(v)\n  }\n\n  if (chk !== 1) return 'Invalid checksum for ' + str\n  return { prefix: prefix, words: words }\n}\n\nfunction decodeUnsafe () {\n  var res = __decode.apply(null, arguments)\n  if (typeof res === 'object') return res\n}\n\nfunction decode (str) {\n  var res = __decode.apply(null, arguments)\n  if (typeof res === 'object') return res\n\n  throw new Error(res)\n}\n\nfunction convert (data, inBits, outBits, pad) {\n  var value = 0\n  var bits = 0\n  var maxV = (1 << outBits) - 1\n\n  var result = []\n  for (var i = 0; i < data.length; ++i) {\n    value = (value << inBits) | data[i]\n    bits += inBits\n\n    while (bits >= outBits) {\n      bits -= outBits\n      result.push((value >> bits) & maxV)\n    }\n  }\n\n  if (pad) {\n    if (bits > 0) {\n      result.push((value << (outBits - bits)) & maxV)\n    }\n  } else {\n    if (bits >= inBits) return 'Excess padding'\n    if ((value << (outBits - bits)) & maxV) return 'Non-zero padding'\n  }\n\n  return result\n}\n\nfunction toWordsUnsafe (bytes) {\n  var res = convert(bytes, 8, 5, true)\n  if (Array.isArray(res)) return res\n}\n\nfunction toWords (bytes) {\n  var res = convert(bytes, 8, 5, true)\n  if (Array.isArray(res)) return res\n\n  throw new Error(res)\n}\n\nfunction fromWordsUnsafe (words) {\n  var res = convert(words, 5, 8, false)\n  if (Array.isArray(res)) return res\n}\n\nfunction fromWords (words) {\n  var res = convert(words, 5, 8, false)\n  if (Array.isArray(res)) return res\n\n  throw new Error(res)\n}\n\nmodule.exports = {\n  decodeUnsafe: decodeUnsafe,\n  decode: decode,\n  encode: encode,\n  toWordsUnsafe: toWordsUnsafe,\n  toWords: toWords,\n  fromWordsUnsafe: fromWordsUnsafe,\n  fromWords: fromWords\n}\n","export const version = \"providers/5.7.2\";\n","\"use strict\";\n\nimport { Block, TransactionReceipt, TransactionResponse } from \"@ethersproject/abstract-provider\";\nimport { getAddress, getContractAddress } from \"@ethersproject/address\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { hexDataLength, hexDataSlice, hexValue, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { AddressZero } from \"@ethersproject/constants\";\nimport { shallowCopy } from \"@ethersproject/properties\";\nimport { AccessList, accessListify, parse as parseTransaction } from \"@ethersproject/transactions\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nexport type FormatFunc = (value: any) => any;\n\nexport type FormatFuncs = { [ key: string ]: FormatFunc };\n\nexport type Formats = {\n    transaction: FormatFuncs,\n    transactionRequest: FormatFuncs,\n    receipt: FormatFuncs,\n    receiptLog: FormatFuncs,\n    block: FormatFuncs,\n    blockWithTransactions: FormatFuncs,\n    filter: FormatFuncs,\n    filterLog: FormatFuncs,\n};\n\nexport class Formatter {\n    readonly formats: Formats;\n\n    constructor() {\n        this.formats = this.getDefaultFormats();\n    }\n\n    getDefaultFormats(): Formats {\n        const formats: Formats = <Formats>({ });\n\n        const address = this.address.bind(this);\n        const bigNumber = this.bigNumber.bind(this);\n        const blockTag = this.blockTag.bind(this);\n        const data = this.data.bind(this);\n        const hash = this.hash.bind(this);\n        const hex = this.hex.bind(this);\n        const number = this.number.bind(this);\n        const type = this.type.bind(this);\n\n        const strictData = (v: any) => { return this.data(v, true); };\n\n        formats.transaction = {\n            hash: hash,\n\n            type: type,\n            accessList: Formatter.allowNull(this.accessList.bind(this), null),\n\n            blockHash: Formatter.allowNull(hash, null),\n            blockNumber: Formatter.allowNull(number, null),\n            transactionIndex: Formatter.allowNull(number, null),\n\n            confirmations: Formatter.allowNull(number, null),\n\n            from: address,\n\n            // either (gasPrice) or (maxPriorityFeePerGas + maxFeePerGas)\n            // must be set\n            gasPrice: Formatter.allowNull(bigNumber),\n            maxPriorityFeePerGas: Formatter.allowNull(bigNumber),\n            maxFeePerGas: Formatter.allowNull(bigNumber),\n\n            gasLimit: bigNumber,\n            to: Formatter.allowNull(address, null),\n            value: bigNumber,\n            nonce: number,\n            data: data,\n\n            r: Formatter.allowNull(this.uint256),\n            s: Formatter.allowNull(this.uint256),\n            v: Formatter.allowNull(number),\n\n            creates: Formatter.allowNull(address, null),\n\n            raw: Formatter.allowNull(data),\n        };\n\n        formats.transactionRequest = {\n            from: Formatter.allowNull(address),\n            nonce: Formatter.allowNull(number),\n            gasLimit: Formatter.allowNull(bigNumber),\n            gasPrice: Formatter.allowNull(bigNumber),\n            maxPriorityFeePerGas: Formatter.allowNull(bigNumber),\n            maxFeePerGas: Formatter.allowNull(bigNumber),\n            to: Formatter.allowNull(address),\n            value: Formatter.allowNull(bigNumber),\n            data: Formatter.allowNull(strictData),\n            type: Formatter.allowNull(number),\n            accessList: Formatter.allowNull(this.accessList.bind(this), null),\n        };\n\n        formats.receiptLog = {\n            transactionIndex: number,\n            blockNumber: number,\n            transactionHash: hash,\n            address: address,\n            topics: Formatter.arrayOf(hash),\n            data: data,\n            logIndex: number,\n            blockHash: hash,\n        };\n\n        formats.receipt = {\n            to: Formatter.allowNull(this.address, null),\n            from: Formatter.allowNull(this.address, null),\n            contractAddress: Formatter.allowNull(address, null),\n            transactionIndex: number,\n            // should be allowNull(hash), but broken-EIP-658 support is handled in receipt\n            root: Formatter.allowNull(hex),\n            gasUsed: bigNumber,\n            logsBloom: Formatter.allowNull(data),// @TODO: should this be data?\n            blockHash: hash,\n            transactionHash: hash,\n            logs: Formatter.arrayOf(this.receiptLog.bind(this)),\n            blockNumber: number,\n            confirmations: Formatter.allowNull(number, null),\n            cumulativeGasUsed: bigNumber,\n            effectiveGasPrice: Formatter.allowNull(bigNumber),\n            status: Formatter.allowNull(number),\n            type: type\n        };\n\n        formats.block = {\n            hash: Formatter.allowNull(hash),\n            parentHash: hash,\n            number: number,\n\n            timestamp: number,\n            nonce: Formatter.allowNull(hex),\n            difficulty: this.difficulty.bind(this),\n\n            gasLimit: bigNumber,\n            gasUsed: bigNumber,\n\n            miner: Formatter.allowNull(address),\n            extraData: data,\n\n            transactions: Formatter.allowNull(Formatter.arrayOf(hash)),\n\n            baseFeePerGas: Formatter.allowNull(bigNumber)\n        };\n\n        formats.blockWithTransactions = shallowCopy(formats.block);\n        formats.blockWithTransactions.transactions = Formatter.allowNull(Formatter.arrayOf(this.transactionResponse.bind(this)));\n\n        formats.filter = {\n            fromBlock: Formatter.allowNull(blockTag, undefined),\n            toBlock: Formatter.allowNull(blockTag, undefined),\n            blockHash: Formatter.allowNull(hash, undefined),\n            address: Formatter.allowNull(address, undefined),\n            topics: Formatter.allowNull(this.topics.bind(this), undefined),\n        };\n\n        formats.filterLog = {\n            blockNumber: Formatter.allowNull(number),\n            blockHash: Formatter.allowNull(hash),\n            transactionIndex: number,\n\n            removed: Formatter.allowNull(this.boolean.bind(this)),\n\n            address: address,\n            data: Formatter.allowFalsish(data, \"0x\"),\n\n            topics: Formatter.arrayOf(hash),\n\n            transactionHash: hash,\n            logIndex: number,\n        };\n\n        return formats;\n    }\n\n    accessList(accessList: Array<any>): AccessList {\n        return accessListify(accessList || []);\n    }\n\n    // Requires a BigNumberish that is within the IEEE754 safe integer range; returns a number\n    // Strict! Used on input.\n    number(number: any): number {\n        if (number === \"0x\") { return 0; }\n        return BigNumber.from(number).toNumber();\n    }\n\n    type(number: any): number {\n        if (number === \"0x\" || number == null) { return 0; }\n        return BigNumber.from(number).toNumber();\n    }\n\n    // Strict! Used on input.\n    bigNumber(value: any): BigNumber {\n        return BigNumber.from(value);\n    }\n\n    // Requires a boolean, \"true\" or  \"false\"; returns a boolean\n    boolean(value: any): boolean {\n        if (typeof(value) === \"boolean\") { return value; }\n        if (typeof(value) === \"string\") {\n            value = value.toLowerCase();\n            if (value === \"true\") { return true; }\n            if (value === \"false\") { return false; }\n        }\n        throw new Error(\"invalid boolean - \" + value);\n    }\n\n    hex(value: any, strict?: boolean): string {\n        if (typeof(value) === \"string\") {\n            if (!strict && value.substring(0, 2) !== \"0x\") { value = \"0x\" + value; }\n            if (isHexString(value)) {\n               return value.toLowerCase();\n            }\n        }\n        return logger.throwArgumentError(\"invalid hash\", \"value\", value);\n    }\n\n    data(value: any, strict?: boolean): string {\n        const result = this.hex(value, strict);\n        if ((result.length % 2) !== 0) {\n            throw new Error(\"invalid data; odd-length - \" + value);\n        }\n        return result;\n    }\n\n    // Requires an address\n    // Strict! Used on input.\n    address(value: any): string {\n        return getAddress(value);\n    }\n\n    callAddress(value: any): string {\n        if (!isHexString(value, 32)) { return null; }\n        const address = getAddress(hexDataSlice(value, 12));\n        return (address === AddressZero) ? null: address;\n    }\n\n    contractAddress(value: any): string {\n        return getContractAddress(value);\n    }\n\n    // Strict! Used on input.\n    blockTag(blockTag: any): string {\n        if (blockTag == null) { return \"latest\"; }\n\n        if (blockTag === \"earliest\") { return \"0x0\"; }\n\n        switch (blockTag) {\n            case \"earliest\": return \"0x0\";\n            case \"latest\": case \"pending\": case \"safe\": case \"finalized\":\n                return blockTag;\n        }\n\n        if (typeof(blockTag) === \"number\" || isHexString(blockTag)) {\n            return hexValue(<number | string>blockTag);\n        }\n\n        throw new Error(\"invalid blockTag\");\n    }\n\n    // Requires a hash, optionally requires 0x prefix; returns prefixed lowercase hash.\n    hash(value: any, strict?: boolean): string {\n        const result = this.hex(value, strict);\n        if (hexDataLength(result) !== 32) {\n            return logger.throwArgumentError(\"invalid hash\", \"value\", value);\n        }\n        return result;\n    }\n\n    // Returns the difficulty as a number, or if too large (i.e. PoA network) null\n    difficulty(value: any): number {\n        if (value == null) { return null; }\n\n        const v = BigNumber.from(value);\n\n        try {\n            return v.toNumber();\n        } catch (error) { }\n\n       return null;\n    }\n\n    uint256(value: any): string {\n        if (!isHexString(value)) {\n            throw new Error(\"invalid uint256\");\n        }\n        return hexZeroPad(value, 32);\n    }\n\n    _block(value: any, format: any): Block {\n        if (value.author != null && value.miner == null) {\n            value.miner = value.author;\n        }\n        // The difficulty may need to come from _difficulty in recursed blocks\n        const difficulty = (value._difficulty != null) ? value._difficulty: value.difficulty;\n        const result = Formatter.check(format, value);\n        result._difficulty = ((difficulty == null) ? null: BigNumber.from(difficulty));\n        return result;\n    }\n\n    block(value: any): Block {\n        return this._block(value, this.formats.block);\n    }\n\n    blockWithTransactions(value: any): Block {\n        return this._block(value, this.formats.blockWithTransactions);\n    }\n\n    // Strict! Used on input.\n    transactionRequest(value: any): any {\n        return Formatter.check(this.formats.transactionRequest, value);\n    }\n\n    transactionResponse(transaction: any): TransactionResponse {\n\n        // Rename gas to gasLimit\n        if (transaction.gas != null && transaction.gasLimit == null) {\n            transaction.gasLimit = transaction.gas;\n        }\n\n        // Some clients (TestRPC) do strange things like return 0x0 for the\n        // 0 address; correct this to be a real address\n        if (transaction.to && BigNumber.from(transaction.to).isZero()) {\n            transaction.to = \"0x0000000000000000000000000000000000000000\";\n        }\n\n        // Rename input to data\n        if (transaction.input != null && transaction.data == null) {\n            transaction.data = transaction.input;\n        }\n\n        // If to and creates are empty, populate the creates from the transaction\n        if (transaction.to == null && transaction.creates == null) {\n            transaction.creates = this.contractAddress(transaction);\n        }\n\n        if ((transaction.type === 1 || transaction.type === 2)&& transaction.accessList == null) {\n            transaction.accessList = [ ];\n        }\n\n        const result: TransactionResponse = Formatter.check(this.formats.transaction, transaction);\n\n        if (transaction.chainId != null) {\n            let chainId = transaction.chainId;\n\n            if (isHexString(chainId)) {\n                chainId = BigNumber.from(chainId).toNumber();\n            }\n\n            result.chainId = chainId;\n\n        } else {\n            let chainId = transaction.networkId;\n\n            // geth-etc returns chainId\n            if (chainId == null && result.v == null) {\n                chainId = transaction.chainId;\n            }\n\n            if (isHexString(chainId)) {\n                chainId = BigNumber.from(chainId).toNumber();\n            }\n\n            if (typeof(chainId) !== \"number\" && result.v != null) {\n                chainId = (result.v - 35) / 2;\n                if (chainId < 0) { chainId = 0; }\n                chainId = parseInt(chainId);\n            }\n\n            if (typeof(chainId) !== \"number\") { chainId = 0; }\n\n            result.chainId = chainId;\n        }\n\n        // 0x0000... should actually be null\n        if (result.blockHash && result.blockHash.replace(/0/g, \"\") === \"x\") {\n            result.blockHash = null;\n        }\n\n        return result;\n    }\n\n    transaction(value: any): any {\n        return parseTransaction(value);\n    }\n\n    receiptLog(value: any): any {\n        return Formatter.check(this.formats.receiptLog, value);\n    }\n\n    receipt(value: any): TransactionReceipt {\n        const result: TransactionReceipt = Formatter.check(this.formats.receipt, value);\n\n        // RSK incorrectly implemented EIP-658, so we munge things a bit here for it\n        if (result.root != null) {\n            if (result.root.length <= 4) {\n                // Could be 0x00, 0x0, 0x01 or 0x1\n                const value = BigNumber.from(result.root).toNumber();\n                if (value === 0 || value === 1) {\n                    // Make sure if both are specified, they match\n                    if (result.status != null && (result.status !== value)) {\n                        logger.throwArgumentError(\"alt-root-status/status mismatch\", \"value\", { root: result.root, status: result.status });\n                    }\n                    result.status = value;\n                    delete result.root;\n                } else {\n                    logger.throwArgumentError(\"invalid alt-root-status\", \"value.root\", result.root);\n                }\n            } else if (result.root.length !== 66) {\n                // Must be a valid bytes32\n                logger.throwArgumentError(\"invalid root hash\", \"value.root\", result.root);\n            }\n        }\n\n        if (result.status != null) {\n            result.byzantium = true;\n        }\n\n        return result;\n    }\n\n    topics(value: any): any {\n        if (Array.isArray(value)) {\n            return value.map((v) => this.topics(v));\n\n        } else if (value != null) {\n            return this.hash(value, true);\n        }\n\n        return null;\n    }\n\n    filter(value: any): any {\n        return Formatter.check(this.formats.filter, value);\n    }\n\n    filterLog(value: any): any {\n        return Formatter.check(this.formats.filterLog, value);\n    }\n\n    static check(format: { [ name: string ]: FormatFunc }, object: any): any {\n        const result: any = {};\n        for (const key in format) {\n            try {\n                const value = format[key](object[key]);\n                if (value !== undefined) { result[key] = value; }\n            } catch (error) {\n                error.checkKey = key;\n                error.checkValue = object[key];\n                throw error;\n            }\n        }\n        return result;\n    }\n\n    // if value is null-ish, nullValue is returned\n    static allowNull(format: FormatFunc, nullValue?: any): FormatFunc {\n        return (function(value: any) {\n            if (value == null) { return nullValue; }\n            return format(value);\n        });\n    }\n\n    // If value is false-ish, replaceValue is returned\n    static allowFalsish(format: FormatFunc, replaceValue: any): FormatFunc {\n        return (function(value: any) {\n            if (!value) { return replaceValue; }\n            return format(value);\n        });\n    }\n\n    // Requires an Array satisfying check\n    static arrayOf(format: FormatFunc): FormatFunc {\n        return (function(array: any): Array<any> {\n            if (!Array.isArray(array)) { throw new Error(\"not an array\"); }\n\n            const result: any = [];\n\n            array.forEach(function(value) {\n                result.push(format(value));\n            });\n\n            return result;\n        });\n    }\n}\n\nexport interface CommunityResourcable {\n    isCommunityResource(): boolean;\n}\n\nexport function isCommunityResourcable(value: any): value is CommunityResourcable {\n    return (value && typeof(value.isCommunityResource) === \"function\");\n}\n\nexport function isCommunityResource(value: any): boolean {\n    return (isCommunityResourcable(value) && value.isCommunityResource());\n}\n\n// Show the throttle message only once\nlet throttleMessage = false;\nexport function showThrottleMessage() {\n    if (throttleMessage) { return; }\n    throttleMessage = true;\n\n    console.log(\"========= NOTICE =========\")\n    console.log(\"Request-Rate Exceeded  (this message will not be repeated)\");\n    console.log(\"\");\n    console.log(\"The default API keys for each service are provided as a highly-throttled,\");\n    console.log(\"community resource for low-traffic projects and early prototyping.\");\n    console.log(\"\");\n    console.log(\"While your application will continue to function, we highly recommended\");\n    console.log(\"signing up for your own API keys to improve performance, increase your\");\n    console.log(\"request rate/limit and enable other perks, such as metrics and advanced APIs.\");\n    console.log(\"\");\n    console.log(\"For more details: https:/\\/docs.ethers.io/api-keys/\");\n    console.log(\"==========================\");\n}\n\n","\"use strict\";\n\nimport {\n    Block, BlockTag, BlockWithTransactions, EventType, Filter, FilterByBlockHash, ForkEvent,\n    Listener, Log, Provider, TransactionReceipt, TransactionRequest, TransactionResponse\n} from \"@ethersproject/abstract-provider\";\nimport { encode as base64Encode } from \"@ethersproject/base64\";\nimport { Base58 } from \"@ethersproject/basex\";\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { arrayify, BytesLike, concat, hexConcat, hexDataLength, hexDataSlice, hexlify, hexValue, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { HashZero } from \"@ethersproject/constants\";\nimport { dnsEncode, namehash } from \"@ethersproject/hash\";\nimport { getNetwork, Network, Networkish } from \"@ethersproject/networks\";\nimport { Deferrable, defineReadOnly, getStatic, resolveProperties } from \"@ethersproject/properties\";\nimport { Transaction } from \"@ethersproject/transactions\";\nimport { sha256 } from \"@ethersproject/sha2\";\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\nimport { fetchJson, poll } from \"@ethersproject/web\";\n\nimport bech32 from \"bech32\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { Formatter } from \"./formatter\";\n\nconst MAX_CCIP_REDIRECTS = 10;\n\n//////////////////////////////\n// Event Serializeing\n\nfunction checkTopic(topic: string): string {\n     if (topic == null) { return \"null\"; }\n     if (hexDataLength(topic) !== 32) {\n         logger.throwArgumentError(\"invalid topic\", \"topic\", topic);\n     }\n     return topic.toLowerCase();\n}\n\nfunction serializeTopics(topics: Array<string | Array<string>>): string {\n    // Remove trailing null AND-topics; they are redundant\n    topics = topics.slice();\n    while (topics.length > 0 && topics[topics.length - 1] == null) { topics.pop(); }\n\n    return topics.map((topic) => {\n        if (Array.isArray(topic)) {\n\n            // Only track unique OR-topics\n            const unique: { [ topic: string ]: boolean } = { }\n            topic.forEach((topic) => {\n                unique[checkTopic(topic)] = true;\n            });\n\n            // The order of OR-topics does not matter\n            const sorted = Object.keys(unique);\n            sorted.sort();\n\n            return sorted.join(\"|\");\n\n        } else {\n            return checkTopic(topic);\n        }\n    }).join(\"&\");\n}\n\nfunction deserializeTopics(data: string): Array<string | Array<string>> {\n    if (data === \"\") { return [ ]; }\n\n    return data.split(/&/g).map((topic) => {\n        if (topic === \"\") { return [ ]; }\n\n        const comps = topic.split(\"|\").map((topic) => {\n            return ((topic === \"null\") ? null: topic);\n        });\n\n        return ((comps.length === 1) ? comps[0]: comps);\n    });\n}\n\nfunction getEventTag(eventName: EventType): string {\n    if (typeof(eventName) === \"string\") {\n        eventName = eventName.toLowerCase();\n\n        if (hexDataLength(eventName) === 32) {\n            return \"tx:\" + eventName;\n        }\n\n        if (eventName.indexOf(\":\") === -1) {\n            return eventName;\n        }\n\n    } else if (Array.isArray(eventName)) {\n        return \"filter:*:\" + serializeTopics(eventName);\n\n    } else if (ForkEvent.isForkEvent(eventName)) {\n        logger.warn(\"not implemented\");\n        throw new Error(\"not implemented\");\n\n    } else if (eventName && typeof(eventName) === \"object\") {\n        return \"filter:\" + (eventName.address || \"*\") + \":\" + serializeTopics(eventName.topics || []);\n    }\n\n    throw new Error(\"invalid event - \" + eventName);\n}\n\n//////////////////////////////\n// Helper Object\n\nfunction getTime() {\n    return (new Date()).getTime();\n}\n\nfunction stall(duration: number): Promise<void> {\n    return new Promise((resolve) => {\n        setTimeout(resolve, duration);\n    });\n}\n\n//////////////////////////////\n// Provider Object\n\n\n/**\n *  EventType\n *   - \"block\"\n *   - \"poll\"\n *   - \"didPoll\"\n *   - \"pending\"\n *   - \"error\"\n *   - \"network\"\n *   - filter\n *   - topics array\n *   - transaction hash\n */\n\nconst PollableEvents = [ \"block\", \"network\", \"pending\", \"poll\" ];\n\nexport class Event {\n    readonly listener: Listener;\n    readonly once: boolean;\n    readonly tag: string;\n\n    _lastBlockNumber: number\n    _inflight: boolean;\n\n    constructor(tag: string, listener: Listener, once: boolean) {\n        defineReadOnly(this, \"tag\", tag);\n        defineReadOnly(this, \"listener\", listener);\n        defineReadOnly(this, \"once\", once);\n\n        this._lastBlockNumber = -2;\n        this._inflight = false;\n    }\n\n    get event(): EventType {\n        switch (this.type) {\n            case \"tx\":\n               return this.hash;\n            case \"filter\":\n               return this.filter;\n        }\n        return this.tag;\n    }\n\n    get type(): string {\n        return this.tag.split(\":\")[0]\n    }\n\n    get hash(): string {\n        const comps = this.tag.split(\":\");\n        if (comps[0] !== \"tx\") { return null; }\n        return comps[1];\n    }\n\n    get filter(): Filter {\n        const comps = this.tag.split(\":\");\n        if (comps[0] !== \"filter\") { return null; }\n        const address = comps[1];\n\n        const topics = deserializeTopics(comps[2]);\n        const filter: Filter = { };\n\n        if (topics.length > 0) { filter.topics = topics; }\n        if (address && address !== \"*\") { filter.address = address; }\n\n        return filter;\n    }\n\n    pollable(): boolean {\n        return (this.tag.indexOf(\":\") >= 0 || PollableEvents.indexOf(this.tag) >= 0);\n    }\n}\n\nexport interface EnsResolver {\n\n    // Name this Resolver is associated with\n    readonly name: string;\n\n    // The address of the resolver\n    readonly address: string;\n\n    // Multichain address resolution (also normal address resolution)\n    // See: https://eips.ethereum.org/EIPS/eip-2304\n    getAddress(coinType?: 60): Promise<null | string>\n\n    // Contenthash field\n    // See: https://eips.ethereum.org/EIPS/eip-1577\n    getContentHash(): Promise<null | string>;\n\n    // Storage of text records\n    // See: https://eips.ethereum.org/EIPS/eip-634\n    getText(key: string): Promise<null | string>;\n};\n\nexport interface EnsProvider {\n    resolveName(name: string): Promise<null | string>;\n    lookupAddress(address: string): Promise<null | string>;\n    getResolver(name: string): Promise<null | EnsResolver>;\n}\n\ntype CoinInfo = {\n    symbol: string,\n    ilk?: string,     // General family\n    prefix?: string,  // Bech32 prefix\n    p2pkh?: number,   // Pay-to-Public-Key-Hash Version\n    p2sh?: number,    // Pay-to-Script-Hash Version\n};\n\n// https://github.com/satoshilabs/slips/blob/master/slip-0044.md\nconst coinInfos: { [ coinType: string ]: CoinInfo } = {\n    \"0\":   { symbol: \"btc\",  p2pkh: 0x00, p2sh: 0x05, prefix: \"bc\" },\n    \"2\":   { symbol: \"ltc\",  p2pkh: 0x30, p2sh: 0x32, prefix: \"ltc\" },\n    \"3\":   { symbol: \"doge\", p2pkh: 0x1e, p2sh: 0x16 },\n    \"60\":  { symbol: \"eth\",  ilk: \"eth\" },\n    \"61\":  { symbol: \"etc\",  ilk: \"eth\" },\n    \"700\": { symbol: \"xdai\", ilk: \"eth\" },\n};\n\nfunction bytes32ify(value: number): string {\n    return hexZeroPad(BigNumber.from(value).toHexString(), 32);\n}\n\n// Compute the Base58Check encoded data (checksum is first 4 bytes of sha256d)\nfunction base58Encode(data: Uint8Array): string {\n    return Base58.encode(concat([ data, hexDataSlice(sha256(sha256(data)), 0, 4) ]));\n}\n\nexport interface Avatar {\n    url: string;\n    linkage: Array<{ type: string, content: string }>;\n}\n\nconst matcherIpfs = new RegExp(\"^(ipfs):/\\/(.*)$\", \"i\");\nconst matchers = [\n    new RegExp(\"^(https):/\\/(.*)$\", \"i\"),\n    new RegExp(\"^(data):(.*)$\", \"i\"),\n    matcherIpfs,\n    new RegExp(\"^eip155:[0-9]+/(erc[0-9]+):(.*)$\", \"i\"),\n];\n\nfunction _parseString(result: string, start: number): null | string {\n    try {\n        return toUtf8String(_parseBytes(result, start));\n    } catch(error) { }\n    return null;\n}\n\nfunction _parseBytes(result: string, start: number): null | string {\n    if (result === \"0x\") { return null; }\n\n    const offset = BigNumber.from(hexDataSlice(result, start, start + 32)).toNumber();\n    const length = BigNumber.from(hexDataSlice(result, offset, offset + 32)).toNumber();\n\n    return hexDataSlice(result, offset + 32, offset + 32 + length);\n}\n\n// Trim off the ipfs:// prefix and return the default gateway URL\nfunction getIpfsLink(link: string): string {\n    if (link.match(/^ipfs:\\/\\/ipfs\\//i)) {\n        link = link.substring(12);\n    } else if (link.match(/^ipfs:\\/\\//i)) {\n        link = link.substring(7);\n    } else {\n        logger.throwArgumentError(\"unsupported IPFS format\", \"link\", link);\n    }\n\n    return `https:/\\/gateway.ipfs.io/ipfs/${ link }`;\n}\n\nfunction numPad(value: number): Uint8Array {\n    const result = arrayify(value);\n    if (result.length > 32) { throw new Error(\"internal; should not happen\"); }\n\n    const padded = new Uint8Array(32);\n    padded.set(result, 32 - result.length);\n    return padded;\n}\n\nfunction bytesPad(value: Uint8Array): Uint8Array {\n    if ((value.length % 32) === 0) { return value; }\n\n    const result = new Uint8Array(Math.ceil(value.length / 32) * 32);\n    result.set(value);\n    return result;\n}\n\n// ABI Encodes a series of (bytes, bytes, ...)\nfunction encodeBytes(datas: Array<BytesLike>) {\n    const result: Array<Uint8Array> = [ ];\n\n    let byteCount = 0;\n\n    // Add place-holders for pointers as we add items\n    for (let i = 0; i < datas.length; i++) {\n        result.push(null);\n        byteCount += 32;\n    }\n\n    for (let i = 0; i < datas.length; i++) {\n        const data = arrayify(datas[i]);\n\n        // Update the bytes offset\n        result[i] = numPad(byteCount);\n\n        // The length and padded value of data\n        result.push(numPad(data.length));\n        result.push(bytesPad(data));\n        byteCount += 32 + Math.ceil(data.length / 32) * 32;\n    }\n\n    return hexConcat(result);\n}\n\nexport class Resolver implements EnsResolver {\n    readonly provider: BaseProvider;\n\n    readonly name: string;\n    readonly address: string;\n\n    readonly _resolvedAddress: null | string;\n\n    // For EIP-2544 names, the ancestor that provided the resolver\n    _supportsEip2544: null | Promise<boolean>;\n\n    // The resolvedAddress is only for creating a ReverseLookup resolver\n    constructor(provider: BaseProvider, address: string, name: string, resolvedAddress?: string) {\n        defineReadOnly(this, \"provider\", provider);\n        defineReadOnly(this, \"name\", name);\n        defineReadOnly(this, \"address\", provider.formatter.address(address));\n        defineReadOnly(this, \"_resolvedAddress\", resolvedAddress);\n    }\n\n    supportsWildcard(): Promise<boolean> {\n        if (!this._supportsEip2544) {\n            // supportsInterface(bytes4 = selector(\"resolve(bytes,bytes)\"))\n            this._supportsEip2544 = this.provider.call({\n                to: this.address,\n                data: \"0x01ffc9a79061b92300000000000000000000000000000000000000000000000000000000\"\n            }).then((result) => {\n                return BigNumber.from(result).eq(1);\n            }).catch((error) => {\n                if (error.code === Logger.errors.CALL_EXCEPTION) { return false; }\n                // Rethrow the error: link is down, etc. Let future attempts retry.\n                this._supportsEip2544 = null;\n                throw error;\n            });\n        }\n\n        return this._supportsEip2544;\n    }\n\n    async _fetch(selector: string, parameters?: string): Promise<null | string> {\n\n        // e.g. keccak256(\"addr(bytes32,uint256)\")\n        const tx = {\n            to: this.address,\n            ccipReadEnabled: true,\n            data: hexConcat([ selector, namehash(this.name), (parameters || \"0x\") ])\n        };\n\n        // Wildcard support; use EIP-2544 to resolve the request\n        let parseBytes = false;\n        if (await this.supportsWildcard()) {\n            parseBytes = true;\n\n            // selector(\"resolve(bytes,bytes)\")\n            tx.data = hexConcat([ \"0x9061b923\", encodeBytes([ dnsEncode(this.name), tx.data ]) ]);\n        }\n\n        try {\n            let result = await this.provider.call(tx);\n            if ((arrayify(result).length % 32) === 4) {\n                logger.throwError(\"resolver threw error\", Logger.errors.CALL_EXCEPTION, {\n                    transaction: tx, data: result\n                });\n            }\n            if (parseBytes) { result = _parseBytes(result, 0); }\n            return result;\n        } catch (error) {\n            if (error.code === Logger.errors.CALL_EXCEPTION) { return null; }\n            throw error;\n        }\n    }\n\n    async _fetchBytes(selector: string, parameters?: string): Promise<null | string> {\n        const result = await this._fetch(selector, parameters);\n        if (result != null) { return _parseBytes(result, 0); }\n        return null;\n    }\n\n    _getAddress(coinType: number, hexBytes: string): string {\n        const coinInfo = coinInfos[String(coinType)];\n\n        if (coinInfo == null) {\n            logger.throwError(`unsupported coin type: ${ coinType }`, Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: `getAddress(${ coinType })`\n            });\n        }\n\n        if (coinInfo.ilk === \"eth\") {\n            return this.provider.formatter.address(hexBytes);\n        }\n\n        const bytes = arrayify(hexBytes);\n\n        // P2PKH: OP_DUP OP_HASH160 <pubKeyHash> OP_EQUALVERIFY OP_CHECKSIG\n        if (coinInfo.p2pkh != null) {\n            const p2pkh = hexBytes.match(/^0x76a9([0-9a-f][0-9a-f])([0-9a-f]*)88ac$/);\n            if (p2pkh) {\n                const length = parseInt(p2pkh[1], 16);\n                if (p2pkh[2].length === length * 2 && length >= 1 && length <= 75) {\n                    return base58Encode(concat([ [ coinInfo.p2pkh ], (\"0x\" + p2pkh[2]) ]));\n                }\n            }\n        }\n\n        // P2SH: OP_HASH160 <scriptHash> OP_EQUAL\n        if (coinInfo.p2sh != null) {\n            const p2sh = hexBytes.match(/^0xa9([0-9a-f][0-9a-f])([0-9a-f]*)87$/);\n            if (p2sh) {\n                const length = parseInt(p2sh[1], 16);\n                if (p2sh[2].length === length * 2 && length >= 1 && length <= 75) {\n                    return base58Encode(concat([ [ coinInfo.p2sh ], (\"0x\" + p2sh[2]) ]));\n                }\n            }\n        }\n\n        // Bech32\n        if (coinInfo.prefix != null) {\n            const length = bytes[1];\n\n            // https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki#witness-program\n            let version = bytes[0];\n            if (version === 0x00) {\n                if (length !== 20 && length !== 32) {\n                    version = -1;\n                }\n            } else {\n                version = -1;\n            }\n\n            if (version >= 0 && bytes.length === 2 + length && length >= 1 && length <= 75) {\n                const words = bech32.toWords(bytes.slice(2));\n                words.unshift(version);\n                return bech32.encode(coinInfo.prefix, words);\n            }\n        }\n\n        return null;\n    }\n\n\n    async getAddress(coinType?: number): Promise<string> {\n        if (coinType == null) { coinType = 60; }\n\n        // If Ethereum, use the standard `addr(bytes32)`\n        if (coinType === 60) {\n            try {\n                // keccak256(\"addr(bytes32)\")\n                const result = await this._fetch(\"0x3b3b57de\");\n\n                // No address\n                if (result === \"0x\" || result === HashZero) { return null; }\n\n                return this.provider.formatter.callAddress(result);\n            } catch (error) {\n                if (error.code === Logger.errors.CALL_EXCEPTION) { return null; }\n                throw error;\n            }\n        }\n\n        // keccak256(\"addr(bytes32,uint256\")\n        const hexBytes = await this._fetchBytes(\"0xf1cb7e06\", bytes32ify(coinType));\n\n        // No address\n        if (hexBytes == null || hexBytes === \"0x\") { return null; }\n\n        // Compute the address\n        const address = this._getAddress(coinType, hexBytes);\n\n        if (address == null) {\n            logger.throwError(`invalid or unsupported coin data`, Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: `getAddress(${ coinType })`,\n                coinType: coinType,\n                data: hexBytes\n            });\n        }\n\n        return address;\n    }\n\n    async getAvatar(): Promise<null | Avatar> {\n        const linkage: Array<{ type: string, content: string }> = [ { type: \"name\", content: this.name } ];\n        try {\n            // test data for ricmoo.eth\n            //const avatar = \"eip155:1/erc721:0x265385c7f4132228A0d54EB1A9e7460b91c0cC68/29233\";\n            const avatar = await this.getText(\"avatar\");\n            if (avatar == null) { return null; }\n\n            for (let i = 0; i < matchers.length; i++) {\n                const match = avatar.match(matchers[i]);\n                if (match == null) { continue; }\n\n                const scheme = match[1].toLowerCase();\n\n                switch (scheme) {\n                    case \"https\":\n                        linkage.push({ type: \"url\", content: avatar });\n                        return { linkage, url: avatar };\n\n                    case \"data\":\n                        linkage.push({ type: \"data\", content: avatar });\n                        return { linkage, url: avatar };\n\n                    case \"ipfs\":\n                        linkage.push({ type: \"ipfs\", content: avatar });\n                        return { linkage, url: getIpfsLink(avatar) };\n\n                    case \"erc721\":\n                    case \"erc1155\": {\n                        // Depending on the ERC type, use tokenURI(uint256) or url(uint256)\n                        const selector = (scheme === \"erc721\") ? \"0xc87b56dd\": \"0x0e89341c\";\n                        linkage.push({ type: scheme, content: avatar });\n\n                        // The owner of this name\n                        const owner = (this._resolvedAddress || await this.getAddress());\n\n                        const comps = (match[2] || \"\").split(\"/\");\n                        if (comps.length !== 2) { return null; }\n\n                        const addr = await this.provider.formatter.address(comps[0]);\n                        const tokenId = hexZeroPad(BigNumber.from(comps[1]).toHexString(), 32);\n\n                        // Check that this account owns the token\n                        if (scheme === \"erc721\") {\n                            // ownerOf(uint256 tokenId)\n                            const tokenOwner = this.provider.formatter.callAddress(await this.provider.call({\n                                to: addr, data: hexConcat([ \"0x6352211e\", tokenId ])\n                            }));\n                            if (owner !== tokenOwner) { return null; }\n                            linkage.push({ type: \"owner\", content: tokenOwner });\n\n                        } else if (scheme === \"erc1155\") {\n                            // balanceOf(address owner, uint256 tokenId)\n                            const balance = BigNumber.from(await this.provider.call({\n                                to: addr, data: hexConcat([ \"0x00fdd58e\", hexZeroPad(owner, 32), tokenId ])\n                            }));\n                            if (balance.isZero()) { return null; }\n                            linkage.push({ type: \"balance\", content: balance.toString() });\n                        }\n\n                        // Call the token contract for the metadata URL\n                        const tx = {\n                            to: this.provider.formatter.address(comps[0]),\n                            data: hexConcat([ selector, tokenId ])\n                        };\n\n                        let metadataUrl = _parseString(await this.provider.call(tx), 0);\n                        if (metadataUrl == null) { return null; }\n                        linkage.push({ type: \"metadata-url-base\", content: metadataUrl });\n\n                        // ERC-1155 allows a generic {id} in the URL\n                        if (scheme === \"erc1155\") {\n                            metadataUrl = metadataUrl.replace(\"{id}\", tokenId.substring(2));\n                            linkage.push({ type: \"metadata-url-expanded\", content: metadataUrl });\n                        }\n\n                        // Transform IPFS metadata links\n                        if (metadataUrl.match(/^ipfs:/i)) {\n                            metadataUrl = getIpfsLink(metadataUrl);\n                        }\n\n                        linkage.push({ type: \"metadata-url\", content: metadataUrl });\n\n                        // Get the token metadata\n                        const metadata = await fetchJson(metadataUrl);\n                        if (!metadata) { return null; }\n                        linkage.push({ type: \"metadata\", content: JSON.stringify(metadata) });\n\n                        // Pull the image URL out\n                        let imageUrl = metadata.image;\n                        if (typeof(imageUrl) !== \"string\") { return null; }\n\n                        if (imageUrl.match(/^(https:\\/\\/|data:)/i)) {\n                            // Allow\n                        } else {\n                            // Transform IPFS link to gateway\n                            const ipfs = imageUrl.match(matcherIpfs);\n                            if (ipfs == null) { return null; }\n\n                            linkage.push({ type: \"url-ipfs\", content: imageUrl });\n                            imageUrl = getIpfsLink(imageUrl);\n                        }\n\n                        linkage.push({ type: \"url\", content: imageUrl });\n\n                        return { linkage, url: imageUrl };\n                    }\n                }\n            }\n        } catch (error) { }\n\n        return null;\n    }\n\n    async getContentHash(): Promise<string> {\n\n        // keccak256(\"contenthash()\")\n        const hexBytes = await this._fetchBytes(\"0xbc1c58d1\");\n\n        // No contenthash\n        if (hexBytes == null || hexBytes === \"0x\") { return null; }\n\n        // IPFS (CID: 1, Type: DAG-PB)\n        const ipfs = hexBytes.match(/^0xe3010170(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);\n        if (ipfs) {\n            const length = parseInt(ipfs[3], 16);\n            if (ipfs[4].length === length * 2) {\n                return \"ipfs:/\\/\" + Base58.encode(\"0x\" + ipfs[1]);\n            }\n        }\n\n        // IPNS (CID: 1, Type: libp2p-key)\n        const ipns = hexBytes.match(/^0xe5010172(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);\n        if (ipns) {\n            const length = parseInt(ipns[3], 16);\n            if (ipns[4].length === length * 2) {\n                return \"ipns:/\\/\" + Base58.encode(\"0x\" + ipns[1]);\n            }\n        }\n\n        // Swarm (CID: 1, Type: swarm-manifest; hash/length hard-coded to keccak256/32)\n        const swarm = hexBytes.match(/^0xe40101fa011b20([0-9a-f]*)$/)\n        if (swarm) {\n            if (swarm[1].length === (32 * 2)) {\n                return \"bzz:/\\/\" + swarm[1]\n            }\n        }\n\n        const skynet = hexBytes.match(/^0x90b2c605([0-9a-f]*)$/);\n        if (skynet) {\n            if (skynet[1].length === (34 * 2)) {\n                // URL Safe base64; https://datatracker.ietf.org/doc/html/rfc4648#section-5\n                const urlSafe: Record<string, string> = { \"=\": \"\", \"+\": \"-\", \"/\": \"_\" };\n                const hash = base64Encode(\"0x\" + skynet[1]).replace(/[=+\\/]/g, (a) => (urlSafe[a]));\n                return \"sia:/\\/\" + hash;\n            }\n        }\n\n        return logger.throwError(`invalid or unsupported content hash data`, Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"getContentHash()\",\n            data: hexBytes\n        });\n    }\n\n    async getText(key: string): Promise<string> {\n\n        // The key encoded as parameter to fetchBytes\n        let keyBytes = toUtf8Bytes(key);\n\n        // The nodehash consumes the first slot, so the string pointer targets\n        // offset 64, with the length at offset 64 and data starting at offset 96\n        keyBytes = concat([ bytes32ify(64), bytes32ify(keyBytes.length), keyBytes ]);\n\n        // Pad to word-size (32 bytes)\n        if ((keyBytes.length % 32) !== 0) {\n            keyBytes = concat([ keyBytes, hexZeroPad(\"0x\", 32 - (key.length % 32)) ])\n        }\n\n        const hexBytes = await this._fetchBytes(\"0x59d1d43c\", hexlify(keyBytes));\n        if (hexBytes == null || hexBytes === \"0x\") { return null; }\n\n        return toUtf8String(hexBytes);\n    }\n}\n\nlet defaultFormatter: Formatter = null;\n\nlet nextPollId = 1;\n\nexport class BaseProvider extends Provider implements EnsProvider {\n    _networkPromise: Promise<Network>;\n    _network: Network;\n\n    _events: Array<Event>;\n\n    formatter: Formatter;\n\n    // To help mitigate the eventually consistent nature of the blockchain\n    // we keep a mapping of events we emit. If we emit an event X, we expect\n    // that a user should be able to query for that event in the callback,\n    // if the node returns null, we stall the response until we get back a\n    // meaningful value, since we may be hitting a re-org, or a node that\n    // has not indexed the event yet.\n    // Events:\n    //   - t:{hash}    - Transaction hash\n    //   - b:{hash}    - BlockHash\n    //   - block       - The most recent emitted block\n    _emitted: { [ eventName: string ]: number | \"pending\" };\n\n    _pollingInterval: number;\n    _poller: NodeJS.Timer;\n    _bootstrapPoll: NodeJS.Timer;\n\n    _lastBlockNumber: number;\n    _maxFilterBlockRange: number;\n\n    _fastBlockNumber: number;\n    _fastBlockNumberPromise: Promise<number>;\n    _fastQueryDate: number;\n\n    _maxInternalBlockNumber: number;\n    _internalBlockNumber: Promise<{ blockNumber: number, reqTime: number, respTime: number }>;\n\n    readonly anyNetwork: boolean;\n\n    disableCcipRead: boolean;\n\n\n    /**\n     *  ready\n     *\n     *  A Promise<Network> that resolves only once the provider is ready.\n     *\n     *  Sub-classes that call the super with a network without a chainId\n     *  MUST set this. Standard named networks have a known chainId.\n     *\n     */\n\n    constructor(network: Networkish | Promise<Network>) {\n        super();\n\n        // Events being listened to\n        this._events = [];\n\n        this._emitted = { block: -2 };\n\n        this.disableCcipRead = false;\n\n        this.formatter = new.target.getFormatter();\n\n        // If network is any, this Provider allows the underlying\n        // network to change dynamically, and we auto-detect the\n        // current network\n        defineReadOnly(this, \"anyNetwork\", (network === \"any\"));\n        if (this.anyNetwork) { network = this.detectNetwork(); }\n\n        if (network instanceof Promise) {\n            this._networkPromise = network;\n\n            // Squash any \"unhandled promise\" errors; that do not need to be handled\n            network.catch((error) => { });\n\n            // Trigger initial network setting (async)\n            this._ready().catch((error) => { });\n\n        } else {\n            const knownNetwork = getStatic<(network: Networkish) => Network>(new.target, \"getNetwork\")(network);\n            if (knownNetwork) {\n                defineReadOnly(this, \"_network\", knownNetwork);\n                this.emit(\"network\", knownNetwork, null);\n\n            } else {\n                logger.throwArgumentError(\"invalid network\", \"network\", network);\n            }\n        }\n\n        this._maxInternalBlockNumber = -1024;\n\n        this._lastBlockNumber = -2;\n        this._maxFilterBlockRange = 10;\n\n        this._pollingInterval = 4000;\n\n        this._fastQueryDate = 0;\n    }\n\n    async _ready(): Promise<Network> {\n        if (this._network == null) {\n            let network: Network = null;\n            if (this._networkPromise) {\n                try {\n                    network = await this._networkPromise;\n                } catch (error) { }\n            }\n\n            // Try the Provider's network detection (this MUST throw if it cannot)\n            if (network == null) {\n                network = await this.detectNetwork();\n            }\n\n            // This should never happen; every Provider sub-class should have\n            // suggested a network by here (or have thrown).\n            if (!network) {\n                logger.throwError(\"no network detected\", Logger.errors.UNKNOWN_ERROR, { });\n            }\n\n            // Possible this call stacked so do not call defineReadOnly again\n            if (this._network == null) {\n                if (this.anyNetwork) {\n                    this._network = network;\n                } else {\n                    defineReadOnly(this, \"_network\", network);\n                }\n                this.emit(\"network\", network, null);\n            }\n        }\n\n        return this._network;\n    }\n\n    // This will always return the most recently established network.\n    // For \"any\", this can change (a \"network\" event is emitted before\n    // any change is reflected); otherwise this cannot change\n    get ready(): Promise<Network> {\n        return poll(() => {\n            return this._ready().then((network) => {\n                return network;\n            }, (error) => {\n                // If the network isn't running yet, we will wait\n                if (error.code === Logger.errors.NETWORK_ERROR && error.event === \"noNetwork\") {\n                    return undefined;\n                }\n                throw error;\n            });\n        });\n    }\n\n    // @TODO: Remove this and just create a singleton formatter\n    static getFormatter(): Formatter {\n        if (defaultFormatter == null) {\n            defaultFormatter = new Formatter();\n        }\n        return defaultFormatter;\n    }\n\n    // @TODO: Remove this and just use getNetwork\n    static getNetwork(network: Networkish): Network {\n        return getNetwork((network == null) ? \"homestead\": network);\n    }\n\n    async ccipReadFetch(tx: Transaction, calldata: string, urls: Array<string>): Promise<null | string> {\n        if (this.disableCcipRead || urls.length === 0) { return null; }\n\n        const sender = tx.to.toLowerCase();\n        const data = calldata.toLowerCase();\n\n        const errorMessages: Array<string> = [ ];\n\n        for (let i = 0; i < urls.length; i++) {\n            const url = urls[i];\n\n            // URL expansion\n            const href = url.replace(\"{sender}\", sender).replace(\"{data}\", data);\n\n            // If no {data} is present, use POST; otherwise GET\n            const json: string | null = (url.indexOf(\"{data}\") >= 0) ? null: JSON.stringify({ data, sender });\n\n            const result = await fetchJson({ url: href, errorPassThrough: true }, json, (value, response) => {\n                value.status = response.statusCode;\n                return value;\n            });\n\n            if (result.data) { return result.data; }\n\n            const errorMessage = (result.message || \"unknown error\");\n\n            // 4xx indicates the result is not present; stop\n            if (result.status >= 400 && result.status < 500) {\n                return logger.throwError(`response not found during CCIP fetch: ${ errorMessage }`, Logger.errors.SERVER_ERROR, { url, errorMessage });\n            }\n\n            // 5xx indicates server issue; try the next url\n            errorMessages.push(errorMessage);\n        }\n\n        return logger.throwError(`error encountered during CCIP fetch: ${ errorMessages.map((m) => JSON.stringify(m)).join(\", \") }`, Logger.errors.SERVER_ERROR, {\n            urls, errorMessages\n        });\n    }\n\n    // Fetches the blockNumber, but will reuse any result that is less\n    // than maxAge old or has been requested since the last request\n    async _getInternalBlockNumber(maxAge: number): Promise<number> {\n        await this._ready();\n\n        // Allowing stale data up to maxAge old\n        if (maxAge > 0) {\n\n            // While there are pending internal block requests...\n            while (this._internalBlockNumber) {\n\n                // ...\"remember\" which fetch we started with\n                const internalBlockNumber = this._internalBlockNumber;\n\n                try {\n                    // Check the result is not too stale\n                    const result = await internalBlockNumber;\n                    if ((getTime() - result.respTime) <= maxAge) {\n                        return result.blockNumber;\n                    }\n\n                    // Too old; fetch a new value\n                    break;\n\n                } catch(error) {\n\n                    // The fetch rejected; if we are the first to get the\n                    // rejection, drop through so we replace it with a new\n                    // fetch; all others blocked will then get that fetch\n                    // which won't match the one they \"remembered\" and loop\n                    if (this._internalBlockNumber === internalBlockNumber) {\n                        break;\n                    }\n                }\n            }\n        }\n\n        const reqTime = getTime();\n\n        const checkInternalBlockNumber = resolveProperties({\n            blockNumber: this.perform(\"getBlockNumber\", { }),\n            networkError: this.getNetwork().then((network) => (null), (error) => (error))\n        }).then(({ blockNumber, networkError }) => {\n            if (networkError) {\n                // Unremember this bad internal block number\n                if (this._internalBlockNumber === checkInternalBlockNumber) {\n                    this._internalBlockNumber = null;\n                }\n                throw networkError;\n            }\n\n            const respTime = getTime();\n\n            blockNumber = BigNumber.from(blockNumber).toNumber();\n            if (blockNumber < this._maxInternalBlockNumber) { blockNumber = this._maxInternalBlockNumber; }\n\n            this._maxInternalBlockNumber = blockNumber;\n            this._setFastBlockNumber(blockNumber); // @TODO: Still need this?\n            return { blockNumber, reqTime, respTime };\n        });\n\n        this._internalBlockNumber = checkInternalBlockNumber;\n\n        // Swallow unhandled exceptions; if needed they are handled else where\n        checkInternalBlockNumber.catch((error) => {\n            // Don't null the dead (rejected) fetch, if it has already been updated\n            if (this._internalBlockNumber === checkInternalBlockNumber) {\n                this._internalBlockNumber = null;\n            }\n        });\n\n        return (await checkInternalBlockNumber).blockNumber;\n    }\n\n    async poll(): Promise<void> {\n        const pollId = nextPollId++;\n\n        // Track all running promises, so we can trigger a post-poll once they are complete\n        const runners: Array<Promise<void>> = [];\n\n        let blockNumber: number = null;\n        try {\n            blockNumber = await this._getInternalBlockNumber(100 + this.pollingInterval / 2);\n        } catch (error) {\n            this.emit(\"error\", error);\n            return;\n        }\n        this._setFastBlockNumber(blockNumber);\n\n        // Emit a poll event after we have the latest (fast) block number\n        this.emit(\"poll\", pollId, blockNumber);\n\n        // If the block has not changed, meh.\n        if (blockNumber === this._lastBlockNumber) {\n            this.emit(\"didPoll\", pollId);\n            return;\n        }\n\n        // First polling cycle, trigger a \"block\" events\n        if (this._emitted.block === -2) {\n            this._emitted.block = blockNumber - 1;\n        }\n\n        if (Math.abs((<number>(this._emitted.block)) - blockNumber) > 1000) {\n            logger.warn(`network block skew detected; skipping block events (emitted=${ this._emitted.block } blockNumber${ blockNumber })`);\n            this.emit(\"error\", logger.makeError(\"network block skew detected\", Logger.errors.NETWORK_ERROR, {\n                blockNumber: blockNumber,\n                event: \"blockSkew\",\n                previousBlockNumber: this._emitted.block\n            }));\n            this.emit(\"block\", blockNumber);\n\n        } else {\n            // Notify all listener for each block that has passed\n            for (let i = (<number>this._emitted.block) + 1; i <= blockNumber; i++) {\n                this.emit(\"block\", i);\n            }\n        }\n\n        // The emitted block was updated, check for obsolete events\n        if ((<number>this._emitted.block) !== blockNumber) {\n            this._emitted.block = blockNumber;\n\n            Object.keys(this._emitted).forEach((key) => {\n                // The block event does not expire\n                if (key === \"block\") { return; }\n\n                // The block we were at when we emitted this event\n                const eventBlockNumber = this._emitted[key];\n\n                // We cannot garbage collect pending transactions or blocks here\n                // They should be garbage collected by the Provider when setting\n                // \"pending\" events\n                if (eventBlockNumber === \"pending\") { return; }\n\n                // Evict any transaction hashes or block hashes over 12 blocks\n                // old, since they should not return null anyways\n                if (blockNumber - eventBlockNumber > 12) {\n                    delete this._emitted[key];\n                }\n            });\n        }\n\n        // First polling cycle\n        if (this._lastBlockNumber === -2) {\n            this._lastBlockNumber = blockNumber - 1;\n        }\n        // Find all transaction hashes we are waiting on\n        this._events.forEach((event) => {\n            switch (event.type) {\n                case \"tx\": {\n                    const hash = event.hash;\n                    let runner = this.getTransactionReceipt(hash).then((receipt) => {\n                        if (!receipt || receipt.blockNumber == null) { return null; }\n                        this._emitted[\"t:\" + hash] = receipt.blockNumber;\n                        this.emit(hash, receipt);\n                        return null;\n                    }).catch((error: Error) => { this.emit(\"error\", error); });\n\n                    runners.push(runner);\n\n                    break;\n                }\n\n                case \"filter\": {\n                    // We only allow a single getLogs to be in-flight at a time\n                    if (!event._inflight) {\n                        event._inflight = true;\n\n                        // This is the first filter for this event, so we want to\n                        // restrict events to events that happened no earlier than now\n                        if (event._lastBlockNumber === -2) {\n                            event._lastBlockNumber = blockNumber - 1;\n                        }\n\n                        // Filter from the last *known* event; due to load-balancing\n                        // and some nodes returning updated block numbers before\n                        // indexing events, a logs result with 0 entries cannot be\n                        // trusted and we must retry a range which includes it again\n                        const filter = event.filter;\n                        filter.fromBlock = event._lastBlockNumber + 1;\n                        filter.toBlock = blockNumber;\n\n                        // Prevent fitler ranges from growing too wild, since it is quite\n                        // likely there just haven't been any events to move the lastBlockNumber.\n                        const minFromBlock = filter.toBlock - this._maxFilterBlockRange;\n                        if (minFromBlock > filter.fromBlock) { filter.fromBlock = minFromBlock; }\n\n                        if (filter.fromBlock < 0) { filter.fromBlock = 0; }\n\n                        const runner = this.getLogs(filter).then((logs) => {\n                            // Allow the next getLogs\n                            event._inflight = false;\n\n                            if (logs.length === 0) { return; }\n\n                            logs.forEach((log: Log) => {\n                                // Only when we get an event for a given block number\n                                // can we trust the events are indexed\n                                if (log.blockNumber > event._lastBlockNumber) {\n                                    event._lastBlockNumber = log.blockNumber;\n                                }\n\n                                // Make sure we stall requests to fetch blocks and txs\n                                this._emitted[\"b:\" + log.blockHash] = log.blockNumber;\n                                this._emitted[\"t:\" + log.transactionHash] = log.blockNumber;\n\n                                this.emit(filter, log);\n                            });\n                        }).catch((error: Error) => {\n                            this.emit(\"error\", error);\n\n                            // Allow another getLogs (the range was not updated)\n                            event._inflight = false;\n                        });\n                        runners.push(runner);\n                    }\n\n                    break;\n                }\n            }\n        });\n\n        this._lastBlockNumber = blockNumber;\n\n        // Once all events for this loop have been processed, emit \"didPoll\"\n        Promise.all(runners).then(() => {\n            this.emit(\"didPoll\", pollId);\n        }).catch((error) => { this.emit(\"error\", error); });\n\n        return;\n    }\n\n    // Deprecated; do not use this\n    resetEventsBlock(blockNumber: number): void {\n        this._lastBlockNumber = blockNumber - 1;\n        if (this.polling) { this.poll(); }\n    }\n\n    get network(): Network {\n        return this._network;\n    }\n\n    // This method should query the network if the underlying network\n    // can change, such as when connected to a JSON-RPC backend\n    async detectNetwork(): Promise<Network> {\n        return logger.throwError(\"provider does not support network detection\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"provider.detectNetwork\"\n        });\n    }\n\n    async getNetwork(): Promise<Network> {\n        const network = await this._ready();\n\n        // Make sure we are still connected to the same network; this is\n        // only an external call for backends which can have the underlying\n        // network change spontaneously\n        const currentNetwork = await this.detectNetwork();\n        if (network.chainId !== currentNetwork.chainId) {\n\n            // We are allowing network changes, things can get complex fast;\n            // make sure you know what you are doing if you use \"any\"\n            if (this.anyNetwork) {\n                this._network = currentNetwork;\n\n                // Reset all internal block number guards and caches\n                this._lastBlockNumber = -2;\n                this._fastBlockNumber = null;\n                this._fastBlockNumberPromise = null;\n                this._fastQueryDate = 0;\n                this._emitted.block = -2;\n                this._maxInternalBlockNumber = -1024;\n                this._internalBlockNumber = null;\n\n                // The \"network\" event MUST happen before this method resolves\n                // so any events have a chance to unregister, so we stall an\n                // additional event loop before returning from /this/ call\n                this.emit(\"network\", currentNetwork, network);\n                await stall(0);\n\n                return this._network;\n            }\n\n            const error = logger.makeError(\"underlying network changed\", Logger.errors.NETWORK_ERROR, {\n                event: \"changed\",\n                network: network,\n                detectedNetwork: currentNetwork\n            });\n\n            this.emit(\"error\", error);\n            throw error;\n        }\n\n        return network;\n    }\n\n    get blockNumber(): number {\n        this._getInternalBlockNumber(100 + this.pollingInterval / 2).then((blockNumber) => {\n            this._setFastBlockNumber(blockNumber);\n        }, (error) => { });\n\n        return (this._fastBlockNumber != null) ? this._fastBlockNumber: -1;\n    }\n\n    get polling(): boolean {\n        return (this._poller != null);\n    }\n\n    set polling(value: boolean) {\n        if (value && !this._poller) {\n            this._poller = setInterval(() => { this.poll(); }, this.pollingInterval);\n\n            if (!this._bootstrapPoll) {\n                this._bootstrapPoll = setTimeout(() => {\n                    this.poll();\n\n                    // We block additional polls until the polling interval\n                    // is done, to prevent overwhelming the poll function\n                    this._bootstrapPoll = setTimeout(() => {\n                        // If polling was disabled, something may require a poke\n                        // since starting the bootstrap poll and it was disabled\n                        if (!this._poller) { this.poll(); }\n\n                        // Clear out the bootstrap so we can do another\n                        this._bootstrapPoll = null;\n                    }, this.pollingInterval);\n                }, 0);\n            }\n\n        } else if (!value && this._poller) {\n            clearInterval(this._poller);\n            this._poller = null;\n        }\n    }\n\n    get pollingInterval(): number {\n        return this._pollingInterval;\n    }\n\n    set pollingInterval(value: number) {\n        if (typeof(value) !== \"number\" || value <= 0 || parseInt(String(value)) != value) {\n            throw new Error(\"invalid polling interval\");\n        }\n\n        this._pollingInterval = value;\n\n        if (this._poller) {\n            clearInterval(this._poller);\n            this._poller = setInterval(() => { this.poll(); }, this._pollingInterval);\n        }\n    }\n\n    _getFastBlockNumber(): Promise<number> {\n        const now = getTime();\n\n        // Stale block number, request a newer value\n        if ((now - this._fastQueryDate) > 2 * this._pollingInterval) {\n            this._fastQueryDate = now;\n            this._fastBlockNumberPromise = this.getBlockNumber().then((blockNumber) => {\n                if (this._fastBlockNumber == null || blockNumber > this._fastBlockNumber) {\n                    this._fastBlockNumber = blockNumber;\n                }\n                return this._fastBlockNumber;\n            });\n        }\n\n        return this._fastBlockNumberPromise;\n    }\n\n    _setFastBlockNumber(blockNumber: number): void {\n        // Older block, maybe a stale request\n        if (this._fastBlockNumber != null && blockNumber < this._fastBlockNumber) { return; }\n\n        // Update the time we updated the blocknumber\n        this._fastQueryDate = getTime();\n\n        // Newer block number, use  it\n        if (this._fastBlockNumber == null || blockNumber > this._fastBlockNumber) {\n            this._fastBlockNumber = blockNumber;\n            this._fastBlockNumberPromise = Promise.resolve(blockNumber);\n        }\n    }\n\n    async waitForTransaction(transactionHash: string, confirmations?: number, timeout?: number): Promise<TransactionReceipt> {\n        return this._waitForTransaction(transactionHash, (confirmations == null) ? 1: confirmations, timeout || 0, null);\n    }\n\n    async _waitForTransaction(transactionHash: string, confirmations: number, timeout: number, replaceable: { data: string, from: string, nonce: number, to: string, value: BigNumber, startBlock: number }): Promise<TransactionReceipt> {\n        const receipt = await this.getTransactionReceipt(transactionHash);\n\n        // Receipt is already good\n        if ((receipt ? receipt.confirmations: 0) >= confirmations) { return receipt; }\n\n        // Poll until the receipt is good...\n        return new Promise((resolve, reject) => {\n            const cancelFuncs: Array<() => void> = [];\n\n            let done = false;\n            const alreadyDone = function() {\n                if (done) { return true; }\n                done = true;\n                cancelFuncs.forEach((func) => { func(); });\n                return false;\n            };\n\n            const minedHandler = (receipt: TransactionReceipt) => {\n                if (receipt.confirmations < confirmations) { return; }\n                if (alreadyDone()) { return; }\n                resolve(receipt);\n            }\n            this.on(transactionHash, minedHandler);\n            cancelFuncs.push(() => { this.removeListener(transactionHash, minedHandler); });\n\n            if (replaceable) {\n                let lastBlockNumber = replaceable.startBlock;\n                let scannedBlock: number = null;\n                const replaceHandler = async (blockNumber: number) => {\n                    if (done) { return; }\n\n                    // Wait 1 second; this is only used in the case of a fault, so\n                    // we will trade off a little bit of latency for more consistent\n                    // results and fewer JSON-RPC calls\n                    await stall(1000);\n\n                    this.getTransactionCount(replaceable.from).then(async (nonce) => {\n                        if (done) { return; }\n\n                        if (nonce <= replaceable.nonce) {\n                            lastBlockNumber = blockNumber;\n\n                        } else {\n                            // First check if the transaction was mined\n                            {\n                                const mined = await this.getTransaction(transactionHash);\n                                if (mined && mined.blockNumber != null) { return; }\n                            }\n\n                            // First time scanning. We start a little earlier for some\n                            // wiggle room here to handle the eventually consistent nature\n                            // of blockchain (e.g. the getTransactionCount was for a\n                            // different block)\n                            if (scannedBlock == null) {\n                                scannedBlock = lastBlockNumber - 3;\n                                if (scannedBlock < replaceable.startBlock) {\n                                    scannedBlock = replaceable.startBlock;\n                                }\n                            }\n\n                            while (scannedBlock <= blockNumber) {\n                                if (done) { return; }\n\n                                const block = await this.getBlockWithTransactions(scannedBlock);\n                                for (let ti = 0; ti < block.transactions.length; ti++) {\n                                    const tx = block.transactions[ti];\n\n                                    // Successfully mined!\n                                    if (tx.hash === transactionHash) { return; }\n\n                                    // Matches our transaction from and nonce; its a replacement\n                                    if (tx.from === replaceable.from && tx.nonce === replaceable.nonce) {\n                                        if (done) { return; }\n\n                                        // Get the receipt of the replacement\n                                        const receipt = await this.waitForTransaction(tx.hash, confirmations);\n\n                                        // Already resolved or rejected (prolly a timeout)\n                                        if (alreadyDone()) { return; }\n\n                                        // The reason we were replaced\n                                        let reason = \"replaced\";\n                                        if (tx.data === replaceable.data && tx.to === replaceable.to && tx.value.eq(replaceable.value)) {\n                                            reason = \"repriced\";\n                                        } else  if (tx.data === \"0x\" && tx.from === tx.to && tx.value.isZero()) {\n                                            reason = \"cancelled\"\n                                        }\n\n                                        // Explain why we were replaced\n                                        reject(logger.makeError(\"transaction was replaced\", Logger.errors.TRANSACTION_REPLACED, {\n                                            cancelled: (reason === \"replaced\" || reason === \"cancelled\"),\n                                            reason,\n                                            replacement: this._wrapTransaction(tx),\n                                            hash: transactionHash,\n                                            receipt\n                                        }));\n\n                                        return;\n                                    }\n                                }\n                                scannedBlock++;\n                            }\n                        }\n\n                        if (done) { return; }\n                        this.once(\"block\", replaceHandler);\n\n                    }, (error) => {\n                        if (done) { return; }\n                        this.once(\"block\", replaceHandler);\n                    });\n                };\n\n                if (done) { return; }\n                this.once(\"block\", replaceHandler);\n\n                cancelFuncs.push(() => {\n                    this.removeListener(\"block\", replaceHandler);\n                });\n            }\n\n            if (typeof(timeout) === \"number\" && timeout > 0) {\n                const timer = setTimeout(() => {\n                    if (alreadyDone()) { return; }\n                    reject(logger.makeError(\"timeout exceeded\", Logger.errors.TIMEOUT, { timeout: timeout }));\n                }, timeout);\n                if (timer.unref) { timer.unref(); }\n\n                cancelFuncs.push(() => { clearTimeout(timer); });\n            }\n        });\n    }\n\n    async getBlockNumber(): Promise<number> {\n        return this._getInternalBlockNumber(0);\n    }\n\n    async getGasPrice(): Promise<BigNumber> {\n        await this.getNetwork();\n\n        const result = await this.perform(\"getGasPrice\", { });\n        try {\n            return BigNumber.from(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"getGasPrice\",\n                result, error\n            });\n        }\n    }\n\n    async getBalance(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<BigNumber> {\n        await this.getNetwork();\n        const params = await resolveProperties({\n            address: this._getAddress(addressOrName),\n            blockTag: this._getBlockTag(blockTag)\n        });\n\n        const result = await this.perform(\"getBalance\", params);\n        try {\n            return BigNumber.from(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"getBalance\",\n                params, result, error\n            });\n        }\n    }\n\n    async getTransactionCount(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<number> {\n        await this.getNetwork();\n        const params = await resolveProperties({\n            address: this._getAddress(addressOrName),\n            blockTag: this._getBlockTag(blockTag)\n        });\n\n        const result = await this.perform(\"getTransactionCount\", params);\n        try {\n            return BigNumber.from(result).toNumber();\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"getTransactionCount\",\n                params, result, error\n            });\n        }\n    }\n\n    async getCode(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string> {\n        await this.getNetwork();\n        const params = await resolveProperties({\n            address: this._getAddress(addressOrName),\n            blockTag: this._getBlockTag(blockTag)\n        });\n\n        const result = await this.perform(\"getCode\", params);\n        try {\n            return hexlify(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"getCode\",\n                params, result, error\n            });\n        }\n    }\n\n    async getStorageAt(addressOrName: string | Promise<string>, position: BigNumberish | Promise<BigNumberish>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string> {\n        await this.getNetwork();\n        const params = await resolveProperties({\n            address: this._getAddress(addressOrName),\n            blockTag: this._getBlockTag(blockTag),\n            position: Promise.resolve(position).then((p) => hexValue(p))\n        });\n        const result = await this.perform(\"getStorageAt\", params);\n        try {\n            return hexlify(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"getStorageAt\",\n                params, result, error\n            });\n        }\n    }\n\n    // This should be called by any subclass wrapping a TransactionResponse\n    _wrapTransaction(tx: Transaction, hash?: string, startBlock?: number): TransactionResponse {\n        if (hash != null && hexDataLength(hash) !== 32) { throw new Error(\"invalid response - sendTransaction\"); }\n\n        const result = <TransactionResponse>tx;\n\n        // Check the hash we expect is the same as the hash the server reported\n        if (hash != null && tx.hash !== hash) {\n            logger.throwError(\"Transaction hash mismatch from Provider.sendTransaction.\", Logger.errors.UNKNOWN_ERROR, { expectedHash: tx.hash, returnedHash: hash });\n        }\n\n        result.wait = async (confirms?: number, timeout?: number) => {\n            if (confirms == null) { confirms = 1; }\n            if (timeout == null) { timeout = 0; }\n\n            // Get the details to detect replacement\n            let replacement = undefined;\n            if (confirms !== 0 && startBlock != null) {\n                replacement = {\n                    data: tx.data,\n                    from: tx.from,\n                    nonce: tx.nonce,\n                    to: tx.to,\n                    value: tx.value,\n                    startBlock\n                };\n            }\n\n            const receipt = await this._waitForTransaction(tx.hash, confirms, timeout, replacement);\n            if (receipt == null && confirms === 0) { return null; }\n\n            // No longer pending, allow the polling loop to garbage collect this\n            this._emitted[\"t:\" + tx.hash] = receipt.blockNumber;\n\n            if (receipt.status === 0) {\n                logger.throwError(\"transaction failed\", Logger.errors.CALL_EXCEPTION, {\n                    transactionHash: tx.hash,\n                    transaction: tx,\n                    receipt: receipt\n                });\n            }\n            return receipt;\n        };\n\n        return result;\n    }\n\n    async sendTransaction(signedTransaction: string | Promise<string>): Promise<TransactionResponse> {\n        await this.getNetwork();\n        const hexTx = await Promise.resolve(signedTransaction).then(t => hexlify(t));\n        const tx = this.formatter.transaction(signedTransaction);\n        if (tx.confirmations == null) { tx.confirmations = 0; }\n        const blockNumber = await this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n        try {\n            const hash = await this.perform(\"sendTransaction\", { signedTransaction: hexTx });\n            return this._wrapTransaction(tx, hash, blockNumber);\n        } catch (error) {\n            (<any>error).transaction = tx;\n            (<any>error).transactionHash = tx.hash;\n            throw error;\n        }\n    }\n\n    async _getTransactionRequest(transaction: Deferrable<TransactionRequest>): Promise<Transaction> {\n        const values: any = await transaction;\n\n        const tx: any = { };\n\n        [\"from\", \"to\"].forEach((key) => {\n            if (values[key] == null) { return; }\n            tx[key] = Promise.resolve(values[key]).then((v) => (v ? this._getAddress(v): null))\n        });\n\n        [\"gasLimit\", \"gasPrice\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"value\"].forEach((key) => {\n            if (values[key] == null) { return; }\n            tx[key] = Promise.resolve(values[key]).then((v) => (v ? BigNumber.from(v): null));\n        });\n\n        [\"type\"].forEach((key) => {\n            if (values[key] == null) { return; }\n            tx[key] = Promise.resolve(values[key]).then((v) => ((v != null) ? v: null));\n        });\n\n        if (values.accessList) {\n            tx.accessList = this.formatter.accessList(values.accessList);\n        }\n\n        [\"data\"].forEach((key) => {\n            if (values[key] == null) { return; }\n            tx[key] = Promise.resolve(values[key]).then((v) => (v ? hexlify(v): null));\n        });\n\n        return this.formatter.transactionRequest(await resolveProperties(tx));\n    }\n\n    async _getFilter(filter: Filter | FilterByBlockHash | Promise<Filter | FilterByBlockHash>): Promise<Filter | FilterByBlockHash> {\n        filter = await filter;\n\n        const result: any = { };\n\n        if (filter.address != null) {\n            result.address = this._getAddress(filter.address);\n        }\n\n        [\"blockHash\", \"topics\"].forEach((key) => {\n            if ((<any>filter)[key] == null) { return; }\n            result[key] = (<any>filter)[key];\n        });\n\n        [\"fromBlock\", \"toBlock\"].forEach((key) => {\n            if ((<any>filter)[key] == null) { return; }\n            result[key] = this._getBlockTag((<any>filter)[key]);\n        });\n\n        return this.formatter.filter(await resolveProperties(result));\n    }\n\n    async _call(transaction: TransactionRequest, blockTag: BlockTag, attempt: number): Promise<string> {\n        if (attempt >= MAX_CCIP_REDIRECTS) {\n            logger.throwError(\"CCIP read exceeded maximum redirections\", Logger.errors.SERVER_ERROR, {\n                redirects: attempt, transaction\n            });\n        }\n\n        const txSender = transaction.to;\n\n        const result = await this.perform(\"call\", { transaction, blockTag });\n\n        // CCIP Read request via OffchainLookup(address,string[],bytes,bytes4,bytes)\n        if (attempt >= 0 && blockTag === \"latest\" && txSender != null && result.substring(0, 10) === \"0x556f1830\" && (hexDataLength(result) % 32 === 4)) {\n            try {\n                const data = hexDataSlice(result, 4);\n\n                // Check the sender of the OffchainLookup matches the transaction\n                const sender = hexDataSlice(data, 0, 32);\n                if (!BigNumber.from(sender).eq(txSender)) {\n                    logger.throwError(\"CCIP Read sender did not match\", Logger.errors.CALL_EXCEPTION, {\n                        name: \"OffchainLookup\",\n                        signature: \"OffchainLookup(address,string[],bytes,bytes4,bytes)\",\n                        transaction, data: result\n                    });\n                }\n\n                // Read the URLs from the response\n                const urls: Array<string> = [];\n                const urlsOffset = BigNumber.from(hexDataSlice(data, 32, 64)).toNumber();\n                const urlsLength = BigNumber.from(hexDataSlice(data, urlsOffset, urlsOffset + 32)).toNumber();\n                const urlsData = hexDataSlice(data, urlsOffset + 32);\n                for (let u = 0; u < urlsLength; u++) {\n                    const url = _parseString(urlsData, u * 32);\n                    if (url == null) {\n                        logger.throwError(\"CCIP Read contained corrupt URL string\", Logger.errors.CALL_EXCEPTION, {\n                            name: \"OffchainLookup\",\n                            signature: \"OffchainLookup(address,string[],bytes,bytes4,bytes)\",\n                            transaction, data: result\n                        });\n                    }\n                    urls.push(url);\n                }\n\n                // Get the CCIP calldata to forward\n                const calldata = _parseBytes(data, 64);\n\n                // Get the callbackSelector (bytes4)\n                if (!BigNumber.from(hexDataSlice(data, 100, 128)).isZero()) {\n                    logger.throwError(\"CCIP Read callback selector included junk\", Logger.errors.CALL_EXCEPTION, {\n                        name: \"OffchainLookup\",\n                        signature: \"OffchainLookup(address,string[],bytes,bytes4,bytes)\",\n                        transaction, data: result\n                    });\n                }\n                const callbackSelector = hexDataSlice(data, 96, 100);\n\n                // Get the extra data to send back to the contract as context\n                const extraData = _parseBytes(data, 128);\n\n                const ccipResult = await this.ccipReadFetch(<Transaction>transaction, calldata, urls);\n                if (ccipResult == null) {\n                    logger.throwError(\"CCIP Read disabled or provided no URLs\", Logger.errors.CALL_EXCEPTION, {\n                        name: \"OffchainLookup\",\n                        signature: \"OffchainLookup(address,string[],bytes,bytes4,bytes)\",\n                        transaction, data: result\n                    });\n                }\n\n                const tx = {\n                    to: txSender,\n                    data: hexConcat([ callbackSelector, encodeBytes([ ccipResult, extraData ]) ])\n                };\n\n                return this._call(tx, blockTag, attempt + 1);\n\n            } catch (error) {\n                if (error.code === Logger.errors.SERVER_ERROR) { throw error; }\n            }\n        }\n\n        try {\n            return hexlify(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"call\",\n                params: { transaction, blockTag }, result, error\n            });\n        }\n\n    }\n\n    async call(transaction: Deferrable<TransactionRequest>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string> {\n        await this.getNetwork();\n        const resolved = await resolveProperties({\n            transaction: this._getTransactionRequest(transaction),\n            blockTag: this._getBlockTag(blockTag),\n            ccipReadEnabled: Promise.resolve(transaction.ccipReadEnabled)\n        });\n        return this._call(resolved.transaction, resolved.blockTag, resolved.ccipReadEnabled ? 0: -1);\n    }\n\n    async estimateGas(transaction: Deferrable<TransactionRequest>): Promise<BigNumber> {\n        await this.getNetwork();\n        const params = await resolveProperties({\n            transaction: this._getTransactionRequest(transaction)\n        });\n\n        const result = await this.perform(\"estimateGas\", params);\n        try {\n            return BigNumber.from(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"estimateGas\",\n                params, result, error\n            });\n        }\n    }\n\n    async _getAddress(addressOrName: string | Promise<string>): Promise<string> {\n        addressOrName = await addressOrName;\n        if (typeof(addressOrName) !== \"string\") {\n            logger.throwArgumentError(\"invalid address or ENS name\", \"name\", addressOrName);\n        }\n\n        const address = await this.resolveName(addressOrName);\n        if (address == null) {\n            logger.throwError(\"ENS name not configured\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: `resolveName(${ JSON.stringify(addressOrName) })`\n            });\n        }\n        return address;\n    }\n\n    async _getBlock(blockHashOrBlockTag: BlockTag | string | Promise<BlockTag | string>, includeTransactions?: boolean): Promise<Block | BlockWithTransactions> {\n        await this.getNetwork();\n\n        blockHashOrBlockTag = await blockHashOrBlockTag;\n\n        // If blockTag is a number (not \"latest\", etc), this is the block number\n        let blockNumber = -128;\n\n        const params: { [key: string]: any } = {\n            includeTransactions: !!includeTransactions\n        };\n\n        if (isHexString(blockHashOrBlockTag, 32)) {\n            params.blockHash = blockHashOrBlockTag;\n        } else {\n            try {\n                params.blockTag = await this._getBlockTag(blockHashOrBlockTag);\n                if (isHexString(params.blockTag)) {\n                    blockNumber = parseInt(params.blockTag.substring(2), 16);\n                }\n            } catch (error) {\n                logger.throwArgumentError(\"invalid block hash or block tag\", \"blockHashOrBlockTag\", blockHashOrBlockTag);\n            }\n        }\n\n        return poll(async () => {\n            const block = await this.perform(\"getBlock\", params);\n\n            // Block was not found\n            if (block == null) {\n\n                // For blockhashes, if we didn't say it existed, that blockhash may\n                // not exist. If we did see it though, perhaps from a log, we know\n                // it exists, and this node is just not caught up yet.\n                if (params.blockHash != null) {\n                    if (this._emitted[\"b:\" + params.blockHash] == null) { return null; }\n                }\n\n                // For block tags, if we are asking for a future block, we return null\n                if (params.blockTag != null) {\n                    if (blockNumber > this._emitted.block) { return null; }\n                }\n\n                // Retry on the next block\n                return undefined;\n            }\n\n            // Add transactions\n            if (includeTransactions) {\n                let blockNumber: number = null;\n                for (let i = 0; i < block.transactions.length; i++) {\n                    const tx = block.transactions[i];\n                    if (tx.blockNumber == null) {\n                        tx.confirmations = 0;\n\n                    } else if (tx.confirmations == null) {\n                        if (blockNumber == null) {\n                            blockNumber = await this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n                        }\n\n                        // Add the confirmations using the fast block number (pessimistic)\n                        let confirmations = (blockNumber - tx.blockNumber) + 1;\n                        if (confirmations <= 0) { confirmations = 1; }\n                        tx.confirmations = confirmations;\n                    }\n                }\n\n                const blockWithTxs: any = this.formatter.blockWithTransactions(block);\n                blockWithTxs.transactions = blockWithTxs.transactions.map((tx: TransactionResponse) => this._wrapTransaction(tx));\n                return blockWithTxs;\n            }\n\n            return this.formatter.block(block);\n\n        }, { oncePoll: this });\n    }\n\n    getBlock(blockHashOrBlockTag: BlockTag | string | Promise<BlockTag | string>): Promise<Block> {\n        return <Promise<Block>>(this._getBlock(blockHashOrBlockTag, false));\n    }\n\n    getBlockWithTransactions(blockHashOrBlockTag: BlockTag | string | Promise<BlockTag | string>): Promise<BlockWithTransactions> {\n        return <Promise<BlockWithTransactions>>(this._getBlock(blockHashOrBlockTag, true));\n    }\n\n    async getTransaction(transactionHash: string | Promise<string>): Promise<TransactionResponse> {\n        await this.getNetwork();\n        transactionHash = await transactionHash;\n\n        const params = { transactionHash: this.formatter.hash(transactionHash, true) };\n\n        return poll(async () => {\n            const result = await this.perform(\"getTransaction\", params);\n\n            if (result == null) {\n                if (this._emitted[\"t:\" + transactionHash] == null) {\n                    return null;\n                }\n                return undefined;\n            }\n\n            const tx = this.formatter.transactionResponse(result);\n\n            if (tx.blockNumber == null) {\n                tx.confirmations = 0;\n\n            } else if (tx.confirmations == null) {\n                const blockNumber = await this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n\n                // Add the confirmations using the fast block number (pessimistic)\n                let confirmations = (blockNumber - tx.blockNumber) + 1;\n                if (confirmations <= 0) { confirmations = 1; }\n                tx.confirmations = confirmations;\n            }\n\n            return this._wrapTransaction(tx);\n        }, { oncePoll: this });\n    }\n\n    async getTransactionReceipt(transactionHash: string | Promise<string>): Promise<TransactionReceipt> {\n        await this.getNetwork();\n\n        transactionHash = await transactionHash;\n\n        const params = { transactionHash: this.formatter.hash(transactionHash, true) };\n\n        return poll(async () => {\n            const result = await this.perform(\"getTransactionReceipt\", params);\n\n            if (result == null) {\n                if (this._emitted[\"t:\" + transactionHash] == null) {\n                    return null;\n                }\n                return undefined;\n            }\n\n            // \"geth-etc\" returns receipts before they are ready\n            if (result.blockHash == null) { return undefined; }\n\n            const receipt = this.formatter.receipt(result);\n\n            if (receipt.blockNumber == null) {\n                receipt.confirmations = 0;\n\n            } else if (receipt.confirmations == null) {\n                const blockNumber = await this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n\n                // Add the confirmations using the fast block number (pessimistic)\n                let confirmations = (blockNumber - receipt.blockNumber) + 1;\n                if (confirmations <= 0) { confirmations = 1; }\n                receipt.confirmations = confirmations;\n            }\n\n            return receipt;\n        }, { oncePoll: this });\n    }\n\n    async getLogs(filter: Filter | FilterByBlockHash | Promise<Filter | FilterByBlockHash>): Promise<Array<Log>> {\n        await this.getNetwork();\n        const params = await resolveProperties({ filter: this._getFilter(filter) });\n        const logs: Array<Log> = await this.perform(\"getLogs\", params);\n        logs.forEach((log) => {\n            if (log.removed == null) { log.removed = false; }\n        });\n        return Formatter.arrayOf(this.formatter.filterLog.bind(this.formatter))(logs);\n    }\n\n    async getEtherPrice(): Promise<number> {\n        await this.getNetwork();\n        return this.perform(\"getEtherPrice\", { });\n    }\n\n    async _getBlockTag(blockTag: BlockTag | Promise<BlockTag>): Promise<BlockTag> {\n        blockTag = await blockTag;\n\n        if (typeof(blockTag) === \"number\" && blockTag < 0) {\n            if (blockTag % 1) {\n                logger.throwArgumentError(\"invalid BlockTag\", \"blockTag\", blockTag);\n            }\n\n            let blockNumber = await this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n            blockNumber += blockTag;\n            if (blockNumber < 0) { blockNumber = 0; }\n            return this.formatter.blockTag(blockNumber)\n        }\n\n        return this.formatter.blockTag(blockTag);\n    }\n\n\n    async getResolver(name: string): Promise<null | Resolver> {\n        let currentName = name;\n        while (true) {\n            if (currentName === \"\" || currentName === \".\") { return null; }\n\n            // Optimization since the eth node cannot change and does\n            // not have a wildcard resolver\n            if (name !== \"eth\" && currentName === \"eth\") { return null; }\n\n            // Check the current node for a resolver\n            const addr = await this._getResolver(currentName, \"getResolver\");\n\n            // Found a resolver!\n            if (addr != null) {\n                const resolver = new Resolver(this, addr, name);\n\n                // Legacy resolver found, using EIP-2544 so it isn't safe to use\n                if (currentName !== name && !(await resolver.supportsWildcard())) { return null; }\n\n                return resolver;\n            }\n\n            // Get the parent node\n            currentName = currentName.split(\".\").slice(1).join(\".\");\n        }\n\n    }\n\n    async _getResolver(name: string, operation?: string): Promise<string> {\n        if (operation == null) { operation = \"ENS\"; }\n\n        const network = await this.getNetwork();\n\n        // No ENS...\n        if (!network.ensAddress) {\n            logger.throwError(\n                \"network does not support ENS\",\n                Logger.errors.UNSUPPORTED_OPERATION,\n                { operation, network: network.name }\n            );\n        }\n\n        try {\n            // keccak256(\"resolver(bytes32)\")\n            const addrData = await this.call({\n                to: network.ensAddress,\n                data: (\"0x0178b8bf\" + namehash(name).substring(2))\n            });\n            return this.formatter.callAddress(addrData);\n        } catch (error) {\n            // ENS registry cannot throw errors on resolver(bytes32)\n        }\n\n        return null;\n    }\n\n    async resolveName(name: string | Promise<string>): Promise<null | string> {\n        name = await name;\n\n        // If it is already an address, nothing to resolve\n        try {\n            return Promise.resolve(this.formatter.address(name));\n        } catch (error) {\n            // If is is a hexstring, the address is bad (See #694)\n            if (isHexString(name)) { throw error; }\n        }\n\n        if (typeof(name) !== \"string\") {\n            logger.throwArgumentError(\"invalid ENS name\", \"name\", name);\n        }\n\n        // Get the addr from the resolver\n        const resolver = await this.getResolver(name);\n        if (!resolver) { return null; }\n\n        return await resolver.getAddress();\n    }\n\n    async lookupAddress(address: string | Promise<string>): Promise<null | string> {\n        address = await address;\n        address = this.formatter.address(address);\n\n        const node = address.substring(2).toLowerCase() + \".addr.reverse\";\n\n        const resolverAddr = await this._getResolver(node, \"lookupAddress\");\n        if (resolverAddr == null) { return null; }\n\n        // keccak(\"name(bytes32)\")\n        const name = _parseString(await this.call({\n            to: resolverAddr,\n            data: (\"0x691f3431\" + namehash(node).substring(2))\n        }), 0);\n\n        const addr = await this.resolveName(name);\n        if (addr != address) { return null; }\n\n        return name;\n    }\n\n    async getAvatar(nameOrAddress: string): Promise<null | string> {\n        let resolver: Resolver = null;\n        if (isHexString(nameOrAddress)) {\n            // Address; reverse lookup\n            const address = this.formatter.address(nameOrAddress);\n\n            const node = address.substring(2).toLowerCase() + \".addr.reverse\";\n\n            const resolverAddress = await this._getResolver(node, \"getAvatar\");\n            if (!resolverAddress) { return null; }\n\n            // Try resolving the avatar against the addr.reverse resolver\n            resolver = new Resolver(this, resolverAddress, node);\n            try {\n                const avatar = await resolver.getAvatar();\n                if (avatar) { return avatar.url; }\n            } catch (error) {\n                if (error.code !== Logger.errors.CALL_EXCEPTION) { throw error; }\n            }\n\n            // Try getting the name and performing forward lookup; allowing wildcards\n            try {\n                // keccak(\"name(bytes32)\")\n                const name = _parseString(await this.call({\n                    to: resolverAddress,\n                    data: (\"0x691f3431\" + namehash(node).substring(2))\n                }), 0);\n                resolver = await this.getResolver(name);\n            } catch (error) {\n                if (error.code !== Logger.errors.CALL_EXCEPTION) { throw error; }\n                return null;\n            }\n\n        } else {\n            // ENS name; forward lookup with wildcard\n            resolver = await this.getResolver(nameOrAddress);\n            if (!resolver) { return null; }\n        }\n\n        const avatar = await resolver.getAvatar();\n        if (avatar == null) { return null; }\n\n        return avatar.url;\n    }\n\n    perform(method: string, params: any): Promise<any> {\n        return logger.throwError(method + \" not implemented\", Logger.errors.NOT_IMPLEMENTED, { operation: method });\n    }\n\n    _startEvent(event: Event): void {\n        this.polling = (this._events.filter((e) => e.pollable()).length > 0);\n    }\n\n    _stopEvent(event: Event): void {\n        this.polling = (this._events.filter((e) => e.pollable()).length > 0);\n    }\n\n    _addEventListener(eventName: EventType, listener: Listener, once: boolean): this {\n        const event = new Event(getEventTag(eventName), listener, once)\n        this._events.push(event);\n        this._startEvent(event);\n\n        return this;\n    }\n\n    on(eventName: EventType, listener: Listener): this {\n        return this._addEventListener(eventName, listener, false);\n    }\n\n    once(eventName: EventType, listener: Listener): this {\n        return this._addEventListener(eventName, listener, true);\n    }\n\n\n    emit(eventName: EventType, ...args: Array<any>): boolean {\n        let result = false;\n\n        let stopped: Array<Event> = [ ];\n\n        let eventTag = getEventTag(eventName);\n        this._events = this._events.filter((event) => {\n            if (event.tag !== eventTag) { return true; }\n\n            setTimeout(() => {\n                event.listener.apply(this, args);\n            }, 0);\n\n            result = true;\n\n            if (event.once) {\n                stopped.push(event);\n                return false;\n            }\n\n            return true;\n        });\n\n        stopped.forEach((event) => { this._stopEvent(event); });\n\n        return result;\n    }\n\n    listenerCount(eventName?: EventType): number {\n        if (!eventName) { return this._events.length; }\n\n        let eventTag = getEventTag(eventName);\n        return this._events.filter((event) => {\n            return (event.tag === eventTag);\n        }).length;\n    }\n\n    listeners(eventName?: EventType): Array<Listener> {\n        if (eventName == null) {\n            return this._events.map((event) => event.listener);\n        }\n\n        let eventTag = getEventTag(eventName);\n        return this._events\n            .filter((event) => (event.tag === eventTag))\n            .map((event) => event.listener);\n    }\n\n    off(eventName: EventType, listener?: Listener): this {\n        if (listener == null) {\n            return this.removeAllListeners(eventName);\n        }\n\n        const stopped: Array<Event> = [ ];\n\n        let found = false;\n\n        let eventTag = getEventTag(eventName);\n        this._events = this._events.filter((event) => {\n            if (event.tag !== eventTag || event.listener != listener) { return true; }\n            if (found) { return true; }\n            found = true;\n            stopped.push(event);\n            return false;\n        });\n\n        stopped.forEach((event) => { this._stopEvent(event); });\n\n        return this;\n    }\n\n    removeAllListeners(eventName?: EventType): this {\n        let stopped: Array<Event> = [ ];\n        if (eventName == null) {\n            stopped = this._events;\n\n            this._events = [ ];\n        } else {\n            const eventTag = getEventTag(eventName);\n            this._events = this._events.filter((event) => {\n                if (event.tag !== eventTag) { return true; }\n                stopped.push(event);\n                return false;\n            });\n        }\n\n        stopped.forEach((event) => { this._stopEvent(event); });\n\n        return this;\n    }\n}\n","\"use strict\";\n\n// See: https://github.com/ethereum/wiki/wiki/JSON-RPC\n\nimport { Provider, TransactionRequest, TransactionResponse } from \"@ethersproject/abstract-provider\";\nimport { Signer, TypedDataDomain, TypedDataField, TypedDataSigner } from \"@ethersproject/abstract-signer\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { Bytes, hexlify, hexValue, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { _TypedDataEncoder } from \"@ethersproject/hash\";\nimport { Network, Networkish } from \"@ethersproject/networks\";\nimport { checkProperties, deepCopy, Deferrable, defineReadOnly, getStatic, resolveProperties, shallowCopy } from \"@ethersproject/properties\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\nimport { AccessList, accessListify } from \"@ethersproject/transactions\";\nimport { ConnectionInfo, fetchJson, poll } from \"@ethersproject/web\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { BaseProvider, Event } from \"./base-provider\";\n\n\nconst errorGas = [ \"call\", \"estimateGas\" ];\n\nfunction spelunk(value: any, requireData: boolean): null | { message: string, data: null | string } {\n    if (value == null) { return null; }\n\n    // These *are* the droids we're looking for.\n    if (typeof(value.message) === \"string\" && value.message.match(\"reverted\")) {\n        const data = isHexString(value.data) ? value.data: null;\n        if (!requireData || data) {\n            return { message: value.message, data };\n        }\n    }\n\n    // Spelunk further...\n    if (typeof(value) === \"object\") {\n        for (const key in value) {\n            const result = spelunk(value[key], requireData);\n            if (result) { return result; }\n        }\n        return null;\n    }\n\n    // Might be a JSON string we can further descend...\n    if (typeof(value) === \"string\") {\n        try {\n            return spelunk(JSON.parse(value), requireData);\n        } catch (error) { }\n    }\n\n    return null;\n}\n\nfunction checkError(method: string, error: any, params: any): any {\n\n    const transaction = params.transaction || params.signedTransaction;\n\n    // Undo the \"convenience\" some nodes are attempting to prevent backwards\n    // incompatibility; maybe for v6 consider forwarding reverts as errors\n    if (method === \"call\") {\n        const result = spelunk(error, true);\n        if (result) { return result.data; }\n\n        // Nothing descriptive..\n        logger.throwError(\"missing revert data in call exception; Transaction reverted without a reason string\", Logger.errors.CALL_EXCEPTION, {\n            data: \"0x\", transaction, error\n        });\n    }\n\n    if (method === \"estimateGas\") {\n        // Try to find something, with a preference on SERVER_ERROR body\n        let result = spelunk(error.body, false);\n        if (result == null) { result = spelunk(error, false); }\n\n        // Found \"reverted\", this is a CALL_EXCEPTION\n        if (result) {\n            logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n                reason: result.message, method, transaction, error\n            });\n        }\n    }\n\n    // @TODO: Should we spelunk for message too?\n\n    let message = error.message;\n    if (error.code === Logger.errors.SERVER_ERROR && error.error && typeof(error.error.message) === \"string\") {\n        message = error.error.message;\n    } else if (typeof(error.body) === \"string\") {\n        message = error.body;\n    } else if (typeof(error.responseText) === \"string\") {\n        message = error.responseText;\n    }\n    message = (message || \"\").toLowerCase();\n\n    // \"insufficient funds for gas * price + value + cost(data)\"\n    if (message.match(/insufficient funds|base fee exceeds gas limit|InsufficientFunds/i)) {\n        logger.throwError(\"insufficient funds for intrinsic transaction cost\", Logger.errors.INSUFFICIENT_FUNDS, {\n            error, method, transaction\n        });\n    }\n\n    // \"nonce too low\"\n    if (message.match(/nonce (is )?too low/i)) {\n        logger.throwError(\"nonce has already been used\", Logger.errors.NONCE_EXPIRED, {\n            error, method, transaction\n        });\n    }\n\n    // \"replacement transaction underpriced\"\n    if (message.match(/replacement transaction underpriced|transaction gas price.*too low/i)) {\n        logger.throwError(\"replacement fee too low\", Logger.errors.REPLACEMENT_UNDERPRICED, {\n            error, method, transaction\n        });\n    }\n\n    // \"replacement transaction underpriced\"\n    if (message.match(/only replay-protected/i)) {\n        logger.throwError(\"legacy pre-eip-155 transactions not supported\", Logger.errors.UNSUPPORTED_OPERATION, {\n            error, method, transaction\n        });\n    }\n\n    if (errorGas.indexOf(method) >= 0 && message.match(/gas required exceeds allowance|always failing transaction|execution reverted|revert/)) {\n        logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n            error, method, transaction\n        });\n    }\n\n    throw error;\n}\n\nfunction timer(timeout: number): Promise<any> {\n    return new Promise(function(resolve) {\n        setTimeout(resolve, timeout);\n    });\n}\n\nfunction getResult(payload: { error?: { code?: number, data?: any, message?: string }, result?: any }): any {\n    if (payload.error) {\n        // @TODO: not any\n        const error: any = new Error(payload.error.message);\n        error.code = payload.error.code;\n        error.data = payload.error.data;\n        throw error;\n    }\n\n    return payload.result;\n}\n\nfunction getLowerCase(value: string): string {\n    if (value) { return value.toLowerCase(); }\n    return value;\n}\n\nconst _constructorGuard = {};\n\nexport class JsonRpcSigner extends Signer implements TypedDataSigner {\n    readonly provider: JsonRpcProvider;\n    _index: number;\n    _address: string;\n\n    constructor(constructorGuard: any, provider: JsonRpcProvider, addressOrIndex?: string | number) {\n        super();\n\n        if (constructorGuard !== _constructorGuard) {\n            throw new Error(\"do not call the JsonRpcSigner constructor directly; use provider.getSigner\");\n        }\n\n        defineReadOnly(this, \"provider\", provider);\n\n        if (addressOrIndex == null) { addressOrIndex = 0; }\n\n        if (typeof(addressOrIndex) === \"string\") {\n            defineReadOnly(this, \"_address\", this.provider.formatter.address(addressOrIndex));\n            defineReadOnly(this, \"_index\", null);\n\n        } else if (typeof(addressOrIndex) === \"number\") {\n            defineReadOnly(this, \"_index\", addressOrIndex);\n            defineReadOnly(this, \"_address\", null);\n\n        } else {\n            logger.throwArgumentError(\"invalid address or index\", \"addressOrIndex\", addressOrIndex);\n        }\n    }\n\n    connect(provider: Provider): JsonRpcSigner {\n        return logger.throwError(\"cannot alter JSON-RPC Signer connection\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"connect\"\n        });\n    }\n\n    connectUnchecked(): JsonRpcSigner {\n        return new UncheckedJsonRpcSigner(_constructorGuard, this.provider, this._address || this._index);\n    }\n\n    getAddress(): Promise<string> {\n        if (this._address) {\n            return Promise.resolve(this._address);\n        }\n\n        return this.provider.send(\"eth_accounts\", []).then((accounts) => {\n            if (accounts.length <= this._index) {\n                logger.throwError(\"unknown account #\" + this._index, Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"getAddress\"\n                });\n            }\n            return this.provider.formatter.address(accounts[this._index])\n        });\n    }\n\n    sendUncheckedTransaction(transaction: Deferrable<TransactionRequest>): Promise<string> {\n        transaction = shallowCopy(transaction);\n\n        const fromAddress = this.getAddress().then((address) => {\n            if (address) { address = address.toLowerCase(); }\n            return address;\n        });\n\n        // The JSON-RPC for eth_sendTransaction uses 90000 gas; if the user\n        // wishes to use this, it is easy to specify explicitly, otherwise\n        // we look it up for them.\n        if (transaction.gasLimit == null) {\n            const estimate = shallowCopy(transaction);\n            estimate.from = fromAddress;\n            transaction.gasLimit = this.provider.estimateGas(estimate);\n        }\n\n        if (transaction.to != null) {\n            transaction.to = Promise.resolve(transaction.to).then(async (to) => {\n                if (to == null) { return null; }\n                const address = await this.provider.resolveName(to);\n                if (address == null) {\n                    logger.throwArgumentError(\"provided ENS name resolves to null\", \"tx.to\", to);\n                }\n                return address;\n            });\n        }\n\n        return resolveProperties({\n            tx: resolveProperties(transaction),\n            sender: fromAddress\n        }).then(({ tx, sender }) => {\n\n            if (tx.from != null) {\n                if (tx.from.toLowerCase() !== sender) {\n                    logger.throwArgumentError(\"from address mismatch\", \"transaction\", transaction);\n                }\n            } else {\n                tx.from = sender;\n            }\n\n            const hexTx = (<any>this.provider.constructor).hexlifyTransaction(tx, { from: true });\n\n            return this.provider.send(\"eth_sendTransaction\", [ hexTx ]).then((hash) => {\n                return hash;\n            }, (error) => {\n                if (typeof(error.message) === \"string\" && error.message.match(/user denied/i)) {\n                    logger.throwError(\"user rejected transaction\", Logger.errors.ACTION_REJECTED, {\n                        action: \"sendTransaction\",\n                        transaction: tx\n                    });\n                }\n\n                return checkError(\"sendTransaction\", error, hexTx);\n            });\n        });\n    }\n\n    signTransaction(transaction: Deferrable<TransactionRequest>): Promise<string> {\n        return logger.throwError(\"signing transactions is unsupported\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"signTransaction\"\n        });\n    }\n\n    async sendTransaction(transaction: Deferrable<TransactionRequest>): Promise<TransactionResponse> {\n        // This cannot be mined any earlier than any recent block\n        const blockNumber = await this.provider._getInternalBlockNumber(100 + 2 * this.provider.pollingInterval);\n\n        // Send the transaction\n        const hash = await this.sendUncheckedTransaction(transaction);\n\n        try {\n            // Unfortunately, JSON-RPC only provides and opaque transaction hash\n            // for a response, and we need the actual transaction, so we poll\n            // for it; it should show up very quickly\n            return await poll(async () => {\n                const tx = await this.provider.getTransaction(hash);\n                if (tx === null) { return undefined; }\n                return this.provider._wrapTransaction(tx, hash, blockNumber);\n            }, { oncePoll: this.provider });\n        } catch (error) {\n            (<any>error).transactionHash = hash;\n            throw error;\n        }\n    }\n\n    async signMessage(message: Bytes | string): Promise<string> {\n        const data = ((typeof(message) === \"string\") ? toUtf8Bytes(message): message);\n        const address = await this.getAddress();\n        try {\n            return await this.provider.send(\"personal_sign\", [ hexlify(data), address.toLowerCase() ]);\n        } catch (error) {\n            if (typeof(error.message) === \"string\" && error.message.match(/user denied/i)) {\n                logger.throwError(\"user rejected signing\", Logger.errors.ACTION_REJECTED, {\n                    action: \"signMessage\",\n                    from: address,\n                    messageData: message\n                });\n            }\n            throw error;\n        }\n    }\n\n    async _legacySignMessage(message: Bytes | string): Promise<string> {\n        const data = ((typeof(message) === \"string\") ? toUtf8Bytes(message): message);\n        const address = await this.getAddress();\n\n        try {\n            // https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_sign\n            return await this.provider.send(\"eth_sign\", [ address.toLowerCase(), hexlify(data) ]);\n        } catch (error) {\n            if (typeof(error.message) === \"string\" && error.message.match(/user denied/i)) {\n                logger.throwError(\"user rejected signing\", Logger.errors.ACTION_REJECTED, {\n                    action: \"_legacySignMessage\",\n                    from: address,\n                    messageData: message\n                });\n            }\n            throw error;\n        }\n    }\n\n    async _signTypedData(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): Promise<string> {\n        // Populate any ENS names (in-place)\n        const populated = await _TypedDataEncoder.resolveNames(domain, types, value, (name: string) => {\n            return this.provider.resolveName(name);\n        });\n\n        const address = await this.getAddress();\n\n        try {\n            return await this.provider.send(\"eth_signTypedData_v4\", [\n                address.toLowerCase(),\n                JSON.stringify(_TypedDataEncoder.getPayload(populated.domain, types, populated.value))\n            ]);\n        } catch (error) {\n            if (typeof(error.message) === \"string\" && error.message.match(/user denied/i)) {\n                logger.throwError(\"user rejected signing\", Logger.errors.ACTION_REJECTED, {\n                    action: \"_signTypedData\",\n                    from: address,\n                    messageData: { domain: populated.domain, types, value: populated.value }\n                });\n            }\n            throw error;\n        }\n    }\n\n    async unlock(password: string): Promise<boolean> {\n        const provider = this.provider;\n\n        const address = await this.getAddress();\n\n        return provider.send(\"personal_unlockAccount\", [ address.toLowerCase(), password, null ]);\n    }\n}\n\nclass UncheckedJsonRpcSigner extends JsonRpcSigner {\n    sendTransaction(transaction: Deferrable<TransactionRequest>): Promise<TransactionResponse> {\n        return this.sendUncheckedTransaction(transaction).then((hash) => {\n            return <TransactionResponse>{\n                hash: hash,\n                nonce: null,\n                gasLimit: null,\n                gasPrice: null,\n                data: null,\n                value: null,\n                chainId: null,\n                confirmations: 0,\n                from: null,\n                wait: (confirmations?: number) => { return this.provider.waitForTransaction(hash, confirmations); }\n            };\n        });\n    }\n}\n\nconst allowedTransactionKeys: { [ key: string ]: boolean } = {\n    chainId: true, data: true, gasLimit: true, gasPrice:true, nonce: true, to: true, value: true,\n    type: true, accessList: true,\n    maxFeePerGas: true, maxPriorityFeePerGas: true\n}\n\nexport class JsonRpcProvider extends BaseProvider {\n    readonly connection: ConnectionInfo;\n\n    _pendingFilter: Promise<number>;\n    _nextId: number;\n\n    // During any given event loop, the results for a given call will\n    // all be the same, so we can dedup the calls to save requests and\n    // bandwidth. @TODO: Try out generalizing this against send?\n    _eventLoopCache: Record<string, Promise<any>>;\n    get _cache(): Record<string, Promise<any>> {\n        if (this._eventLoopCache == null) {\n            this._eventLoopCache = { };\n        }\n        return this._eventLoopCache;\n    }\n\n    constructor(url?: ConnectionInfo | string, network?: Networkish) {\n        let networkOrReady: Networkish | Promise<Network> = network;\n\n        // The network is unknown, query the JSON-RPC for it\n        if (networkOrReady == null) {\n            networkOrReady = new Promise((resolve, reject) => {\n                setTimeout(() => {\n                    this.detectNetwork().then((network) => {\n                        resolve(network);\n                    }, (error) => {\n                        reject(error);\n                    });\n                }, 0);\n            });\n        }\n\n        super(networkOrReady);\n\n        // Default URL\n        if (!url) { url = getStatic<() => string>(this.constructor, \"defaultUrl\")(); }\n\n        if (typeof(url) === \"string\") {\n            defineReadOnly(this, \"connection\",Object.freeze({\n                url: url\n            }));\n        } else {\n            defineReadOnly(this, \"connection\", Object.freeze(shallowCopy(url)));\n        }\n\n        this._nextId = 42;\n    }\n\n    static defaultUrl(): string {\n        return \"http:/\\/localhost:8545\";\n    }\n\n    detectNetwork(): Promise<Network> {\n        if (!this._cache[\"detectNetwork\"]) {\n            this._cache[\"detectNetwork\"] = this._uncachedDetectNetwork();\n\n            // Clear this cache at the beginning of the next event loop\n            setTimeout(() => {\n                this._cache[\"detectNetwork\"] = null;\n            }, 0);\n        }\n        return this._cache[\"detectNetwork\"];\n    }\n\n    async _uncachedDetectNetwork(): Promise<Network> {\n        await timer(0);\n\n        let chainId = null;\n        try {\n            chainId = await this.send(\"eth_chainId\", [ ]);\n        } catch (error) {\n            try {\n                chainId = await this.send(\"net_version\", [ ]);\n            } catch (error) { }\n        }\n\n        if (chainId != null) {\n            const getNetwork = getStatic<(network: Networkish) => Network>(this.constructor, \"getNetwork\");\n            try {\n                return getNetwork(BigNumber.from(chainId).toNumber());\n            } catch (error) {\n                return logger.throwError(\"could not detect network\", Logger.errors.NETWORK_ERROR, {\n                    chainId: chainId,\n                    event: \"invalidNetwork\",\n                    serverError: error\n                });\n            }\n        }\n\n        return logger.throwError(\"could not detect network\", Logger.errors.NETWORK_ERROR, {\n            event: \"noNetwork\"\n        });\n    }\n\n    getSigner(addressOrIndex?: string | number): JsonRpcSigner {\n        return new JsonRpcSigner(_constructorGuard, this, addressOrIndex);\n    }\n\n    getUncheckedSigner(addressOrIndex?: string | number): UncheckedJsonRpcSigner {\n        return this.getSigner(addressOrIndex).connectUnchecked();\n    }\n\n    listAccounts(): Promise<Array<string>> {\n        return this.send(\"eth_accounts\", []).then((accounts: Array<string>) => {\n            return accounts.map((a) => this.formatter.address(a));\n        });\n    }\n\n    send(method: string, params: Array<any>): Promise<any> {\n        const request = {\n            method: method,\n            params: params,\n            id: (this._nextId++),\n            jsonrpc: \"2.0\"\n        };\n\n        this.emit(\"debug\", {\n            action: \"request\",\n            request: deepCopy(request),\n            provider: this\n        });\n\n        // We can expand this in the future to any call, but for now these\n        // are the biggest wins and do not require any serializing parameters.\n        const cache = ([ \"eth_chainId\", \"eth_blockNumber\" ].indexOf(method) >= 0);\n        if (cache && this._cache[method]) {\n            return this._cache[method];\n        }\n\n        const result = fetchJson(this.connection, JSON.stringify(request), getResult).then((result) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                request: request,\n                response: result,\n                provider: this\n            });\n\n            return result;\n\n        }, (error) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                error: error,\n                request: request,\n                provider: this\n            });\n\n            throw error;\n        });\n\n        // Cache the fetch, but clear it on the next event loop\n        if (cache) {\n            this._cache[method] = result;\n            setTimeout(() => {\n                this._cache[method] = null;\n            }, 0);\n        }\n\n        return result;\n    }\n\n    prepareRequest(method: string, params: any): [ string, Array<any> ] {\n        switch (method) {\n            case \"getBlockNumber\":\n                return [ \"eth_blockNumber\", [] ];\n\n            case \"getGasPrice\":\n                return [ \"eth_gasPrice\", [] ];\n\n            case \"getBalance\":\n                return [ \"eth_getBalance\", [ getLowerCase(params.address), params.blockTag ] ];\n\n            case \"getTransactionCount\":\n                return [ \"eth_getTransactionCount\", [ getLowerCase(params.address), params.blockTag ] ];\n\n            case \"getCode\":\n                return [ \"eth_getCode\", [ getLowerCase(params.address), params.blockTag ] ];\n\n            case \"getStorageAt\":\n                return [ \"eth_getStorageAt\", [ getLowerCase(params.address), hexZeroPad(params.position, 32), params.blockTag ] ];\n\n            case \"sendTransaction\":\n                return [ \"eth_sendRawTransaction\", [ params.signedTransaction ] ]\n\n            case \"getBlock\":\n                if (params.blockTag) {\n                    return [ \"eth_getBlockByNumber\", [ params.blockTag, !!params.includeTransactions ] ];\n                } else if (params.blockHash) {\n                    return [ \"eth_getBlockByHash\", [ params.blockHash, !!params.includeTransactions ] ];\n                }\n                return null;\n\n            case \"getTransaction\":\n                return [ \"eth_getTransactionByHash\", [ params.transactionHash ] ];\n\n            case \"getTransactionReceipt\":\n                return [ \"eth_getTransactionReceipt\", [ params.transactionHash ] ];\n\n            case \"call\": {\n                const hexlifyTransaction = getStatic<(t: TransactionRequest, a?: { [key: string]: boolean }) => { [key: string]: string }>(this.constructor, \"hexlifyTransaction\");\n                return [ \"eth_call\", [ hexlifyTransaction(params.transaction, { from: true }), params.blockTag ] ];\n            }\n\n            case \"estimateGas\": {\n                const hexlifyTransaction = getStatic<(t: TransactionRequest, a?: { [key: string]: boolean }) => { [key: string]: string }>(this.constructor, \"hexlifyTransaction\");\n                return [ \"eth_estimateGas\", [ hexlifyTransaction(params.transaction, { from: true }) ] ];\n            }\n\n            case \"getLogs\":\n                if (params.filter && params.filter.address != null) {\n                    params.filter.address = getLowerCase(params.filter.address);\n                }\n                return [ \"eth_getLogs\", [ params.filter ] ];\n\n            default:\n                break;\n        }\n\n        return null;\n    }\n\n    async perform(method: string, params: any): Promise<any> {\n        // Legacy networks do not like the type field being passed along (which\n        // is fair), so we delete type if it is 0 and a non-EIP-1559 network\n        if (method === \"call\" || method === \"estimateGas\") {\n            const tx = params.transaction;\n            if (tx && tx.type != null && BigNumber.from(tx.type).isZero()) {\n                // If there are no EIP-1559 properties, it might be non-EIP-1559\n                if (tx.maxFeePerGas == null && tx.maxPriorityFeePerGas == null) {\n                    const feeData = await this.getFeeData();\n                    if (feeData.maxFeePerGas == null && feeData.maxPriorityFeePerGas == null) {\n                        // Network doesn't know about EIP-1559 (and hence type)\n                        params = shallowCopy(params);\n                        params.transaction = shallowCopy(tx);\n                        delete params.transaction.type;\n                    }\n                }\n            }\n        }\n\n        const args = this.prepareRequest(method,  params);\n\n        if (args == null) {\n            logger.throwError(method + \" not implemented\", Logger.errors.NOT_IMPLEMENTED, { operation: method });\n        }\n        try {\n            return await this.send(args[0], args[1])\n        } catch (error) {\n            return checkError(method, error, params);\n        }\n    }\n\n    _startEvent(event: Event): void {\n        if (event.tag === \"pending\") { this._startPending(); }\n        super._startEvent(event);\n    }\n\n    _startPending(): void {\n        if (this._pendingFilter != null) { return; }\n        const self = this;\n\n        const pendingFilter: Promise<number> = this.send(\"eth_newPendingTransactionFilter\", []);\n        this._pendingFilter = pendingFilter;\n\n        pendingFilter.then(function(filterId) {\n            function poll() {\n                self.send(\"eth_getFilterChanges\", [ filterId ]).then(function(hashes: Array<string>) {\n                    if (self._pendingFilter != pendingFilter) { return null; }\n\n                    let seq = Promise.resolve();\n                    hashes.forEach(function(hash) {\n                        // @TODO: This should be garbage collected at some point... How? When?\n                        self._emitted[\"t:\" + hash.toLowerCase()] = \"pending\";\n                        seq = seq.then(function() {\n                            return self.getTransaction(hash).then(function(tx) {\n                                self.emit(\"pending\", tx);\n                                return null;\n                            });\n                        });\n                    });\n\n                    return seq.then(function() {\n                        return timer(1000);\n                    });\n                }).then(function() {\n                    if (self._pendingFilter != pendingFilter) {\n                        self.send(\"eth_uninstallFilter\", [ filterId ]);\n                        return;\n                    }\n                    setTimeout(function() { poll(); }, 0);\n\n                    return null;\n                }).catch((error: Error) => { });\n            }\n            poll();\n\n            return filterId;\n        }).catch((error: Error) => { });\n    }\n\n    _stopEvent(event: Event): void {\n        if (event.tag === \"pending\" && this.listenerCount(\"pending\") === 0) {\n            this._pendingFilter = null;\n        }\n        super._stopEvent(event);\n    }\n\n    // Convert an ethers.js transaction into a JSON-RPC transaction\n    //  - gasLimit => gas\n    //  - All values hexlified\n    //  - All numeric values zero-striped\n    //  - All addresses are lowercased\n    // NOTE: This allows a TransactionRequest, but all values should be resolved\n    //       before this is called\n    // @TODO: This will likely be removed in future versions and prepareRequest\n    //        will be the preferred method for this.\n    static hexlifyTransaction(transaction: TransactionRequest, allowExtra?: { [key: string]: boolean }): { [key: string]: string | AccessList } {\n        // Check only allowed properties are given\n        const allowed = shallowCopy(allowedTransactionKeys);\n        if (allowExtra) {\n            for (const key in allowExtra) {\n                if (allowExtra[key]) { allowed[key] = true; }\n            }\n        }\n\n        checkProperties(transaction, allowed);\n\n        const result: { [key: string]: string | AccessList } = {};\n\n        // JSON-RPC now requires numeric values to be \"quantity\" values\n        [\"chainId\", \"gasLimit\", \"gasPrice\", \"type\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"nonce\", \"value\"].forEach(function(key) {\n            if ((<any>transaction)[key] == null) { return; }\n            const value = hexValue(BigNumber.from((<any>transaction)[key]));\n            if (key === \"gasLimit\") { key = \"gas\"; }\n            result[key] = value;\n        });\n\n        [\"from\", \"to\", \"data\"].forEach(function(key) {\n            if ((<any>transaction)[key] == null) { return; }\n            result[key] = hexlify((<any>transaction)[key]);\n        });\n\n        if ((<any>transaction).accessList) {\n            result[\"accessList\"] = accessListify((<any>transaction).accessList);\n        }\n\n        return result;\n    }\n}\n","\"use strict\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\n\nlet WS: any = null;\n\ntry {\n    WS = (WebSocket as any);\n    if (WS == null) { throw new Error(\"inject please\"); }\n} catch (error) {\n    const logger = new Logger(version);\n    WS = function() {\n        logger.throwError(\"WebSockets not supported in this environment\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"new WebSocket()\"\n        });\n    }\n}\n//export default WS;\n//module.exports = WS;\nexport { WS as WebSocket };\n","\"use strict\";\n\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { Network, Networkish } from \"@ethersproject/networks\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\n\nimport { Event } from \"./base-provider\";\nimport { JsonRpcProvider } from \"./json-rpc-provider\";\nimport { WebSocket } from \"./ws\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n/**\n *  Notes:\n *\n *  This provider differs a bit from the polling providers. One main\n *  difference is how it handles consistency. The polling providers\n *  will stall responses to ensure a consistent state, while this\n *  WebSocket provider assumes the connected backend will manage this.\n *\n *  For example, if a polling provider emits an event which indicates\n *  the event occurred in blockhash XXX, a call to fetch that block by\n *  its hash XXX, if not present will retry until it is present. This\n *  can occur when querying a pool of nodes that are mildly out of sync\n *  with each other.\n */\n\nlet NextId = 1;\n\nexport type InflightRequest = {\n     callback: (error: Error, result: any) => void;\n     payload: string;\n};\n\nexport type Subscription = {\n    tag: string;\n    processFunc: (payload: any) => void;\n};\n\nexport interface WebSocketLike {\n    onopen: ((...args: Array<any>) => any) | null;\n    onmessage: ((...args: Array<any>) => any) | null;\n    onerror: ((...args: Array<any>) => any) | null;\n\n    readyState: number;\n\n    send(payload: any): void;\n    close(code?: number, reason?: string): void;\n}\n\n// For more info about the Real-time Event API see:\n//   https://geth.ethereum.org/docs/rpc/pubsub\n\nexport class WebSocketProvider extends JsonRpcProvider {\n    readonly _websocket: any;\n    readonly _requests: { [ name: string ]: InflightRequest };\n    readonly _detectNetwork: Promise<Network>;\n\n    // Maps event tag to subscription ID (we dedupe identical events)\n    readonly _subIds: { [ tag: string ]: Promise<string> };\n\n    // Maps Subscription ID to Subscription\n    readonly _subs: { [ name: string ]: Subscription };\n\n    _wsReady: boolean;\n\n    constructor(url: string | WebSocketLike, network?: Networkish) {\n\n        // This will be added in the future; please open an issue to expedite\n        if (network === \"any\") {\n            logger.throwError(\"WebSocketProvider does not support 'any' network yet\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"network:any\"\n            });\n        }\n\n        if (typeof(url) === \"string\") {\n            super(url, network);\n        } else {\n            super(\"_websocket\", network);\n        }\n\n        this._pollingInterval = -1;\n\n        this._wsReady = false;\n\n        if (typeof(url) === \"string\") {\n            defineReadOnly(this, \"_websocket\", new WebSocket(this.connection.url));\n        } else {\n            defineReadOnly(this, \"_websocket\", url);\n        }\n\n        defineReadOnly(this, \"_requests\", { });\n        defineReadOnly(this, \"_subs\", { });\n        defineReadOnly(this, \"_subIds\", { });\n        defineReadOnly(this, \"_detectNetwork\", super.detectNetwork());\n\n        // Stall sending requests until the socket is open...\n        this.websocket.onopen = () => {\n            this._wsReady = true;\n            Object.keys(this._requests).forEach((id) => {\n                this.websocket.send(this._requests[id].payload);\n            });\n        };\n\n        this.websocket.onmessage = (messageEvent: { data: string }) => {\n            const data = messageEvent.data;\n            const result = JSON.parse(data);\n            if (result.id != null) {\n                const id = String(result.id);\n                const request = this._requests[id];\n                delete this._requests[id];\n\n                if (result.result !== undefined) {\n                    request.callback(null, result.result);\n\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        request: JSON.parse(request.payload),\n                        response: result.result,\n                        provider: this\n                    });\n\n                } else {\n                    let error: Error = null;\n                    if (result.error) {\n                        error = new Error(result.error.message || \"unknown error\");\n                        defineReadOnly(<any>error, \"code\", result.error.code || null);\n                        defineReadOnly(<any>error, \"response\", data);\n                    } else {\n                        error = new Error(\"unknown error\");\n                    }\n\n                    request.callback(error, undefined);\n\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        error: error,\n                        request: JSON.parse(request.payload),\n                        provider: this\n                    });\n\n                }\n\n            } else if (result.method === \"eth_subscription\") {\n                // Subscription...\n                const sub = this._subs[result.params.subscription];\n                if (sub) {\n                    //this.emit.apply(this,                  );\n                    sub.processFunc(result.params.result)\n                }\n\n            } else {\n                console.warn(\"this should not happen\");\n            }\n        };\n\n        // This Provider does not actually poll, but we want to trigger\n        // poll events for things that depend on them (like stalling for\n        // block and transaction lookups)\n        const fauxPoll = setInterval(() => {\n            this.emit(\"poll\");\n        }, 1000);\n        if (fauxPoll.unref) { fauxPoll.unref(); }\n    }\n\n    // Cannot narrow the type of _websocket, as that is not backwards compatible\n    // so we add a getter and let the WebSocket be a public API.\n    get websocket(): WebSocketLike { return this._websocket; }\n\n    detectNetwork(): Promise<Network> {\n        return this._detectNetwork;\n    }\n\n    get pollingInterval(): number {\n        return 0;\n    }\n\n    resetEventsBlock(blockNumber: number): void {\n        logger.throwError(\"cannot reset events block on WebSocketProvider\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"resetEventBlock\"\n        });\n    }\n\n    set pollingInterval(value: number) {\n        logger.throwError(\"cannot set polling interval on WebSocketProvider\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"setPollingInterval\"\n        });\n    }\n\n    async poll(): Promise<void> {\n        return null;\n    }\n\n    set polling(value: boolean) {\n        if (!value) { return; }\n\n        logger.throwError(\"cannot set polling on WebSocketProvider\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"setPolling\"\n        });\n    }\n\n    send(method: string, params?: Array<any>): Promise<any> {\n        const rid = NextId++;\n\n        return new Promise((resolve, reject) => {\n            function callback(error: Error, result: any) {\n                if (error) { return reject(error); }\n                return resolve(result);\n            }\n\n            const payload = JSON.stringify({\n                method: method,\n                params: params,\n                id: rid,\n                jsonrpc: \"2.0\"\n            });\n\n            this.emit(\"debug\", {\n                action: \"request\",\n                request: JSON.parse(payload),\n                provider: this\n            });\n\n            this._requests[String(rid)] = { callback, payload };\n\n            if (this._wsReady) { this.websocket.send(payload); }\n        });\n    }\n\n    static defaultUrl(): string {\n        return \"ws:/\\/localhost:8546\";\n    }\n\n    async _subscribe(tag: string, param: Array<any>, processFunc: (result: any) => void): Promise<void> {\n        let subIdPromise = this._subIds[tag];\n        if (subIdPromise == null) {\n            subIdPromise = Promise.all(param).then((param) => {\n                return this.send(\"eth_subscribe\", param);\n            });\n            this._subIds[tag] = subIdPromise;\n        }\n        const subId = await subIdPromise;\n        this._subs[subId] = { tag, processFunc };\n    }\n\n    _startEvent(event: Event): void {\n        switch (event.type) {\n            case \"block\":\n                this._subscribe(\"block\", [ \"newHeads\" ], (result: any) => {\n                    const blockNumber = BigNumber.from(result.number).toNumber();\n                    this._emitted.block = blockNumber;\n                    this.emit(\"block\", blockNumber);\n                });\n                break;\n\n            case \"pending\":\n                this._subscribe(\"pending\", [ \"newPendingTransactions\" ], (result: any) => {\n                    this.emit(\"pending\", result);\n                });\n                break;\n\n            case \"filter\":\n                this._subscribe(event.tag, [ \"logs\", this._getFilter(event.filter) ], (result: any) => {\n                    if (result.removed == null) { result.removed = false; }\n                    this.emit(event.filter, this.formatter.filterLog(result));\n                });\n                break;\n\n            case \"tx\": {\n                const emitReceipt = (event: Event) => {\n                    const hash = event.hash;\n                    this.getTransactionReceipt(hash).then((receipt) => {\n                        if (!receipt) { return; }\n                        this.emit(hash, receipt);\n                    });\n                };\n\n                // In case it is already mined\n                emitReceipt(event);\n\n                // To keep things simple, we start up a single newHeads subscription\n                // to keep an eye out for transactions we are watching for.\n                // Starting a subscription for an event (i.e. \"tx\") that is already\n                // running is (basically) a nop.\n                this._subscribe(\"tx\", [ \"newHeads\" ], (result: any) => {\n                    this._events.filter((e) => (e.type === \"tx\")).forEach(emitReceipt);\n                });\n                break;\n            }\n\n            // Nothing is needed\n            case \"debug\":\n            case \"poll\":\n            case \"willPoll\":\n            case \"didPoll\":\n            case \"error\":\n                break;\n\n            default:\n                console.log(\"unhandled:\", event);\n                break;\n        }\n    }\n\n    _stopEvent(event: Event): void {\n        let tag = event.tag;\n\n        if (event.type === \"tx\") {\n            // There are remaining transaction event listeners\n            if (this._events.filter((e) => (e.type === \"tx\")).length) {\n                return;\n            }\n            tag = \"tx\";\n        } else if (this.listenerCount(event.event)) {\n            // There are remaining event listeners\n            return;\n        }\n\n        const subId = this._subIds[tag];\n        if (!subId) { return; }\n\n       delete this._subIds[tag];\n       subId.then((subId) => {\n            if (!this._subs[subId]) { return; }\n            delete this._subs[subId];\n            this.send(\"eth_unsubscribe\", [ subId ]);\n        });\n    }\n\n    async destroy(): Promise<void> {\n        // Wait until we have connected before trying to disconnect\n        if (this.websocket.readyState === WebSocket.CONNECTING) {\n            await (new Promise((resolve) => {\n                this.websocket.onopen = function() {\n                    resolve(true);\n                };\n\n                this.websocket.onerror = function() {\n                    resolve(false);\n                };\n            }));\n        }\n\n        // Hangup\n        // See: https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes\n        this.websocket.close(1000);\n    }\n}\n","\n\"use strict\";\n\nimport { Network, Networkish } from \"@ethersproject/networks\";\nimport { defineReadOnly, getStatic } from \"@ethersproject/properties\";\nimport { ConnectionInfo } from \"@ethersproject/web\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { CommunityResourcable } from \"./formatter\";\nimport { JsonRpcProvider, JsonRpcSigner } from \"./json-rpc-provider\";\n\ntype getUrlFunc = (network: Network, apiKey: string) => string | ConnectionInfo;\n\n// A StaticJsonRpcProvider is useful when you *know* for certain that\n// the backend will never change, as it never calls eth_chainId to\n// verify its backend. However, if the backend does change, the effects\n// are undefined and may include:\n// - inconsistent results\n// - locking up the UI\n// - block skew warnings\n// - wrong results\n// If the network is not explicit (i.e. auto-detection is expected), the\n// node MUST be running and available to respond to requests BEFORE this\n// is instantiated.\nexport class StaticJsonRpcProvider extends JsonRpcProvider {\n    async detectNetwork(): Promise<Network> {\n        let network = this.network;\n        if (network == null) {\n            network = await super.detectNetwork();\n\n            if (!network) {\n                logger.throwError(\"no network detected\", Logger.errors.UNKNOWN_ERROR, { });\n            }\n\n            // If still not set, set it\n            if (this._network == null) {\n                // A static network does not support \"any\"\n                defineReadOnly(this, \"_network\", network);\n\n                this.emit(\"network\", network, null);\n            }\n        }\n        return network;\n    }\n}\n\nexport abstract class UrlJsonRpcProvider extends StaticJsonRpcProvider implements CommunityResourcable {\n    readonly apiKey: any;\n\n    constructor(network?: Networkish, apiKey?: any) {\n        logger.checkAbstract(new.target, UrlJsonRpcProvider);\n\n        // Normalize the Network and API Key\n        network = getStatic<(network: Networkish) => Network>(new.target, \"getNetwork\")(network);\n        apiKey = getStatic<(apiKey: string) => string>(new.target, \"getApiKey\")(apiKey);\n\n        const connection = getStatic<getUrlFunc>(new.target, \"getUrl\")(network, apiKey);\n\n        super(connection, network);\n\n        if (typeof(apiKey) === \"string\") {\n            defineReadOnly(this, \"apiKey\", apiKey);\n        } else if (apiKey != null) {\n            Object.keys(apiKey).forEach((key) => {\n                defineReadOnly<any, any>(this, key, apiKey[key]);\n            });\n        }\n    }\n\n    _startPending(): void {\n        logger.warn(\"WARNING: API provider does not support pending filters\");\n    }\n\n    isCommunityResource(): boolean {\n        return false;\n    }\n\n    getSigner(address?: string): JsonRpcSigner {\n        return logger.throwError(\n            \"API provider does not support signing\",\n            Logger.errors.UNSUPPORTED_OPERATION,\n            { operation: \"getSigner\" }\n        );\n    }\n\n    listAccounts(): Promise<Array<string>> {\n        return Promise.resolve([]);\n    }\n\n    // Return a defaultApiKey if null, otherwise validate the API key\n    static getApiKey(apiKey: any): any {\n        return apiKey;\n    }\n\n    // Returns the url or connection for the given network and API key. The\n    // API key will have been sanitized by the getApiKey first, so any validation\n    // or transformations can be done there.\n    static getUrl(network: Network, apiKey: any): string | ConnectionInfo {\n        return logger.throwError(\"not implemented; sub-classes must override getUrl\", Logger.errors.NOT_IMPLEMENTED, {\n            operation: \"getUrl\"\n        });\n    }\n}\n","\"use strict\";\n\nimport { Network, Networkish } from \"@ethersproject/networks\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { ConnectionInfo } from \"@ethersproject/web\";\n\nimport { CommunityResourcable, showThrottleMessage } from \"./formatter\";\nimport { WebSocketProvider } from \"./websocket-provider\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n\n// This key was provided to ethers.js by Alchemy to be used by the\n// default provider, but it is recommended that for your own\n// production environments, that you acquire your own API key at:\n//   https://dashboard.alchemyapi.io\n\nconst defaultApiKey = \"_gg7wSSi0KMBsdKnGVfHDueq6xMB9EkC\"\n\nexport class AlchemyWebSocketProvider extends WebSocketProvider implements CommunityResourcable {\n    readonly apiKey: string;\n\n    constructor(network?: Networkish, apiKey?: any) {\n        const provider = new AlchemyProvider(network, apiKey);\n\n        const url = provider.connection.url.replace(/^http/i, \"ws\")\n                                           .replace(\".alchemyapi.\", \".ws.alchemyapi.\");\n\n        super(url, provider.network);\n        defineReadOnly(this, \"apiKey\", provider.apiKey);\n    }\n\n    isCommunityResource(): boolean {\n        return (this.apiKey === defaultApiKey);\n    }\n}\n\nexport class AlchemyProvider extends UrlJsonRpcProvider {\n\n    static getWebSocketProvider(network?: Networkish, apiKey?: any): AlchemyWebSocketProvider {\n        return new AlchemyWebSocketProvider(network, apiKey);\n    }\n\n    static getApiKey(apiKey: any): any {\n        if (apiKey == null) { return defaultApiKey; }\n        if (apiKey && typeof(apiKey) !== \"string\") {\n            logger.throwArgumentError(\"invalid apiKey\", \"apiKey\", apiKey);\n        }\n        return apiKey;\n    }\n\n    static getUrl(network: Network, apiKey: string): ConnectionInfo {\n        let host = null;\n        switch (network.name) {\n            case \"homestead\":\n                host = \"eth-mainnet.alchemyapi.io/v2/\";\n                break;\n            case \"goerli\":\n                host = \"eth-goerli.g.alchemy.com/v2/\";\n                break;\n            case \"matic\":\n                host = \"polygon-mainnet.g.alchemy.com/v2/\";\n                break;\n            case \"maticmum\":\n                host = \"polygon-mumbai.g.alchemy.com/v2/\";\n                break;\n            case \"arbitrum\":\n                host = \"arb-mainnet.g.alchemy.com/v2/\";\n                break;\n            case \"arbitrum-goerli\":\n                host = \"arb-goerli.g.alchemy.com/v2/\";\n                break;\n            case \"optimism\":\n                host = \"opt-mainnet.g.alchemy.com/v2/\";\n                break;\n            case \"optimism-goerli\":\n                host = \"opt-goerli.g.alchemy.com/v2/\"\n                break;\n            default:\n               logger.throwArgumentError(\"unsupported network\", \"network\", arguments[0]);\n        }\n\n        return {\n            allowGzip: true,\n            url: (\"https:/\" + \"/\" + host + apiKey),\n            throttleCallback: (attempt: number, url: string) => {\n                if (apiKey === defaultApiKey) {\n                    showThrottleMessage();\n                }\n                return Promise.resolve(true);\n            }\n        };\n    }\n\n    isCommunityResource(): boolean {\n        return (this.apiKey === defaultApiKey);\n    }\n}\n","\nimport { Network } from \"@ethersproject/networks\";\n\nimport { showThrottleMessage } from \"./formatter\";\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n\nimport type { ConnectionInfo } from \"@ethersproject/web\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n\nconst defaultApiKey = \"9f7d929b018cdffb338517efa06f58359e86ff1ffd350bc889738523659e7972\";\n\nfunction getHost(name: string): string {\n    switch (name) {\n        case \"homestead\":\n            return \"rpc.ankr.com/eth/\";\n        case \"ropsten\":\n            return \"rpc.ankr.com/eth_ropsten/\";\n        case \"rinkeby\":\n            return \"rpc.ankr.com/eth_rinkeby/\";\n        case \"goerli\":\n            return \"rpc.ankr.com/eth_goerli/\";\n\n        case \"matic\":\n            return \"rpc.ankr.com/polygon/\";\n\n        case \"arbitrum\":\n            return \"rpc.ankr.com/arbitrum/\";\n    }\n    return logger.throwArgumentError(\"unsupported network\", \"name\", name);\n}\n\nexport class AnkrProvider extends UrlJsonRpcProvider {\n    readonly apiKey: string;\n\n    isCommunityResource(): boolean {\n        return (this.apiKey === defaultApiKey);\n    }\n\n    static getApiKey(apiKey: any): any {\n        if (apiKey == null) { return defaultApiKey; }\n        return apiKey;\n    }\n\n    static getUrl(network: Network, apiKey: any): ConnectionInfo {\n        if (apiKey == null) { apiKey = defaultApiKey; }\n        const connection: ConnectionInfo = {\n            allowGzip: true,\n            url: (\"https:/\\/\" + getHost(network.name) + apiKey),\n            throttleCallback: (attempt: number, url: string) => {\n                if (apiKey.apiKey === defaultApiKey) {\n                    showThrottleMessage();\n                }\n                return Promise.resolve(true);\n            }\n        };\n\n        if (apiKey.projectSecret != null) {\n            connection.user = \"\";\n            connection.password = apiKey.projectSecret\n        }\n\n        return connection;\n    }\n}\n","\"use strict\";\n\nimport { Network } from \"@ethersproject/networks\";\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nexport class CloudflareProvider extends UrlJsonRpcProvider {\n\n    static getApiKey(apiKey: any): any {\n        if (apiKey != null) {\n            logger.throwArgumentError(\"apiKey not supported for cloudflare\", \"apiKey\", apiKey);\n        }\n        return null;\n    }\n\n    static getUrl(network: Network, apiKey?: any): string {\n        let host = null;\n        switch (network.name) {\n            case \"homestead\":\n                host = \"https://cloudflare-eth.com/\";\n                break;\n            default:\n               logger.throwArgumentError(\"unsupported network\", \"network\", arguments[0]);\n        }\n\n        return host;\n    }\n\n    async perform(method: string, params: any): Promise<any> {\n        // The Cloudflare provider does not support eth_blockNumber,\n        // so we get the latest block and pull it from that\n        if (method === \"getBlockNumber\") {\n            const block = await super.perform(\"getBlock\", { blockTag: \"latest\" });\n            return block.number;\n        }\n\n        return super.perform(method, params);\n    }\n}\n","\"use strict\";\n\nimport { BlockTag, TransactionRequest, TransactionResponse } from \"@ethersproject/abstract-provider\";\nimport { hexlify, hexValue, isHexString } from \"@ethersproject/bytes\";\nimport { Network, Networkish } from \"@ethersproject/networks\";\nimport { deepCopy, defineReadOnly } from \"@ethersproject/properties\";\nimport { accessListify } from \"@ethersproject/transactions\";\nimport { ConnectionInfo, fetchJson } from \"@ethersproject/web\";\n\nimport { showThrottleMessage } from \"./formatter\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { BaseProvider } from \"./base-provider\";\n\n\n// The transaction has already been sanitized by the calls in Provider\nfunction getTransactionPostData(transaction: TransactionRequest): Record<string, string> {\n    const result: Record<string, string> = { };\n    for (let key in transaction) {\n        if ((<any>transaction)[key] == null) { continue; }\n        let value = (<any>transaction)[key];\n        if (key === \"type\" && value === 0) { continue; }\n\n        // Quantity-types require no leading zero, unless 0\n        if ((<any>{ type: true, gasLimit: true, gasPrice: true, maxFeePerGs: true, maxPriorityFeePerGas: true, nonce: true, value: true })[key]) {\n            value = hexValue(hexlify(value));\n        } else if (key === \"accessList\") {\n            value = \"[\" + accessListify(value).map((set) => {\n                return `{address:\"${ set.address }\",storageKeys:[\"${ set.storageKeys.join('\",\"') }\"]}`;\n            }).join(\",\") + \"]\";\n        } else {\n            value = hexlify(value);\n        }\n        result[key] = value;\n    }\n    return result;\n}\n\nfunction getResult(result: { status?: number, message?: string, result?: any }): any {\n    // getLogs, getHistory have weird success responses\n    if (result.status == 0 && (result.message === \"No records found\" || result.message === \"No transactions found\")) {\n        return result.result;\n    }\n\n    if (result.status != 1 || typeof(result.message) !== \"string\" || !result.message.match(/^OK/)) {\n        const error: any = new Error(\"invalid response\");\n        error.result = JSON.stringify(result);\n        if ((result.result || \"\").toLowerCase().indexOf(\"rate limit\") >= 0) {\n            error.throttleRetry = true;\n        }\n        throw error;\n    }\n\n    return result.result;\n}\n\nfunction getJsonResult(result: { jsonrpc: string, result?: any, error?: { code?: number, data?: any, message?: string} } ): any {\n    // This response indicates we are being throttled\n    if (result && (<any>result).status == 0 && (<any>result).message == \"NOTOK\" && (result.result || \"\").toLowerCase().indexOf(\"rate limit\") >= 0) {\n        const error: any = new Error(\"throttled response\");\n        error.result = JSON.stringify(result);\n        error.throttleRetry = true;\n        throw error;\n    }\n\n    if (result.jsonrpc != \"2.0\") {\n        // @TODO: not any\n        const error: any = new Error(\"invalid response\");\n        error.result = JSON.stringify(result);\n        throw error;\n    }\n\n    if (result.error) {\n        // @TODO: not any\n        const error: any = new Error(result.error.message || \"unknown error\");\n        if (result.error.code) { error.code = result.error.code; }\n        if (result.error.data) { error.data = result.error.data; }\n        throw error;\n    }\n\n    return result.result;\n}\n\n// The blockTag was normalized as a string by the Provider pre-perform operations\nfunction checkLogTag(blockTag: string): number | \"latest\" {\n    if (blockTag === \"pending\") { throw new Error(\"pending not supported\"); }\n    if (blockTag === \"latest\") { return blockTag; }\n\n    return parseInt(blockTag.substring(2), 16);\n}\n\n\nfunction checkError(method: string, error: any, transaction: any): any {\n    // Undo the \"convenience\" some nodes are attempting to prevent backwards\n    // incompatibility; maybe for v6 consider forwarding reverts as errors\n    if (method === \"call\" && error.code === Logger.errors.SERVER_ERROR) {\n        const e = error.error;\n\n        // Etherscan keeps changing their string\n        if (e && (e.message.match(/reverted/i) || e.message.match(/VM execution error/i))) {\n            // Etherscan prefixes the data like \"Reverted 0x1234\"\n            let data = e.data;\n            if (data) { data = \"0x\" + data.replace(/^.*0x/i, \"\"); }\n\n            if (isHexString(data)) { return data; }\n\n            logger.throwError(\"missing revert data in call exception\", Logger.errors.CALL_EXCEPTION, {\n                error, data: \"0x\"\n            });\n        }\n    }\n\n    // Get the message from any nested error structure\n    let message = error.message;\n    if (error.code === Logger.errors.SERVER_ERROR) {\n        if (error.error && typeof(error.error.message) === \"string\") {\n            message = error.error.message;\n        } else if (typeof(error.body) === \"string\") {\n            message = error.body;\n        } else if (typeof(error.responseText) === \"string\") {\n            message = error.responseText;\n        }\n    }\n    message = (message || \"\").toLowerCase();\n\n    // \"Insufficient funds. The account you tried to send transaction from does not have enough funds. Required 21464000000000 and got: 0\"\n    if (message.match(/insufficient funds/)) {\n        logger.throwError(\"insufficient funds for intrinsic transaction cost\", Logger.errors.INSUFFICIENT_FUNDS, {\n           error, method, transaction\n        });\n    }\n\n    // \"Transaction with the same hash was already imported.\"\n    if (message.match(/same hash was already imported|transaction nonce is too low|nonce too low/)) {\n        logger.throwError(\"nonce has already been used\", Logger.errors.NONCE_EXPIRED, {\n           error, method, transaction\n        });\n    }\n\n    // \"Transaction gas price is too low. There is another transaction with same nonce in the queue. Try increasing the gas price or incrementing the nonce.\"\n    if (message.match(/another transaction with same nonce/)) {\n         logger.throwError(\"replacement fee too low\", Logger.errors.REPLACEMENT_UNDERPRICED, {\n            error, method, transaction\n         });\n    }\n\n    if (message.match(/execution failed due to an exception|execution reverted/)) {\n        logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n            error, method, transaction\n        });\n    }\n\n    throw error;\n}\n\nexport class EtherscanProvider extends BaseProvider{\n    readonly baseUrl: string;\n    readonly apiKey: string | null;\n\n    constructor(network?: Networkish, apiKey?: string) {\n        super(network);\n\n        defineReadOnly(this, \"baseUrl\", this.getBaseUrl());\n        defineReadOnly(this, \"apiKey\", apiKey || null);\n    }\n\n    getBaseUrl(): string {\n        switch(this.network ? this.network.name: \"invalid\") {\n            case \"homestead\":\n                return \"https:/\\/api.etherscan.io\";\n            case \"goerli\":\n                return \"https:/\\/api-goerli.etherscan.io\";\n            case \"sepolia\":\n                return \"https:/\\/api-sepolia.etherscan.io\";\n            case \"matic\":\n                return \"https:/\\/api.polygonscan.com\";\n            case \"maticmum\":\n                return \"https:/\\/api-testnet.polygonscan.com\";\n            case \"arbitrum\":\n                return \"https:/\\/api.arbiscan.io\";\n            case \"arbitrum-goerli\":\n                return \"https:/\\/api-goerli.arbiscan.io\";\n            case \"optimism\":\n                return \"https:/\\/api-optimistic.etherscan.io\";\n            case \"optimism-goerli\":\n                return \"https:/\\/api-goerli-optimistic.etherscan.io\";\n            default:\n        }\n\n        return logger.throwArgumentError(\"unsupported network\", \"network\", this.network.name);\n    }\n\n    getUrl(module: string, params: Record<string, string>): string {\n        const query = Object.keys(params).reduce((accum, key) => {\n            const value = params[key];\n            if (value != null) {\n                accum += `&${ key }=${ value }`\n            }\n            return accum\n        }, \"\");\n        const apiKey = ((this.apiKey) ? `&apikey=${ this.apiKey }`: \"\");\n        return `${ this.baseUrl }/api?module=${ module }${ query }${ apiKey }`;\n    }\n\n    getPostUrl(): string {\n        return `${ this.baseUrl }/api`;\n    }\n\n    getPostData(module: string, params: Record<string, any>): Record<string, any> {\n        params.module = module;\n        params.apikey = this.apiKey;\n        return params;\n    }\n\n    async fetch(module: string, params: Record<string, any>, post?: boolean): Promise<any> {\n        const url = (post ? this.getPostUrl(): this.getUrl(module, params));\n        const payload = (post ? this.getPostData(module, params): null);\n        const procFunc = (module === \"proxy\") ? getJsonResult: getResult;\n\n        this.emit(\"debug\", {\n            action: \"request\",\n            request: url,\n            provider: this\n        });\n\n        const connection: ConnectionInfo = {\n            url: url,\n            throttleSlotInterval: 1000,\n            throttleCallback: (attempt: number, url: string) => {\n                if (this.isCommunityResource()) {\n                    showThrottleMessage();\n                }\n                return Promise.resolve(true);\n            }\n        };\n\n        let payloadStr: string = null;\n        if (payload) {\n            connection.headers = { \"content-type\": \"application/x-www-form-urlencoded; charset=UTF-8\" };\n            payloadStr = Object.keys(payload).map((key) => {\n                return `${ key }=${ payload[key] }`\n            }).join(\"&\");\n        }\n\n        const result = await fetchJson(connection, payloadStr, procFunc || getJsonResult);\n\n        this.emit(\"debug\", {\n            action: \"response\",\n            request: url,\n            response: deepCopy(result),\n            provider: this\n        });\n\n        return result;\n    }\n\n    async detectNetwork(): Promise<Network> {\n        return this.network;\n    }\n\n    async perform(method: string, params: any): Promise<any> {\n\n        switch (method) {\n            case \"getBlockNumber\":\n                return this.fetch(\"proxy\", { action: \"eth_blockNumber\" });\n\n            case \"getGasPrice\":\n                return this.fetch(\"proxy\", { action: \"eth_gasPrice\" });\n\n            case \"getBalance\":\n                // Returns base-10 result\n                return this.fetch(\"account\", {\n                    action: \"balance\",\n                    address: params.address,\n                    tag: params.blockTag\n                });\n\n            case \"getTransactionCount\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_getTransactionCount\",\n                    address: params.address,\n                    tag: params.blockTag\n                });\n\n            case \"getCode\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_getCode\",\n                    address: params.address,\n                    tag: params.blockTag\n                });\n\n            case \"getStorageAt\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_getStorageAt\",\n                    address: params.address,\n                    position: params.position,\n                    tag: params.blockTag\n                });\n\n            case \"sendTransaction\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_sendRawTransaction\",\n                    hex: params.signedTransaction\n                }, true).catch((error) => {\n                    return checkError(\"sendTransaction\", error, params.signedTransaction);\n                });\n\n            case \"getBlock\":\n                if (params.blockTag) {\n                    return this.fetch(\"proxy\", {\n                        action: \"eth_getBlockByNumber\",\n                        tag: params.blockTag,\n                        boolean: (params.includeTransactions ? \"true\": \"false\")\n                    });\n                }\n                throw new Error(\"getBlock by blockHash not implemented\");\n\n            case \"getTransaction\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_getTransactionByHash\",\n                    txhash: params.transactionHash\n                });\n\n            case \"getTransactionReceipt\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_getTransactionReceipt\",\n                    txhash: params.transactionHash\n                });\n\n            case \"call\": {\n                if (params.blockTag !== \"latest\") {\n                    throw new Error(\"EtherscanProvider does not support blockTag for call\");\n                }\n\n                const postData = getTransactionPostData(params.transaction);\n                postData.module = \"proxy\";\n                postData.action = \"eth_call\";\n\n                try {\n                    return await this.fetch(\"proxy\", postData, true);\n                } catch (error) {\n                    return checkError(\"call\", error, params.transaction);\n                }\n            }\n\n            case \"estimateGas\": {\n                const postData = getTransactionPostData(params.transaction);\n                postData.module = \"proxy\";\n                postData.action = \"eth_estimateGas\";\n\n                try {\n                    return await this.fetch(\"proxy\", postData, true);\n                } catch (error) {\n                    return checkError(\"estimateGas\", error, params.transaction);\n                }\n            }\n\n            case \"getLogs\": {\n                const args: Record<string, any> = { action: \"getLogs\" }\n\n                if (params.filter.fromBlock) {\n                    args.fromBlock = checkLogTag(params.filter.fromBlock);\n                }\n\n                if (params.filter.toBlock) {\n                    args.toBlock = checkLogTag(params.filter.toBlock);\n                }\n\n                if (params.filter.address) {\n                    args.address = params.filter.address;\n                }\n\n                // @TODO: We can handle slightly more complicated logs using the logs API\n                if (params.filter.topics && params.filter.topics.length > 0) {\n                    if (params.filter.topics.length > 1) {\n                        logger.throwError(\"unsupported topic count\", Logger.errors.UNSUPPORTED_OPERATION, { topics: params.filter.topics });\n                    }\n\n                    if (params.filter.topics.length === 1) {\n                        const topic0 = params.filter.topics[0];\n                        if (typeof(topic0) !== \"string\" || topic0.length !== 66) {\n                            logger.throwError(\"unsupported topic format\", Logger.errors.UNSUPPORTED_OPERATION, { topic0: topic0 });\n                        }\n                        args.topic0 = topic0;\n                    }\n                }\n\n                const logs: Array<any> = await this.fetch(\"logs\", args);\n\n                // Cache txHash => blockHash\n                let blocks: { [tag: string]: string } = {};\n\n                // Add any missing blockHash to the logs\n                for (let i = 0; i < logs.length; i++) {\n                    const log = logs[i];\n                    if (log.blockHash != null) { continue; }\n                    if (blocks[log.blockNumber] == null) {\n                        const block = await this.getBlock(log.blockNumber);\n                        if (block) {\n                            blocks[log.blockNumber] = block.hash;\n                        }\n                    }\n                    log.blockHash = blocks[log.blockNumber];\n                }\n\n                return logs;\n            }\n\n            case \"getEtherPrice\":\n                if (this.network.name !== \"homestead\") { return 0.0; }\n                return parseFloat((await this.fetch(\"stats\", { action: \"ethprice\" })).ethusd);\n\n            default:\n                break;\n         }\n\n        return super.perform(method, params);\n    }\n\n    // Note: The `page` page parameter only allows pagination within the\n    //       10,000 window available without a page and offset parameter\n    //       Error: Result window is too large, PageNo x Offset size must\n    //              be less than or equal to 10000\n    async getHistory(addressOrName: string | Promise<string>, startBlock?: BlockTag, endBlock?: BlockTag): Promise<Array<TransactionResponse>> {\n        const params = {\n            action: \"txlist\",\n            address: (await this.resolveName(addressOrName)),\n            startblock: ((startBlock == null) ? 0: startBlock),\n            endblock: ((endBlock == null) ? 99999999: endBlock),\n            sort: \"asc\"\n        };\n\n        const result = await this.fetch(\"account\", params);\n\n        return result.map((tx: any) => {\n            [\"contractAddress\", \"to\"].forEach(function(key) {\n                if (tx[key] == \"\") { delete tx[key]; }\n            });\n            if (tx.creates == null && tx.contractAddress != null) {\n                tx.creates = tx.contractAddress;\n            }\n            const item = this.formatter.transactionResponse(tx);\n            if (tx.timeStamp) { item.timestamp = parseInt(tx.timeStamp); }\n            return item;\n        });\n    }\n\n    isCommunityResource(): boolean {\n        return (this.apiKey == null);\n    }\n}\n","\"use strict\";\n\nimport { Block, BlockWithTransactions, Provider } from \"@ethersproject/abstract-provider\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { isHexString } from \"@ethersproject/bytes\";\nimport { Network } from \"@ethersproject/networks\";\nimport { deepCopy, defineReadOnly, shallowCopy } from \"@ethersproject/properties\";\nimport { shuffled } from \"@ethersproject/random\";\nimport { poll } from \"@ethersproject/web\";\n\nimport { BaseProvider } from \"./base-provider\";\nimport { isCommunityResource } from \"./formatter\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nfunction now() { return (new Date()).getTime(); }\n\n// Returns to network as long as all agree, or null if any is null.\n// Throws an error if any two networks do not match.\nfunction checkNetworks(networks: Array<Network>): Network {\n    let result = null;\n\n    for (let i = 0; i < networks.length; i++) {\n        const network = networks[i];\n\n        // Null! We do not know our network; bail.\n        if (network == null) { return null; }\n\n        if (result) {\n            // Make sure the network matches the previous networks\n            if (!(result.name === network.name && result.chainId === network.chainId &&\n                ((result.ensAddress === network.ensAddress) || (result.ensAddress == null && network.ensAddress == null)))) {\n\n                logger.throwArgumentError(\"provider mismatch\", \"networks\", networks);\n           }\n        } else {\n            result = network;\n        }\n    }\n\n    return result;\n}\n\nfunction median(values: Array<number>, maxDelta?: number): number {\n    values = values.slice().sort();\n    const middle = Math.floor(values.length / 2);\n\n    // Odd length; take the middle\n    if (values.length % 2) {\n        return values[middle];\n    }\n\n    // Even length; take the average of the two middle\n    const a = values[middle - 1], b = values[middle];\n\n    if (maxDelta != null && Math.abs(a - b) > maxDelta) {\n        return null;\n    }\n\n    return (a + b) / 2;\n}\n\nfunction serialize(value: any): string {\n    if (value === null) {\n        return \"null\";\n    } else if (typeof(value) === \"number\" || typeof(value) === \"boolean\") {\n        return JSON.stringify(value);\n    } else if (typeof(value) === \"string\") {\n        return value;\n    } else if (BigNumber.isBigNumber(value)) {\n        return value.toString();\n    } else if (Array.isArray(value)) {\n        return JSON.stringify(value.map((i) => serialize(i)));\n    } else if (typeof(value) === \"object\") {\n        const keys = Object.keys(value);\n        keys.sort();\n        return \"{\" + keys.map((key) => {\n            let v = value[key];\n            if (typeof(v) === \"function\") {\n                v = \"[function]\";\n            } else {\n                v = serialize(v);\n            }\n            return JSON.stringify(key) + \":\" + v;\n        }).join(\",\") + \"}\";\n    }\n\n    throw new Error(\"unknown value type: \" + typeof(value));\n}\n\n// Next request ID to use for emitting debug info\nlet nextRid = 1;\n\n\nexport interface FallbackProviderConfig {\n    // The Provider\n    provider: Provider;\n\n    // The priority to favour this Provider; lower values are used first (higher priority)\n    priority?: number;\n\n    // Timeout before also triggering the next provider; this does not stop\n    // this provider and if its result comes back before a quorum is reached\n    // it will be incorporated into the vote\n    // - lower values will cause more network traffic but may result in a\n    //   faster result.\n    stallTimeout?: number;\n\n    // How much this provider contributes to the quorum; sometimes a specific\n    // provider may be more reliable or trustworthy than others, but usually\n    // this should be left as the default\n    weight?: number;\n};\n\n// A Staller is used to provide a delay to give a Provider a chance to response\n// before asking the next Provider to try.\ntype Staller = {\n    wait: (func: () => void) => Promise<void>\n    getPromise: () => Promise<void>,\n    cancel: () => void\n};\n\nfunction stall(duration: number): Staller {\n    let cancel: () => void = null;\n\n    let timer: NodeJS.Timer = null;\n    let promise = <Promise<void>>(new Promise((resolve) => {\n        cancel = function() {\n            if (timer) {\n                clearTimeout(timer);\n                timer = null;\n            }\n            resolve();\n        }\n        timer = setTimeout(cancel, duration);\n    }));\n\n    const wait = (func: () => void) => {\n        promise = promise.then(func);\n        return promise;\n    }\n\n    function getPromise(): Promise<void> {\n        return promise;\n    }\n\n    return { cancel, getPromise, wait };\n}\n\nconst ForwardErrors = [\n    Logger.errors.CALL_EXCEPTION,\n    Logger.errors.INSUFFICIENT_FUNDS,\n    Logger.errors.NONCE_EXPIRED,\n    Logger.errors.REPLACEMENT_UNDERPRICED,\n    Logger.errors.UNPREDICTABLE_GAS_LIMIT\n];\n\nconst ForwardProperties = [\n    \"address\",\n    \"args\",\n    \"errorArgs\",\n    \"errorSignature\",\n    \"method\",\n    \"transaction\",\n];\n\n\n// @TODO: Make this an object with staller and cancel built-in\ninterface RunningConfig extends FallbackProviderConfig {\n    start?: number;\n    done?: boolean;\n    cancelled?: boolean;\n    runner?: Promise<any>;\n    staller?: Staller;\n    result?: any;\n    error?: Error;\n};\n\nfunction exposeDebugConfig(config: RunningConfig, now?: number): any {\n    const result: any = {\n        weight: config.weight\n    };\n    Object.defineProperty(result, \"provider\", { get: () => config.provider });\n    if (config.start) { result.start = config.start; }\n    if (now) { result.duration = (now - config.start); }\n    if (config.done) {\n        if (config.error) {\n            result.error = config.error;\n        } else {\n            result.result = config.result || null;\n        }\n    }\n    return result;\n}\n\nfunction normalizedTally(normalize: (value: any) => string, quorum: number): (configs: Array<RunningConfig>) => any {\n    return function(configs: Array<RunningConfig>): any {\n\n        // Count the votes for each result\n        const tally: { [ key: string]: { count: number, result: any } } = { };\n        configs.forEach((c) => {\n            const value = normalize(c.result);\n            if (!tally[value]) { tally[value] = { count: 0, result: c.result }; }\n            tally[value].count++;\n        });\n\n        // Check for a quorum on any given result\n        const keys = Object.keys(tally);\n        for (let i = 0; i < keys.length; i++) {\n            const check = tally[keys[i]];\n            if (check.count >= quorum) {\n                return check.result;\n            }\n        }\n\n        // No quroum\n        return undefined;\n    }\n}\nfunction getProcessFunc(provider: FallbackProvider, method: string, params: { [ key: string ]: any }): (configs: Array<RunningConfig>) => any {\n\n    let normalize = serialize;\n\n    switch (method) {\n        case \"getBlockNumber\":\n            // Return the median value, unless there is (median + 1) is also\n            // present, in which case that is probably true and the median\n            // is going to be stale soon. In the event of a malicious node,\n            // the lie will be true soon enough.\n            return function(configs: Array<RunningConfig>): number {\n                const values = configs.map((c) => c.result);\n\n                // Get the median block number\n                let blockNumber = median(configs.map((c) => c.result), 2);\n                if (blockNumber == null) { return undefined; }\n\n                blockNumber = Math.ceil(blockNumber);\n\n                // If the next block height is present, its prolly safe to use\n                if (values.indexOf(blockNumber + 1) >= 0) { blockNumber++; }\n\n                // Don't ever roll back the blockNumber\n                if (blockNumber >= provider._highestBlockNumber) {\n                    provider._highestBlockNumber = blockNumber;\n                }\n\n                return provider._highestBlockNumber;\n            };\n\n        case \"getGasPrice\":\n            // Return the middle (round index up) value, similar to median\n            // but do not average even entries and choose the higher.\n            // Malicious actors must compromise 50% of the nodes to lie.\n            return function(configs: Array<RunningConfig>): BigNumber {\n                const values = configs.map((c) => c.result);\n                values.sort();\n                return values[Math.floor(values.length / 2)];\n            }\n\n        case \"getEtherPrice\":\n            // Returns the median price. Malicious actors must compromise at\n            // least 50% of the nodes to lie (in a meaningful way).\n            return function(configs: Array<RunningConfig>): number {\n                return median(configs.map((c) => c.result));\n            }\n\n        // No additional normalizing required; serialize is enough\n        case \"getBalance\":\n        case \"getTransactionCount\":\n        case \"getCode\":\n        case \"getStorageAt\":\n        case \"call\":\n        case \"estimateGas\":\n        case \"getLogs\":\n            break;\n\n        // We drop the confirmations from transactions as it is approximate\n        case \"getTransaction\":\n        case \"getTransactionReceipt\":\n            normalize = function(tx: any): string {\n                if (tx == null) { return null; }\n\n                tx = shallowCopy(tx);\n                tx.confirmations = -1;\n                return serialize(tx);\n            }\n            break;\n\n        // We drop the confirmations from transactions as it is approximate\n        case \"getBlock\":\n            // We drop the confirmations from transactions as it is approximate\n            if (params.includeTransactions) {\n                normalize = function(block: BlockWithTransactions): string {\n                    if (block == null) { return null; }\n\n                    block = shallowCopy(block);\n                    block.transactions = block.transactions.map((tx) => {\n                        tx = shallowCopy(tx);\n                        tx.confirmations = -1;\n                        return tx;\n                    });\n                    return serialize(block);\n                };\n            } else {\n                normalize = function(block: Block): string {\n                    if (block == null) { return null; }\n                    return serialize(block);\n                }\n            }\n            break;\n\n        default:\n            throw new Error(\"unknown method: \" + method);\n    }\n\n    // Return the result if and only if the expected quorum is\n    // satisfied and agreed upon for the final result.\n    return normalizedTally(normalize, provider.quorum);\n\n}\n\n// If we are doing a blockTag query, we need to make sure the backend is\n// caught up to the FallbackProvider, before sending a request to it.\nasync function waitForSync(config: RunningConfig, blockNumber: number): Promise<BaseProvider> {\n    const provider = <BaseProvider>(config.provider);\n\n    if ((provider.blockNumber != null && provider.blockNumber >= blockNumber) || blockNumber === -1) {\n        return provider;\n    }\n\n    return poll(() => {\n        return new Promise((resolve, reject) => {\n            setTimeout(function() {\n\n                // We are synced\n                if (provider.blockNumber >= blockNumber) { return resolve(provider); }\n\n                // We're done; just quit\n                if (config.cancelled) { return resolve(null); }\n\n                // Try again, next block\n                return resolve(undefined);\n            }, 0);\n        });\n    }, { oncePoll: provider });\n}\n\nasync function getRunner(config: RunningConfig, currentBlockNumber: number, method: string, params: { [ key: string]: any }): Promise<any> {\n    let provider = config.provider;\n\n    switch (method) {\n        case \"getBlockNumber\":\n        case \"getGasPrice\":\n            return provider[method]();\n        case \"getEtherPrice\":\n            if ((<any>provider).getEtherPrice) {\n                return (<any>provider).getEtherPrice();\n            }\n            break;\n        case \"getBalance\":\n        case \"getTransactionCount\":\n        case \"getCode\":\n            if (params.blockTag && isHexString(params.blockTag)) {\n                provider = await waitForSync(config, currentBlockNumber)\n            }\n            return provider[method](params.address, params.blockTag || \"latest\");\n        case \"getStorageAt\":\n            if (params.blockTag && isHexString(params.blockTag)) {\n                provider = await waitForSync(config, currentBlockNumber)\n            }\n            return provider.getStorageAt(params.address, params.position, params.blockTag || \"latest\");\n        case \"getBlock\":\n            if (params.blockTag && isHexString(params.blockTag)) {\n                provider = await waitForSync(config, currentBlockNumber)\n            }\n            return provider[(params.includeTransactions ? \"getBlockWithTransactions\": \"getBlock\")](params.blockTag || params.blockHash);\n        case \"call\":\n        case \"estimateGas\":\n            if (params.blockTag && isHexString(params.blockTag)) {\n                provider = await waitForSync(config, currentBlockNumber)\n            }\n            if (method === \"call\" && params.blockTag) {\n                return provider[method](params.transaction, params.blockTag);\n            }\n            return provider[method](params.transaction);\n        case \"getTransaction\":\n        case \"getTransactionReceipt\":\n            return provider[method](params.transactionHash);\n        case \"getLogs\": {\n            let filter = params.filter;\n            if ((filter.fromBlock && isHexString(filter.fromBlock)) || (filter.toBlock && isHexString(filter.toBlock))) {\n                provider = await waitForSync(config, currentBlockNumber)\n            }\n            return provider.getLogs(filter);\n        }\n    }\n\n    return logger.throwError(\"unknown method error\", Logger.errors.UNKNOWN_ERROR, {\n        method: method,\n        params: params\n    });\n}\n\nexport class FallbackProvider extends BaseProvider {\n    readonly providerConfigs: ReadonlyArray<FallbackProviderConfig>;\n    readonly quorum: number;\n\n    // Due to the highly asyncronous nature of the blockchain, we need\n    // to make sure we never unroll the blockNumber due to our random\n    // sample of backends\n    _highestBlockNumber: number;\n\n    constructor(providers: Array<Provider | FallbackProviderConfig>, quorum?: number) {\n        if (providers.length === 0) {\n            logger.throwArgumentError(\"missing providers\", \"providers\", providers);\n        }\n\n        const providerConfigs: Array<FallbackProviderConfig> = providers.map((configOrProvider, index) => {\n            if (Provider.isProvider(configOrProvider)) {\n                const stallTimeout = isCommunityResource(configOrProvider) ? 2000: 750;\n                const priority = 1;\n                return Object.freeze({ provider: configOrProvider, weight: 1, stallTimeout, priority });\n            }\n\n            const config: FallbackProviderConfig = shallowCopy(configOrProvider);\n\n            if (config.priority == null) { config.priority = 1; }\n            if (config.stallTimeout == null) {\n                config.stallTimeout = isCommunityResource(configOrProvider) ? 2000: 750;\n            }\n            if (config.weight == null) { config.weight = 1; }\n\n            const weight = config.weight;\n            if (weight % 1 || weight > 512 || weight < 1) {\n                logger.throwArgumentError(\"invalid weight; must be integer in [1, 512]\", `providers[${ index }].weight`, weight);\n            }\n\n            return Object.freeze(config);\n        });\n\n        const total = providerConfigs.reduce((accum, c) => (accum + c.weight), 0);\n\n        if (quorum == null) {\n            quorum = total / 2;\n        } else if (quorum > total) {\n            logger.throwArgumentError(\"quorum will always fail; larger than total weight\", \"quorum\", quorum);\n        }\n\n        // Are all providers' networks are known\n        let networkOrReady: Network | Promise<Network> = checkNetworks(providerConfigs.map((c) => (<any>(c.provider)).network));\n\n        // Not all networks are known; we must stall\n        if (networkOrReady == null) {\n            networkOrReady = new Promise((resolve, reject) => {\n                setTimeout(() => {\n                    this.detectNetwork().then(resolve, reject);\n                }, 0);\n            });\n        }\n\n        super(networkOrReady);\n\n        // Preserve a copy, so we do not get mutated\n        defineReadOnly(this, \"providerConfigs\", Object.freeze(providerConfigs));\n        defineReadOnly(this, \"quorum\", quorum);\n\n        this._highestBlockNumber = -1;\n    }\n\n    async detectNetwork(): Promise<Network> {\n        const networks = await Promise.all(this.providerConfigs.map((c) => c.provider.getNetwork()));\n        return checkNetworks(networks);\n    }\n\n    async perform(method: string, params: { [name: string]: any }): Promise<any> {\n        // Sending transactions is special; always broadcast it to all backends\n        if (method === \"sendTransaction\") {\n            const results: Array<string | Error> = await Promise.all(this.providerConfigs.map((c) => {\n                return c.provider.sendTransaction(params.signedTransaction).then((result) => {\n                    return result.hash;\n                }, (error) => {\n                    return error;\n                });\n            }));\n\n            // Any success is good enough (other errors are likely \"already seen\" errors\n            for (let i = 0; i < results.length; i++) {\n                const result = results[i];\n                if (typeof(result) === \"string\") { return result; }\n            }\n\n            // They were all an error; pick the first error\n            throw results[0];\n        }\n\n        // We need to make sure we are in sync with our backends, so we need\n        // to know this before we can make a lot of calls\n        if (this._highestBlockNumber === -1 && method !== \"getBlockNumber\") {\n            await this.getBlockNumber();\n        }\n\n        const processFunc = getProcessFunc(this, method, params);\n\n        // Shuffle the providers and then sort them by their priority; we\n        // shallowCopy them since we will store the result in them too\n        const configs: Array<RunningConfig> = shuffled(this.providerConfigs.map(shallowCopy));\n        configs.sort((a, b) => (a.priority - b.priority));\n\n        const currentBlockNumber = this._highestBlockNumber;\n\n        let i = 0;\n        let first = true;\n        while (true) {\n            const t0 = now();\n\n            // Compute the inflight weight (exclude anything past)\n            let inflightWeight = configs.filter((c) => (c.runner && ((t0 - c.start) < c.stallTimeout)))\n                                        .reduce((accum, c) => (accum + c.weight), 0);\n\n            // Start running enough to meet quorum\n            while (inflightWeight < this.quorum && i < configs.length) {\n                const config = configs[i++];\n\n                const rid = nextRid++;\n\n                config.start = now();\n                config.staller = stall(config.stallTimeout);\n                config.staller.wait(() => { config.staller = null; });\n\n                config.runner = getRunner(config, currentBlockNumber, method, params).then((result) => {\n                    config.done = true;\n                    config.result = result;\n\n                    if (this.listenerCount(\"debug\")) {\n                        this.emit(\"debug\", {\n                            action: \"request\",\n                            rid: rid,\n                            backend: exposeDebugConfig(config, now()),\n                            request: { method: method, params: deepCopy(params) },\n                            provider: this\n                        });\n                     }\n\n                }, (error) => {\n                    config.done = true;\n                    config.error = error;\n\n                    if (this.listenerCount(\"debug\")) {\n                        this.emit(\"debug\", {\n                            action: \"request\",\n                            rid: rid,\n                            backend: exposeDebugConfig(config, now()),\n                            request: { method: method, params: deepCopy(params) },\n                            provider: this\n                        });\n                    }\n                });\n\n                if (this.listenerCount(\"debug\")) {\n                    this.emit(\"debug\", {\n                        action: \"request\",\n                        rid: rid,\n                        backend: exposeDebugConfig(config, null),\n                        request: { method: method, params: deepCopy(params) },\n                        provider: this\n                    });\n                }\n\n                inflightWeight += config.weight;\n            }\n\n            // Wait for anything meaningful to finish or stall out\n            const waiting: Array<Promise<any>> = [ ];\n            configs.forEach((c) => {\n                if (c.done || !c.runner) { return; }\n                waiting.push(c.runner);\n                if (c.staller) { waiting.push(c.staller.getPromise()); }\n            });\n\n            if (waiting.length) { await Promise.race(waiting); }\n\n            // Check the quorum and process the results; the process function\n            // may additionally decide the quorum is not met\n            const results = configs.filter((c) => (c.done && c.error == null));\n            if (results.length >= this.quorum) {\n                const result = processFunc(results);\n                if (result !== undefined) {\n                    // Shut down any stallers\n                    configs.forEach(c => {\n                        if (c.staller) { c.staller.cancel(); }\n                        c.cancelled = true;\n                    });\n                    return result;\n                }\n                if (!first) { await stall(100).getPromise(); }\n                first = false;\n            }\n\n            // No result, check for errors that should be forwarded\n            const errors = configs.reduce((accum, c) => {\n                if (!c.done || c.error == null) { return accum; }\n\n                const code = (<any>(c.error)).code;\n                if (ForwardErrors.indexOf(code) >= 0) {\n                    if (!accum[code]) { accum[code] = { error: c.error, weight: 0 }; }\n                    accum[code].weight += c.weight;\n                }\n\n                return accum;\n            }, <{ [ code: string ]: { error: Error, weight: number } }>({ }));\n\n            Object.keys(errors).forEach((errorCode: string) => {\n                const tally = errors[errorCode];\n                if (tally.weight < this.quorum) { return; }\n\n                // Shut down any stallers\n                configs.forEach(c => {\n                    if (c.staller) { c.staller.cancel(); }\n                    c.cancelled = true;\n                });\n\n                const e = <any>(tally.error);\n\n                const props: { [ name: string ]: any } = { };\n                ForwardProperties.forEach((name) => {\n                    if (e[name] == null) { return; }\n                    props[name] = e[name];\n                });\n\n                logger.throwError(e.reason || e.message, <any>errorCode, props);\n            });\n\n            // All configs have run to completion; we will never get more data\n            if (configs.filter((c) => !c.done).length === 0) { break; }\n        }\n\n        // Shut down any stallers; shouldn't be any\n        configs.forEach(c => {\n            if (c.staller) { c.staller.cancel(); }\n            c.cancelled = true;\n        });\n\n        return logger.throwError(\"failed to meet quorum\", Logger.errors.SERVER_ERROR, {\n            method: method,\n            params: params,\n            //results: configs.map((c) => c.result),\n            //errors: configs.map((c) => c.error),\n            results: configs.map((c) => exposeDebugConfig(c)),\n            provider: this\n        });\n    }\n}\n","\"use strict\";\n\nconst IpcProvider: any = null;\n\nexport {\n    IpcProvider\n};\n","\"use strict\";\n\nimport { Network, Networkish } from \"@ethersproject/networks\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { ConnectionInfo } from \"@ethersproject/web\";\n\nimport { WebSocketProvider } from \"./websocket-provider\";\nimport { CommunityResourcable, showThrottleMessage } from \"./formatter\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n\n\nconst defaultProjectId = \"84842078b09946638c03157f83405213\"\n\nexport class InfuraWebSocketProvider extends WebSocketProvider implements CommunityResourcable {\n    readonly apiKey: string;\n    readonly projectId: string;\n    readonly projectSecret: string;\n\n    constructor(network?: Networkish, apiKey?: any) {\n        const provider = new InfuraProvider(network, apiKey);\n        const connection = provider.connection;\n        if (connection.password) {\n            logger.throwError(\"INFURA WebSocket project secrets unsupported\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"InfuraProvider.getWebSocketProvider()\"\n            });\n        }\n\n        const url = connection.url.replace(/^http/i, \"ws\").replace(\"/v3/\", \"/ws/v3/\");\n        super(url, network);\n\n        defineReadOnly(this, \"apiKey\", provider.projectId);\n        defineReadOnly(this, \"projectId\", provider.projectId);\n        defineReadOnly(this, \"projectSecret\", provider.projectSecret);\n    }\n\n    isCommunityResource(): boolean {\n        return (this.projectId === defaultProjectId);\n    }\n}\n\nexport class InfuraProvider extends UrlJsonRpcProvider {\n    readonly projectId: string;\n    readonly projectSecret: string;\n\n    static getWebSocketProvider(network?: Networkish, apiKey?: any): InfuraWebSocketProvider {\n        return new InfuraWebSocketProvider(network, apiKey);\n    }\n\n    static getApiKey(apiKey: any): any {\n        const apiKeyObj: { apiKey: string, projectId: string, projectSecret: string } = {\n            apiKey: defaultProjectId,\n            projectId: defaultProjectId,\n            projectSecret: null\n        };\n\n        if (apiKey == null) { return apiKeyObj; }\n\n        if (typeof(apiKey) === \"string\") {\n            apiKeyObj.projectId = apiKey;\n\n        } else if (apiKey.projectSecret != null) {\n            logger.assertArgument((typeof(apiKey.projectId) === \"string\"),\n                \"projectSecret requires a projectId\", \"projectId\", apiKey.projectId);\n            logger.assertArgument((typeof(apiKey.projectSecret) === \"string\"),\n                \"invalid projectSecret\", \"projectSecret\", \"[REDACTED]\");\n\n            apiKeyObj.projectId = apiKey.projectId;\n            apiKeyObj.projectSecret = apiKey.projectSecret;\n\n        } else if (apiKey.projectId) {\n            apiKeyObj.projectId = apiKey.projectId;\n        }\n\n        apiKeyObj.apiKey = apiKeyObj.projectId;\n\n        return apiKeyObj;\n    }\n\n    static getUrl(network: Network, apiKey: any): ConnectionInfo {\n        let host: string = null;\n        switch(network ? network.name: \"unknown\") {\n            case \"homestead\":\n                host = \"mainnet.infura.io\";\n                break;\n            case \"goerli\":\n                host = \"goerli.infura.io\";\n                break;\n            case \"sepolia\":\n                host = \"sepolia.infura.io\";\n                break;\n            case \"matic\":\n                host = \"polygon-mainnet.infura.io\";\n                break;\n            case \"maticmum\":\n                host = \"polygon-mumbai.infura.io\";\n                break;\n            case \"optimism\":\n                host = \"optimism-mainnet.infura.io\";\n                break;\n            case \"optimism-goerli\":\n                host = \"optimism-goerli.infura.io\";\n                break;\n            case \"arbitrum\":\n                host = \"arbitrum-mainnet.infura.io\";\n                break;\n            case \"arbitrum-goerli\":\n                host = \"arbitrum-goerli.infura.io\";\n                break;\n            default:\n                logger.throwError(\"unsupported network\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"network\",\n                    value: network\n                });\n        }\n\n        const connection: ConnectionInfo = {\n            allowGzip: true,\n            url: (\"https:/\" + \"/\" + host + \"/v3/\" + apiKey.projectId),\n            throttleCallback: (attempt: number, url: string) => {\n                if (apiKey.projectId === defaultProjectId) {\n                    showThrottleMessage();\n                }\n                return Promise.resolve(true);\n            }\n        };\n\n        if (apiKey.projectSecret != null) {\n            connection.user = \"\";\n            connection.password = apiKey.projectSecret\n        }\n\n        return connection;\n    }\n\n    isCommunityResource(): boolean {\n        return (this.projectId === defaultProjectId);\n    }\n}\n","\nimport { deepCopy } from \"@ethersproject/properties\";\nimport { fetchJson } from \"@ethersproject/web\";\n\nimport { JsonRpcProvider } from \"./json-rpc-provider\";\n\n// Experimental\n\nexport class JsonRpcBatchProvider extends JsonRpcProvider {\n    _pendingBatchAggregator: NodeJS.Timer;\n    _pendingBatch: Array<{\n        request: { method: string, params: Array<any>, id: number, jsonrpc: \"2.0\" },\n        resolve: (result: any) => void,\n        reject: (error: Error) => void\n    }>;\n\n    send(method: string, params: Array<any>): Promise<any> {\n        const request = {\n            method: method,\n            params: params,\n            id: (this._nextId++),\n            jsonrpc: \"2.0\"\n        };\n\n        if (this._pendingBatch == null) {\n            this._pendingBatch = [ ];\n        }\n\n        const inflightRequest: any = { request, resolve: null, reject: null };\n\n        const promise = new Promise((resolve, reject) => {\n            inflightRequest.resolve = resolve;\n            inflightRequest.reject = reject;\n        });\n\n        this._pendingBatch.push(inflightRequest);\n\n        if (!this._pendingBatchAggregator) {\n            // Schedule batch for next event loop + short duration\n            this._pendingBatchAggregator = setTimeout(() => {\n\n                // Get teh current batch and clear it, so new requests\n                // go into the next batch\n                const batch = this._pendingBatch;\n                this._pendingBatch = null;\n                this._pendingBatchAggregator = null;\n\n                // Get the request as an array of requests\n                const request = batch.map((inflight) => inflight.request);\n\n                this.emit(\"debug\", {\n                    action: \"requestBatch\",\n                    request: deepCopy(request),\n                    provider: this\n                });\n\n                return fetchJson(this.connection, JSON.stringify(request)).then((result) => {\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        request: request,\n                        response: result,\n                        provider: this\n                    });\n\n                    // For each result, feed it to the correct Promise, depending\n                    // on whether it was a success or error\n                    batch.forEach((inflightRequest, index) => {\n                        const payload = result[index];\n                        if (payload.error) {\n                            const error = new Error(payload.error.message);\n                            (<any>error).code = payload.error.code;\n                            (<any>error).data = payload.error.data;\n                            inflightRequest.reject(error);\n                        } else {\n                            inflightRequest.resolve(payload.result);\n                        }\n                    });\n\n                }, (error) => {\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        error: error,\n                        request: request,\n                        provider: this\n                    });\n\n                    batch.forEach((inflightRequest) => {\n                        inflightRequest.reject(error);\n                    });\n                });\n\n            }, 10);\n        }\n\n        return promise;\n    }\n}\n","/* istanbul ignore file */\n\n\"use strict\";\n\nimport { Network } from \"@ethersproject/networks\";\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n// Special API key provided by Nodesmith for ethers.js\nconst defaultApiKey = \"ETHERS_JS_SHARED\";\n\nexport class NodesmithProvider extends UrlJsonRpcProvider {\n\n    static getApiKey(apiKey: any): any {\n        if (apiKey && typeof(apiKey) !== \"string\") {\n            logger.throwArgumentError(\"invalid apiKey\", \"apiKey\", apiKey);\n        }\n        return apiKey || defaultApiKey;\n    }\n\n    static getUrl(network: Network, apiKey?: any): string {\n        logger.warn(\"NodeSmith will be discontinued on 2019-12-20; please migrate to another platform.\");\n\n        let host = null;\n        switch (network.name) {\n            case \"homestead\":\n                host = \"https://ethereum.api.nodesmith.io/v1/mainnet/jsonrpc\";\n                break;\n            case \"ropsten\":\n                host = \"https://ethereum.api.nodesmith.io/v1/ropsten/jsonrpc\";\n                break;\n            case \"rinkeby\":\n                host = \"https://ethereum.api.nodesmith.io/v1/rinkeby/jsonrpc\";\n                break;\n            case \"goerli\":\n                host = \"https://ethereum.api.nodesmith.io/v1/goerli/jsonrpc\";\n                break;\n            case \"kovan\":\n                host = \"https://ethereum.api.nodesmith.io/v1/kovan/jsonrpc\";\n                break;\n            default:\n               logger.throwArgumentError(\"unsupported network\", \"network\", arguments[0]);\n        }\n\n        return (host + \"?apiKey=\" + apiKey);\n    }\n}\n","\"use strict\";\n\nimport { Network } from \"@ethersproject/networks\";\nimport { ConnectionInfo } from \"@ethersproject/web\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n\nconst defaultApplicationId = \"62e1ad51b37b8e00394bda3b\";\n\n\nexport class PocketProvider extends UrlJsonRpcProvider {\n    readonly applicationId: string;\n    readonly applicationSecretKey: string;\n    readonly loadBalancer: boolean;\n\n    static getApiKey(apiKey: any): any {\n        const apiKeyObj: { applicationId: string, applicationSecretKey: string, loadBalancer: boolean } = {\n            applicationId: null,\n            loadBalancer: true,\n            applicationSecretKey: null\n        };\n\n        // Parse applicationId and applicationSecretKey\n        if (apiKey == null) {\n            apiKeyObj.applicationId = defaultApplicationId;\n\n        } else if (typeof (apiKey) === \"string\") {\n            apiKeyObj.applicationId = apiKey;\n\n        } else if (apiKey.applicationSecretKey != null) {\n            apiKeyObj.applicationId = apiKey.applicationId;\n            apiKeyObj.applicationSecretKey = apiKey.applicationSecretKey;\n\n        } else if (apiKey.applicationId) {\n            apiKeyObj.applicationId = apiKey.applicationId;\n\n        } else {\n            logger.throwArgumentError(\"unsupported PocketProvider apiKey\", \"apiKey\", apiKey);\n        }\n\n        return apiKeyObj;\n    }\n\n    static getUrl(network: Network, apiKey: any): ConnectionInfo {\n        let host: string = null;\n        switch (network ? network.name : \"unknown\") {\n            case \"goerli\":\n                host = \"eth-goerli.gateway.pokt.network\";\n                break;\n            case \"homestead\":\n                host = \"eth-mainnet.gateway.pokt.network\";\n                break;\n            case \"kovan\":\n                host = \"poa-kovan.gateway.pokt.network\";\n                break;\n            case \"matic\":\n                host = \"poly-mainnet.gateway.pokt.network\";\n                break;\n            case \"maticmum\":\n                host = \"polygon-mumbai-rpc.gateway.pokt.network\";\n                break;\n            case \"rinkeby\":\n                host = \"eth-rinkeby.gateway.pokt.network\";\n                break;\n            case \"ropsten\":\n                host = \"eth-ropsten.gateway.pokt.network\";\n                break;\n            default:\n                logger.throwError(\"unsupported network\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"network\",\n                    value: network\n                });\n        }\n\n        const url = `https:/\\/${ host }/v1/lb/${ apiKey.applicationId }`\n\n        const connection: ConnectionInfo = { headers: { }, url };\n        if (apiKey.applicationSecretKey != null) {\n            connection.user = \"\";\n            connection.password = apiKey.applicationSecretKey\n        }\n\n        return connection;\n    }\n\n    isCommunityResource(): boolean {\n        return (this.applicationId === defaultApplicationId);\n    }\n}\n","\"use strict\";\n\nimport { Networkish } from \"@ethersproject/networks\";\nimport { deepCopy, defineReadOnly } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { JsonRpcProvider } from \"./json-rpc-provider\";\n\n// Exported Types\nexport type ExternalProvider = {\n    isMetaMask?: boolean;\n    isStatus?: boolean;\n    host?: string;\n    path?: string;\n    sendAsync?: (request: { method: string, params?: Array<any> }, callback: (error: any, response: any) => void) => void\n    send?: (request: { method: string, params?: Array<any> }, callback: (error: any, response: any) => void) => void\n    request?: (request: { method: string, params?: Array<any> }) => Promise<any>\n}\n\nlet _nextId = 1;\n\nexport type JsonRpcFetchFunc = (method: string, params?: Array<any>) => Promise<any>;\n\ntype Web3LegacySend = (request: any, callback: (error: Error, response: any) => void) => void;\n\nfunction buildWeb3LegacyFetcher(provider: ExternalProvider, sendFunc: Web3LegacySend) : JsonRpcFetchFunc {\n    const fetcher = \"Web3LegacyFetcher\";\n\n    return function(method: string, params: Array<any>): Promise<any> {\n        const request = {\n            method: method,\n            params: params,\n            id: (_nextId++),\n            jsonrpc: \"2.0\"\n        };\n\n        return new Promise((resolve, reject) => {\n            this.emit(\"debug\", {\n                action: \"request\",\n                fetcher,\n                request: deepCopy(request),\n                provider: this\n            });\n\n            sendFunc(request, (error, response) => {\n\n                if (error) {\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        fetcher,\n                        error,\n                        request,\n                        provider: this\n                    });\n\n                    return reject(error);\n                }\n\n                this.emit(\"debug\", {\n                    action: \"response\",\n                    fetcher,\n                    request,\n                    response,\n                    provider: this\n                });\n\n                if (response.error) {\n                    const error = new Error(response.error.message);\n                    (<any>error).code = response.error.code;\n                    (<any>error).data = response.error.data;\n                    return reject(error);\n                }\n\n                resolve(response.result);\n            });\n        });\n    }\n}\n\nfunction buildEip1193Fetcher(provider: ExternalProvider): JsonRpcFetchFunc {\n    return function(method: string, params: Array<any>): Promise<any> {\n        if (params == null) { params = [ ]; }\n\n        const request = { method, params };\n\n        this.emit(\"debug\", {\n            action: \"request\",\n            fetcher: \"Eip1193Fetcher\",\n            request: deepCopy(request),\n            provider: this\n        });\n\n        return provider.request(request).then((response) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                fetcher: \"Eip1193Fetcher\",\n                request,\n                response,\n                provider: this\n            });\n\n            return response;\n\n        }, (error) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                fetcher: \"Eip1193Fetcher\",\n                request,\n                error,\n                provider: this\n            });\n\n            throw error;\n        });\n    }\n}\n\nexport class Web3Provider extends JsonRpcProvider {\n    readonly provider: ExternalProvider;\n    readonly jsonRpcFetchFunc: JsonRpcFetchFunc;\n\n    constructor(provider: ExternalProvider | JsonRpcFetchFunc, network?: Networkish) {\n        if (provider == null) {\n            logger.throwArgumentError(\"missing provider\", \"provider\", provider);\n        }\n\n        let path: string = null;\n        let jsonRpcFetchFunc: JsonRpcFetchFunc = null;\n        let subprovider: ExternalProvider = null;\n\n        if (typeof(provider) === \"function\") {\n            path = \"unknown:\";\n            jsonRpcFetchFunc = provider;\n\n        } else {\n            path = provider.host || provider.path || \"\";\n            if (!path && provider.isMetaMask) {\n                path = \"metamask\";\n            }\n\n            subprovider = provider;\n\n            if (provider.request) {\n                if (path === \"\") { path = \"eip-1193:\"; }\n                jsonRpcFetchFunc = buildEip1193Fetcher(provider);\n            } else if (provider.sendAsync) {\n                jsonRpcFetchFunc = buildWeb3LegacyFetcher(provider, provider.sendAsync.bind(provider));\n            } else if (provider.send) {\n                jsonRpcFetchFunc = buildWeb3LegacyFetcher(provider, provider.send.bind(provider));\n            } else {\n                logger.throwArgumentError(\"unsupported provider\", \"provider\", provider);\n            }\n\n            if (!path) { path = \"unknown:\"; }\n        }\n\n        super(path, network);\n\n        defineReadOnly(this, \"jsonRpcFetchFunc\", jsonRpcFetchFunc);\n        defineReadOnly(this, \"provider\", subprovider);\n    }\n\n    send(method: string, params: Array<any>): Promise<any> {\n        return this.jsonRpcFetchFunc(method, params);\n    }\n}\n","\"use strict\";\n\nimport {\n    Block,\n    BlockTag,\n    EventType,\n    FeeData,\n    Filter,\n    Log,\n    Listener,\n    Provider,\n    TransactionReceipt,\n    TransactionRequest,\n    TransactionResponse\n} from \"@ethersproject/abstract-provider\";\n\nimport { getNetwork } from \"@ethersproject/networks\";\nimport { Network, Networkish } from \"@ethersproject/networks\";\n\nimport { BaseProvider, EnsProvider, EnsResolver, Resolver } from \"./base-provider\";\n\nimport { AlchemyProvider, AlchemyWebSocketProvider } from \"./alchemy-provider\";\nimport { AnkrProvider } from \"./ankr-provider\";\nimport { CloudflareProvider } from \"./cloudflare-provider\";\nimport { EtherscanProvider } from \"./etherscan-provider\";\nimport { FallbackProvider, FallbackProviderConfig } from \"./fallback-provider\";\nimport { IpcProvider } from \"./ipc-provider\";\nimport { InfuraProvider, InfuraWebSocketProvider } from \"./infura-provider\";\nimport { JsonRpcProvider, JsonRpcSigner } from \"./json-rpc-provider\";\nimport { JsonRpcBatchProvider } from \"./json-rpc-batch-provider\";\nimport { NodesmithProvider } from \"./nodesmith-provider\";\nimport { PocketProvider } from \"./pocket-provider\";\nimport { StaticJsonRpcProvider, UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\nimport { Web3Provider } from \"./web3-provider\";\nimport { WebSocketProvider } from \"./websocket-provider\";\nimport { ExternalProvider, JsonRpcFetchFunc } from \"./web3-provider\";\n\nimport { CommunityResourcable, Formatter, isCommunityResourcable, isCommunityResource, showThrottleMessage } from \"./formatter\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n////////////////////////\n// Helper Functions\n\nfunction getDefaultProvider(network?: Networkish, options?: any): BaseProvider {\n    if (network == null) { network = \"homestead\"; }\n\n    // If passed a URL, figure out the right type of provider based on the scheme\n    if (typeof(network) === \"string\") {\n        // @TODO: Add support for IpcProvider; maybe if it ends in \".ipc\"?\n\n        // Handle http and ws (and their secure variants)\n        const match = network.match(/^(ws|http)s?:/i);\n        if (match) {\n            switch (match[1].toLowerCase()) {\n                case \"http\": case \"https\":\n                    return new JsonRpcProvider(network);\n                case \"ws\": case \"wss\":\n                    return new WebSocketProvider(network);\n                default:\n                    logger.throwArgumentError(\"unsupported URL scheme\", \"network\", network);\n            }\n        }\n    }\n\n    const n = getNetwork(network);\n    if (!n || !n._defaultProvider) {\n        logger.throwError(\"unsupported getDefaultProvider network\", Logger.errors.NETWORK_ERROR, {\n            operation: \"getDefaultProvider\",\n            network: network\n        });\n    }\n\n    return n._defaultProvider({\n        FallbackProvider,\n\n        AlchemyProvider,\n        AnkrProvider,\n        CloudflareProvider,\n        EtherscanProvider,\n        InfuraProvider,\n        JsonRpcProvider,\n        NodesmithProvider,\n        PocketProvider,\n        Web3Provider,\n\n        IpcProvider,\n    }, options);\n}\n\n////////////////////////\n// Exports\n\nexport {\n\n    // Abstract Providers (or Abstract-ish)\n    Provider,\n    BaseProvider,\n\n    Resolver,\n\n    UrlJsonRpcProvider,\n\n    ///////////////////////\n    // Concrete Providers\n\n    FallbackProvider,\n\n    AlchemyProvider,\n    AlchemyWebSocketProvider,\n    AnkrProvider,\n    CloudflareProvider,\n    EtherscanProvider,\n    InfuraProvider,\n    InfuraWebSocketProvider,\n    JsonRpcProvider,\n    JsonRpcBatchProvider,\n    NodesmithProvider,\n    PocketProvider,\n    StaticJsonRpcProvider,\n    Web3Provider,\n    WebSocketProvider,\n\n    IpcProvider,\n\n\n    ///////////////////////\n    // Signer\n\n    JsonRpcSigner,\n\n\n    ///////////////////////\n    // Functions\n\n    getDefaultProvider,\n    getNetwork,\n    isCommunityResource,\n    isCommunityResourcable,\n    showThrottleMessage,\n\n\n    ///////////////////////\n    // Objects\n\n    Formatter,\n\n\n    ///////////////////////\n    // Types\n\n    Block,\n    BlockTag,\n    EventType,\n    FeeData,\n    Filter,\n    Log,\n    Listener,\n    TransactionReceipt,\n    TransactionRequest,\n    TransactionResponse,\n\n    ExternalProvider,\n    JsonRpcFetchFunc,\n\n    FallbackProviderConfig,\n\n    Network,\n    Networkish,\n\n    EnsProvider,\n    EnsResolver,\n\n    CommunityResourcable\n};\n\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","var Uint8arrays = (() => {\n  var Me = Object.defineProperty;\n  var jt = (t) => Me(t, \"__esModule\", { value: !0 });\n  var D = (t, e) => () => (t && (e = t((t = 0))), e);\n  var j = (t, e) => () => (e || t((e = { exports: {} }).exports, e), e.exports),\n    d = (t, e) => {\n      jt(t);\n      for (var r in e) Me(t, r, { get: e[r], enumerable: !0 });\n    };\n  var Oe = j((ee) => {\n    \"use strict\";\n    Object.defineProperty(ee, \"__esModule\", { value: !0 });\n    function Ft(t, e) {\n      for (let r = 0; r < t.byteLength; r++) {\n        if (t[r] < e[r]) return -1;\n        if (t[r] > e[r]) return 1;\n      }\n      return t.byteLength > e.byteLength\n        ? 1\n        : t.byteLength < e.byteLength\n        ? -1\n        : 0;\n    }\n    ee.compare = Ft;\n  });\n  var Ie = j((te) => {\n    \"use strict\";\n    Object.defineProperty(te, \"__esModule\", { value: !0 });\n    function St(t, e) {\n      e || (e = t.reduce((o, n) => o + n.length, 0));\n      let r = new Uint8Array(e),\n        s = 0;\n      for (let o of t) r.set(o, s), (s += o.length);\n      return r;\n    }\n    te.concat = St;\n  });\n  var Le = j((re) => {\n    \"use strict\";\n    Object.defineProperty(re, \"__esModule\", { value: !0 });\n    function Bt(t, e) {\n      if (t === e) return !0;\n      if (t.byteLength !== e.byteLength) return !1;\n      for (let r = 0; r < t.byteLength; r++) if (t[r] !== e[r]) return !1;\n      return !0;\n    }\n    re.equals = Bt;\n  });\n  function Ut(t, e) {\n    if (t.length >= 255) throw new TypeError(\"Alphabet too long\");\n    for (var r = new Uint8Array(256), s = 0; s < r.length; s++) r[s] = 255;\n    for (var o = 0; o < t.length; o++) {\n      var n = t.charAt(o),\n        i = n.charCodeAt(0);\n      if (r[i] !== 255) throw new TypeError(n + \" is ambiguous\");\n      r[i] = o;\n    }\n    var c = t.length,\n      f = t.charAt(0),\n      L = Math.log(c) / Math.log(256),\n      b = Math.log(256) / Math.log(c);\n    function q(u) {\n      if (\n        (u instanceof Uint8Array ||\n          (ArrayBuffer.isView(u)\n            ? (u = new Uint8Array(u.buffer, u.byteOffset, u.byteLength))\n            : Array.isArray(u) && (u = Uint8Array.from(u))),\n        !(u instanceof Uint8Array))\n      )\n        throw new TypeError(\"Expected Uint8Array\");\n      if (u.length === 0) return \"\";\n      for (var p = 0, M = 0, C = 0, w = u.length; C !== w && u[C] === 0; )\n        C++, p++;\n      for (var y = ((w - C) * b + 1) >>> 0, l = new Uint8Array(y); C !== w; ) {\n        for (\n          var x = u[C], F = 0, E = y - 1;\n          (x !== 0 || F < M) && E !== -1;\n          E--, F++\n        )\n          (x += (256 * l[E]) >>> 0), (l[E] = x % c >>> 0), (x = (x / c) >>> 0);\n        if (x !== 0) throw new Error(\"Non-zero carry\");\n        (M = F), C++;\n      }\n      for (var A = y - M; A !== y && l[A] === 0; ) A++;\n      for (var J = f.repeat(p); A < y; ++A) J += t.charAt(l[A]);\n      return J;\n    }\n    function R(u) {\n      if (typeof u != \"string\") throw new TypeError(\"Expected String\");\n      if (u.length === 0) return new Uint8Array();\n      var p = 0;\n      if (u[p] !== \" \") {\n        for (var M = 0, C = 0; u[p] === f; ) M++, p++;\n        for (\n          var w = ((u.length - p) * L + 1) >>> 0, y = new Uint8Array(w);\n          u[p];\n\n        ) {\n          var l = r[u.charCodeAt(p)];\n          if (l === 255) return;\n          for (var x = 0, F = w - 1; (l !== 0 || x < C) && F !== -1; F--, x++)\n            (l += (c * y[F]) >>> 0),\n              (y[F] = l % 256 >>> 0),\n              (l = (l / 256) >>> 0);\n          if (l !== 0) throw new Error(\"Non-zero carry\");\n          (C = x), p++;\n        }\n        if (u[p] !== \" \") {\n          for (var E = w - C; E !== w && y[E] === 0; ) E++;\n          for (var A = new Uint8Array(M + (w - E)), J = M; E !== w; )\n            A[J++] = y[E++];\n          return A;\n        }\n      }\n    }\n    function At(u) {\n      var p = R(u);\n      if (p) return p;\n      throw new Error(`Non-${e} character`);\n    }\n    return { encode: q, decodeUnsafe: R, decode: At };\n  }\n  var zt,\n    Mt,\n    qe,\n    Ne = D(() => {\n      (zt = Ut), (Mt = zt), (qe = Mt);\n    });\n  var X = {};\n  d(X, {\n    coerce: () => m,\n    empty: () => Pe,\n    equals: () => se,\n    fromHex: () => It,\n    fromString: () => oe,\n    isBinary: () => Lt,\n    toHex: () => Ot,\n    toString: () => ne,\n  });\n  var Pe,\n    Ot,\n    It,\n    se,\n    m,\n    Lt,\n    oe,\n    ne,\n    S = D(() => {\n      (Pe = new Uint8Array(0)),\n        (Ot = (t) =>\n          t.reduce((e, r) => e + r.toString(16).padStart(2, \"0\"), \"\")),\n        (It = (t) => {\n          let e = t.match(/../g);\n          return e ? new Uint8Array(e.map((r) => parseInt(r, 16))) : Pe;\n        }),\n        (se = (t, e) => {\n          if (t === e) return !0;\n          if (t.byteLength !== e.byteLength) return !1;\n          for (let r = 0; r < t.byteLength; r++) if (t[r] !== e[r]) return !1;\n          return !0;\n        }),\n        (m = (t) => {\n          if (t instanceof Uint8Array && t.constructor.name === \"Uint8Array\")\n            return t;\n          if (t instanceof ArrayBuffer) return new Uint8Array(t);\n          if (ArrayBuffer.isView(t))\n            return new Uint8Array(t.buffer, t.byteOffset, t.byteLength);\n          throw new Error(\"Unknown type, must be binary type\");\n        }),\n        (Lt = (t) => t instanceof ArrayBuffer || ArrayBuffer.isView(t)),\n        (oe = (t) => new TextEncoder().encode(t)),\n        (ne = (t) => new TextDecoder().decode(t));\n    });\n  var Te,\n    Ve,\n    ke,\n    $e,\n    _e,\n    N,\n    B,\n    qt,\n    Nt,\n    a,\n    g = D(() => {\n      Ne();\n      S();\n      (Te = class {\n        constructor(e, r, s) {\n          (this.name = e), (this.prefix = r), (this.baseEncode = s);\n        }\n        encode(e) {\n          if (e instanceof Uint8Array)\n            return `${this.prefix}${this.baseEncode(e)}`;\n          throw Error(\"Unknown type, must be binary type\");\n        }\n      }),\n        (Ve = class {\n          constructor(e, r, s) {\n            if (\n              ((this.name = e), (this.prefix = r), r.codePointAt(0) === void 0)\n            )\n              throw new Error(\"Invalid prefix character\");\n            (this.prefixCodePoint = r.codePointAt(0)), (this.baseDecode = s);\n          }\n          decode(e) {\n            if (typeof e == \"string\") {\n              if (e.codePointAt(0) !== this.prefixCodePoint)\n                throw Error(\n                  `Unable to decode multibase string ${JSON.stringify(e)}, ${\n                    this.name\n                  } decoder only supports inputs prefixed with ${this.prefix}`\n                );\n              return this.baseDecode(e.slice(this.prefix.length));\n            } else throw Error(\"Can only multibase decode strings\");\n          }\n          or(e) {\n            return $e(this, e);\n          }\n        }),\n        (ke = class {\n          constructor(e) {\n            this.decoders = e;\n          }\n          or(e) {\n            return $e(this, e);\n          }\n          decode(e) {\n            let r = e[0],\n              s = this.decoders[r];\n            if (s) return s.decode(e);\n            throw RangeError(\n              `Unable to decode multibase string ${JSON.stringify(\n                e\n              )}, only inputs prefixed with ${Object.keys(\n                this.decoders\n              )} are supported`\n            );\n          }\n        }),\n        ($e = (t, e) =>\n          new ke({\n            ...(t.decoders || { [t.prefix]: t }),\n            ...(e.decoders || { [e.prefix]: e }),\n          })),\n        (_e = class {\n          constructor(e, r, s, o) {\n            (this.name = e),\n              (this.prefix = r),\n              (this.baseEncode = s),\n              (this.baseDecode = o),\n              (this.encoder = new Te(e, r, s)),\n              (this.decoder = new Ve(e, r, o));\n          }\n          encode(e) {\n            return this.encoder.encode(e);\n          }\n          decode(e) {\n            return this.decoder.decode(e);\n          }\n        }),\n        (N = ({ name: t, prefix: e, encode: r, decode: s }) =>\n          new _e(t, e, r, s)),\n        (B = ({ prefix: t, name: e, alphabet: r }) => {\n          let { encode: s, decode: o } = qe(r, e);\n          return N({ prefix: t, name: e, encode: s, decode: (n) => m(o(n)) });\n        }),\n        (qt = (t, e, r, s) => {\n          let o = {};\n          for (let b = 0; b < e.length; ++b) o[e[b]] = b;\n          let n = t.length;\n          for (; t[n - 1] === \"=\"; ) --n;\n          let i = new Uint8Array(((n * r) / 8) | 0),\n            c = 0,\n            f = 0,\n            L = 0;\n          for (let b = 0; b < n; ++b) {\n            let q = o[t[b]];\n            if (q === void 0) throw new SyntaxError(`Non-${s} character`);\n            (f = (f << r) | q),\n              (c += r),\n              c >= 8 && ((c -= 8), (i[L++] = 255 & (f >> c)));\n          }\n          if (c >= r || 255 & (f << (8 - c)))\n            throw new SyntaxError(\"Unexpected end of data\");\n          return i;\n        }),\n        (Nt = (t, e, r) => {\n          let s = e[e.length - 1] === \"=\",\n            o = (1 << r) - 1,\n            n = \"\",\n            i = 0,\n            c = 0;\n          for (let f = 0; f < t.length; ++f)\n            for (c = (c << 8) | t[f], i += 8; i > r; )\n              (i -= r), (n += e[o & (c >> i)]);\n          if ((i && (n += e[o & (c << (r - i))]), s))\n            for (; (n.length * r) & 7; ) n += \"=\";\n          return n;\n        }),\n        (a = ({ name: t, prefix: e, bitsPerChar: r, alphabet: s }) =>\n          N({\n            prefix: e,\n            name: t,\n            encode(o) {\n              return Nt(o, s, r);\n            },\n            decode(o) {\n              return qt(o, s, r, t);\n            },\n          }));\n    });\n  var ue = {};\n  d(ue, { identity: () => Pt });\n  var Pt,\n    Re = D(() => {\n      g();\n      S();\n      Pt = N({\n        prefix: \"\\0\",\n        name: \"identity\",\n        encode: (t) => ne(t),\n        decode: (t) => oe(t),\n      });\n    });\n  var De = {};\n  d(De, { base2: () => Tt });\n  var Tt,\n    Je = D(() => {\n      g();\n      Tt = a({ prefix: \"0\", name: \"base2\", alphabet: \"01\", bitsPerChar: 1 });\n    });\n  var ie = {};\n  d(ie, { base8: () => Vt });\n  var Vt,\n    Xe = D(() => {\n      g();\n      Vt = a({\n        prefix: \"7\",\n        name: \"base8\",\n        alphabet: \"01234567\",\n        bitsPerChar: 3,\n      });\n    });\n  var ae = {};\n  d(ae, { base10: () => kt });\n  var kt,\n    Ge = D(() => {\n      g();\n      kt = B({ prefix: \"9\", name: \"base10\", alphabet: \"0123456789\" });\n    });\n  var ce = {};\n  d(ce, { base16: () => $t, base16upper: () => _t });\n  var $t,\n    _t,\n    Ke = D(() => {\n      g();\n      ($t = a({\n        prefix: \"f\",\n        name: \"base16\",\n        alphabet: \"0123456789abcdef\",\n        bitsPerChar: 4,\n      })),\n        (_t = a({\n          prefix: \"F\",\n          name: \"base16upper\",\n          alphabet: \"0123456789ABCDEF\",\n          bitsPerChar: 4,\n        }));\n    });\n  var de = {};\n  d(de, {\n    base32: () => P,\n    base32hex: () => Gt,\n    base32hexpad: () => Qt,\n    base32hexpadupper: () => Ht,\n    base32hexupper: () => Kt,\n    base32pad: () => Jt,\n    base32padupper: () => Xt,\n    base32upper: () => Rt,\n    base32z: () => Wt,\n  });\n  var P,\n    Rt,\n    Jt,\n    Xt,\n    Gt,\n    Kt,\n    Qt,\n    Ht,\n    Wt,\n    he = D(() => {\n      g();\n      (P = a({\n        prefix: \"b\",\n        name: \"base32\",\n        alphabet: \"abcdefghijklmnopqrstuvwxyz234567\",\n        bitsPerChar: 5,\n      })),\n        (Rt = a({\n          prefix: \"B\",\n          name: \"base32upper\",\n          alphabet: \"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567\",\n          bitsPerChar: 5,\n        })),\n        (Jt = a({\n          prefix: \"c\",\n          name: \"base32pad\",\n          alphabet: \"abcdefghijklmnopqrstuvwxyz234567=\",\n          bitsPerChar: 5,\n        })),\n        (Xt = a({\n          prefix: \"C\",\n          name: \"base32padupper\",\n          alphabet: \"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=\",\n          bitsPerChar: 5,\n        })),\n        (Gt = a({\n          prefix: \"v\",\n          name: \"base32hex\",\n          alphabet: \"0123456789abcdefghijklmnopqrstuv\",\n          bitsPerChar: 5,\n        })),\n        (Kt = a({\n          prefix: \"V\",\n          name: \"base32hexupper\",\n          alphabet: \"0123456789ABCDEFGHIJKLMNOPQRSTUV\",\n          bitsPerChar: 5,\n        })),\n        (Qt = a({\n          prefix: \"t\",\n          name: \"base32hexpad\",\n          alphabet: \"0123456789abcdefghijklmnopqrstuv=\",\n          bitsPerChar: 5,\n        })),\n        (Ht = a({\n          prefix: \"T\",\n          name: \"base32hexpadupper\",\n          alphabet: \"0123456789ABCDEFGHIJKLMNOPQRSTUV=\",\n          bitsPerChar: 5,\n        })),\n        (Wt = a({\n          prefix: \"h\",\n          name: \"base32z\",\n          alphabet: \"ybndrfg8ejkmcpqxot1uwisza345h769\",\n          bitsPerChar: 5,\n        }));\n    });\n  var fe = {};\n  d(fe, { base36: () => Zt, base36upper: () => Yt });\n  var Zt,\n    Yt,\n    Qe = D(() => {\n      g();\n      (Zt = B({\n        prefix: \"k\",\n        name: \"base36\",\n        alphabet: \"0123456789abcdefghijklmnopqrstuvwxyz\",\n      })),\n        (Yt = B({\n          prefix: \"K\",\n          name: \"base36upper\",\n          alphabet: \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\",\n        }));\n    });\n  var pe = {};\n  d(pe, { base58btc: () => v, base58flickr: () => er });\n  var v,\n    er,\n    be = D(() => {\n      g();\n      (v = B({\n        name: \"base58btc\",\n        prefix: \"z\",\n        alphabet: \"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\",\n      })),\n        (er = B({\n          name: \"base58flickr\",\n          prefix: \"Z\",\n          alphabet:\n            \"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ\",\n        }));\n    });\n  var le = {};\n  d(le, {\n    base64: () => tr,\n    base64pad: () => rr,\n    base64url: () => sr,\n    base64urlpad: () => or,\n  });\n  var tr,\n    rr,\n    sr,\n    or,\n    He = D(() => {\n      g();\n      (tr = a({\n        prefix: \"m\",\n        name: \"base64\",\n        alphabet:\n          \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\",\n        bitsPerChar: 6,\n      })),\n        (rr = a({\n          prefix: \"M\",\n          name: \"base64pad\",\n          alphabet:\n            \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\",\n          bitsPerChar: 6,\n        })),\n        (sr = a({\n          prefix: \"u\",\n          name: \"base64url\",\n          alphabet:\n            \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_\",\n          bitsPerChar: 6,\n        })),\n        (or = a({\n          prefix: \"U\",\n          name: \"base64urlpad\",\n          alphabet:\n            \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=\",\n          bitsPerChar: 6,\n        }));\n    });\n  var me = {};\n  d(me, { base256emoji: () => ar });\n  function Dr(t) {\n    return t.reduce((e, r) => ((e += nr[r]), e), \"\");\n  }\n  function ir(t) {\n    let e = [];\n    for (let r of t) {\n      let s = ur[r.codePointAt(0)];\n      if (s === void 0) throw new Error(`Non-base256emoji character: ${r}`);\n      e.push(s);\n    }\n    return new Uint8Array(e);\n  }\n  var We,\n    nr,\n    ur,\n    ar,\n    Ze = D(() => {\n      g();\n      (We = Array.from(\n        \"\\u{1F680}\\u{1FA90}\\u2604\\u{1F6F0}\\u{1F30C}\\u{1F311}\\u{1F312}\\u{1F313}\\u{1F314}\\u{1F315}\\u{1F316}\\u{1F317}\\u{1F318}\\u{1F30D}\\u{1F30F}\\u{1F30E}\\u{1F409}\\u2600\\u{1F4BB}\\u{1F5A5}\\u{1F4BE}\\u{1F4BF}\\u{1F602}\\u2764\\u{1F60D}\\u{1F923}\\u{1F60A}\\u{1F64F}\\u{1F495}\\u{1F62D}\\u{1F618}\\u{1F44D}\\u{1F605}\\u{1F44F}\\u{1F601}\\u{1F525}\\u{1F970}\\u{1F494}\\u{1F496}\\u{1F499}\\u{1F622}\\u{1F914}\\u{1F606}\\u{1F644}\\u{1F4AA}\\u{1F609}\\u263A\\u{1F44C}\\u{1F917}\\u{1F49C}\\u{1F614}\\u{1F60E}\\u{1F607}\\u{1F339}\\u{1F926}\\u{1F389}\\u{1F49E}\\u270C\\u2728\\u{1F937}\\u{1F631}\\u{1F60C}\\u{1F338}\\u{1F64C}\\u{1F60B}\\u{1F497}\\u{1F49A}\\u{1F60F}\\u{1F49B}\\u{1F642}\\u{1F493}\\u{1F929}\\u{1F604}\\u{1F600}\\u{1F5A4}\\u{1F603}\\u{1F4AF}\\u{1F648}\\u{1F447}\\u{1F3B6}\\u{1F612}\\u{1F92D}\\u2763\\u{1F61C}\\u{1F48B}\\u{1F440}\\u{1F62A}\\u{1F611}\\u{1F4A5}\\u{1F64B}\\u{1F61E}\\u{1F629}\\u{1F621}\\u{1F92A}\\u{1F44A}\\u{1F973}\\u{1F625}\\u{1F924}\\u{1F449}\\u{1F483}\\u{1F633}\\u270B\\u{1F61A}\\u{1F61D}\\u{1F634}\\u{1F31F}\\u{1F62C}\\u{1F643}\\u{1F340}\\u{1F337}\\u{1F63B}\\u{1F613}\\u2B50\\u2705\\u{1F97A}\\u{1F308}\\u{1F608}\\u{1F918}\\u{1F4A6}\\u2714\\u{1F623}\\u{1F3C3}\\u{1F490}\\u2639\\u{1F38A}\\u{1F498}\\u{1F620}\\u261D\\u{1F615}\\u{1F33A}\\u{1F382}\\u{1F33B}\\u{1F610}\\u{1F595}\\u{1F49D}\\u{1F64A}\\u{1F639}\\u{1F5E3}\\u{1F4AB}\\u{1F480}\\u{1F451}\\u{1F3B5}\\u{1F91E}\\u{1F61B}\\u{1F534}\\u{1F624}\\u{1F33C}\\u{1F62B}\\u26BD\\u{1F919}\\u2615\\u{1F3C6}\\u{1F92B}\\u{1F448}\\u{1F62E}\\u{1F646}\\u{1F37B}\\u{1F343}\\u{1F436}\\u{1F481}\\u{1F632}\\u{1F33F}\\u{1F9E1}\\u{1F381}\\u26A1\\u{1F31E}\\u{1F388}\\u274C\\u270A\\u{1F44B}\\u{1F630}\\u{1F928}\\u{1F636}\\u{1F91D}\\u{1F6B6}\\u{1F4B0}\\u{1F353}\\u{1F4A2}\\u{1F91F}\\u{1F641}\\u{1F6A8}\\u{1F4A8}\\u{1F92C}\\u2708\\u{1F380}\\u{1F37A}\\u{1F913}\\u{1F619}\\u{1F49F}\\u{1F331}\\u{1F616}\\u{1F476}\\u{1F974}\\u25B6\\u27A1\\u2753\\u{1F48E}\\u{1F4B8}\\u2B07\\u{1F628}\\u{1F31A}\\u{1F98B}\\u{1F637}\\u{1F57A}\\u26A0\\u{1F645}\\u{1F61F}\\u{1F635}\\u{1F44E}\\u{1F932}\\u{1F920}\\u{1F927}\\u{1F4CC}\\u{1F535}\\u{1F485}\\u{1F9D0}\\u{1F43E}\\u{1F352}\\u{1F617}\\u{1F911}\\u{1F30A}\\u{1F92F}\\u{1F437}\\u260E\\u{1F4A7}\\u{1F62F}\\u{1F486}\\u{1F446}\\u{1F3A4}\\u{1F647}\\u{1F351}\\u2744\\u{1F334}\\u{1F4A3}\\u{1F438}\\u{1F48C}\\u{1F4CD}\\u{1F940}\\u{1F922}\\u{1F445}\\u{1F4A1}\\u{1F4A9}\\u{1F450}\\u{1F4F8}\\u{1F47B}\\u{1F910}\\u{1F92E}\\u{1F3BC}\\u{1F975}\\u{1F6A9}\\u{1F34E}\\u{1F34A}\\u{1F47C}\\u{1F48D}\\u{1F4E3}\\u{1F942}\"\n      )),\n        (nr = We.reduce((t, e, r) => ((t[r] = e), t), [])),\n        (ur = We.reduce((t, e, r) => ((t[e.codePointAt(0)] = r), t), []));\n      ar = N({\n        prefix: \"\\u{1F680}\",\n        name: \"base256emoji\",\n        encode: Dr,\n        decode: ir,\n      });\n    });\n  function et(t, e, r) {\n    (e = e || []), (r = r || 0);\n    for (var s = r; t >= fr; ) (e[r++] = (t & 255) | Ye), (t /= 128);\n    for (; t & hr; ) (e[r++] = (t & 255) | Ye), (t >>>= 7);\n    return (e[r] = t | 0), (et.bytes = r - s + 1), e;\n  }\n  function Ce(t, e) {\n    var r = 0,\n      e = e || 0,\n      s = 0,\n      o = e,\n      n,\n      i = t.length;\n    do {\n      if (o >= i)\n        throw ((Ce.bytes = 0), new RangeError(\"Could not decode varint\"));\n      (n = t[o++]),\n        (r += s < 28 ? (n & tt) << s : (n & tt) * Math.pow(2, s)),\n        (s += 7);\n    } while (n >= br);\n    return (Ce.bytes = o - e), r;\n  }\n  var cr,\n    Ye,\n    dr,\n    hr,\n    fr,\n    pr,\n    br,\n    tt,\n    lr,\n    mr,\n    Cr,\n    Er,\n    gr,\n    wr,\n    yr,\n    xr,\n    vr,\n    Ar,\n    jr,\n    Fr,\n    k,\n    rt = D(() => {\n      (cr = et), (Ye = 128), (dr = 127), (hr = ~dr), (fr = Math.pow(2, 31));\n      (pr = Ce), (br = 128), (tt = 127);\n      (lr = Math.pow(2, 7)),\n        (mr = Math.pow(2, 14)),\n        (Cr = Math.pow(2, 21)),\n        (Er = Math.pow(2, 28)),\n        (gr = Math.pow(2, 35)),\n        (wr = Math.pow(2, 42)),\n        (yr = Math.pow(2, 49)),\n        (xr = Math.pow(2, 56)),\n        (vr = Math.pow(2, 63)),\n        (Ar = function (t) {\n          return t < lr\n            ? 1\n            : t < mr\n            ? 2\n            : t < Cr\n            ? 3\n            : t < Er\n            ? 4\n            : t < gr\n            ? 5\n            : t < wr\n            ? 6\n            : t < yr\n            ? 7\n            : t < xr\n            ? 8\n            : t < vr\n            ? 9\n            : 10;\n        }),\n        (jr = { encode: cr, decode: pr, encodingLength: Ar }),\n        (Fr = jr),\n        (k = Fr);\n    });\n  var G = {};\n  d(G, { decode: () => T, encodeTo: () => O, encodingLength: () => I });\n  var T,\n    O,\n    I,\n    K = D(() => {\n      rt();\n      (T = (t) => [k.decode(t), k.decode.bytes]),\n        (O = (t, e, r = 0) => (k.encode(t, e, r), e)),\n        (I = (t) => k.encodingLength(t));\n    });\n  var Q = {};\n  d(Q, {\n    Digest: () => V,\n    create: () => U,\n    decode: () => Ee,\n    equals: () => ge,\n  });\n  var U,\n    Ee,\n    ge,\n    V,\n    $ = D(() => {\n      S();\n      K();\n      (U = (t, e) => {\n        let r = e.byteLength,\n          s = I(t),\n          o = s + I(r),\n          n = new Uint8Array(o + r);\n        return O(t, n, 0), O(r, n, s), n.set(e, o), new V(t, r, e, n);\n      }),\n        (Ee = (t) => {\n          let e = m(t),\n            [r, s] = T(e),\n            [o, n] = T(e.subarray(s)),\n            i = e.subarray(s + n);\n          if (i.byteLength !== o) throw new Error(\"Incorrect length\");\n          return new V(r, o, i, e);\n        }),\n        (ge = (t, e) =>\n          t === e\n            ? !0\n            : t.code === e.code && t.size === e.size && se(t.bytes, e.bytes)),\n        (V = class {\n          constructor(e, r, s, o) {\n            (this.code = e),\n              (this.size = r),\n              (this.digest = s),\n              (this.bytes = o);\n          }\n        });\n    });\n  var W = {};\n  d(W, { Hasher: () => we, from: () => H });\n  var H,\n    we,\n    ye = D(() => {\n      $();\n      (H = ({ name: t, code: e, encode: r }) => new we(t, e, r)),\n        (we = class {\n          constructor(e, r, s) {\n            (this.name = e), (this.code = r), (this.encode = s);\n          }\n          digest(e) {\n            if (e instanceof Uint8Array) {\n              let r = this.encode(e);\n              return r instanceof Uint8Array\n                ? U(this.code, r)\n                : r.then((s) => U(this.code, s));\n            } else throw Error(\"Unknown type, must be binary type\");\n          }\n        });\n    });\n  var xe = {};\n  d(xe, { sha256: () => Sr, sha512: () => Br });\n  var st,\n    Sr,\n    Br,\n    ot = D(() => {\n      ye();\n      (st = (t) => async (e) =>\n        new Uint8Array(await crypto.subtle.digest(t, e))),\n        (Sr = H({ name: \"sha2-256\", code: 18, encode: st(\"SHA-256\") })),\n        (Br = H({ name: \"sha2-512\", code: 19, encode: st(\"SHA-512\") }));\n    });\n  var ve = {};\n  d(ve, { identity: () => Mr });\n  var nt,\n    Ur,\n    ut,\n    zr,\n    Mr,\n    Dt = D(() => {\n      S();\n      $();\n      (nt = 0),\n        (Ur = \"identity\"),\n        (ut = m),\n        (zr = (t) => U(nt, ut(t))),\n        (Mr = { code: nt, name: Ur, encode: ut, digest: zr });\n    });\n  var Ae = {};\n  d(Ae, {\n    code: () => Ir,\n    decode: () => qr,\n    encode: () => Lr,\n    name: () => Or,\n  });\n  var Or,\n    Ir,\n    Lr,\n    qr,\n    it = D(() => {\n      S();\n      (Or = \"raw\"), (Ir = 85), (Lr = (t) => m(t)), (qr = (t) => m(t));\n    });\n  var je = {};\n  d(je, {\n    code: () => Vr,\n    decode: () => $r,\n    encode: () => kr,\n    name: () => Tr,\n  });\n  var Nr,\n    Pr,\n    Tr,\n    Vr,\n    kr,\n    $r,\n    at = D(() => {\n      (Nr = new TextEncoder()),\n        (Pr = new TextDecoder()),\n        (Tr = \"json\"),\n        (Vr = 512),\n        (kr = (t) => Nr.encode(JSON.stringify(t))),\n        ($r = (t) => JSON.parse(Pr.decode(t)));\n    });\n  var h,\n    _r,\n    Rr,\n    Jr,\n    _,\n    Xr,\n    ct,\n    dt,\n    Z,\n    Y,\n    Gr,\n    Kr,\n    Qr,\n    ht = D(() => {\n      K();\n      $();\n      be();\n      he();\n      S();\n      (h = class {\n        constructor(e, r, s, o) {\n          (this.code = r),\n            (this.version = e),\n            (this.multihash = s),\n            (this.bytes = o),\n            (this.byteOffset = o.byteOffset),\n            (this.byteLength = o.byteLength),\n            (this.asCID = this),\n            (this._baseCache = new Map()),\n            Object.defineProperties(this, {\n              byteOffset: Y,\n              byteLength: Y,\n              code: Z,\n              version: Z,\n              multihash: Z,\n              bytes: Z,\n              _baseCache: Y,\n              asCID: Y,\n            });\n        }\n        toV0() {\n          switch (this.version) {\n            case 0:\n              return this;\n            default: {\n              let { code: e, multihash: r } = this;\n              if (e !== _)\n                throw new Error(\"Cannot convert a non dag-pb CID to CIDv0\");\n              if (r.code !== Xr)\n                throw new Error(\n                  \"Cannot convert non sha2-256 multihash CID to CIDv0\"\n                );\n              return h.createV0(r);\n            }\n          }\n        }\n        toV1() {\n          switch (this.version) {\n            case 0: {\n              let { code: e, digest: r } = this.multihash,\n                s = U(e, r);\n              return h.createV1(this.code, s);\n            }\n            case 1:\n              return this;\n            default:\n              throw Error(\n                `Can not convert CID version ${this.version} to version 0. This is a bug please report`\n              );\n          }\n        }\n        equals(e) {\n          return (\n            e &&\n            this.code === e.code &&\n            this.version === e.version &&\n            ge(this.multihash, e.multihash)\n          );\n        }\n        toString(e) {\n          let { bytes: r, version: s, _baseCache: o } = this;\n          switch (s) {\n            case 0:\n              return Rr(r, o, e || v.encoder);\n            default:\n              return Jr(r, o, e || P.encoder);\n          }\n        }\n        toJSON() {\n          return {\n            code: this.code,\n            version: this.version,\n            hash: this.multihash.bytes,\n          };\n        }\n        get [Symbol.toStringTag]() {\n          return \"CID\";\n        }\n        [Symbol.for(\"nodejs.util.inspect.custom\")]() {\n          return \"CID(\" + this.toString() + \")\";\n        }\n        static isCID(e) {\n          return Kr(/^0\\.0/, Qr), !!(e && (e[dt] || e.asCID === e));\n        }\n        get toBaseEncodedString() {\n          throw new Error(\"Deprecated, use .toString()\");\n        }\n        get codec() {\n          throw new Error(\n            '\"codec\" property is deprecated, use integer \"code\" property instead'\n          );\n        }\n        get buffer() {\n          throw new Error(\n            \"Deprecated .buffer property, use .bytes to get Uint8Array instead\"\n          );\n        }\n        get multibaseName() {\n          throw new Error('\"multibaseName\" property is deprecated');\n        }\n        get prefix() {\n          throw new Error('\"prefix\" property is deprecated');\n        }\n        static asCID(e) {\n          if (e instanceof h) return e;\n          if (e != null && e.asCID === e) {\n            let { version: r, code: s, multihash: o, bytes: n } = e;\n            return new h(r, s, o, n || ct(r, s, o.bytes));\n          } else if (e != null && e[dt] === !0) {\n            let { version: r, multihash: s, code: o } = e,\n              n = Ee(s);\n            return h.create(r, o, n);\n          } else return null;\n        }\n        static create(e, r, s) {\n          if (typeof r != \"number\")\n            throw new Error(\"String codecs are no longer supported\");\n          switch (e) {\n            case 0: {\n              if (r !== _)\n                throw new Error(\n                  `Version 0 CID must use dag-pb (code: ${_}) block encoding`\n                );\n              return new h(e, r, s, s.bytes);\n            }\n            case 1: {\n              let o = ct(e, r, s.bytes);\n              return new h(e, r, s, o);\n            }\n            default:\n              throw new Error(\"Invalid version\");\n          }\n        }\n        static createV0(e) {\n          return h.create(0, _, e);\n        }\n        static createV1(e, r) {\n          return h.create(1, e, r);\n        }\n        static decode(e) {\n          let [r, s] = h.decodeFirst(e);\n          if (s.length) throw new Error(\"Incorrect length\");\n          return r;\n        }\n        static decodeFirst(e) {\n          let r = h.inspectBytes(e),\n            s = r.size - r.multihashSize,\n            o = m(e.subarray(s, s + r.multihashSize));\n          if (o.byteLength !== r.multihashSize)\n            throw new Error(\"Incorrect length\");\n          let n = o.subarray(r.multihashSize - r.digestSize),\n            i = new V(r.multihashCode, r.digestSize, n, o);\n          return [\n            r.version === 0 ? h.createV0(i) : h.createV1(r.codec, i),\n            e.subarray(r.size),\n          ];\n        }\n        static inspectBytes(e) {\n          let r = 0,\n            s = () => {\n              let [q, R] = T(e.subarray(r));\n              return (r += R), q;\n            },\n            o = s(),\n            n = _;\n          if (\n            (o === 18 ? ((o = 0), (r = 0)) : o === 1 && (n = s()),\n            o !== 0 && o !== 1)\n          )\n            throw new RangeError(`Invalid CID version ${o}`);\n          let i = r,\n            c = s(),\n            f = s(),\n            L = r + f,\n            b = L - i;\n          return {\n            version: o,\n            codec: n,\n            multihashCode: c,\n            digestSize: f,\n            multihashSize: b,\n            size: L,\n          };\n        }\n        static parse(e, r) {\n          let [s, o] = _r(e, r),\n            n = h.decode(o);\n          return n._baseCache.set(s, e), n;\n        }\n      }),\n        (_r = (t, e) => {\n          switch (t[0]) {\n            case \"Q\": {\n              let r = e || v;\n              return [v.prefix, r.decode(`${v.prefix}${t}`)];\n            }\n            case v.prefix: {\n              let r = e || v;\n              return [v.prefix, r.decode(t)];\n            }\n            case P.prefix: {\n              let r = e || P;\n              return [P.prefix, r.decode(t)];\n            }\n            default: {\n              if (e == null)\n                throw Error(\n                  \"To parse non base32 or base58btc encoded CID multibase decoder must be provided\"\n                );\n              return [t[0], e.decode(t)];\n            }\n          }\n        }),\n        (Rr = (t, e, r) => {\n          let { prefix: s } = r;\n          if (s !== v.prefix)\n            throw Error(`Cannot string encode V0 in ${r.name} encoding`);\n          let o = e.get(s);\n          if (o == null) {\n            let n = r.encode(t).slice(1);\n            return e.set(s, n), n;\n          } else return o;\n        }),\n        (Jr = (t, e, r) => {\n          let { prefix: s } = r,\n            o = e.get(s);\n          if (o == null) {\n            let n = r.encode(t);\n            return e.set(s, n), n;\n          } else return o;\n        }),\n        (_ = 112),\n        (Xr = 18),\n        (ct = (t, e, r) => {\n          let s = I(t),\n            o = s + I(e),\n            n = new Uint8Array(o + r.byteLength);\n          return O(t, n, 0), O(e, n, s), n.set(r, o), n;\n        }),\n        (dt = Symbol.for(\"@ipld/js-cid/CID\")),\n        (Z = { writable: !1, configurable: !1, enumerable: !0 }),\n        (Y = { writable: !1, enumerable: !1, configurable: !1 }),\n        (Gr = \"0.0.0-dev\"),\n        (Kr = (t, e) => {\n          if (t.test(Gr)) console.warn(e);\n          else throw new Error(e);\n        }),\n        (Qr = `CID.isCID(v) is deprecated and will be removed in the next major release.\n  Following code pattern:\n  \n  if (CID.isCID(value)) {\n    doSomethingWithCID(value)\n  }\n  \n  Is replaced with:\n  \n  const cid = CID.asCID(value)\n  if (cid) {\n    // Make sure to use cid instead of value\n    doSomethingWithCID(cid)\n  }\n  `);\n    });\n  var ft = D(() => {\n    ht();\n    K();\n    S();\n    ye();\n    $();\n  });\n  var pt = {};\n  d(pt, {\n    CID: () => h,\n    bases: () => Hr,\n    bytes: () => X,\n    codecs: () => Zr,\n    digest: () => Q,\n    hasher: () => W,\n    hashes: () => Wr,\n    varint: () => G,\n  });\n  var Hr,\n    Wr,\n    Zr,\n    bt = D(() => {\n      Re();\n      Je();\n      Xe();\n      Ge();\n      Ke();\n      he();\n      Qe();\n      be();\n      He();\n      Ze();\n      ot();\n      Dt();\n      it();\n      at();\n      ft();\n      (Hr = {\n        ...ue,\n        ...De,\n        ...ie,\n        ...ae,\n        ...ce,\n        ...de,\n        ...fe,\n        ...pe,\n        ...le,\n        ...me,\n      }),\n        (Wr = { ...xe, ...ve }),\n        (Zr = { raw: Ae, json: je });\n    });\n  var Se = j((Qs, Et) => {\n    \"use strict\";\n    var lt = (bt(), pt);\n    function mt(t, e, r, s) {\n      return {\n        name: t,\n        prefix: e,\n        encoder: { name: t, prefix: e, encode: r },\n        decoder: { decode: s },\n      };\n    }\n    var Ct = mt(\n        \"utf8\",\n        \"u\",\n        (t) => {\n          let e = new TextDecoder(\"utf8\");\n          return \"u\" + e.decode(t);\n        },\n        (t) => new TextEncoder().encode(t.substring(1))\n      ),\n      Fe = mt(\n        \"ascii\",\n        \"a\",\n        (t) => {\n          let e = \"a\";\n          for (let r = 0; r < t.length; r++) e += String.fromCharCode(t[r]);\n          return e;\n        },\n        (t) => {\n          t = t.substring(1);\n          let e = new Uint8Array(t.length);\n          for (let r = 0; r < t.length; r++) e[r] = t.charCodeAt(r);\n          return e;\n        }\n      ),\n      Yr = {\n        utf8: Ct,\n        \"utf-8\": Ct,\n        hex: lt.bases.base16,\n        latin1: Fe,\n        ascii: Fe,\n        binary: Fe,\n        ...lt.bases,\n      };\n    Et.exports = Yr;\n  });\n  var gt = j((Be) => {\n    \"use strict\";\n    Object.defineProperty(Be, \"__esModule\", { value: !0 });\n    var es = Se();\n    function ts(t, e = \"utf8\") {\n      let r = es[e];\n      if (!r) throw new Error(`Unsupported encoding \"${e}\"`);\n      return r.decoder.decode(`${r.prefix}${t}`);\n    }\n    Be.fromString = ts;\n  });\n  var wt = j((Ue) => {\n    \"use strict\";\n    Object.defineProperty(Ue, \"__esModule\", { value: !0 });\n    var rs = Se();\n    function ss(t, e = \"utf8\") {\n      let r = rs[e];\n      if (!r) throw new Error(`Unsupported encoding \"${e}\"`);\n      return r.encoder.encode(t).substring(1);\n    }\n    Ue.toString = ss;\n  });\n  var yt = j((ze) => {\n    \"use strict\";\n    Object.defineProperty(ze, \"__esModule\", { value: !0 });\n    function os(t, e) {\n      if (t.length !== e.length)\n        throw new Error(\"Inputs should have the same length\");\n      let r = new Uint8Array(t.length);\n      for (let s = 0; s < t.length; s++) r[s] = t[s] ^ e[s];\n      return r;\n    }\n    ze.xor = os;\n  });\n  var xt = j((z) => {\n    \"use strict\";\n    Object.defineProperty(z, \"__esModule\", { value: !0 });\n    var ns = Oe(),\n      us = Ie(),\n      Ds = Le(),\n      is = gt(),\n      as = wt(),\n      cs = yt();\n    z.compare = ns.compare;\n    z.concat = us.concat;\n    z.equals = Ds.equals;\n    z.fromString = is.fromString;\n    z.toString = as.toString;\n    z.xor = cs.xor;\n  });\n  var ds = j((eo, vt) => {\n    vt.exports = xt();\n  });\n  return ds();\n})();\n\nexport default Uint8arrays;\n","import pako from \"pako\";\n\n// Contants\n\nconst skLen = 32; // bytes\nconst pkLen = 48; // bytes\nconst sigLen = 96; // bytes\nconst maxMsgLen = 1049600; // bytes\nconst maxCtLen = 1049600; // bytes\nconst decryptionShareLen = 48; // bytes\n\n// the number of bytes in a row derived from a BivarPoly\n// which varies depending on the threshold.\nconst row_sizes_by_threshold = [\n  40, // threshold 0\n  72, // threshold 1\n  104, // threshold 2\n  136, // threshold 3\n  168, // threshold 4\n  200, // threshold 5\n  232, // threshold 6\n  264, // threshold 7\n  296, // threshold 8\n  328, // threshold 9\n  360, // threshold 10\n];\n\n// the number of bytes in a commitment derived from a BivarPoly\n// which varies depending on the threshold.\nconst commitment_sizes_by_threshold = [\n  56, // threshold 0\n  104, // threshold 1\n  152, // threshold 2\n  200, // threshold 3\n  248, // threshold 4\n  296, // threshold 5\n  344, // threshold 6\n  392, // threshold 7\n  440, // threshold 8\n  488, // threshold 9\n  536, // threshold 10\n];\n\n// the number of bytes in the master secret key (Poly)\n// which varies depending on the threshold.\nconst poly_sizes_by_threshold = [\n  40, // threshold 0\n  72, // threshold 1\n  104, // threshold 2\n  136, // threshold 3\n  168, // threshold 4\n  200, // threshold 5\n  232, // threshold 6\n  264, // threshold 7\n  296, // threshold 8\n  328, // threshold 9\n  360, // threshold 10\n];\n// Encoding conversions\n\n// modified from https://stackoverflow.com/a/11058858\nfunction asciiToUint8Array(a) {\n  let b = new Uint8Array(a.length);\n  for (let i = 0; i < a.length; i++) {\n    b[i] = a.charCodeAt(i);\n  }\n  return b;\n}\n// https://stackoverflow.com/a/19102224\n// TODO resolve RangeError possibility here, see SO comments\nfunction uint8ArrayToAscii(a) {\n  return String.fromCharCode.apply(null, a);\n}\n// https://stackoverflow.com/a/50868276\nfunction hexToUint8Array(h) {\n  if (h.length == 0) {\n    return new Uint8Array();\n  }\n  return new Uint8Array(h.match(/.{1,2}/g).map((byte) => parseInt(byte, 16)));\n}\nfunction uint8ArrayToHex(a) {\n  return a.reduce((str, byte) => str + byte.toString(16).padStart(2, \"0\"), \"\");\n}\nfunction uint8ArrayToByteStr(a) {\n  return \"[\" + a.join(\", \") + \"]\";\n}\n\n//https://gist.github.com/enepomnyaschih/72c423f727d395eeaa09697058238727\n/*\nMIT License\nCopyright (c) 2020 Egor Nepomnyaschih\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n*/\n\n/*\n// This constant can also be computed with the following algorithm:\nconst base64abc = [],\n    A = \"A\".charCodeAt(0),\n    a = \"a\".charCodeAt(0),\n    n = \"0\".charCodeAt(0);\nfor (let i = 0; i < 26; ++i) {\n    base64abc.push(String.fromCharCode(A + i));\n}\nfor (let i = 0; i < 26; ++i) {\n    base64abc.push(String.fromCharCode(a + i));\n}\nfor (let i = 0; i < 10; ++i) {\n    base64abc.push(String.fromCharCode(n + i));\n}\nbase64abc.push(\"+\");\nbase64abc.push(\"/\");\n*/\nconst base64abc = [\n  \"A\",\n  \"B\",\n  \"C\",\n  \"D\",\n  \"E\",\n  \"F\",\n  \"G\",\n  \"H\",\n  \"I\",\n  \"J\",\n  \"K\",\n  \"L\",\n  \"M\",\n  \"N\",\n  \"O\",\n  \"P\",\n  \"Q\",\n  \"R\",\n  \"S\",\n  \"T\",\n  \"U\",\n  \"V\",\n  \"W\",\n  \"X\",\n  \"Y\",\n  \"Z\",\n  \"a\",\n  \"b\",\n  \"c\",\n  \"d\",\n  \"e\",\n  \"f\",\n  \"g\",\n  \"h\",\n  \"i\",\n  \"j\",\n  \"k\",\n  \"l\",\n  \"m\",\n  \"n\",\n  \"o\",\n  \"p\",\n  \"q\",\n  \"r\",\n  \"s\",\n  \"t\",\n  \"u\",\n  \"v\",\n  \"w\",\n  \"x\",\n  \"y\",\n  \"z\",\n  \"0\",\n  \"1\",\n  \"2\",\n  \"3\",\n  \"4\",\n  \"5\",\n  \"6\",\n  \"7\",\n  \"8\",\n  \"9\",\n  \"+\",\n  \"/\",\n];\n\n/*\n// This constant can also be computed with the following algorithm:\nconst l = 256, base64codes = new Uint8Array(l);\nfor (let i = 0; i < l; ++i) {\n    base64codes[i] = 255; // invalid character\n}\nbase64abc.forEach((char, index) => {\n    base64codes[char.charCodeAt(0)] = index;\n});\nbase64codes[\"=\".charCodeAt(0)] = 0; // ignored anyway, so we just need to prevent an error\n*/\nconst base64codes = [\n  255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,\n  255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,\n  255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 62, 255, 255,\n  255, 63, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 255, 255, 255, 0, 255, 255,\n  255, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n  21, 22, 23, 24, 25, 255, 255, 255, 255, 255, 255, 26, 27, 28, 29, 30, 31, 32,\n  33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51,\n];\n\nfunction getBase64Code(charCode) {\n  if (charCode >= base64codes.length) {\n    throw new Error(\"Unable to parse base64 string.\");\n  }\n  const code = base64codes[charCode];\n  if (code === 255) {\n    throw new Error(\"Unable to parse base64 string.\");\n  }\n  return code;\n}\n\nexport function uint8ArrayToBase64(bytes) {\n  let result = \"\",\n    i,\n    l = bytes.length;\n  for (i = 2; i < l; i += 3) {\n    result += base64abc[bytes[i - 2] >> 2];\n    result += base64abc[((bytes[i - 2] & 0x03) << 4) | (bytes[i - 1] >> 4)];\n    result += base64abc[((bytes[i - 1] & 0x0f) << 2) | (bytes[i] >> 6)];\n    result += base64abc[bytes[i] & 0x3f];\n  }\n  if (i === l + 1) {\n    // 1 octet yet to write\n    result += base64abc[bytes[i - 2] >> 2];\n    result += base64abc[(bytes[i - 2] & 0x03) << 4];\n    result += \"==\";\n  }\n  if (i === l) {\n    // 2 octets yet to write\n    result += base64abc[bytes[i - 2] >> 2];\n    result += base64abc[((bytes[i - 2] & 0x03) << 4) | (bytes[i - 1] >> 4)];\n    result += base64abc[(bytes[i - 1] & 0x0f) << 2];\n    result += \"=\";\n  }\n  return result;\n}\n\nexport function base64ToUint8Array(str) {\n  if (str.length % 4 !== 0) {\n    throw new Error(\"Unable to parse base64 string.\");\n  }\n  const index = str.indexOf(\"=\");\n  if (index !== -1 && index < str.length - 2) {\n    throw new Error(\"Unable to parse base64 string.\");\n  }\n  let missingOctets = str.endsWith(\"==\") ? 2 : str.endsWith(\"=\") ? 1 : 0,\n    n = str.length,\n    result = new Uint8Array(3 * (n / 4)),\n    buffer;\n  for (let i = 0, j = 0; i < n; i += 4, j += 3) {\n    buffer =\n      (getBase64Code(str.charCodeAt(i)) << 18) |\n      (getBase64Code(str.charCodeAt(i + 1)) << 12) |\n      (getBase64Code(str.charCodeAt(i + 2)) << 6) |\n      getBase64Code(str.charCodeAt(i + 3));\n    result[j] = buffer >> 16;\n    result[j + 1] = (buffer >> 8) & 0xff;\n    result[j + 2] = buffer & 0xff;\n  }\n  return result.subarray(0, result.length - missingOctets);\n}\n\n// export function base64encode(str, encoder = new TextEncoder()) {\n// \treturn bytesToBase64(encoder.encode(str));\n// }\n\n// export function base64decode(str, decoder = new TextDecoder()) {\n// \treturn decoder.decode(base64ToBytes(str));\n// }\n\n// https://stackoverflow.com/a/12713326\n// function uint8ArrayToBase64(a) {\n//     return btoa(String.fromCharCode.apply(null, a));\n// }\n// function base64ToUint8Array(b) {\n//     return new Uint8Array(atob(b).split(\"\").map(function(c) {\n//             return c.charCodeAt(0);\n//     }));\n// }\n\nlet wasm;\n\nconst heap = new Array(32).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nfunction getObject(idx) {\n  return heap[idx];\n}\n\nlet heap_next = heap.length;\n\nfunction dropObject(idx) {\n  if (idx < 36) return;\n  heap[idx] = heap_next;\n  heap_next = idx;\n}\n\nfunction takeObject(idx) {\n  const ret = getObject(idx);\n  dropObject(idx);\n  return ret;\n}\n\nfunction addHeapObject(obj) {\n  if (heap_next === heap.length) heap.push(heap.length + 1);\n  const idx = heap_next;\n  heap_next = heap[idx];\n\n  heap[idx] = obj;\n  return idx;\n}\n\nlet cachedTextDecoder = new TextDecoder(\"utf-8\", {\n  ignoreBOM: true,\n  fatal: true,\n});\n\ncachedTextDecoder.decode();\n\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n  if (\n    cachegetUint8Memory0 === null ||\n    cachegetUint8Memory0.buffer !== wasm.memory.buffer\n  ) {\n    cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n  }\n  return cachegetUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n  return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nlet cachedTextEncoder = new TextEncoder(\"utf-8\");\n\nconst encodeString =\n  typeof cachedTextEncoder.encodeInto === \"function\"\n    ? function (arg, view) {\n        return cachedTextEncoder.encodeInto(arg, view);\n      }\n    : function (arg, view) {\n        const buf = cachedTextEncoder.encode(arg);\n        view.set(buf);\n        return {\n          read: arg.length,\n          written: buf.length,\n        };\n      };\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n  if (realloc === undefined) {\n    const buf = cachedTextEncoder.encode(arg);\n    const ptr = malloc(buf.length);\n    getUint8Memory0()\n      .subarray(ptr, ptr + buf.length)\n      .set(buf);\n    WASM_VECTOR_LEN = buf.length;\n    return ptr;\n  }\n\n  let len = arg.length;\n  let ptr = malloc(len);\n\n  const mem = getUint8Memory0();\n\n  let offset = 0;\n\n  for (; offset < len; offset++) {\n    const code = arg.charCodeAt(offset);\n    if (code > 0x7f) break;\n    mem[ptr + offset] = code;\n  }\n\n  if (offset !== len) {\n    if (offset !== 0) {\n      arg = arg.slice(offset);\n    }\n    ptr = realloc(ptr, len, (len = offset + arg.length * 3));\n    const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n    const ret = encodeString(arg, view);\n\n    offset += ret.written;\n  }\n\n  WASM_VECTOR_LEN = offset;\n  return ptr;\n}\n\nlet cachegetInt32Memory0 = null;\nfunction getInt32Memory0() {\n  if (\n    cachegetInt32Memory0 === null ||\n    cachegetInt32Memory0.buffer !== wasm.memory.buffer\n  ) {\n    cachegetInt32Memory0 = new Int32Array(wasm.memory.buffer);\n  }\n  return cachegetInt32Memory0;\n}\n/**\n * @private\n * @param {string} R_x\n * @param {string} R_y\n * @param {string} shares\n * @returns {string}\n */\nexport function combine_signature(R_x, R_y, shares) {\n  try {\n    const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n    var ptr0 = passStringToWasm0(\n      R_x,\n      wasm.__wbindgen_malloc,\n      wasm.__wbindgen_realloc\n    );\n    var len0 = WASM_VECTOR_LEN;\n    var ptr1 = passStringToWasm0(\n      R_y,\n      wasm.__wbindgen_malloc,\n      wasm.__wbindgen_realloc\n    );\n    var len1 = WASM_VECTOR_LEN;\n    var ptr2 = passStringToWasm0(\n      shares,\n      wasm.__wbindgen_malloc,\n      wasm.__wbindgen_realloc\n    );\n    var len2 = WASM_VECTOR_LEN;\n    wasm.combine_signature(retptr, ptr0, len0, ptr1, len1, ptr2, len2);\n    var r0 = getInt32Memory0()[retptr / 4 + 0];\n    var r1 = getInt32Memory0()[retptr / 4 + 1];\n    return getStringFromWasm0(r0, r1);\n  } finally {\n    wasm.__wbindgen_add_to_stack_pointer(16);\n    wasm.__wbindgen_free(r0, r1);\n  }\n}\n\nfunction handleError(f, args) {\n  try {\n    return f.apply(this, args);\n  } catch (e) {\n    wasm.__wbindgen_exn_store(addHeapObject(e));\n  }\n}\n\nfunction getArrayU8FromWasm0(ptr, len) {\n  return getUint8Memory0().subarray(ptr / 1, ptr / 1 + len);\n}\n\nasync function load(module, imports) {\n  if (typeof Response === \"function\" && module instanceof Response) {\n    if (typeof WebAssembly.instantiateStreaming === \"function\") {\n      try {\n        return await WebAssembly.instantiateStreaming(module, imports);\n      } catch (e) {\n        if (module.headers.get(\"Content-Type\") != \"application/wasm\") {\n          console.warn(\n            \"`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\n\",\n            e\n          );\n        } else {\n          throw e;\n        }\n      }\n    }\n\n    const bytes = await module.arrayBuffer();\n    return await WebAssembly.instantiate(bytes, imports);\n  } else {\n    const instance = await WebAssembly.instantiate(module, imports);\n\n    if (instance instanceof WebAssembly.Instance) {\n      return { instance, module };\n    } else {\n      return instance;\n    }\n  }\n}\n\nasync function init(input) {\n  const imports = {};\n  imports.wbg = {};\n  imports.wbg.__wbindgen_is_object = function (arg0) {\n    const val = getObject(arg0);\n    var ret = typeof val === \"object\" && val !== null;\n    return ret;\n  };\n  imports.wbg.__wbindgen_object_drop_ref = function (arg0) {\n    takeObject(arg0);\n  };\n  imports.wbg.__wbg_process_5729605ce9d34ea8 = function (arg0) {\n    var ret = getObject(arg0).process;\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_versions_531e16e1a776ee97 = function (arg0) {\n    var ret = getObject(arg0).versions;\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_node_18b58a160b60d170 = function (arg0) {\n    var ret = getObject(arg0).node;\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbindgen_is_string = function (arg0) {\n    var ret = typeof getObject(arg0) === \"string\";\n    return ret;\n  };\n  imports.wbg.__wbg_require_edfaedd93e302925 = function () {\n    return handleError(function (arg0, arg1, arg2) {\n      var ret = require(getStringFromWasm0(arg1, arg2));\n      return addHeapObject(ret);\n    }, arguments);\n  };\n  imports.wbg.__wbg_crypto_2bc4d5b05161de5b = function (arg0) {\n    var ret = getObject(arg0).crypto;\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_msCrypto_d003eebe62c636a9 = function (arg0) {\n    var ret = getObject(arg0).msCrypto;\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_getRandomValues_99bbe8a65f4aef87 = function () {\n    return handleError(function (arg0, arg1) {\n      getObject(arg0).getRandomValues(getObject(arg1));\n    }, arguments);\n  };\n  imports.wbg.__wbg_static_accessor_NODE_MODULE_bdc5ca9096c68aeb = function () {\n    var ret = module;\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_randomFillSync_378e02b85af41ab6 = function () {\n    return handleError(function (arg0, arg1, arg2) {\n      getObject(arg0).randomFillSync(getArrayU8FromWasm0(arg1, arg2));\n    }, arguments);\n  };\n  imports.wbg.__wbg_new_693216e109162396 = function () {\n    var ret = new Error();\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_stack_0ddaca5d1abfb52f = function (arg0, arg1) {\n    var ret = getObject(arg1).stack;\n    var ptr0 = passStringToWasm0(\n      ret,\n      wasm.__wbindgen_malloc,\n      wasm.__wbindgen_realloc\n    );\n    var len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n  };\n  imports.wbg.__wbg_error_09919627ac0992f5 = function (arg0, arg1) {\n    try {\n      console.error(getStringFromWasm0(arg0, arg1));\n    } finally {\n      wasm.__wbindgen_free(arg0, arg1);\n    }\n  };\n  imports.wbg.__wbg_newnoargs_f579424187aa1717 = function (arg0, arg1) {\n    var ret = new Function(getStringFromWasm0(arg0, arg1));\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_self_e23d74ae45fb17d1 = function () {\n    return handleError(function () {\n      var ret = self.self;\n      return addHeapObject(ret);\n    }, arguments);\n  };\n  imports.wbg.__wbg_window_b4be7f48b24ac56e = function () {\n    return handleError(function () {\n      var ret = window.window;\n      return addHeapObject(ret);\n    }, arguments);\n  };\n  imports.wbg.__wbg_globalThis_d61b1f48a57191ae = function () {\n    return handleError(function () {\n      var ret = globalThis.globalThis;\n      return addHeapObject(ret);\n    }, arguments);\n  };\n  imports.wbg.__wbg_global_e7669da72fd7f239 = function () {\n    return handleError(function () {\n      var ret = global.global;\n      return addHeapObject(ret);\n    }, arguments);\n  };\n  imports.wbg.__wbindgen_is_undefined = function (arg0) {\n    var ret = getObject(arg0) === undefined;\n    return ret;\n  };\n  imports.wbg.__wbg_call_89558c3e96703ca1 = function () {\n    return handleError(function (arg0, arg1) {\n      var ret = getObject(arg0).call(getObject(arg1));\n      return addHeapObject(ret);\n    }, arguments);\n  };\n  imports.wbg.__wbg_buffer_5e74a88a1424a2e0 = function (arg0) {\n    var ret = getObject(arg0).buffer;\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_new_e3b800e570795b3c = function (arg0) {\n    var ret = new Uint8Array(getObject(arg0));\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_newwithlength_5f4ce114a24dfe1e = function (arg0) {\n    var ret = new Uint8Array(arg0 >>> 0);\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_subarray_a68f835ca2af506f = function (arg0, arg1, arg2) {\n    var ret = getObject(arg0).subarray(arg1 >>> 0, arg2 >>> 0);\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_length_30803400a8f15c59 = function (arg0) {\n    var ret = getObject(arg0).length;\n    return ret;\n  };\n  imports.wbg.__wbg_set_5b8081e9d002f0df = function (arg0, arg1, arg2) {\n    getObject(arg0).set(getObject(arg1), arg2 >>> 0);\n  };\n  imports.wbg.__wbindgen_object_clone_ref = function (arg0) {\n    var ret = getObject(arg0);\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbindgen_throw = function (arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n  };\n  imports.wbg.__wbindgen_memory = function () {\n    var ret = wasm.memory;\n    return addHeapObject(ret);\n  };\n\n  const { instance, module } = await load(await input, imports);\n\n  wasm = instance.exports;\n  init.__wbindgen_wasm_module = module;\n\n  return wasm;\n}\n\nexport default init;\n\nexport async function initWasmEcdsaSdk() {\n  var b = \"\";\n\n  b +=\n    \"eNrsvQ2cXEd1J3qr6n513+6eO5JsZI+wbrdkPAZ7PbKtGcl4wXcWySjCsbPx8rz89q3QxwjcY2S\";\n  b +=\n    \"PNMgmjGbGWAhBnEQGJ1GCQ5Tg38/KYgeROEYQbxgTv31KIogJTlCCAYU4xEnYjQImEWDwO/9z6n\";\n  b +=\n    \"50T48kA5vs7u8ZNF23Pk+dUx+nTp1zytm8623KcRx17O7ZWWfZmx3nzY6aebOacegfB9T0m/UMf\";\n  b +=\n    \"dIf+jYzCOMvfbgz/MU/9OnNyLf8UoQ/Y2NsgKKCmSwuC1FkRULT09NS2bTUMS117bF1TgkUnGeP\";\n  b +=\n    \"tDuV/wC0af5RU2pK/8l+6s1yc+eWtyzZtOnOLbfu2PaWsR2bbt216fYt7bGtk45B0oWlJInftG3\";\n  b +=\n    \"n7Xds2jm23dHIcBEyvGXTHTtv3zq2a9em1SNXrh0eWr11bO22q64e27xGalkumXaP7dx16+07KN\";\n  b +=\n    \"dVq8ZWDY+t2jwyMjw2tnZEcg1Irh23bxvbtGrNltVrNq8aHtoyPLRt1ciQ5OgCdNfkzlt3vEWSL\";\n  b +=\n    \"Bw7xybefuvOsU1j27ZvHtu2be1VY1cNXbn2ytVOiEwvl0xbd77jjsnbN125ZevV21ZvGVq9anjV\";\n  b +=\n    \"trHVWzpgfduufye5tg0NXTU2tmVs+Mqtw1cNb14ruV4hud4yNvnvN+/Ydvvb3rj5treP7dq0du2\";\n  b +=\n    \"WLWNrNg+v3n715rHta0YcD5mvlMy7JjdP3rp10+atwNTtOzf9+I2vW7fphhtf9x/esG7Tlm1bV2\";\n  b +=\n    \"/dvHZo7fDW4TWbx7Y4CgUvtp3iJtbfetttP/mOHVs3XTWyZmzoyi1rVm/efvWqzVuGnSCnFGFv7\";\n  b +=\n    \"M5Nw2uvuhLoHVq7avjKq9YOS2XLcii2jm8a2rZt89bNq7dR+e1bVl+5XQC1WcZ27iTwhtauXbV2\";\n  b +=\n    \"+MqRzVspdOX21ZIlyZvZcfvmnW/ZtWn76pG1V1959ao1I5s3rxpZNeL4JVruGrtt+6axK6/aNkL\";\n  b +=\n    \"4uHr19i2rRratEnAsLe4kct5+56YtV28ZG9l+9ZotV169eevq4THJ07RYvu32LZtvu/mtRPJtw6\";\n  b +=\n    \"u2rKJ8m1ePrFq7avNYR12Sb9PYyPDw2m2bR67cvm1kO/Vf8rysc+y8fce2se237hjb1jH2tm6+7\";\n  b +=\n    \"bZNa9auXr1m61Vja4dHhq7aunmV9Mi2seXt27eP7dy0eox6tIZGKHV985VjQ6XZIjQYu2rLmqGh\";\n  b +=\n    \"sdUjQyNrV2+5aqtkWJlnuPPWybfeNrbjLZNv3USDZevYqlVUz9Xbto+tGusYh7vevmXzzp2b37F\";\n  b +=\n    \"p8/Ca7WuuokFy5ebtq4eGt3eMaFvTVUNrhq66emho85rtq1ZvXb22A6pdY5ObVhNQa1bR5Bwaun\";\n  b +=\n    \"L70LbtMnQG5k/yrbfdvmOMZzlXEZdyTL515+13ymDoL0W/bextt+98B+H6yLtpXflNrxL5pl6JA\";\n  b +=\n    \"r/iGx1Efhhe0Kj6OrwgrPhRJayEfsXp86Kgr+L3B34Q1YKK7y3uCwIVeH2e78c17Q0EgaG0iu+H\";\n  b +=\n    \"iy/Uvu97Vfob6YqvAt83gecFgd/nLzJ+6HuBFywOKlHFo8oij5K8Cv0X0KcXen5ovCDyFgeLfYr\";\n  b +=\n    \"zfR2EoReEvh8E1cD3CFovrAQBwUMtBkGlrgNNhagqLzqf4qk6yqupYkqlOgkUz9f0H0VTmPrlU1\";\n  b +=\n    \"mNBILD8zTlI6iCShhSJYCAKgyMrlJNnk8ffp2+KWsUVQxDWQ+peoSoLIHvG4NkBgfd1NQbChHeP\";\n  b +=\n    \"Z9Tq54fRQyFzyAY5PICrT0ChDBWITC0RxCGOtIEagV1ECjR+VFEUISeooiGX/WqEf6r1aLz8Lsk\";\n  b +=\n    \"8qpVdK1S0egY9QvdNBEjwXiaYjT/53M/0E10ueobUMCg99QbbZDLMHAoC7iocWCcQNWmgv6ZKmE\";\n  b +=\n    \"nNMZDFaFvpGL8RdXAOOWiZPtfwCCEPgoRBY39z+dslKKUcQjH+G/ANUYZ47qOodhalSo3ru76z+\";\n  b +=\n    \"F/Dgfc98zSqFV3qJ+m/3n38IfT77+XAzMqnZ2dc6LgIBiAwJehrp3+rbe/jYb/2KZdt75lx+bJt\";\n  b +=\n    \"+8cc/ar5aU5sXnbtk20hciSe8ftt+6YHNvpfM7tmDa04ty+1fmeXlSK3Dkmsb9n+kqx23eOjTm/\";\n  b +=\n    \"6JY3wbG7dlDtt1PDv+lW3v8uhjpV0fvUb3n36t/2Pqs/5v2SetT7vvs73vfc39CPed9Uh9XHvQP\";\n  b +=\n    \"ez3k/633C+5D5pPeYe9T7FfO73k+be7x3eY97X3J/z/uCftbMeXvNp7xf8b7iPunOvEd/2vu22e\";\n  b +=\n    \"c96f2+9x7zNfMVc9I8Zf7MPG3+yPyx+az5E3PcfN78gflD8xnzOfMl9afmC+ZJ8xn3veZj7r/5e\";\n  b +=\n    \"e+/ubPqmPcH3u+4Uz+nv2qecv8f82V958PmAffj7n+e1X/kPaSPut9Xc+qv3O+pD+tn3RfUP5tf\";\n  b +=\n    \"MPear7rvM4/q31e37deH9a736u+qF9Vfmg97D3q/ZfaqI+pL+hPu77lfVW847j6rftV90D2ljnt\";\n  b +=\n    \"HvNPu8M+q9+k/du9Vd+vq3973HixIP7tKv2LGnV7hpHPV8Za70tHXnev/EnWpcVqvvKnuIBS2Xn\";\n  b +=\n    \"VTXSEUty67qa6TVyaXTbUuT155c91Q+FV7kle+se4mJu3fUPcSdZlzYZN+rlBLmypxk1e+RruJm\";\n  b +=\n    \"4bt1EleOZrsf4j+0iibjW9u+QPD2qE0leokC9coX3pQxS+4F1LhV71GP0yVpIdVW2p4FdfwqoVq\";\n  b +=\n    \"OJxl7qzmstfopzWlPKVtNZdxNZctVM1TWeaOatLTRoqnD9iY0btRfsScNol6ZHRo3+jQe5LLR2e\";\n  b +=\n    \"m3rFn9NO//MRz7vTo7K995tCjegrNtfw0nkzjtzcDQbF8tcLUeT3h2U1UfMmFAn0WJAg4WFORbd\";\n  b +=\n    \"1JwnEpR9ER1xOkMz+G8pQW2LSWiptFVc2iqmZRVeKnL75oJiiKIga106xQ/MFKO3V3UsDd2aqmh\";\n  b +=\n    \"1T8HUZfZVgfrORjo4L8T+lWRKFo40Crlg5urNPgSmp1J3WatZobJbVUTTTr+Lm+riiyQf/6ahoJ\";\n  b +=\n    \"g4kbf8N1EJyeaMY5VZq+BYCCeREDPE21W2ESEoytfoJ6qk0hxDSojXZrEShHgxPJixOf0xpJmPR\";\n  b +=\n    \"vSBYl4YadlBM5GsniDRTb2LCz2aBKuDnFTSVx0pfqdqvv+roTEUqT+jpGJ4GChMkWjSa33fK57p\";\n  b +=\n    \"af4RKR3JhKGrYNlfhoQ6GNiMFDTbX0ko31wFZYowpRMlUoQOhpN2uE/6QGDAOvp02rL6kl9I8wq\";\n  b +=\n    \"9JLb+SiwJC7s7nEDm4KnsdEap5PndCTTaWvMzymiAIzNBDUQNMHtqVRJbgF0SkYMkYJxTOC09B2\";\n  b +=\n    \"7HoC3d8w0PLXWTz4iYeBWQEQFdCdyVuhjZPiZto0fDCACEhF/U/NRNPnUW1urDujTvOVyflNVYu\";\n  b +=\n    \"iJExfoIzBRDPMYkHURK3Wzmh1OnnlVItWCAIZSG4kjSyaZkyeEi6YUlsgBUFqjOYYKBzyEKo7BE\";\n  b +=\n    \"5E84WQENQWRel33/WEky5LD97zhBMf106UHqZQ+vL0WB5x4h7O8XwesXcvRQynj+/NIo4jYiTd+\";\n  b +=\n    \"+4s4n4KpZenT2YRGPHpvb9JX/+g6EsV47+SB4FswvqCeKEu2A75hPiWDwIlr3yopdYxfWh8YaGt\";\n  b +=\n    \"2LGV8NiqoJuVSGavg6F1WLX6QUsaLEk/07IfU7X/XGh5HtHSzKPlef+atDQRo7CE2/4fDUL7LUJ\";\n  b +=\n    \"5+ezvQGo/kNoPpPbzXhNl+IxkBcbOAZxG54LTJT1xuuRfG6f9HTiNfiicUpkMqxGwardV+ihjNQ\";\n  b +=\n    \"JWI2A1AgKxbB3y7EaETY82I1VsRn3D+pBns9Dm2HyZLJu8xB3zuVgptz+sj2UpmnIvLeU+FfTIf\";\n  b +=\n    \"SqwKYZyX3AOrBI2z1aMn1NB60LaTS7M98Ribxso9rZlOSPRfLntBgUvsjBScLkFgIIJM07NZr41\";\n  b +=\n    \"N1sW/hX4PeQ1V+L3mN+8mKbzK4g2r2hewpvMGbYEqttuCee+HVDtPABSfWOd+cikRvGpos2Ut/o\";\n  b +=\n    \"KNmvEpmo973nY2hHHWRJqrCnjutdmns7sOtN+zsk/3JZe4S2953Z+Qb6Vcztn3s2V3audNGzSyt\";\n  b +=\n    \"6MiZ1KH6DJkl4ocwYrvh0XcXIx/vFgoFXCORtZiPovmSxCkg1UeUx8l4leIl2W/y9Ml6UvhS46o\";\n  b +=\n    \"wutJTRJok5OcyEK1ZKV+EcUqgiFKmemEE3VH4JCNWKdTNZpRn8FFKpZClWEQpVOCl30r02h2sIU\";\n  b +=\n    \"etlLplBFKKTbQqHKwhSio8UK/CPaxKCNSeIz08Yyty+RNgV1KjyXMW0z6sTl+RMLdWJQp5ZT5+X\";\n  b +=\n    \"/0tSpnfv8yVByzhTyQaG4vB9fkpj19Uqik0uwYw+1r3EIA5aTrFOonh1RvOQSFHnFgoeRmhCJz6\";\n  b +=\n    \"PnTKQaEylpJaWTaMznpNieQAcpNEhARNhtfSZnxIxthGNuBAJemp0kkSZEjEBEELaR0PBJlvFp8\";\n  b +=\n    \"1/kpFnpIt+lP9qTJrNYoa0w6jhpdrBYBzG5IvzLCBj+zzpG0oilQ6SWs6ROeC5XZXtkQmHSUWzB\";\n  b +=\n    \"LYfglhvMLWfHRcpM7DMmaeN/naNk9MOdMWKQqoYB3cEJxyBTnE/EOtBVY3TVGV11oKt+BnSddwZ\";\n  b +=\n    \"0nfe/L7rqQFfDriD1DpTVgbI6UFbnI9kgcNZgnA0yzgaBs8Ez4GzJGXC25H9fnA0CZ1a8Rh9lnA\";\n  b +=\n    \"0CZ4PA2SDLOunMUpxbbpB5W8gpaO7+eD1mfokCLCZl8SSmu7IyKx9LUraaNM62mvwgm7WcPfp5V\";\n  b +=\n    \"0ITOnlFm7bhGarlEmmKqplZTwd3P+W6dVY3YaYBtF7uOOla2gAiSsJCimFAeEW04r3tEqK+bm+o\";\n  b +=\n    \"9xMJ6Ng2lPiQ8taoTZ2uogzUl0uAWU35KfUSpIJGrwBEDi3hQ6hF5Eu0IxKb8woUpuT02XdnB+r\";\n  b +=\n    \"4DExPSTgUdQR7C5AMVfx0j4oRLJWoFwn1joTBImFwoTYI+J5wSLdxxqUev1qF9POKYe3SjxZR+l\";\n  b +=\n    \"y1vdLpK1fwgUv1RTMG9xFP+eMt78z3EXIDsSK/gViZ30BcjBuIFcnFU8kK3D+sSFbuSVbg/sHeO\";\n  b +=\n    \"HjJitdoGqqQ1LOsfwXL+ld0yvq9XNYfUnhJSczvpUdUp5jfy8T8R1Qh5l/xg4n5AVYu05emFpbp\";\n  b +=\n    \"e9KBTKxvxfdcqiy+9wb1EdWsUMJhEZtIvWUZvgfe+7CXGD7Gm7S6gSX2FZ7uzIgrIbLUQdOxhrz\";\n  b +=\n    \"EFiuZwxj3PKtlRnUIt3wW9ms716WKJGzzAkWr6AoA7affl3XVp2UktAk8Z11wWESjfUlIS9zeFh\";\n  b +=\n    \"Hq/r9/xsy2LuZlDqSWmOk9yKR6ZCplaa6gKu/Cyuin07IkWu4rEsE+M3lKGuS6bE2v0TzE72wTN\";\n  b +=\n    \"1m5gQYbYfWwhwVtQ91OCWXlYHaEgsNKj88+4bR5uULleRmRmCvegBQkggvhrg7cEXoeAeBotQt5\";\n  b +=\n    \"F9OKmX4eC8VAaaGoF9gMpQjTjAsUSL24QOrFyYrZ1kpB6MV07F1RRmaRaJOaFy+IRPS7hMaL81q\";\n  b +=\n    \"oDkYho4AzZhMZUSFtfMS+0g7Rl90W9TFy+oCcPiABJ097WxQxq6ORkA/MPnDt/dm0po7LSLWXRV\";\n  b +=\n    \"yii4WvlVn4aEEWPiIU1jpZ+EhY+IjY66iLhe8H+0Fky1j4eF0+4us9WHiZ7iUOPprPwUdyVFnHW\";\n  b +=\n    \"wjfFUl9fR0cfB+2FVpPPQhAaSb34TSRVAijvtwSZZMeSyCQRKEYm+Yk5M48iX27EfsDzRDYtQsJ\";\n  b +=\n    \"dklpkYIRI61J/EQSoQuR3ZOvJ6SEtBmHmVQjlHNzIxvrDcaDQ+spLogapXGO/ZgmFfFbIZ+3rQB\";\n  b +=\n    \"8RRITP8CdtyxXlMUaXD75luFZMdVagbHpA7H1pJ5FM/tkU8IFU2oLpCBIjflguXwCgYZN1HlBVM\";\n  b +=\n    \"0viJ5/d9cF0d59XRdE9+/ruiB6cF/XBdGj+8qbfD6my7uuXyQ0SqtNEgoL2BsjBLztSghGJ2MbV\";\n  b +=\n    \"zwkC1JDpO48DBsZD+jzMRW9bGA8NYhmNACbNbv1yH6Fo57dubBvBYlrdyHaz2nVGU8MjYZ6XeVz\";\n  b +=\n    \"1UtP8C1l0rnpnNA2BbL6JXavwsSYdbtzE1yzrk2BrP68Um67s3XmpmmQ7dbN820zFHyZrYOCS4t\";\n  b +=\n    \"l4oJ87bjQRkLCP8CrU3NRsYkOEsjNZfiddZsvt+vZRdTL5QV3QuRY3qx2cSyLRIhYBWKX0xdmHo\";\n  b +=\n    \"3mMC9CFFF2evGsauLyx8X0w5Ia0RJ0Ef7RlE5QlZskZ569dsqGQt5znrzUlSam7400MBICCaSnp\";\n  b +=\n    \"mgJblLSImoqEUFJgiUXwpNFnOUCaulCmZw8XaSNxXxeyURMcvPfbvVjiNlVsI+h4OSaLK39WFop\";\n  b +=\n    \"M9+BJ30bKLZGCyExBiBPmC25DSCRFu1srW2uyxgoILflt2Wbs4eGgcQvC7uIz7AtELLRgo8WBD7\";\n  b +=\n    \"q8zzeu54QT0SHSDC1Hr7W0zlAJ1Vw+vQ1nh0FvCSh+ZKGhMOkuQhEezn+EdEaQrTGmYk26/5ARC\";\n  b +=\n    \"tW3EXNRi3Ad0MklTWW/zRblnYNoV0DtEty2i39l6Zd0kW71hlpd965044FlbJoJU1scs0aRSwq1\";\n  b +=\n    \"s6kCFaJcir+Jp98aNmat7gudDHQSJbhXzYRnbNNRFp3fjiaNpqJ3A0kGU2TMk17z8eX/WvPxzPT\";\n  b +=\n    \"dMlLoanOJhbRlM7NTeA1WZhONLwq+EcU4lVX2+X2XBidl0ahgkY02+WGYFFGo0UZjRbz6s80WpT\";\n  b +=\n    \"Nu8Wc5fyeNOrvSaO+Eo0anTTq30C8XplGjYXn3WLQaPF8Gi3uQaMMMedMJw90WiR0om2uiTlmIH\";\n  b +=\n    \"TBSklxcknANHFlU2QuH5ij2IInhDy6VWOeMGP6+ETFMrjaS2AIa0ltAYZwgZTaAim9GcLoB2LAc\";\n  b +=\n    \"vZrEdgvv5gjBfu1COhblGNzecInClaf80Wy8+S+jDFcdIaJUFr4FnVwk41OaU0XryIXniWlLtOp\";\n  b +=\n    \"1BXmPLsvslHLs2M2RWUR6YpCOOkViOEDKOXMogs0s3h0gZTaAikWv93KKloUgApGuVNW2gVOUxU\";\n  b +=\n    \"kzmWlKzp1qGQ69NajYmb2iD3M4ipH8fLDZ31VEnhCVJLVpOScGp77hQnEOmoC52CPpQbET9Tqhk\";\n  b +=\n    \"X+1KjBSge5JsssJ+oGeSrzRHd2PCiIB/cV8rq6yOt0UqeRB7lEomXFxC65njuh+MyPDKGgKQKrS\";\n  b +=\n    \"oFCdkpbKZ9vC7FpHeXH6eMGXPSIbBRyDuaYdJSuYvl6jQWnEKOmQ9RInZdLDlpxat0WieQIMgsO\";\n  b +=\n    \"nk4fQXYOeQNBWAcKFPFbihtm0T9fiRS7OwUh0irF5ALKeklA6aVP+e2VTvSxZboxoyGUPKTGW7q\";\n  b +=\n    \"3UJK6E0y0zLq6TU0cUM7N5pDLc8jFHDKQCT0ImRANQTp/Oxh5hrpQTC1PRGY0tQIq62VTqx9Ty8\";\n  b +=\n    \"+mlocYogwtBKtxLzSd9E+1+jGWjZUvZNE8TWxKuGBKbYEUBJv9lCEGmB6mlmenlksjyWRTK5Cp1\";\n  b +=\n    \"RscKmnrCTBmAp5a/Q8xwqgaPoEiYKeVsbrW7aYL4rjDcioOaXtxS5hVJcwi4zljMgYhOjAZ56CP\";\n  b +=\n    \"zn76C1dMJ/FUK+5CZpbCuIm78NkrsbZwIoJE/G6sGsFqabYujOMegFJVtuISmuOXiuaY0GwIqR7\";\n  b +=\n    \"NOwx6mnIsl2HEB8LqBMJThenzNJJTzbhPgvhG2Sfw1TKUiRpqunKErWITMSDCDC4/qhRAqsf9cd\";\n  b +=\n    \"fXcaynbF52O2Jw/PUF/xF1jBe/fLoF6Azm6F1oyH+kFY/Ozu79vj/NqJGRJ9nWc7YpZMMQlHRC0\";\n  b +=\n    \"zd+5mfVdIkahKW6TnXToAMCA37LtAjSi3kPYMSlppllpIgkQAMV+p/ZMNCsJAQxrTpI1+1uenbU\";\n  b +=\n    \"mFFXMBhmwguHNWEiXliSCblSymhRKS8xhB/Qw8gmU0lfAD1cqc0QPViNxpFBbIQeRIgQAlFzHS/\";\n  b +=\n    \"czYA+DHMvhkYhaGFyIsig8tCS14MA+jqCajAJxlvVpJpC0aJqlZTAE0+2USPxkCDP3V/57UfCaR\";\n  b +=\n    \"Y25+Sppvp6Hkwa4jQtwg4CgQnlWUJ98V2/8/d6ulTGSBmTlwnnlfkflU7SekRat+mdibQrQNqQ5\";\n  b +=\n    \"mzigbpe07N5Q0YMtmkhMjY4EDmyBHY7CWy6SFopSBrlJJ1zzkzToIOm995NNA3ORtOqpWn1R0ZT\";\n  b +=\n    \"OgQwTUOmqZxzOulVAQmFzFXhtYXWv3f4u9E089A53cJuulV70O3Zv/irf/SnS2VcKePmZWrzyvz\";\n  b +=\n    \"3j37oT+vlMp6U8fIy8bwyz3/zxT9olMv4UsbPyyyZV+aeD/2lM39UBWceVQlGVTVdakdVmI+q6l\";\n  b +=\n    \"lGVfADjKpZ1TWqos5R1SiNqig9jFHVKEZVZcFRVfmRjCr8b/7Immk3jFbCfnaS2wAlpeFVK4bXC\";\n  b +=\n    \"08/r+cNrzLZTW+yv/e3vn/RQlQ3van+vX98+rRTLhNImSAvs3RemY8e+/wHdblMKGXCvMyyeWW+\";\n  b +=\n    \"/vef+lDHKK5ImUpeJplXZv/RDxyqlctUpUw1L7NyXpm/+MvHvhaVy0RSJsrLDM4r80vf/8zHquU\";\n  b +=\n    \"yNSlTy8tcNn+2HH/hWMcMq0uZel5maF6Zz7rd84vGbBPHHFxxp7dgntCA2zhAMFItauFpd4FMu6\";\n  b +=\n    \"vttOtbcNrlO7addo0zT7uo1/48qzHtwIWWpl49H/928g2UJl89PYnJN1BMvkbONgV28mGLbtBcc\";\n  b +=\n    \"0VXpS5sGysbuZBNwYCSJlyQhOvZspLPr55kZl0+NwnEaA/zqVWlOQpdUAgQfJ6G0Ti1FWAaNvtY\";\n  b +=\n    \"mYT+bRjAKbWWVB5pxjhfpCenm4ERTeigzZwULQN88CR2yvJSQTp7zxO4uhTGv+PcoOWqOT3+ric\";\n  b +=\n    \"c8AV0+NuZ9GUQt3Bbqmwle++RM1F3FcxlM5OshT3ENMK1JfUUVLNoxmmCqDDAjBf1ZYBQKWf2uj\";\n  b +=\n    \"CiwrUtA9dmcMlqkgb9D8RvJFUeTt3jqER9ryOByVYvxkKDOWdNEXRgTJzocKLjGYUjYzzeUivzM\";\n  b +=\n    \"2H6LUWjID7sNTVWUjpo6zSM3+emS/iHTrPyO56efvGd7fTOiXRPu4UxJfHUi/GWm9Aw20hDB2dp\";\n  b +=\n    \"AMJJqHBQH38sXcfX4x61pmlgUmvpcmbkcdThs33qo9Hdb2k547tTNUFVqMnx9DWEWswyPd40Flr\";\n  b +=\n    \"w5+mJo1Z5weGdJfHi580kBhDvBS4PDSf+DS/+a5cWdT4a0A8WeFZ4CqmTmBchzw8Oy0Bf0hYBBw\";\n  b +=\n    \"3fBKPi5btTd4L6L21dP4CEASazwh2ZU8/PP0nQdFhHrK4xlml6JN5k/CHX9n8CkFJD8TH3rd0dM\";\n  b +=\n    \"GCPoA2dQRwk+kZqSWMmmA0TLX8AswbXlwMANv7vpoWWExfiZ+xeg/rEJ9KWIx01kBSM38iK61Qh\";\n  b +=\n    \"ouP3eQS0G+9mDBpLtw2sA6XjP+TK428ZTpuVgxRFTKI/JjW76VhrJtOnHiOQhQxo8dhjKS7IE3e\";\n  b +=\n    \"y5fL+bnAd6cKuBBJYd+cwsiSmyZMygKzQxU8NdcuPizt3hTMejbl2/EWQIL7Xw7lQQf4iUohslL\";\n  b +=\n    \"2znTi0xsqw6hRzZPAQzgAu/Z/OQRPCczBubqgTn4ohyMQA0oMetHAF/3a0Eb6AaDnbOnkSaIIub\";\n  b +=\n    \"GgFTA30CvTJydID7SWU00pBqRTdgfmMhC4kCS76EBYo95F68hNp0836SetpEk62IHjQEMaFzZBv\";\n  b +=\n    \"YXgyz+zC/DGYoYZok554LBtqtETxog/VSkS23PU8XlyQwwVVQiFfkE4n+s4JpiDIg5qIPEwdWsg\";\n  b +=\n    \"CbiqFmG75RMtgmIOGkxPAKO0p1Gwwv1nqq202WM/K/0HHKKDlRHpHbZty28CSILOF5dlMMhF4uG\";\n  b +=\n    \"Zo08JfEtr80kjN0KbLQ4QODYk/2fKLIetLn+k8lQ9ZFmRrDFkfPzVaYYz8+KxywEIJqhqoGgYEG\";\n  b +=\n    \"WZ8pHlJaGvymyG0UNFDqt+i2Zef0NYUZDUZrqnnfKiraL5sL+s85b2xzsh7RhYBiFNUeoyQQFg7\";\n  b +=\n    \"TCNxnEaFLORdCzrUCmZnXQrGX9WiXGR4oTa1SpShD3ySAc6zQcytQWGG4WYgsM4jhlFBrRZjpRJ\";\n  b +=\n    \"Z4mH02j7m+MOgI0LmVJYihDMFwngyJJ6jfPTttvx2i5p4DuUR/3XMF1k3Nw4M47PAy7OfSMH7nP\";\n  b +=\n    \"rEE05TRFNO/Ec02jXYnhDTFDIt5Nz7yVSWZsqyoY6xTVn/xsXSGD/nJsy9O7bK+FFDi7W0zuUSL\";\n  b +=\n    \"obW6RPrMw4n0miuOwE+C0cSVTQNIWVHI+tZG4XbKFVgMjYtcVldlXqAEI5DtibsNNj3KYVmnBC3\";\n  b +=\n    \"VRlPb203GS8yfEKOT8Jxwh/L2Sz1cVkIjFdpbFZAIbAArUhW2Jqtrlm32XF/i/6ixj6psW+8FWN\";\n  b +=\n    \"a9g0D8hTqZ36bmJdaUm+3k7g9jus4GpS4AiQGa1i7aKCW1bskq9c2ECMf1ZfEVEc9qY2321SE0D\";\n  b +=\n    \"07O6uG9SyhGID+IUVdqk8Rqvr5sI6v059IRwhP1aSffjAFh/ULDBFNtuez2XWKA9Vh5AZhUhedx\";\n  b +=\n    \"tB4yIOA3TR536MtZyN21xBUAyPgjltsYoS+z4ufMLzOykaJuEkMWYd3nmL5cTo2JiyWky3Dqw6o\";\n  b +=\n    \"x+xgyu3ZtcIBB+jIWpEvyU5pZQ6Y7g5vHSwi5ZpoPWkz8KCLTHMwC/jy5YurS5xxsJYyETGdZe+\";\n  b +=\n    \"hBY5HBa1v7XEslHYUJuCK7QKAMHr5uFv3ZIthHsX234l3y+WyQ+cuUR3MFvxwPbNdvN75vN51Lf\";\n  b +=\n    \"MBoSxf6WnvbjchBw54KNY8u8w+m813DCTNS8AzvHI4MqS457wppczO0DrFOdJs1rayzYPrAjZtw\";\n  b +=\n    \"c5Vh5duwzOZecEScm1FGRB+O/5LGMCXtgG7DFr4Tgh8WNkscAYmC9Q5GTs6Hzs6nixl4R1Mn2EI\";\n  b +=\n    \"6cmWLoaQzoaQzoeQzoeQ7hpCvJvZpsChpi8uH9b7P5mecbIwHITNxxA+weFnHyviT3D4JIe/Xsp\";\n  b +=\n    \"zksPPcfj5Up7nOHyKwy+U8pzi8GkO7/14kec0x89+HOF7P17kmeXwfo6//+NFnv0cPsDhB0p5Dp\";\n  b +=\n    \"TiD3L4IIcfLIUPcfgQhx8uhQ9z+DCHHy2Fj3D4CIcfL4WPcvgoh58shec4PMfh46XwMQ4f4/DTp\";\n  b +=\n    \"fBTHH6Kw89w+ASHny3Fn+DwSQ5/vZTnJIef4/DzpTzPCW45/EIpzynBLYf3Hi3ynBbcHmX8Hy3y\";\n  b +=\n    \"zHJ4P8fff7TIs5/DBzj8QCnPAQ4f5PCDpTwHOXyIww+X8hzi8GEOP1rKc5jDRzj8eCnPEQ4f5fC\";\n  b +=\n    \"TpTxHOTzH4eOlPHMcPsbhp0t5jpXinzqaYrNyZQ3NNtdmmG1WXrEbyqpLK2yrinXGyXZDrB4Q6C\";\n  b +=\n    \"Qh7YbVdrYwYfkudsPuBvysARxADXZDMKFQYp23G2L3NyW+7wYs2T/EEsiXbJAUmOjwMh3J5fJTZ\";\n  b +=\n    \"rzlr8QOgW3D41NPyIsZn3r4jmmg+zwmx0z0fYC2xKaImO7WN7IW6ZxpJyEriqjddJJ55qNzTvz/\";\n  b +=\n    \"4v79OJ1ZrGyIzjRPGkjFBvUcrDno95hp1mxptO6lX88Kcl5t87o2b53yrmknFZY2tRpt8WWi4t9\";\n  b +=\n    \"TshcdNKKxdC0NYRtcA0bmgCEuJCQWpkIsSCOG0sUB044/BgCH6AQKq4D0BTR9j0GhIfy5Gn8OwA\";\n  b +=\n    \"ES/R40xBW9E0rRkt2k0xPpvUfyEoP4cxm1IrkcgQWt4BQSf0RLZVIVZM28T5QAYR38IgvXkmSgP\";\n  b +=\n    \"VA0lODPynlZgUF0j2qOfxzqEIQ1AHCIXXswvqw+16WE2BFzyNhChA8GJSsElBxZoNARw0zGJzW0\";\n  b +=\n    \"QhpGu0aLjkGTr3DBkuMMDn0nC/jxAqesYMKbFiucxO+gklMia+NrTdE9rolt3XOODCfaN3eAyB4\";\n  b +=\n    \"z5d7GAdoxjwMZXwScpygXVfpW/LktPoSokxQV0P94CI+3IHKlUm0KUHXpMyj6KeSbVVz0zfizTY\";\n  b +=\n    \"qesG1W0q8j27uYfpLtFvz5T5LtKScbqy/kgBySbDfhz82S7ZiDZQL/o6x8CSGA8DRL7/1YBsgRK\";\n  b +=\n    \"fp6/HmDFJ2zLYTpAx/LAJmTbNfhz+ssIGx2xTgAnPEnMQ9PciTDgzISeYo/JT91PP5lRM5CS9Tm\";\n  b +=\n    \"P5JFHtBFnVRJ/E3unW5nqOA6v1mMEdyHo2IKXmqcESODxTyleLDwCEOuUBruyjVLuebsLJEapUT\";\n  b +=\n    \"8f+HUBdC6CpyUakOBuCvxSFbboXm10Zd0geMoPf4zxrN0VtCiuV9GIrqqPlW0e2Be4oEztpu3+L\";\n  b +=\n    \"Ti8oTarvJ3LICEjQzMrJ6HNZ0DMzcPmLmXBMyheeUPLVR+I+g8H4mhRHeTX9ta8vJCgvhWkFXbm\";\n  b +=\n    \"lMTf0XgODKvhiO9apizNZzKa9BZDXPzapjLapgt1XCAawgFiu7BxQXECcflznGDjeV6vkUQGKie\";\n  b +=\n    \"+G63VjIlo2z3mpahhdBRrC0FkPpsaxS43HGgF0a1X+F8xrza+a+mWFszCEpLLENwhM1Z4r0elth\";\n  b +=\n    \"rnMdZcBLWFdQww7qXXUCUuhW/y+XlWGu+RqCirC1Xmp8yCcstzRk7P4uuPVfaLUw575Fst0DeEE\";\n  b +=\n    \"1Z8u/TOL2WenSGdg5l7Uj+eMzWZ4q6fFtX/PusL4WefYk1CqEDa7eTx4t9MMafJfhziL8P898j/\";\n  b +=\n    \"Peoia2V51n24QVLlxmEpVnrDxetL8WfZR278E9k8H8p69SXbMvoh47OjfYdEw90OaTmoSoqZ5M5\";\n  b +=\n    \"kA1wWqppkHbM3KdVPunyQrwczGXQzNpFumOVMeXZ8IImjq+YDSg2L/cRU+sUaGbTqGGUcYgaps4\";\n  b +=\n    \"O5ky9Exez80bNrOmBC5r0BS7CYtiYqCNLaYbmSEF8NkmUdl7amM0Xm15j1hRjVsbbS5l1AOscZ1\";\n  b +=\n    \"3RoirmRlQsrTntby3IWd5+OxZGqnlW9o9TPAxbumOv67XynuSqi20fxvD9xWJtWotGqGDRFV5pu\";\n  b +=\n    \"/dJzT0KE1tw0bx2vNSbjD+myntMPlyJMZs/PLtK+7a0lDvQUXrhFb+rkpPObQvDwEju3jJ71RJY\";\n  b +=\n    \"UOa6QemcHA2aGDIgceAtVon4N4rxZOn96yaSJUqs9nJEH8mGmRjyZgTpZ2Rj3ep/iNa9d5aXpGL\";\n  b +=\n    \"4PGXYK0J6/CNzTvqq9GGwm9Djv69fhzPn46Q41OWqWRwh1G5iFS12hVDPw3GrIeFa0phqNZLazf\";\n  b +=\n    \"arvgdeZN/IX+yWuVxhY/RF+9/yN4rj4SvU0paCjrSb9AHNUAV/cxsG25nTBA9mxndQ9ykq2UcnG\";\n  b +=\n    \"IqQRDgKt+l3SXrclU4HbZthSjKE8zJkLUxLBndeBmmDkrRNikdf+56H2GDFy5we+/Cw4Cbu6AxU\";\n  b +=\n    \"Rvv3E0L67hkxkIc33liH9Nb2sYY+upCwc3INyTo9NJNkVdGR47b0yENeO/1s/LaWSj/niI6/O0k\";\n  b +=\n    \"fz+17wuH5KHjsu6dVpyr6R197T6t/X6s2muxvLZpuLcbvEmBrf+u8ZNH0VHJeUssK1KZbnHD+VP\";\n  b +=\n    \"NlyWIbC1n9NHSIk6ziKe5+CK8SzaWjiu/EVHoK7V+hnPZ4+tqJR1qNfa0LRmemmoupfF+SQdA33\";\n  b +=\n    \"eov1Vs0zA0QKNOtWo9WLqSkvukmjR18DWQ6Gir9hm0Uqvx2GJ2XxEk8OvPu0dfut40um269nFqj\";\n  b +=\n    \"H2j4tC7q7vNyxCbQBeru8fL5sLSaU6NqqrU8abBLjQOfdTbwbji3999u4AkJBekNRLcwreALThw\";\n  b +=\n    \"20BhpBpwiETRSWIOP96ZnUUNKB1wcdwOb91mHwlm2VKVVSqxuoE/6rWxkfcHUTfF16Gd8W4ZgwZ\";\n  b +=\n    \"eUUlHqpziCzz7yVddmIBj5k3NEycuSpSD08mTxPU1c1bKxRBNGP0SwqWRgKrlwqjWwB93tR54+G\";\n  b +=\n    \"GewIp63o1kpSYJY+Rb2H60qHZqH2q0I7G4/ZaRD923jLf+RhIYDYXWqFb+xHqOp62ngK/F0YyBF\";\n  b +=\n    \"2TjQ9EcV+0qo46qoidIKV3rxaHW6WefqiWpVGiBAPStyoRVrHNKPFHioXkwkvUUcQ8y0xTKFovf\";\n  b +=\n    \"QYL/gTazRtDx52R4a50l9qrkUN1F7WosTKtFPg+KCm9m2lg5DM+1mhetMLiCo9zQpLVm8p0moor\";\n  b +=\n    \"qai0ZZS4qXtAumqGOLb4ZRFS12VHtt6k1sh+fXFkNVFbpLAul5WAz7MzAWv6m+mJq/YE+TYCD0I\";\n  b +=\n    \"6HuUBmxsrr3A7n5PX09kH+pwn7E9tyjccFOVqo7aHSIttWp9z/hpBekJ96fWfsffD97fz72/sLa\";\n  b +=\n    \"/3NOevi+QkGc9p2luDyExMElVjc+fYb49MkX59jhwGyXe+n97+/yL3D6vi4PBM/d1+Wj4MR93W6\";\n  b +=\n    \"u8wjr5+DofQXU0DSz7jtY16c/iUFAj0dY402ED9C31UeDllaNPlqBWhck8S00MwnbN9eVbElxsm\";\n  b +=\n    \"QqOX+Kxj9RZVGybA+tgxftSZI9SXMPrVgXJbQaNKeSl081+0YdmicYujQKlo7qZAAOBvGxiAdAH\";\n  b +=\n    \"aYQPHKcZGnSNwXKYgBwkWZM44B53Sq7XpZ5AQhgpUm5YbuPcYcCMaJjgIlFk/aGPbTe0TLzpjp0\";\n  b +=\n    \"xBCAeRLXyixBPhDsNLwQ3XTEIw7qonlyITpM8XuozQv3vKkujiRH9c2cpX90auoWvm8GkR0xZuE\";\n  b +=\n    \"QX5D5Jaskhxn9VyvWgao161mbS5M62mSbwjqmQi1ZijYpHm0uLdpcMp3U38i54tFbpqnr5ZaLEK\";\n  b +=\n    \"tHqF4tYywOwTLqoZquzqjpzMuxGL16UDCUCD6eUBRUxfhKUrFTxSr9ihqiYgFlJH4l2J98FQZ+r\";\n  b +=\n    \"hhNmaTCVmV0SGhVWGePvloR++JMIlqQUF485HN1hI4qEFaDuSqME5PquIDDNokEz95ftbMsZU1E\";\n  b +=\n    \"NiZMvPWtygArTVK9A0mNvSDigp0ahepWBnZYAjvoAjs8O9gby2AHnWCHnWCH44yyM4MdnA3spNr\";\n  b +=\n    \"0xUk/LjbCja1ogNZHV1zr4LaEvq2pXiS+nvws1TDYST3+tivjyU3q4y3a7OA60kywhyg2s7L2VH\";\n  b +=\n    \"1Q5YG0wE2nJpq1LMZcN4pt2LRXOc4+DuoiqPIgfpO+vfQfFbMGszVY7NRoFfYj4D+0eK+IbiNhv\";\n  b +=\n    \"wLnPdCWddkOLBuDiT9OZcH0VZgesFHclbhtyHurNu88ClWZQlUZWFUotTN1KrbRkCjEKq/QIKYC\";\n  b +=\n    \"3rjAwxax1OX7M/LgBiF9sJtYkHeH61tVEKsCvQgmVgV6DxHbYHf1Lyj3r3Gu/QvO3r+NZ+hfgP4\";\n  b +=\n    \"1BNzgR9w/mG2LZo3L486DCvc4WxaEmUdWDJnCKysNsZp1oNU9yDidBlnlRzDIKhhkFXFmyNqHpY\";\n  b +=\n    \"ycS8lQnOGhCH1DGeXQMcg9H+ZB/shcSeSxfMe/RpbSIayt1ziNhLqDA4aTXtvmxZZCV7ezVbbWT\";\n  b +=\n    \"u/WtMzKgovIPtRYgUJszTrXWgBU2dmsd0ZeX2aIunVC9QxU7bphUdLgtW02/esAYtAaoTvpynYS\";\n  b +=\n    \"SijJU5flYC9ts/0Ja/RC4wchYlDq+YbRN0LcwuORqszQyfWkGm+Z4uiaaKhXuYXRLLTRWMOQrUh\";\n  b +=\n    \"osD1Dp99Uxb9r+LUF2k40sWDyZs2vgzc7RkGJgOFJfL+SL5agSHIh7zEQVxxTI+awYixDuPO0ir\";\n  b +=\n    \"/sWkTbbA6yHVYENkjt0LGfc+P47/GWiJazGDfKXZjpTnlWXpALcNH4CV0qSOCtwQEaWt0JO9RLT\";\n  b +=\n    \"+KsP8teM/23tIL417iLTht3wPwxqG9qaeSn0Ou5COFqID2Vl4MOEm5PDa6lNA4RlJ/vYlnN8s2C\";\n  b +=\n    \"hKERcwuU29t01HE4EeS8QxIHR8xbmZ/SfJl8rMDmCacbm7eMEEIlE+SyJj3IuXNc5ig/iFyPMrH\";\n  b +=\n    \"WcH2sAqnzPGtG8IiTwYg8jBVMEyPT4iXDpEcVMCaEjV9kVHKkgKXKTa0ZMUdVPiwoD83CP88A/I\";\n  b +=\n    \"BmuICiQX0UPqPo93HFBhLLJ2C0ZNhoka9bp8RgVYlvxeUTbFmnoTRche6RK75NaT3bneCCH0qxU\";\n  b +=\n    \"9CqcpNokvhMzEDN9Gqz+ToOHk0oi07zMYuocyP37bQj3UiLPrx1xNxFKUnbDpB09reIuk9ryY2y\";\n  b +=\n    \"CXySIrASZg3x+3Ux6KNO1N/Fg708TUKZI/sle7VE4G6S7VdCTzsEuUz8D7D+opYPETON34MKSm5\";\n  b +=\n    \"YBRhYLz0gwPJWxTmW4s+y+JgSrwWsB40VgocTFTiEAn/KuIrxZwn+UNtVzOd3su1HVveRIivTsM\";\n  b +=\n    \"YvYv0EJ8vwe47RyWXzvuynvrxVugJRG5FBtO0xrGhCRvNzH4avkmyIlROPKjve9+f4lKH1X3RSj\";\n  b +=\n    \"P5Wx5A8qIo5IqiEgFn1miIYNVH6OJa8Rnocc/pjhn240vr7FGZwZVgfxy9eLFF2gAsAn2B9NGku\";\n  b +=\n    \"W8MIWkKRIwg8WO4ML9bdHQTygCCB8UvsqeAk7Fmij1ZUMGOdHLxY2ciuHb3dhSqKtXBidbnMctC\";\n  b +=\n    \"qVouJN0XSBDDpJRvFT0vdZT3IVpAOQijg8WQSlwtTyO7ix81KzTATATtoeN/i04nLJrTE7AhX1m\";\n  b +=\n    \"maE9rNSafsOGIjNGM0ayTzW23SWSMRcR4hOsvs5lUiPIlYmkf4ErEsjwgkIskjQolYmUdUJGIwj\";\n  b +=\n    \"6hKxGV5RCQRQ3lETSKuziPqErEmj2hIxLV5RJ9EzDl5TCwxTxYx/RJzrIhZJDHHi5jFEvNUEbNE\";\n  b +=\n    \"Yp4uYs6TmBNFzPkS80wR8zKJOVnELJWYZ4uYCyTmuSLmQon5ehEzIDGniphlEvN8EfNyiTldxFw\";\n  b +=\n    \"kMS8UMcslBsoONiaRmL1FTFNi9hcxLYm5t4hZITEHipiVEnN/EXOxxBwsYl4hMQ8UMZdIzKEiZh\";\n  b +=\n    \"CnwsFu27PiK33sN1keUzj1YW11TbOEZyVtXz7PPuHj+iJ7/razDpy3qLlZzw/MXsHf9nhL7WYrI\";\n  b +=\n    \"M5+iThr7uEfIhSv3AsCKNwc2I1AjiWAqWmZG4c9zxq2ZZxuy5yH8jc8NDIrA15P7d4puGD9o0CA\";\n  b +=\n    \"53Os2MUISC1mgujgMSmsWmj7m86UofnbivLAbp5y+KZE9Loz3dwenlvuZju5Wc1mc85lzqxOPwX\";\n  b +=\n    \"vyrRl0WpEES8qG/F9G/H9LOJ7qskOr9QGdgwBYSpOB8THLBGVYDzU4rGQTg4vLrSA8zSP0v6YDl\";\n  b +=\n    \"RN36YsE7uVpZB9bmx5dRYybqwLT2SsHTUYEYdjYE6IzWQ923EBUe3L6OB33evxDpFp8pMq1OkEp\";\n  b +=\n    \"qJS4EbrnZzpr2FfyApkWCU3wCEXVLrW8zDwcMeOVXpc8AK+J0Ttn5p5Q2YJyl0yaF+MfIlmupxl\";\n  b +=\n    \"2mYJiizTXVn2zM+ypyvLVEcWinhnGwhjS16W3IvfHaBK7PLgq4jV+ClHVhGbGlGCW2xbbLtF6S0\";\n  b +=\n    \"lzrT15Y5KXzvRtMMXVymbxOkTjVNnp3AO2HuIlRkm7gsSRRaYUTKV1VR2J1vxqPSOGwWHaW1yJ+\";\n  b +=\n    \"uP57kMclHCIjgwOuVM7CTub3b2SWe9PK+ibcXQXVd8GyHhGGGaNQjPuhsGmjyWaFwPCqfVHtaXs\";\n  b +=\n    \"VwOW5gnExdr6XccCT9bCmMXoFzftZ9Y3l+Q8Kg3oq+mqKO/BtXcIQo9Sb9vYIEzlRpmvg6y52H9\";\n  b +=\n    \"Vg7FbZwqEBqk0C0cWkmhmziUUOj1AtVJqjH+J83Cwx6wfKcEy5M2LH1xBTBXAHvy0FkBe3MOmIB\";\n  b +=\n    \"Ty8EJC3CePZSBA2Lj2syNfxncFrMmiTfAiLUgmAVBteFRI9Cd/tWzQndLDt1NOdosTAdymAzDA1\";\n  b +=\n    \"FCeuAXn8A18POH8pVfLh4svB8O6WRt7RENrbMTdCSiVY8XDWZrmF1LDC2E4iiG5XeeGIGz1y3m2\";\n  b +=\n    \"4x1kcRrBHv5Y6kLuwBzZPwaSF3CLIadqNlJ+mNtXlFKH7r8YfIPHskujknFAxaZT6NSbdbhF2Ur\";\n  b +=\n    \"eTHCZOW55a2zm9TURL5M/Bg7UePDhY96lNSDSJ1HahuJEah3QxOXfa7BQAlnwXW8K80p/rNhoCW\";\n  b +=\n    \"I4h1Mbtgo+IKaaMEjBUzCUosXn/Y3FtfSsZFN4DL7HAUD0YDOh6m/e2d697v2hhO5xU7vNHfhtI\";\n  b +=\n    \"USdJv+awor26KzqvDKflKBYZqBRZVhc+/0xbtfCCZgB47fdnr3rHtbGu9O2DGkJ37lxNlGE6sWu\";\n  b +=\n    \"8+i/Tfzo8U7hgJGjN3q7fBgFKjMkxYsGnUJBYGFOOiBgt5p7sJpCyWUUdDM3M5buaN1fIXHGabE\";\n  b +=\n    \"d8IZqmmKPT3XMWPrOAvy+qLMh38f0ED40ZanmMlnUCgomhL0YLyFYCHs/HDKM8cpzxynPHPCArS\";\n  b +=\n    \"pHDSZOaXaOJtCNhY5aM4WRocqKgI/dECxNwKqg87TTvxBbGVQnaYD6xr8uTb9xjN0+KzEFxfyOH\";\n  b +=\n    \"5eA/w+RCeQYHzJgTS5iTtj4p8R6yLfrOL98stOJnm2R71eBgt6XcbHJK41z8KGXQUjpfMNuyKfI\";\n  b +=\n    \"BbLr8N06WS69O2tCjZrw45lpjsSquB7iCfE3i1m2pRlT0eWKMvSNyE8bUDoBMDBBLbniHdwIRik\";\n  b +=\n    \"Ubuucf5v+n2RHSl6cDVFmaqSyX5Vsi/OBkWgvCSoztI78eZPP6/DtSntBuBNQt71rxenijY3/f5\";\n  b +=\n    \"neDuZYW4ttBzAdBOCKeEA9qRTXBIcADuywLAlfkG8jXn8xrdOT5+Yc2Q7Y9Ix3e4VYoUF3Qzoth\";\n  b +=\n    \"+XUUI/OUs874ij1/VM+DmWPrpsiU+Lf/zvgLTuaEXRPMZp07sukisMGT3X8UMQg/p1tJRUiNWUj\";\n  b +=\n    \"UPsO3T69S8TmJ9TWearbeYhEOSmNguMqhvqXPOglHhBSiDXIP5cln4XIzaM/5zXb80upXCrwM2w\";\n  b +=\n    \"rUaY3vuVjmZW2maSec2EbO5HxxOhtcpsH5Tom2IlfQB1/ZYqJs5S/FkWv4ufCcK7M/R5M88O1pC\";\n  b +=\n    \"FDcXD3WVi/FnSXSbg1jEjDPtA5Rma36wK7DXa3l1x0elanl9xoRLbn9XiWgtFDKijNCDSofS5E1\";\n  b +=\n    \"aZzG6wNfH1zgZJT4nszClEQrTRX6qdEXNTYmGPv8FDxm0y/vj2Jl2SuvFDrnUMABv7uLDhDyGps\";\n  b +=\n    \"bJNjQMPBt8B9pGi+6L4Dz0u/XVic56oKH+GOvwzXpPNbWH4qmCeqjNePf6aK+aYjt2CnPgPXGH2\";\n  b +=\n    \"wTDAhOunYSEmprSYVpogpRUZbsd0ynceYjQPUf0Ths6MbLhPBce5Et5A44dpL9SFObwzznbwfVH\";\n  b +=\n    \"JY8c8Q1w339P45ORlBqFeD38LJUNcWQHjT7rC0AhYZV12bY3K1mf+NaRjMD3rsobF5px3L/4WOs\";\n  b +=\n    \"eZOkx6JZPYxanMLM1Wa8eSBt4Fo9aBiXRZZ13WeZe17bIWhSO3OGCfocsWvKQgU0GZmhj8W78F1\";\n  b +=\n    \"usBG+vDHp3OrQp+c3h0nN1njtPpMweLsrNxYJ04JmGfBYodNogFoMpsAjPHC+z5zBppw+bP46VO\";\n  b +=\n    \"wbab6r6BiSxcMvEVE2IbCJcCqodLAZW7FFA9XAow3yguCux4FAynanf8iGctkKnxDZmTBeZhCIu\";\n  b +=\n    \"P4kpMsadh1CVl0R7yywXBePwRrsFKZqWicbFttOPbjFs/D9zPZoaeptg3slMD8VAEW0fdYXTJV0\";\n  b +=\n    \"rt8XljCnjVGRaXZDacFq8+w/4+D4prGC49PA+w1AL3UnvGrxd6PSMAUuINiEhnOCMzXBieiuucl\";\n  b +=\n    \"E7B0HqGbcMpBLdB8Z4L+yJhzjpMvlXZ5NuUTb5VyeTb5CbfCmApWcS02HrzyK2JekwY3V3R4Yya\";\n  b +=\n    \"WgFBbMctZ36zyTedib41FVfK8c+Zo010tYprzeh1Ex9+R+XGD1Sv+/AHW9HrHP7vVLo1ycKOs50\";\n  b +=\n    \"BNEn0EfGJRgiPv61xeQRdJsc+QZYr7PDlZKLfQhmWs2QlTdLloKN3h11wvHifyi41fw6eR9KL2o\";\n  b +=\n    \"m3Iz6NnXRmF5+fiJciBizxJhERiuuSivVFhhsyLZqI8BOewP2cZe+4zr/SkXUJQqymwbjUsEU01\";\n  b +=\n    \"kdgADO8tnB3ddn9WrYs2FcsJXKY0ePEY1ZY4jmZqJ18PkzamKC4lEs8OwaScIKatEtnIgffYHdT\";\n  b +=\n    \"gTfh0u5ukZp4uF2ACaDsgMTDEWtd4c3w0Adoo1ybPv7Lc8VzDwkR6Wj8gHcGwnjyuupHrFsm9qd\";\n  b +=\n    \"LWAM35g1wzpN0QvqHdNsAkMsXYPYGG7el8SEWa9bE620oz8YwTnGBltqjfMzvzQGww+wbF6pTHm\";\n  b +=\n    \"4kNTu8ErvGHTT19W3jhAcasR73DhfCYvDHdVCoUr57ikfMUHbfSHxZFReEIUd03X4lnJF4LsJ/g\";\n  b +=\n    \"NZxGBdXr+VsQyMmrumoNA6wte3AliFwiQu5xGXCFCi/N0N5FvFwFsFwi8EOhKmCWhZfngG154BA\";\n  b +=\n    \"LVe67BUH03BHy0urFkY7MjLcuTnuwoVxJwrFwJ97Zvx5aQWN2zv2ML/+KuNPCAqgVAYUJkUzp2u\";\n  b +=\n    \"OFgSIH1/pRH8U0hIUTPd6JhEWAUm9rNavsC8Y6LSLcr+o89dL6vwK6vyISvYldWjU1zvV+fEAHK\";\n  b +=\n    \"fHXemZOj/OqpwhnJcha2FaMrjzMlh1/jrU+W1Stzp/Lx18neng5+rofknQP18xvw++6TMV9TqUy\";\n  b +=\n    \"mPoxSf7RS+/AWeEUE3OFflFL38qyXXnqYYFdfKnWvX0ui6V/JZipfx4/0OtINNZDzKd9aBDZz0o\";\n  b +=\n    \"6ayHvXXWg5LOepDprIc9dNYDq7MeQGc9zHTWg1xnPeypsx4UOuthl876qErifXh7BifVxB8ve+S\";\n  b +=\n    \"v5C+D+W9g/cFF0P7tv6eJd18hUGpWoVlWPBdWgV4bnguDBhM/nw4+J4B2uy9iexiQ+1BhbwaigO\";\n  b +=\n    \"7bl0RqSIUpN6uolzWx/UwT2y9rYj94fyFJxXqBBcwlAldnobpMQ3lR/GN9UbdGvMcOcEG55mJRj\";\n  b +=\n    \"meN48X7bxK3VaKl5QmkddGTb4giPHebQe5LYlaXB9hZCxDYCSQJa9vhCZ2kDhAyneunPpApYZ+k\";\n  b +=\n    \"ULoy3Xt/b9Xx9GGkN9P783RsMI/en1+Nl1oJuKuNqY4+46L+ySz7L1WUmhFrI33mh1hLa41DW3l\";\n  b +=\n    \"jkaO0cT0/CCvVqFZv9MX9/KIuJaprHGKfcP/Numd6VI/oZRRx9K/nWLtd05zG9RgWO8jIB8VFZh\";\n  b +=\n    \"vHSuz6S9vxP6qmww/u8qmLrb56VvlAXuXnzqnK+KVU+SfnVGVfVuWrjLO2d5WzeZWfP6cqG1KlK\";\n  b +=\n    \"ztLzypPPptV+fQ5VVnPquTDfmeVSqo8nld5/rnUWIukEquG8fWvovRgUd3jtrpymegsZQ73KFM9\";\n  b +=\n    \"S5n7e5SpnKXMbI8y4VnKPPdX88sEZylzokcZ/yxljvco452lzFyPMu5Zyjzco4w5G657lNFnKfP\";\n  b +=\n    \"CV+eXYdGrHeCZXCU+bZossxoS97qPBywtGtRx5qy2UESiU1amZYanYiP5ZY0rcJ2Z51mfvS8GxE\";\n  b +=\n    \"yxGNgZFDBYv4fSiRnvDx12FpZlg6S9xZfjcsQwl7Fcma+ojcgKlTgxf7Po9ulS1B0SZSQqMXJZD\";\n  b +=\n    \"PmxkTtn3BMjLLfDbNJf3BDb+2EjXp5DXISb8cS6Qc5fKgr54h7NATIjV9omfbM4BbqDXfMW7Yal\";\n  b +=\n    \"dsOsXdOz3dx4O8jvM/DBTnDFjXEzlLt5JSw6sSI4KiZBSSoZMhYNX+InZqCpZWsdkAeDrWyvBw3\";\n  b +=\n    \"6okwk0vTs0S62Sg/xpRksurho0aWbzPIlTCIycuhpTvDdJ8fw9YnJr1xM+TLGlC9jTOdljPV2zy\";\n  b +=\n    \"+2+eVrzFJtnE2xNkt+jcmWF+ENFm8UHG8FGYcKkcvlTsK+8c36AeqH9WLBRiKBgB+kandTnO4j5\";\n  b +=\n    \"EdZGxZpIkVmbR9Cp0iirCLdOj4lh3AhFPf7DvNEqg/WB8ZeRqy352iNPEC+uCiVB/MSfr7BT/wN\";\n  b +=\n    \"fUWjndVxQ5JhQWKa6FSg+mbENbZZCfMgN9MFX0oHsBZRaJlMUaq4FVDV9rJIFUR2IKKsJPI6Ab9\";\n  b +=\n    \"lYn2AVq3dQBVTQMvkrIrfd3aQJG9BVa2eB7FlkG/08VjZtJFfV6ap0dhJzFsV87eK3A2+9MnUOx\";\n  b +=\n    \"qcmedzg7JDvQOZTVdmmU99JS2Pej6Lq/wcDrizOq4S422F/SZLVBuu0oq9M7Ci6+VOrc0io4gfH\";\n  b +=\n    \"uSrr1BuBEJReAlF4YUlOWE259zsIW4WYHC+KOFXwxiBUX7P5oLxQ0FUP84eoZj03DLhiEUScQaf\";\n  b +=\n    \"2+q3F1cY7rrZRwTU6TOZKUdfw3Vd5bAxCfDdlxoWETXS7znNXPeKsvmBa6iXAZ1DKBHlsdYaCn8\";\n  b +=\n    \"LJDWsbJNq+v6uNR6DPmc8QBFoPolTPQn/5enQThrsMaa6g+QYvaFRKUOStrqoB5gZqJ4yjncmUB\";\n  b +=\n    \"lQz6VZGJSAcbsANaVOaBHp9nfBPJR+gS0kGeo+vJ5HxzG5fe8Je93UxDIIqtT1XBVII5yrAtXtR\";\n  b +=\n    \"SD2WSIodoYoqY0n1Ta/uli5nr17oBbxug4RGYRZfDWI4VNezzvHkinGEsaIzseIKo8RqAq0GF52\";\n  b +=\n    \"Pi5O7dy+rCllm/qbUHszPlwXnApFI0/9V6tToRK1mXvGw7KSCSiCe1rVTBQQ7qV4tW/0+5JER+7\";\n  b +=\n    \"K6NV0jnqxDw7bW3QQvYdOjEa2B3jLJqy7lMcWP/2iQ8f2m1rBQFIvxf3EAKOQYqs3DeAVEhd+H5\";\n  b +=\n    \"iSnvh8+MydoE7toVTtanp05msQhFkFSULN7kvy7/AnWuFAMxol1gZmOo2sWPpHd6bH76QofloUs\";\n  b +=\n    \"sfw1eo5eBhojJiT9EuskDmB72jEPIVf7xrn78LM/z7MJ1l1MLCqFnav++bPPyEJ1E3nJ+EnvzL6\";\n  b +=\n    \"2v0PidSaE5+nP1kiRlGXW2tWzaPVFp7e6NjNdis0yo3oZ5lhfRCWft/+eXY8iaB+tToQygXPk9a\";\n  b +=\n    \"//FzICkwHwP8fg3GkhxWoKP1PL7U0TavJFBemIjrwUuf1A3Tip8CnvudsZAsgyg6f6vw3hk2Auz\";\n  b +=\n    \"s9D/4GcY1HswHXTbOzesNAy4svp2SuyTIO7qA+ELI6yFxnLcQ4xQnrZiIl5egDYUl8R4Beag6EI\";\n  b +=\n    \"2YuZGbl36hjIZ61egPXhvyD3J9B9I69AHN5N/4PvfpMyym6jIDYFWL0Z0jCIitmtFC8tZj8Vo7J\";\n  b +=\n    \"hTEIpt5ND4W51q7zavUA495WcupcKjEdwCTMM/zwtdKa+AIG5cXpg7+QyTJeeg/Rv+OhvOiSWDL\";\n  b +=\n    \"G13E1p0IsPF70dJBbKsAY+VWyVVjlKcXvO7AUybLhnjhZ4EtllV7eFHf7kCBO5MpN2UMOfA2aGO\";\n  b +=\n    \"I5fZmHhrOIAix4zorNWfCcPu07Kledq2Yx7LZB5ZylKvOcqsxzqjLP6WdPlFbBc1aZ56xkr86qj\";\n  b +=\n    \"mwsAcNTrda20ed9JspPSDy+wOkxKx7/jhaX6UvZPLOLXysfrnK/02BgWdSThhN1l1UCfbCyFdhI\";\n  b +=\n    \"CxPrwyTTMrGG19WuJt0Fm2TevGKvbcDkKn5hFaEwd7WQsbsVYXd9YXerVvED2lsYunjtpzKP3WX\";\n  b +=\n    \"XIDm72xMJg3pZzgbhQ9pZ2nREadKI0JO9b4WiBJzB1dkiw9LkM224QbrE8OJQM8QX8IQs2r0YOV\";\n  b +=\n    \"D/ScoQOWXUmmx7m4/g7JRgFkCb+RGjzemJKUcwpWydeDdMTh9JZX1d2VdyuW5VrtuOVVxxM2NaE\";\n  b +=\n    \"yREfC8MQWz0yzjul7QiKqLkreN/39I4ofRF0Axg3UPWVDmrdoCa/6KO2jiAV2FVGvPZrvQUisme\";\n  b +=\n    \"QnFFPwXXWQp6Eh70U/z55gSil+KxMXbi5zocOvFzZQs6OcafdOGWVV6h8fg1tQ112Ea74zhN882\";\n  b +=\n    \"2S+m7samiPV7oEOvzIdIlKDdIO+N0iqBzgW+1AJRc0vrjsK9gtRZYUyxvc2r8UQ9PF9DKF/8XDx\";\n  b +=\n    \"fSPntPbsF4wcfLE3e0YZbpxg9B10KxN+NELK4IMZNt+mQDrEKFwEsCeLwvvReBFxugHMbvFLGf9\";\n  b +=\n    \"+IdCRz7Ycgg70jUWMfPHW95+bMtLqs2A7MceBBqul728zp+CkzUWQRnN/QugDpd0UcQ5/HPZH7X\";\n  b +=\n    \"n7WaJqI4kyFeVIq4mF88vsFX5A8aqyztiWwKbVEhX96csU3i+1t0LI9/l98q87KnRnxRbdHiXkj\";\n  b +=\n    \"Wzwo742USiW5yBVoEFX7x5Ax++1mOVLwnZDvtFRCE2c/rBFCAjvehcUEYt0BrlYhdHoZTelc6xW\";\n  b +=\n    \"N1AFa0TJL4Oy4/0vCqxIjkmkU0yiZdiJQIiltc7EL6e68X/bWvDA7zCd8SsFyY8j1gb+Evd+L6A\";\n  b +=\n    \"lcHSOyn8fZ+Yr3DQCkVqkrVET2rD1Gc51GczzKFFpYPk14hErBnaAFiwWIdYmdpMv5FLeJglbbi\";\n  b +=\n    \"v8MhjgW9ijJnn7x1XJF9BfyccPbl46uWfWG+pdXsC09sp/Xsi1fSSvbFYLCi3n0q69UVKqyXDNy\";\n  b +=\n    \"vUFXq5OxpM0HjcfaI4Qd50tmjhjXU0sXdfWBRs8Wh4M9nTFFPrsdVf8+0b1Gal6Xdp9BqXPczAB\";\n  b +=\n    \"ahZRgH4uINoIhAcPapLKo6CZCO2c+dfIsHoI+YXRR+nBia2QOPz2xgImT7Jm7OXku1qZ3XOIv5a\";\n  b +=\n    \"9Hu9BS+WP8v9XfnyYs4olZE9NMZywqUF+h/d2yAYTB75FMzu3JQWK0wzrTUlO1TvKELtrzxkz1h\";\n  b +=\n    \"66dzo9AxMZScWgl0uYb+rMwc10D8Mft+sth+1M3GTA+wXTbHrmWdPb87XfeMVVxqiUi8E5F4f98\";\n  b +=\n    \"Xi7aTTqbBjdbpD9/ZOFZfFJdX9tuqbiLFh1WZSg/8IwvbRdJ4ufNuPBXniArU3GMpeA2I5SlYky\";\n  b +=\n    \"dynnyM1cCA5ifx5MU64flCUTcWboWP+GCs9TXOGjmbSo2P0/LF53joxcRzRlgQ9xrn2kScL8APB\";\n  b +=\n    \"WtHs74GOmIsuMdED1UVLh0VqzCMmNdb7nxNOz1OnZG88b9lna3LnWtTfvuHQ0bUqufkXSzNmkPE\";\n  b +=\n    \"79BvP79GiY+Wiz9e5m5CrJDD+Am+HKnR4e0Jl9dRW5/zQ9QHRWhbZWaU0AtJfJNMWK1E4ickzMh\";\n  b +=\n    \"gRJsTZBAzFREUOqwkxYXYMUb8uBZONLfFZe3v9MDX5uQLBH4DRT5+GhGvFzsAweI/sREna9ARVM\";\n  b +=\n    \"Y+SpOFoT7OD4KsYQZrDWyW0v0UkypLsQPfmHPSWfoTvzrKc1/GuS/7wYgt+tslEG8CLZKUn1LjX\";\n  b +=\n    \"KxQI70VFXs2eD5h+6qlr6dOZX39Av1em8N/C4eG2DZLsYZ3AeUsjS4xxFKwYl7pRH/vZWZWOtPJ\";\n  b +=\n    \"xBwQ6wd+I8bqQ9GhSExOnv4lfofbCHPMrrH6InsEDLL9ge2eIBkq7YtBGm6wdpBs0AXu32Edkbv\";\n  b +=\n    \"EZQ+vJnibyIEfHT6SVPnmgd38wMQcojpIvVswN6/Z2wnYfFVx1cNZ+AqBctJcrspdkI3UiNQSqb\";\n  b +=\n    \"NIg0gjkSaLdBHpSqSbRXqI9CTSyyJ9RPoS6UPd0RP5IrrUqmzkCyYxZCGQMbIjODWK0vfdf/gpZ\";\n  b +=\n    \"1f64ve+e2d7gsXmSKwisdqZSJvW3e/ae9cEjmvQ0nKSyg3WbCzgwyoQFv+jOOQRu324OWKVf3lq\";\n  b +=\n    \"tWpByJGo+PVhILEtcmQgFXJ7XC+AZYalDR5hEsmAL0yZmL/wO7we5jIn3QCGn9lpv5C6855BPDf\";\n  b +=\n    \"rs/g3MrSeqHJq3OvoJpdluT9vd7A0yyS3YHqdrsGVWe+JeQB2aWZeCKSsTSOfTb6XGRfzIDljMb\";\n  b +=\n    \"enbf3/zc/EtbPq/xfXqrtEWnuHCGvfKrLaN4uo9qfmSWoxloKFJbWhldQGvSS1EIMG0UuQ0g7mQ\";\n  b +=\n    \"tqVIrNLRHB2szx7WBjh3sICVlMq9k/nXoxN/xNIRfGSh5v2tdP+eGUmU014ueMXOMrpy0Wgaq1K\";\n  b +=\n    \"3A51SJan0up9UyTy0Jvwhxq/Qt3CwtMkk512wcTFb8GvKypquawyKWz9hqzyCssqLxNR5WAuqVy\";\n  b +=\n    \"5UE/FPaGVSQ7mIskF86NzzzglaSTsY0QaOatEGnnEU+FMydpcjfMDkqKKwFqn4r9Bp31sI5BRSC\";\n  b +=\n    \"6o2VIXxvdh9vAtyrHurLG+HVzeb7BiWJ1aP7EeE3zc4Y63KjAI9sb5RUj6CdhGHkqsqTyQF0BJA\";\n  b +=\n    \"Na4ZpKG2dIJscyFjSusJbkQYg37yOF25cYbmmKTImagc4d4blBcxvoQxLWT1K7oZKvYAYQqimce\";\n  b +=\n    \"cjrL6CjzI2Hx4YrdPAXHgQvTZkcEYs4Aq0M2MXThtlsedRAnaHBYAdQIJvDWixlvcbcqbXvXrMT\";\n  b +=\n    \"7jCChkqrXs+olIcEXJASCBFeQ4JeRgCaBaL3bilkIE7b/9gVu18oU5PlJrh2PFisuWPS8Ozc0ON\";\n  b +=\n    \"iAlLaqCssMNXg9l/VWuJ/K9tPK8kr9ZHRXgCOW34VJgAFGJcabntzKy7vhMmiKemYYhqx5J/qCp\";\n  b +=\n    \"82MN209tbHrjPQ4+4qQKQWm6nG0fHovuKqjCEbDelI8XtzBs+MU7N2PIQUellYn88re/+7usnqB\";\n  b +=\n    \"snLjHLZ8mdmJ+OPH86g457QCdtINDz3sT2opR4Z5JDulSjiyIu68zaVUWXXELEXIaWKureHCtqY\";\n  b +=\n    \"1XCjMP6hBW5JW/DX0Q2WvY8dp7Px58Lb0Fn6nWR5ZwvH4Fsa7eB5DDYMsOEHQxnrxt0F11MCMWb\";\n  b +=\n    \"ZmrmnHf5z1+8+ACnZyZyM+rQU3Eh3/pP39C9em5wEuCZ9dulzSZoFNzcdVBl/RSgYuARJ/2lgHw\";\n  b +=\n    \"/x1H6+5S5p8lIl5aoUZEPe5rBQipxy+y8p9fF3P1JJKM3ipf7/ulhBhMQNLWfscJ/v5QWwL6Cmj\";\n  b +=\n    \"z8PZ/KZypw9mAUCJruGPslFK/Ofj7HqEhhorsz7iiQPCOFdmlZdujfistZcRmJyJ6byPEK+5KrN\";\n  b +=\n    \"7Y5m8HAwxMrHc127DqtOhf7O0GbJkiO1KTGk/v0I5DePozGOOx7Za6ROiBM6iArlaSE988AkYEi\";\n  b +=\n    \"VOxt9RoyzCug7i6znHrpe45zLZrdVrxTUXiuYsHzSvOAbqWBm7aLg6L8paYWsuJQbDIQOFP2FRQ\";\n  b +=\n    \"GUqBNQBzQJ74VNxygTTUn47QPrIVxLypVtQRofOAjTOHdZ5H2BPvXz4cGB8q1mBHR6iOIk1PxzR\";\n  b +=\n    \"lnJgaiR8P7jkpMpKSchD7LmXeeBmOVw1W9+Jb8ej5Faaky17VvccNhUObCrSoZ3UC+byRSw3Lcs\";\n  b +=\n    \"kzhDs9cBFVjrv3CE5eeFlL0p5YXZmskMk5QTBeuxKXA3b7LJSnkBW4FJoCZYV3mFobb1ebAFdkf\";\n  b +=\n    \"xhzY2+7Im4JxlveWAlMJT0TrmuceB8+IxK2EHDVY72NI8O9k+j5Q4Ul9PsNhgLcgUbP/GhNTEjI\";\n  b +=\n    \"Lxo0ekJcMoc1Ac+meLMCGs7Cops4P5Ppq1QHqVOgvg9Cu9bUBy6GYpfBcUSiQCaV75Isqkwxx7A\";\n  b +=\n    \"q8L8HHziWy8M2OnWD4jjNwfSOY8fr6UfMC7DusZqhhU+TF3uxOvqFYEWg7PFjkJtuxUrCanI4oP\";\n  b +=\n    \"0+FfYuh/dIuJSuSh9FDIKmlOuKMd7uSs3z4pIlibeKDvN89JD35xj/WqPVzwRBnh8Zr7GQboRO0\";\n  b +=\n    \"DPPhIT93tO8Wiwx1f8DhegYcThEOj12GcBg47DpuQPBYgAuAnB2lZgew7hWgCt2J/C23lMPekkL\";\n  b +=\n    \"w/czYD7WMGZwp4eE1n60JuUsJmeQuDk83CbSEsODbO/+RuK+DLNs+co7rM0ccx18ahFrnARfL0T\";\n  b +=\n    \"su0RDbqHCQ3xP8O24Pe/xs+RPP7NzCiLicB8aSd8GXSWCBYr9uYTIQL1864KZtj2gp8TZDGHJoZ\";\n  b +=\n    \"jPA0mcALYwG99jFs9TsOH68zXthiaG7CRxCoRMsdxNhVF2OrlPEtpF7qeGbuZNjgh9qMdwvExO7\";\n  b +=\n    \"kGBbozTvfMuGd+xj09M07NzzjVM+M752d8Z8+MPzU/40/1zPgOQkRXxneUM/IdUwWWWkHuroste\";\n  b +=\n    \"EIpwt5PbsO6iakvl/u4tryrLYIJMH93sTK2uwvzbBdVZgUycMxlEzwkeF3CmHX2KGI21o0Yr1nf\";\n  b +=\n    \"WVZY5vNmGsibzX6mzQxdV3TIy3xjByUX+IHY2QQYEyLO8TmIPeAXPVW1BitmJXvnayfKenu8xhl\";\n  b +=\n    \"MjJz+Xdg4GMhTE6y64vt2qfzEnZ6JPTa8twrj68SlAG7kNbghdr3dZgEumB7aYXA2EPURcWLDtt\";\n  b +=\n    \"d4HZT5CrbtXGmZCtd68DMit+cCrPXH4qumCPT5xl3Uu3mvz4zvRRSfepPs7kVgeC1AgFWr6LI4X\";\n  b +=\n    \"bA4nbA4ZViM+JtiidYyeSBvkLkgtggZTd4LhMERpigOcOdxu587+mDdEMZSw9DGw/oHZpKtuALa\";\n  b +=\n    \"+WiPq8EVw/fY2UmNOSuqyJKWvZougSMRvgehHZBXiU6dk6xenNFYh6DCRqxZnRVbZ4A6+dWOAHc\";\n  b +=\n    \"eBkoESyk3EqkkdbDAOZUGwnWG6ZDfdm35MuocfogeYv0NcqRi3LFc30VN4JgG2NEr85EldFJmQO\";\n  b +=\n    \"GI7Shf3tzrmWBGT7NtePF2U2JgU5zoo79u7YgPvfbXP9iqlwyM6/MMjOsf4SkM8opdAhjydAaaB\";\n  b +=\n    \"bAzrpeMYcWxc/ZoCAQuIV4ywivuh0wmu3Ht0Uocw/AJC6JAmvZ3tNhGfyA9eJAW/M/jGHFZW0Y/\";\n  b +=\n    \"5R4kItDPSjg8JsTw+VSLAxY2UaWxfhvLJjCp5S3ZsnX1/oPZJsKHjSD+Cy2NVyAijZ/pbENJG9U\";\n  b +=\n    \"kfARemDM1i/xMWE1YxoC/GwfSB37BwiuGylxRVSrypCIfP0sxPXHoxwEUiua6LauZOMKw8iqGr0\";\n  b +=\n    \"tuFY+YJJGm46PaPoXRJ10hpP8FN70UtMFEYSZETzaDUadZM4URhdiue+vYuyDLbjRw5jPOtBVly\";\n  b +=\n    \"AkRtdkTWJC5c2RFEcCo4nfK9aVeTQBG03jYp/YaZsGmeAUXf2v8WFONzYb3eUp3LJN8gb3PnMWy\";\n  b +=\n    \"z1zuMMclluqAAYfr+MvK2rNUiFtuQdzvppevxxtb6dfg0pB+/4cD+0w3fd6BbaSbfhEX+PT7Xfq\";\n  b +=\n    \"FoWiHCx4DmYC4Kg3b8c9rYpXZ0pmXSRX/JU+1kBUBBu2hX+6NMntsgYs1V/4KjDb07NMquCmuBP\";\n  b +=\n    \"G/iXhcssUfdXmFabnxI0bKgTv8jzzbraeClaW8FgwnA2Nd3YvEcN9lb5OcB75e30XD3I0/pfAOO\";\n  b +=\n    \"HW97kt3fo13G7ww1gmLVyp7CGVNqaxXKjur5xd2S4U/3F3YLRUO5iOBbcej+fHsIPvc8KvEynSQ\";\n  b +=\n    \"8xHrbFJvXn18vo/3e6IkPiRnnFOubNdxl30pX6cJC5kZ/hje+opDuPgTUpnTHWHFs62OOQXxC9+\";\n  b +=\n    \"SBw6gYleYxVi1RVrx8fw5+zKoir29iq8REaw1XvG7JQH2vAo1vXQIOnSsw8dKelrcUmuW9VOrzN\";\n  b +=\n    \"r641DTY/thNtZ2Zc2qEbvVWyjA8kCWMgIiTzqYKZx6qYYFeSsqnaYje5r2RXyNFyCqmTl4JKdpP\";\n  b +=\n    \"+JzJkuHrdyQdkJXrJGyV8PEIgkPdMNFXNP6SIVdy0TDpbO8w/qFLvseYH9caje7exP9QjfKHgzP\";\n  b +=\n    \"pCBWCZCFpez8HpsD3iArVP/slZpmpCsb5LO9cIcuc4BYczfIHYRtorOWiOvnPHy1J8qDcDxlBfr\";\n  b +=\n    \"5qdqL/toVXaU5p/sBRQO/xC15+wa0fFX8Mwq8H/rI76Bk/o03ivdcayGhxNMkm0couQ0UV/9cAX\";\n  b +=\n    \"UZMo7DtNmly9NjBzN/7sp6Jj9xMHPShlGI5wE80QDA404idaJcX3EEFog0WYT3Z3ZXH5TtaClNS\";\n  b +=\n    \"dNTvwqLtfU1Y2V6tF5/0OUdi7cTFu4RP/Aa1hqAmzyfFuOWly3HeLP2V2dkdb5wA8weKeJTRQQ4\";\n  b +=\n    \"YAS/QkyYD+mUn25oy0s52Gh5741/lXgn64JGZ/JDCwcWTt6hQ8j1M+80+g57jQNpOY2Jo0pkOHn\";\n  b +=\n    \"ELyqrH+EwjwokDI3Yl1NYbJjt1mjnb40A9hvYYzEkLAvyXM6CcHfF8lE0UO3rK1lx195+eXBnk8\";\n  b +=\n    \"nehc/h/dnmZ+sB1hV40FO+Fd448w3nM9GK00O0oqxoRUG0oqxoxapzaitaYaM2NV+0guHGnmzhk\";\n  b +=\n    \"w4afale39IDrPHDYwEqDi19uePyckprGOsCQnnHIGxYu4yYBVeeWOqloMJ3pNTRyx0FfTN5pgW+\";\n  b +=\n    \"kwwLccy6OhZ+fT300rJ1O3tTBasjpwXiNmYBBRgXkDG9HZbN5b3PZB9atgbFsg+nS+LBzv/PLvT\";\n  b +=\n    \"oesEmV5BxRu2TCaIgIz43uVLWj4FkB9IfcauXzqLaV0mbDyM8923bZkf9mWgpr/y5b2eVA9hvZ6\";\n  b +=\n    \"omZ4Pp0He6YEoPf8cKZ87c3vF/LrV372nb3idcvWhGTYsbpEDGTY2FKbjqhMFkiBQWCOPfxoFWD\";\n  b +=\n    \"Q+T1dl1Ihx5YIHv46W4GbPSTvMCebmKCjQSf6DVj4eFk3DjQLu5iIINSOuSxsYBSsP0WZx7Oepr\";\n  b +=\n    \"LcH7XH3i5sxhLyHoQ03eVk8uICj78JLT/lF1z00scVrSbp6XLIY1pq2jwe9EJBFSGsmiZn9Sb56\";\n  b +=\n    \"fVJvnZZo2lKefL1H7gB0fq3M9Ss7HtGngAUOT9AOq/uR8/JxPTTbazZcl58HZ6dLkPMz78/iFLK\";\n  b +=\n    \"p+afIyil7PCv7JkoRYGKmU+Nm42WBFVFwMJwhBWrj/hL2HQFPpwfxrceJBSbyPmpL3Mc9Do/1QO\";\n  b +=\n    \"AAIDUDSSM6HOKS/3GA4Thmw4dhmXUL6krbENfuwNTWo1ee+kLUD9HIb6ek8LkMEv2noNRuIaQBm\";\n  b +=\n    \"xftyn7gHpPV6CdgZhQwOMjjRP7vKnbGO3P7PdtA43z2jjv6lXTNeL6t9p1/Evn8NX40qJ1Ikfo8\";\n  b +=\n    \"zfMP93r+Ei70vuapmjwx8LcLvFLrteJ+8FcMXlDO7IHJA/XKThfdYMSar4rIUbCydw9PSM8W8NF\";\n  b +=\n    \"RBg7rcNdTgW9XgSTjN78qyKQB9Z8ZYIjFzkZI+/97C0y6P8zr4qEb69Mk5VgVr1ZlJDVF9H3jDO\";\n  b +=\n    \"KndwCbctXX2JW5W56+JP1cckGxD170+u9mLrZfkJp7rxbGqXXfF8zh/lLS7pDQVqI3Hj/Lxzsa4\";\n  b +=\n    \"EoOdwhV9kVikFtKPUB7aTZ/NetODn6yLqr4Kw1CHxrc3mHWrrF+pVHBLcN/75rB81yEK8OgHWut\";\n  b +=\n    \"h+nMciwvHn5aQG6XvlRAxyO+REJ0w3i0hGhY/wyGA30g1usLWes/83RN3m2GAT9F9E+mTFsnXOB\";\n  b +=\n    \"5HubtLUS6e9kx97jWoSyMgBolqSR9b/0XpU/tp0x5Mn36vZQV/wRXG7aSTiUaubWenTJEj87t5N\";\n  b +=\n    \"OegW62vpnnl7bazjxhccTJnFZ6s47jy4XkInnTZVZtki5+3fvUH22xcM9SOfx7MMBZx4vM/rfLa\";\n  b +=\n    \"Wm7pfbBBqSZhGWT8EVdyiYAS8or4Izp7kYtrxC2+vLjFDhYwawb1Mn457OFSYXl8Sx4Tm7NKW2W\";\n  b +=\n    \"3dDeNmOtkVcFjM/JmAPeTMscfcEVVo4ZrVnllAJ4a4SlfjQtHCXd9/JCa+DjkdUvOeViR17FEB6\";\n  b +=\n    \"jx4hOaz1bC+IV4IsbbKfz8lNwguCKvDXZbHQqcb468Z87qd5ZIMDfvwbrrgDxLpvgxLZ4iN4hsf\";\n  b +=\n    \"Eg6RXRzd8ZfZFGFKP9+0hVPWEfobBzAY0V6DHoFvw3x4Rp+xSZ+TLa8YFCvYbUqMSMOoJBsmw+S\";\n  b +=\n    \"4FJ9LUTpgbz7R8fSOOUrPo5JT6HOg9A9Ou7kGjcBtGaupbj9++ZY/TqAfOxBherwgBA0mwOuZFg\";\n  b +=\n    \"fEnji1dICa3JwC4O2hYP7pIXuuo+cue7BrroPKNu5pSXsons4ix5QUlhyDHbnoMFrq5KKJDMjLF\";\n  b +=\n    \"4LqzfaY+IvIIeDlwClkCOFMqgOlCuI36v4lZyA36SD4jOh+UElXlA9uYsW3ZOAlUU4QI39iZbfP\";\n  b +=\n    \"8fvEVEZkYvMa9Hb9EN7mbmXvjyDj5Pvzrh7joz/3IUUdoHMc/ts5m8Z7RKbLZtWSehg5VNsjQtF\";\n  b +=\n    \"LBbXpVW2/LyWJV2F1bojO2YNxoaUtKS4XfLl+tW3TlRZ71j8FeH4tJQz89IRsdo9X0ON4z5OsXt\";\n  b +=\n    \"JNPYZ9huCuwB5vYkSdd4I1W9y54lS3h8XjWoARA3z05RQ0kER2pGCtn07mo/6Hid/RuHIGIrmPi\";\n  b +=\n    \"4iWuFDLDhwrxfn7kvacPbiwJepBdwv3sFOwhEJoXIGmW3RZB/jVgN+/QbX19k50M3PgcdPWUKkh\";\n  b +=\n    \"/C5Ir3373IX6LgR1aWuGahMGnkDK0eOaPrUejZsBLPMzvBBPGRJCy0ZX8jJDhXqTvmmsjpsE7zc\";\n  b +=\n    \"JKyzToMcphTx7WI1hO+mT2X5JYdZ1RaWWpxKM4kdkd3Sns2eRfyHaI/om4AD0w0DiQcPg5DWjMY\";\n  b +=\n    \"3cyPTsOfijPxEKWU7pJCPdsy2yFGmcenoj87qmyFiGw33w3viOr4MYX+r7SYfM+9WN1phV/otGD\";\n  b +=\n    \"jgrggGE3CNHV8pUL004EfOEfaR/+mgszwBn9ZOoBTWVqfXiY4a5c1069sk4S08D8M9CCmO8vckv\";\n  b +=\n    \"sT6o2ofJdDfNzFHB77NplCJlhTKX3zv6xXAA108Z41cg6v8eV331aqUAXqt8sQ6MdORtb5mWwbr\";\n  b +=\n    \"BClChpq8E1xvRvy2MRaOtXy0rEOtgpguxCjGLpXGI7JyPo7AmAyxI8z4BffCTCwKRwirxPuRSld\";\n  b +=\n    \"RqXSoiYdFoVTFQSXljC0XiXPQzFeom7npeANbNmkcgytJlVtnL1N8G8HzjzW9iiCLrrXM1zMgxu\";\n  b +=\n    \"b+khHp71DunBvGk7WWa+8aLFdniytrSweJG1wPq24HKgplvQZVyuIq4d1dy7L3ehDYi/d6zdyPc\";\n  b +=\n    \"HYmE85Es7FenHkN7mA6BS7cu2QPpyb84Kidy9S7fVpeKv59I7DqKG+lR0VFKz1A6G5F7HT0FU79\";\n  b +=\n    \"1U6dMNOHUn1tq0DsdNXiSC2iEE/dBXzXODUYDP8owfqiEu/I6Hl2oRT9jVFBcZ2Uynt3LAt100u\";\n  b +=\n    \"oQXuRE7c89iiWiGJSereOt/FJGWIeP2sbF6d8jVFog7itzEcav1bVxIuXTShSFo+zOw03oOEQRC\";\n  b +=\n    \"IXZ8ssPzVNBYdSJs/kV9ihVAU6jj4cShlxKKXgUIpO4HzhkLqUhhbEoRRuq0zmUCoYoDRezUO+X\";\n  b +=\n    \"GaHUoZXT5O5m4OC3gD0K3Ax6NkbF83OsLphB9zWZ9fCcAvkJZ9dFjrTBbku9aoMLjtiCUo+uxYG\";\n  b +=\n    \"k5V+jPAQl3Bk0+S3OCZ62mhfttakdIOt4g/q0k21PAcot9JD12evp0BfF+oaNwr/gicOO9+AsU6\";\n  b +=\n    \"y9KgTv0+Jg2U3vVGSxetE2hBnp+x7+xc0X3nJogNekI/crFjsZ+35EJ2ypsZN7UdGX/z/2HsTOK\";\n  b +=\n    \"/m/X/8bJ9l5jNTpwwNM3HmIwxappqtkM60l5SkRGSappqlqWZJuWkmQvcKRQghWbKUrksJoQhdu\";\n  b +=\n    \"tdOyBU3ewjZU//3a3m/zzmfmamQ7/f3e/x/HqbzeZ/zPu/tvJfX+nzpF2clcfAUU54eKJSKqsbE\";\n  b +=\n    \"6aALs0acAPmSoEHozhXC4I0cyNJJKrrhwY82wd+hcFz6ksPQjCsE3nXidvIsx8LqZ2YlIfOrY1h\";\n  b +=\n    \"emww+klzdXq1LiDc7laO4m8eb6d1MWucYsV6iICC/lCb6G2MqmxSoZBlg8ZAQc+sfr2sbjVcMV7\";\n  b +=\n    \"RYvg+busW7c6gdxfuUrpI+W7EwhWyqL0fkBfDRolDdYQwohyQk0ud6Oak9SQct8my7X1B97xgUz\";\n  b +=\n    \"S0MEiFQPaGYSNzcSy3mvmtBGUrY3UlVsBceFg7eIWjiHWHbeLGH6DLI5R40OgZpPkWKB2dBUnPa\";\n  b +=\n    \"SEjbfzfgZRtvgBAgnE1qb/s0tPSEzoVl3GQnJA1TMK4q7JKPGKwlI9mJXY7vJhYaRZpe1OYVGt1\";\n  b +=\n    \"XoQZqZkK07y40jeR6YxYytBjsWUUsosixYRrzCAM1JmH4kiiFjwAbWECqQ9yWUF+0ErSQTCFgJl\";\n  b +=\n    \"wnKcjxC2pFR5GZIE/cbPgbkAHeFi2clBVZLYu0LBt3yYjIblL8BKR+WiCanei5jQYyM51kMJNpO\";\n  b +=\n    \"Wtm3AYjGRvMYmxpJMP+MATPKEijmeXxFKjQEjftZYA1Q+7V9TWOYC8C0W8FYWWBYT5H0AXJB8f9\";\n  b +=\n    \"ChMijx6Inas7MYBcSQJV9oAMsSOkUsx4GCBXRlcMYcspEKLOIkwYiRi0Ea1gEbDHV0qMI88nxV5\";\n  b +=\n    \"pROwo1oP5Ts2d9+h6xPIRlEwmylXEDMxEsYGYqBYYcVgEqE7xtiE7r2rc4ZBfRN8hg7QdKLvUSc\";\n  b +=\n    \"9ngZ6M8GqBKzLZScfwEAtMEh/giStv8WmfzvJsMciLwM8fsqKbP+3pKcA3wspZJx6uKHIuLTLmF\";\n  b +=\n    \"Kgt6FgjpYBayZwavoEO/CbxeZ7ZnvLfxw7hIa/1kWcDuvGT/z7sidJ/nzAwkedDvwIAy1EaVg1G\";\n  b +=\n    \"UGeO25SWYaYv3ne2p9kzCQbZZG1juhSopZO20X3zW8GwHu3esZO1lveahmA9ZikjQtLqy3CgCNM\";\n  b +=\n    \"iuKPFK0T2Z2GnyyR7R7Z3kwZpOrn0EKdKsU7d5fDOc2yqHaLsXDwUjKvVsxiwvwTDbbCoi5NpXt\";\n  b +=\n    \"yowCDCOti54Nu4F8Rx5uJrIOwrUnhQFCRPh5UIi/JCJ2lmPKkHDk99eZbpLUcU9CUVOZdRcBaex\";\n  b +=\n    \"ElDJewe4CftMIvqycAvhSqPEkAXDAjiQYDwF5Y+VeEvNJm9ju2z2MA2uUgbloq7pdix0BOElOro\";\n  b +=\n    \"pEiaLRmG0SRCZa0YOTfX3bFCGneQOWDselh/gRjTQD4wfA8GdMbpascJ5pSjI+kIZGUikBXGhtk\";\n  b +=\n    \"XkJXZGMhKzAJwNMUgVTqqxANoVhqjWcW9EkX37HicwsBiADYVwRLQmqais6XOqCgodK6YCtkM2W\";\n  b +=\n    \"oTw7Whhzo5lkMbYGMCF/MKpMNZFSg+CWAUAUvFl97KLwCfEs4UOMaSZAVeY7QtNXhW+WD8rAh/Z\";\n  b +=\n    \"Ej4I+SHKuIa/6aCCatoHiJZIWSRFnuIN8b5ugQsykZXODRUmCIoP6vAnEhxhcDow4AI9SBBN2C6\";\n  b +=\n    \"m2wD7hCYkonGo8puFJ5MoXE0cCqLAlMohOhmEuObVB5K9PmQNcSeZ04sMM8Uj1gsvBliK0Kzbue\";\n  b +=\n    \"U/Tq0DyNJgizzY504kqHivHEonLfYSh203BJ03Js6bcNcdjqVjZsvoGjcZMkqYGEC0Iz9EM4bf4\";\n  b +=\n    \"POBD93yv8a1+1XCMhG92e/K1/Jn1DJUQS+sT/UJY8I3V4+G0xzEf+FqMS1s9cxNLyqqZB7m81Xj\";\n  b +=\n    \"BYYu4uZO/KHQkM3Dn4GVBg42EQJkI+Ie8igzjtxVgNdfUa54NUNsmMDvCdgRuBskmSi4h8IxSNK\";\n  b +=\n    \"PkdJzBzEI+ilJvIyPRti+p9wJGHzicY80pbtz+hcSaKWRiFQktghpSLSUz6i+jHaF60Xoj6OJJ7\";\n  b +=\n    \"ELEAY/YAj4MV8RB2ESmuYXoO8nzYQogf1r8lA9GTcqr3hiLjACGjofUw/AUEqyY0MAmmT6FAl+B\";\n  b +=\n    \"lHyMgYPWkSS++vSpdsiOlE7Wv0FN1Lh+2HdOl6FFtt6np9QqBXtCxzOw9AdsQaINHzGeQ1Qu7RI\";\n  b +=\n    \"SQcgHWEzRfMr0xywUOBkE430+mSAiQ3+WY55eTdbZAXV2Y5R0KHRBrjACCl+w0682vAooICfAjC\";\n  b +=\n    \"3kFYMRB+q8I1LBwAA6BwAgywZIOoNq8iVTbI1NHSFEsXxQ5Opdh2YvvUB6OhVKScDHVlFQ5XATy\";\n  b +=\n    \"WyIjaLZB+q5Y4qvGZqvHAa3OElx9lhBd37rV4Y/m18sZauBF3t8obVGc7h5xqoZUWzH/lUQPcW2\";\n  b +=\n    \"wery+2CUe9phXUa3qCKUWtKcGUksxIjSbsFXjUkncETHhBm3i6zSd0WWI87FNtRqV5MdAXpMcEw\";\n  b +=\n    \"zvpKwgFoN7yakNJksIJEbZspaOU1upk+rjuH6AHMAjKjzWRSUjLwVmPOlGNrHLRCjNM0cCBE7O3\";\n  b +=\n    \"IKoSwU+IdkRrnXA1fZuZGMcMjebAT3EaW+zLwTIDzgOeATUNp+ClPPWjbu8xlShr+Z8tqQSHq9Q\";\n  b +=\n    \"DKI4j0tvwt8pQrUoxmhWJHkhZKMlBrT9JDuoJHHFb56hr+LVuNMlXF6yKtXaabSPMqnjrPtNv0u\";\n  b +=\n    \"6oIJzt8o0T7VaYKx1yEWyqQRbTQGCeWG7PsWTUTgNyt8bctsydRrntZnIflEXHLueOknt7ii83I\";\n  b +=\n    \"TtaGflGe4SNRbSUfmBTrAGHYlUD4d6HiVTY6tqTLsL3nB+ciGBwup2G0VZkBXAUfvKIII1jdst8\";\n  b +=\n    \"I9d1aExAyQzzIxcMGMVJ/w+DrPItOUjk2Qbb1IleWyEnXnPhSpxd4BYw6DFQQ4jPTnWjIa6jx1a\";\n  b +=\n    \"aRoRkhX5G2GSGz1I+/CijI1gSsB4iPC5EVo4CDxGhY1mcx9tfJvMS5HnVYctHaGgA+ltY4ByD5C\";\n  b +=\n    \"zMgp9ZjpiEwJXgihnvq94m3rhV4xfIggODAYhPs1zUar+IKJ3AXIH9BhBtXhmwsnJxx2tMhLAzY\";\n  b +=\n    \"x9mgFWhm/yFsvVHoFCOTQmhO8XWDJ4PxC2pNZ7MjLapylzLZZqgAkz2laUVaYHXfNwxCIgWv8xW\";\n  b +=\n    \"ifeanok+kefRclaY2pt0uRWSeFf8SELq1wCSzCQExWsNQlKmIQCiwtt/xAvJYhNtTxI4y31Xij8\";\n  b +=\n    \"s9FyL7L0Y8C/AXqAYFl4CfmklY3JS8xCVk1ciCUilLJRisXbQWiF70EFrTV424qTde62ImwjWTC\";\n  b +=\n    \"SLBkH0uxB7A/xS99Vt2bKLmWGwWd6I98UiZngN0jLyHh5stc73fFJdKJXs3B8wySxmh4ZmMQBbD\";\n  b +=\n    \"bZ6EagepwP4dUaAVLN9GOKw+wN0F0pQ71wElE26y2CYEfd23w3091zMNyKgxI2AUWAmAQAQJF5h\";\n  b +=\n    \"OdB5DWTPgvB/8jewXOKRSZYuVoExGqxobliPCFIR92cEA4xgEfnGRPxlK5OXKMICSsOaQipOkAL\";\n  b +=\n    \"fU7Odcgo+oIRZET5JQh55JLYRPklUWyxq2WsiNVuXpinNtF+2eNuivbUYkKiG/oa2L2m0vDBa6i\";\n  b +=\n    \"bdj8pr0wxthYsCrJgdireLk0yhk+qxhPmm+5ZZa/cdnKQIx5mO0Ye6a+lI9u9BZA7DbZNQcEJps\";\n  b +=\n    \"MZocSFz9ndeZsRagkRPn2rP12UFoKxOx7LoPLd9tnfIrCLdBfLvy3WAqs6RWj2HwmNTO8Du602L\";\n  b +=\n    \"UVvbZVkEtglRx8DN0eDbiqV1ZCWq1XIpmeTkIz7u3ReJje1k1mYhCKpYj3NDid31FtU3hlhUcDd\";\n  b +=\n    \"by4wLxr4WRgCU5bsiU6vh9zS3Ybc5FXj+adXVXEK2lr4/eS3Km7Y/eaOU196fvCmUN2V/8tqUN7\";\n  b +=\n    \"o/edMor7U/edMpL8R5SAfLQy+vrvLqnDcTQ5vP1uO6vVxMIOJavVXROKAlqGtNLRB5EeRyur0MB\";\n  b +=\n    \"cYW0maulq0t/6FnPuvFXe1Y7Y4fehZgUvxeTL+NooUQ3NYoQJMiDuGYjbuAQaKQduXu6yQVKTIL\";\n  b +=\n    \"BOFluIt2cNw89w3Y/zDoIq1tA2WlsJJkIEYKppdNwfRw6wb/dZMWDoiH1lMooA4ameec6A/1CJW\";\n  b +=\n    \"99qms7E20wIY+OzWAhmzUxjV318/r2KQxEx/t2iXT6aoNhaqFUX9ryMCG8QhkpHqxJH+wsqS83n\";\n  b +=\n    \"uG8laL3PyyvEPHAWcfGPntlhb7zhBcK6AI+GQNoDCpxaAe+M3Ft2d7GDx52CYGomxkpYBgWAxDX\";\n  b +=\n    \"PxOJTZJA20KwcsmAWZFKqiBQO/kRCmUEsZ8BQdLcbEGob1KcjnLmw3aRihEM1gTJEuT8GQnxhg/\";\n  b +=\n    \"EaAiGpUK9smpgtL61kIbHICzQksXtO4DYAYMF4Fhc3XqLrpVgkGPFFdpuEbc9Lp4qosSn2RS1Iq\";\n  b +=\n    \"qgdpMdfdoYixqIasOxD34koIrlw5iCh1eATtIHW3nsbUgD3fnX78eMF8WLZWyBJFlauwhpYeABc\";\n  b +=\n    \"PyOFoqFmFEhxBpkCCHCJ4HA6qA2C4K8bjfBfur98Q/okAUrmVQ/OIMQS8mOtzSKyhsivqicniF3\";\n  b +=\n    \"U3GXP6HIKZCjQBMHvaejdDJ4723Gd4zE2skUJ4kcqZFBNc24pJb7q5F0oFEPuKfNiRlAvCKdCB/\";\n  b +=\n    \"jzXSwbZXXIFSFhc7C4N5ddCc7loh/BLTGRZNCLDkssUlGY4kgtkBq3KprLbzUxnwiTqGaVDSpJf\";\n  b +=\n    \"LLhG4To77DvVc/M7leJXhGCmSwQ42DCbwIblsYitMBSmFAOL21SG7IRRHkg2qNexbQ3A0pge0Fo\";\n  b +=\n    \"JBfcrqw6J7k7Nk4qNMeIRKBvFrt0kxB0zbghyCLrVDwBcCbbrblHmowN0mx+Z0514tTsfZQMy5u\";\n  b +=\n    \"xYIbjFsh2HxIOeMVH+qlCaImskZDglwaR5u2bcg+Syr0Ypmw+YK/9SzRpBrBHeZiCgkCwOB2lHo\";\n  b +=\n    \"iQEnDCodqARgay02B+VeQ9ANikSHd0HaA53WuaYdDVyTaoGFdYH5Lg9JCNsl0m6DYV8TUuZpBnV\";\n  b +=\n    \"HMVT8SgxRrwUdsA3pAAo+sx/nn8Y75v7QAZpFefeHDkCEdzSb2o+8KZR3f+gAzaa8+0MHaGl8Gu\";\n  b +=\n    \"xP3nTKC+DoIq/my6upvBrnzYy9YZqG2MpCM73z/vG4WeTMXSY2RYhBjzY/RdrpOM/37HlyTwR3f\";\n  b +=\n    \"Y70nmW6s6ejplLk3QOg8wqxJQvfG4YiFKB7JVLynj3axXBfkzgvTwIxsvR2UBNDPeJM5SdDey19\";\n  b +=\n    \"PG6pmhwLmiUOgBfORzcp94MnjgKLA4T+uWX9jXvMctCFO+acJ1XRS+IocuL01pOXLo2HbnscJ92\";\n  b +=\n    \"Ui5+Mh8UDp7TfwT+cvDQOJuNp0xyj/OF4dEk8CUQeTtJtS2Afuc0J3eYrRuu55Pa4huEANXgvsp\";\n  b +=\n    \"RrufXZ6S8l3fj0yUt7r5x+Zdtnpm46ecnS3tbP199www1viZ8MWa717j2sx3utv35K5PuP+cJ14\";\n  b +=\n    \"/o+B/lGXRNf2G7AK/DzmjPgvw/FzyXi/7jmtRJas6S3tvSrjrtCH58kHi9B016MN6jdpsb+9tg/\";\n  b +=\n    \"TcOo12e5OeILGRLNICgUbZEdDfN/uhkOG+Em/rPgn5A4ucHUDZHm+6aGwY1pJ5i3ies3bLz3JZn\";\n  b +=\n    \"CgZ1wgzUV8BLjZLcqbqDHm3sM8QBklgghE0jdOh73VlevnuAa09xIzQr8OC9pc7IAb92TXZC3XQ\";\n  b +=\n    \"NFfhE/okNQ//jcMnECHOfedDfAOOruO/eI62rTHpPKws+7xcntZrs/wmWJICTvFNeVhj2mjzRl+\";\n  b +=\n    \"eriQgKN3L0HKIRbdiQT2v9WTG79FyefW1BX7kao8pc+qC13p9JbDfPF760TONEgEjfXcmJ3v3L3\";\n  b +=\n    \"hTuGDyAL/710EOAQ0eOUTXgttUeGQFB0KVAbuqQ2lDwcAz2z/G6AMudjhCa7nNQQ6QShuvwGccz\";\n  b +=\n    \"cisA16STqz8wKkzCM8+9g9BfwjgqjtYMnE/sI3B7Fr9w4vpoTjxCqB4kM0e0K7BrjoXJybcqG8H\";\n  b +=\n    \"KhIgwhaiJeHUDsRsDaIYTWDtGZ8SiYIkiwM9AfRBD5QzQuCoYJUVYjRKn9a6H9O1hSF0UrO/tqy\";\n  b +=\n    \"4kuIw0H2HpsgixfYwaNtBo/AuyEbp+m1BGA1NykoBs48JUGD7my5EV1CtpkEGO6wxD0g8gUq6VI\";\n  b +=\n    \"W64j1pZDa8uUKBo67CBx0Iu7O+9fj4yBeAGsLilUlY4hfBg1Bi2bYqSHMzFYFJth8BMV7+sIQt0\";\n  b +=\n    \"wakWNT4cYMvsIivH9o6zmYIAhIbdOBuEg0/AQ6MiR4PW1CbbhqRx5WhSy0ysEkAZqytnltwKRHp\";\n  b +=\n    \"4O4T9k3IJYTS6qimAMEelIPN65cj3KhRFndBB+cbDcigOkJnhX41agT22JIV3ctSukIZhonbtFp\";\n  b +=\n    \"aB77iaZ/NnQo/XBec9sDuPWZRMgCCr8xTdvn2/k0q9ssA/NYbgMhNkFeqOQ5ji6Bd5gsY8gGDMg\";\n  b +=\n    \"ulk7cDmbhsARW/8mJtMjplooZD3ExqIhUWkFMng7OBvzPCaZFcHCYUMf8QCk52FwbcWP5kSHoN8\";\n  b +=\n    \"DmMoBhxRC5C6DoA7BVisZABbYcNCSIBvgjw645PMvX6fGiT0s7ZssabQqqA76arhGxExn4BDNvo\";\n  b +=\n    \"t1NfazIbpuN/0PcHqjHDrsNsgqLg8KyoLm5NuALUqRNuVgTkbx77wQ9NIIBBlod7cGlKaBZuaC2\";\n  b +=\n    \"ESNiZ/zNojz3nn9euK8UYAF38uS7PNJUheDknBmjVNaWVrR5ds+vvabNVe9uaZ+mL/KPX+8ylSy\";\n  b +=\n    \"zEnJIhEzSCg2sLWGSKWoFIRXYhGEySIIA4WVadQcWwk4zIBUY+1e6iaDb2JdzNjFpoox9pv0oQm\";\n  b +=\n    \"q0D/gstG0BpEVKuBgUuq5YwAncKlBmF5P8zkcxX2hyRJEnZ+YSk8ZcLlFJSXqHblM9Ds37NkWhe\";\n  b +=\n    \"Y2aJvGrsN95XBBA2Eq8SQ7YEjVfPNdgVKW6P46lYH2F4b0aNub9WHD/WRJmGB9qMwOI36zw/n3k\";\n  b +=\n    \"6liotlh1G9suMP0DBEj0hCRAcfxaN6bIaIdNERMl4aIUb8hIiLn6YGjuUlDRO9oNthWHGyOluEZ\";\n  b +=\n    \"49kLmvtjL/ja/Wwv6C4Rv9wsd8P9HiIiapU/MGjOB9HRgLDCoxTN1WALarCHoH2zruKVpWJKxit\";\n  b +=\n    \"LcY0s5kFoZ5JiNlo5pr2M+DACYTelug7JCDHoZJPupz79VbXElAz8liIrlo9b4A1f4LdU15KWhH\";\n  b +=\n    \"rjXFubLCQV/EsIzAPbTfF90BbDrHD0IdQNMcHv0gnH0oyp5hNqHEHwI4QI66/Ak8TVYp8ZPt9cU\";\n  b +=\n    \"odoaM3rDTT9stWvxmMQCYyBldj8cOIYhHAMzOAYhANj0KgQIJVJAeF7JxT4zpZrqKGFlI4BJBjp\";\n  b +=\n    \"VMOZLEaiP+tPBd+IzrgGKHal7I6MpCVSiqIklZG0GQxyZiYEOTOVhbQgbQsMD85c1NUvtt7gWCh\";\n  b +=\n    \"edA8zGN3DougeBLcC7Baix5mJ0T1giopZ7IvuYVXEMV5HlB1NgWYujydxdI8oRfdI8kX3SGoiuo\";\n  b +=\n    \"fVXHQPq6noHqaM7hEl87WkvUb3MKmtEYrukQToSqSWZ/qd4nuYifE9gj3VYu8YysMNXGSU2zEgH\";\n  b +=\n    \"kal7YKOKIcy9m7g+AtL8issHY2SUfoac5OQZ8MRRsW/36cII674vYo0J+aGIdosQuYi6J34AYaN\";\n  b +=\n    \"JgbGwpBfqg5ynUKfcs4t7SWSkAlGHPxAu5xq90MK8SlNDC0wOUTruRY4uOJcvtbAkAusQguzptx\";\n  b +=\n    \"7YTgxlkleTBhEnzbBDyqZ/aDMFAJNR4ftVwzJZpKliGDY2SqlaP6/tbNwTiJazjFE+rtJ5TDLwA\";\n  b +=\n    \"YMhA+QqSEehcusC5eJiYaBBrZpVWDgWOv+cINgDzpp2gkIvTIL/XvE08oKypeQg4EutKI969/sN\";\n  b +=\n    \"AKYQnGAhAiwURw4otL/onk3NQIcpMXihvuAZSfrDTVbPoeeQKDIYBmhhJxEMWCGes6QU47OP7D1\";\n  b +=\n    \"ANKlK0sod48RC9HuguQSI3x+xWcYuMBT0EoN2BIIQ2hmU6g98IsRlOTD4vS7yaQgSWgLPBGFCOJ\";\n  b +=\n    \"RA1gRJaNhCvCpKXHNZgQyg1ZAO5A3DyU57inw/SnYX7qMGviNSfkyQd7bkzKcSLfSKeKfTVEGwd\";\n  b +=\n    \"BFRywW9FiQ5jDQiL9BIwxK7iD7bYOeKEIKAxJmQ5QwnUisHRqXyLbThj/jFIxv6Guh9EixW1Bb3\";\n  b +=\n    \"rPwxGtHcFYoQmnguCZbxGC5BdySHWsAmWINYxxs8A34vjEH8owg5gBa4YM5GLBuYOq/R2N0AQ0c\";\n  b +=\n    \"TC10MLXILZzoI3F/EExU15oGhFsqsmainXHytteDzvYmGDeAaafpQQU0U2fBn1Tlfrn432Fqe8d\";\n  b +=\n    \"CbkKcCB1pkQ5qYisUjkSTkmMpqS1a2q1aH5R28CFt0OMLtZ18uto/mi1J4SnG/1yEznp7i/iS6f\";\n  b +=\n    \"RAd5+EVIZM3Qmpw2RqHqQOlakGSKXI1BfviNRBMvV2IPVcIPUIpFrI1H2B1GJItZSpKwPPGgKpL\";\n  b +=\n    \"972l/nq2/52XgupHjI1G1JpMvXuWyLVTqZefMtf5tq3/GUugVSmTM19i0cptipAIDNB/NtIt99H\";\n  b +=\n    \"vpq/nXxNJN2aItEl6ZaCpJtUn5pM9JqK6NWY6DURdk0SvVqM6DEtgejVHIkayjTv0yDGI/xxid/\";\n  b +=\n    \"mHoE8DuBwkuw2jDYTEwQ3Bc7aqFGvcHugsA4VcDYZmmYic+VuXgNYb+AEdE/IL2oH4LdNq10QKw\";\n  b +=\n    \"HwW3iqJBoB69zeaYIWWrwCrkNoOhoiVyjUeAuSaxMEu3U89NB0tqqpxb0C+NO201xrKqIChhHcj\";\n  b +=\n    \"ky29Vpg3LAOVTg64Yhk3CAWyCLDBsLIJqs1i1wK0IAnHaVBmvJSTkfrb8oMr8ZWGoZZb87ywfnD\";\n  b +=\n    \"+UO4V8gUa+gbFA9RkBLR0XL7E8WrasSrhiow7romKCdmTkNoYlHOYO8QqFMMN6v70boAo5iiG2s\";\n  b +=\n    \"IPdoiPQgQthw1+hYBMCO7GQHHVnTtIG7XiSinOXCdEdvhDrNIJ4T9FKo/yrGnRIkYRkSQO0iDJV\";\n  b +=\n    \"GVVJm/+CRxQe3UiFSKZIbHfnSZOKPeuoawdq5nrvZpEh4Dg68rvMjrRWuJ40hDP7W08jgBymZwq\";\n  b +=\n    \"C2QM5vkJ7coBCCO4pW4Kb4jfDCg8u5hAEe0RAHxRQa6zhrESIjFI4u02PiVxJR2Fsp9NA52g/67\";\n  b +=\n    \"eh9PfpeppjUuOYfMRF3bTSPaQOubQdg/jsnRAmRKIzDFTQimCCUBmKJItWTX2HSqwI5bRPpbIB7\";\n  b +=\n    \"Dt9NjMoYGPwN8IYuCDpg4JWN/N8hMiXc8Oju9851cy7GFqF2P+fZEtr0k2YHGYdI12BNBNg6j59\";\n  b +=\n    \"/OtMB2piVuZxTN3NFor+Lo6Vpgc9MCm5smP5F/49UCG6+WuPFqiRsvA2enQLCCTlkSlwnNvhS2B\";\n  b +=\n    \"5h76B7fGXvWUEjMihxyaeRamTKOihfKOZWUIKhgMAkp00eZ3WkQ4rHFJli4GYNp6hXgMQXFZqDI\";\n  b +=\n    \"KL3c/hmVgRqhriNHRgoq8D3B7UtDkyyYfvAVDPxnQEZct59Bo1mDHGgg9Ix9B1eboqqNxiMkZMW\";\n  b +=\n    \"anAjaKCL4lm7fapDeQiOw9zCV8QuyOvYzIXfdfLEwn2WXwU/A5mLzAglrxlndudAfksA6JIC9yz\";\n  b +=\n    \"AMsvghBzzPxT/EdutzVpIoL8SI/WHCVkAQAZSREyCCRX7xjkk+xCEwQjARkABEdyxGZGAGEt2Zu\";\n  b +=\n    \"LeRPAdkeiswkgbJ7ygwi+A+TdwTUY4XmcUivChsUVHp08+SPDhOme8Lu3yURIdCKX0wJHSU9zoW\";\n  b +=\n    \"As4s9wR4VF5KIM7WQtFr9yh37Ur20N5sUGgNtrHBFYqACQhdLRU4LUySLusKtFlXoM06gTbr7mu\";\n  b +=\n    \"M9gzchLvlZwUSDfjdBhn5kLhcMPAGSqFwRUNT6XT3H8OJONtQQgdNJ+tWvQZ1LPIOLrPuZMvhQ7\";\n  b +=\n    \"nWFcr19p/VhMFYN3sJZK+A2qVZS8tgr9MTYtOnqNj00PEISarRGd6bgY2kz+48n8e7ilCDIVPQ9\";\n  b +=\n    \"QsmFzqViMkWnH54Gpt0Gmt0Gpveaazx9NPoNIbpJ2Ze2DuNTQjtgDOPJk3YdxpLqS/ONycMcydM\";\n  b +=\n    \"kmMnrE5iCF6Ix3AkcAybUrUIVUSoCircXxzgijU6fWP38Qxs4oxoTn48AJkmdRT8RsrW9EuWxQK\";\n  b +=\n    \"XYuWFpidW9gmTyQOKvUISSenmyeI/RrKjEwNRxQ9ZPvnv84aeWk8r5MdH3Dhi07l7jsg35j7qQl\";\n  b +=\n    \"h0d8cj6zXWdvO+HSdCiUNQE+2NrsaEVW3R9ufq0+wVKCS17I+B9gg7YXteKB4hD/ZIRXk8IkjTr\";\n  b +=\n    \"Kh9dyieRF70yezon6XQAFKciL3WImC5cgx7EYJgR7FyJ6W8opwj4jE4M8S0h4CA0xjQOYgWHZPt\";\n  b +=\n    \"E9uyvTxERdq1CvwZgLRDBKQt8ZdDIJY0yGxdKutNgO9DyGYxSvjPoAwcLMeI3c8TD/zqEZTJflx\";\n  b +=\n    \"nrsV+1SLNs0EheiX6RxANxG4SCiRKIKziy70IxUEMXJN+NlAIW8avxUz8HB/drssINoD0ejpfX7\";\n  b +=\n    \"f4Mf7YIe9spR8aqcezIfCvtOsnIN3scg6EY0hkJLhle9b/CO+L/ANZsbifsGu7SVIiGAMeCPJov\";\n  b +=\n    \"yOwUP/fCm16hf6/UdqfUVoHohBXs+dbsFmJCzEx9f3Ez2pOpgeTacEkmHfOGsA3yEbWre8LDwW7\";\n  b +=\n    \"ZU2VD+BAYgPPjx557PW/wBuiMb4c9Co+HNTc62Dz+di6pT9f0Nzr+LDZ18EMdN7j/9zdbO34sNH\";\n  b +=\n    \"rBPe37qK3Zl/Y6FlsPjD0+ixf5BykW3TPqUkPYEhQFBKSBSFOCuHE6KTYUYZLSRTOAk4OXWG7JQ\";\n  b +=\n    \"2CcGAripJnxeEgX+YiLEMYxPcW63tMf5iZuMHW+E0UFFKx4DEoMems6ZUYyxdNMqcDKgxFjgZ1i\";\n  b +=\n    \"3+xvTg9AoqN07HbeOW9pDzFCht7ihWSp1g36SkW5TDIfk+xE/fuKdbdjVM4l5UW2kAL/n6FKbFQ\";\n  b +=\n    \"THuUtPbDqsjvihxOyL8Kj1v7bZ1dXPGaQraY6P1yYsAFU3o/Rj3vR7AYSyGiFyX1a9hhi5RJ4Ks\";\n  b +=\n    \"Fvj46LT7p//gSWsTd4LeIMNqx1o/thCy2ScwiFza0v3M16WljRpWzTBrxYjbFGuTjz2BwLMs7EQ\";\n  b +=\n    \"VxSOBYyKe5Gz9cR9nskw4jq46Qz7LPjBZQS9MJbAZzKN1kikSjOhY5NSS9QeccRugtVOMuszAYE\";\n  b +=\n    \"fwETxsYHoCSMSgwqTJT0dzXvl+n+aBXDSJD7zT8eBKejELUQkonUM/YCw2yP7M4wGYmGWemK+NM\";\n  b +=\n    \"+xKTzMoiCpoQnZyJ/ySaB/seFaTPJ2QeGU+C0pJAq4gyUAxRb1+H+kH8Le5facWTUg37+VBKKCb\";\n  b +=\n    \"+dSKEziGzQgTsGGmKgMdKUliGHozXpsfIS8rD8ForMbzEkG9Yy/yaOxt5aQqAR8MUpQJwmOayhZ\";\n  b +=\n    \"/tM2wiYLcjpmZZbr1j1EI8ixDFywg7BP93lQlw345RZf9oSCNRjBMbcbeTpavriKdkiyfGA63jC\";\n  b +=\n    \"HAPKL4GkM0d6m65gWVzKqJmkpNMPpsRdxc8vBuFtUgDJknhBYrXwCnewDDeoan2fyGumzUNRQ06\";\n  b +=\n    \"x8TySywNzmRAJoMNWzn4RBIsGIT2WmmgwXZAVuM6gg4WE5GQqYAsFVwY+l3YRDKmEQqLKzjXOat\";\n  b +=\n    \"dYHxh7xI/SToVEeQqhyA51ty4yo1bRfWnwYbsWEX6zAK4JX6Bjb4Mbr3hUx4TFzdMLEmxq4Zi0g\";\n  b +=\n    \"3iVQ13+afr2INPrPCHPpVMulmE61RwlmKh+4sicYpgLKBn22XYeonRTstVMsSqEskQG8AQG5Ihn\";\n  b +=\n    \"s/CwK3S+VoGZXzZIBj7dgBJcyL9duIGeQKnY1gAlScTdKe96Xc6hFXsiZ7EGNFA5kkDW9Lh9NsG\";\n  b +=\n    \"7f1QiiiAyFvIA4fsfuIWkNd3Arj+Ovmj0LtB5sdNxwPoiT7L/OJNFhXl39AwIwZuiHA935iI82+\";\n  b +=\n    \"y7/VW3o7pxJK+zYhxeNMctIJ+CGObkQsybprvGXGTQvkx9aU+47pL1oHK9UqZQdxaj7fAMNF/9y\";\n  b +=\n    \"lx1w3ZL+l8K528k+O6Pc8KVkIPxSwdaj9HYS3I7hyEiappNjnyq4ZZ5NGsimGjRyIoWPqpuTcm9\";\n  b +=\n    \"E++ETSgnKekJ3ZC5MO94eKKA6tjXzSdfkbrixhMYJehx4rI3Y+sV7IiYuckuUiRSF4YjxTpo1K1\";\n  b +=\n    \"IiMrjMFsHiV3E/yv/hIZ7BvNNASpOhxPEtooLBStqtM6kK+K82mN84H4HayYQCwYlpDpxKRFChi\";\n  b +=\n    \"7Fk42DjYsJsqlQSkdaIAlWYPUFWFC6MhOGOyxzBgL5FKGAl2mYiCrIShSwpIwAFwC3ju4iff8LA\";\n  b +=\n    \"OC4OvBe3S0UmOg2GjcoKYkMYpWsg/+QSf4B38VaCWQWDG7xRLJY2/VpSTO0WI/603oExKVBpLRO\";\n  b +=\n    \"hAclk/Buf8a0QPGMuUjPc2age+9vhOEdKDThuIuqdOG7DRQpl6FGJZWdRpSCZ2WFrvUaYOB7H2d\";\n  b +=\n    \"5ndUpwk+y5elJaa8TidUotrg7zRbToFZtjgPnjWzDD5xHSP2bfCb///jY/+qewhN1Ot0wWcUMaV\";\n  b +=\n    \"tC/pY/oZjin/jRYI52+co3AqnHE9RCS7BWCCWPw1nlx98QiPQL4S6uI2Zr9kQn0Bmj2tF/tLiui\";\n  b +=\n    \"8pmhqmZAgja8AvC8MtkpwsLGsq0gjjwkAcNB9Oy27dY+VwspN836RDz6QI8SYAX9oorpJKfDRzc\";\n  b +=\n    \"8iO3D4LSfVUdhUxKDQaRpTCW2kSX1eM1f0EU4RiQzSlcrMrAQ7UkJaRYiNux24pkBF3v3SiDCF+\";\n  b +=\n    \"1dJG8BhkjP4KzWP7LYMhyAHWQ4FuUPhXIL+JbOBAUKL/X+qKyjaCWMhRtK9gMKhBFALZRY0ruXh\";\n  b +=\n    \"ZiNyus/Yp6pIzORA+RC5Y+exkQLhxEpdYg08ryOMTdAQkixCSM4gvQuW01SNYJeG9b3+VA8UlMS\";\n  b +=\n    \"K4DHPsWrWAzxgm/xc3NV+BLcEAbpGISRya8DOl94x9pCsodR88/jUUsjzLooDlIbT1l6HBwIkpJ\";\n  b +=\n    \"P3eNBkkDLV19r0W+b+1i1vEroUrMAMMDvFrqEsD+90wfXALp5AMb0/AeQjUN5Uc6Ou5f2SYCbk5\";\n  b +=\n    \"jBcCLl8MQp2LDM+ZQ7mkSTcP5p726EDVzPQsYs1HiVFU0xdiHR9RFw8LAqAmHnZXGbCpRZSfaDG\";\n  b +=\n    \"Gqa8fiIGJHzIQxa/3ko2fX/Ltpvfrb2dkzDDEM5z7uPhIx5tkSoGvoAj9dqRnKALM0rgseEd9MT\";\n  b +=\n    \"yWqT1jIaxAyG3JnRD08nUG44M2vovukLRFIMBx5EbHyOiGyPuSi5TR+2If6EaIzFA4EoJOAIlZp\";\n  b +=\n    \"LYmeEJjBU1cOSQoJAFxFYqbIk4YvYbBPXGOYBWjDfHkHl6stSQAJp114TIFbGiXN+vLYtPqfIB5\";\n  b +=\n    \"UktFaifgw3hUUWMW45MVSOPdFHYyAZXLcuRONy9nTmwbT2YHCVcKTYyGfYAMilHQWcUOAZJrxao\";\n  b +=\n    \"1KeA6rGzQl+Ev0JOZUx2zL6H/mwhIL0V9MqaBhQpnEMhYbMdtxyhGaDrIGhCnDJaKfZPuheVCPZ\";\n  b +=\n    \"DhQRfDHsdMf0hGwVLeLRaJlUIkCDBljGqcysrDifE0XBkgGRFu8+EXsbIdtEWPun0ofvJijP9Mw\";\n  b +=\n    \"d+R9xWPQD8jhnTxoy5FlyA4ELFCB1HkU2ASED81jWBIbSjo71hP/SnIHSOkbiQfbpJ+aY14anCV\";\n  b +=\n    \"DwlGO0JqfzC4CHGYAFTVRAjEAuChxAMuNysSwzIBDlkkwSAbWmIJRoI2L/tBcVi96u1Z/JlJRSo\";\n  b +=\n    \"+cqV7RLkbmkaooRadVhj5XEwo25vZLLcNpVL0QNhRRXsAqxO5lRBMmRCBbVqE6/k2cLjgh3SeeF\";\n  b +=\n    \"IxDVGBG0X3VnkpCjgJ5fywntgUhvXEkOFrDKmMfVcP4AqhcCxhUzN48eQ4DDTVYOJV7M2jvdgzO\";\n  b +=\n    \"amaD9wKAxTGmyhEnP72bUZcZ0uAuE60AMl/86XsjguidxXqW24C6lvg+EXK5U1QOdhLLEVXfKor\";\n  b +=\n    \"PsqD6nOXXI5s8WJT2cVCzN/+FHGHvAEFL7IdckXJlXAnOF2edxgbCdkbDOq0BsBFxCSDWBtaYpN\";\n  b +=\n    \"HYRoVlUlFbYCiUklQ8xAVRQ9ehgd0KrpbAnWoZtwJWVIoC79LMhl7M8EjMav0ja6MTZvxQLRnW4\";\n  b +=\n    \"2QV5t0OQzDhZB3lLOhYeq/07MP3SLYSxEJ1fcTAkOZPjdErBMzeFCmdHOdEQioxKeL6nPIRzax/\";\n  b +=\n    \"3EYgIgcRA5CKi6KPs9Q1ocGxd0NU9xdU2GIghg9wuFVpDtRmMFuUP6u2RsNwtJm8yECsyXLVnSR\";\n  b +=\n    \"AsmtmarZ60NKCiKWrdFTwp/CLowwS1JcL2YroR1HFKpAOHCC/r4+bv8DfXxhP/v4/AHqozhBwQg\";\n  b +=\n    \"O55TnKIv+EcAGqTvoBgHMUKIzbTwk4YVhqaP7HXFH+JLkTqDIeIR/04XiGhYQMAP/sohhoWiL/I\";\n  b +=\n    \"tL44J+VxmxNwNEPnu+wX4+DTxC3flzxeJ+2CT1EKL5R4E2Qvtoii9uuks4D3kauFoWbz5higUWU\";\n  b +=\n    \"TwRerVbYBaKTJATHkKWcOzVDlowCEkZT2J/LkFWUbQ0nWyCoHik6sWr7rq5kpA3pFgcqNK/y9v7\";\n  b +=\n    \"6Ni8a0W+R/fescWc53+2Y2uvbbJjy+Xt9z3KjmlXjV2uWCKJ0tQwHtgS2SNs17GMhLyIQ+6uRYT\";\n  b +=\n    \"tYRHLwpgdddJrG7LMY/gMPQifYSKK/2IPOMMi62ANeSPG6gJiVpwrOtQb84HMIUHQhOO5ihSNZN\";\n  b +=\n    \"0rXheZ8wS4O0PCsHpvZ9JqVOk0WosqneJ3a3c5HAdpcElq0aQ0Iz1BmkFaPE1p8UyVkBIMtsoji\";\n  b +=\n    \"g7smFjvCV+ZDsPYi3zq5zRDkBPdhtFxBD1uUADGAD0esr8yAvFaDCScxNDMNzz3cL61mIltm4jt\";\n  b +=\n    \"NNTxh4jYNhOJbcwh3kQZgP0PK2Cm1QTtjVTaUz4qTVkWgur3aW6Xgb9lMN40NBukjubshR7Mwdm\";\n  b +=\n    \"eU05E4RIdr2xRpV50El90Ai/a/KKNvheG/Y7FSOfQNEhZTIq94JFiTX8Uj0MKIVwzfRHEeAZfeR\";\n  b +=\n    \"8vZDAvFGCEQHrJd9PR1kD/E5mh/73OLD7wnVnndcZkRxEDvQcH8C6AbDL0Bb34HUP0RSxOWKBgC\";\n  b +=\n    \"W1whHTZF5NQlcleXfXFpL6g2Qhx4Y/oTFPIQO1Ih7OeHTwpUPvImx5tRhzA09u+Wsbs7wzsgenf\";\n  b +=\n    \"xJBJEp+iqR6YDATRdA9MIr8tpuBVD1BYbBKCKPTAUD0wuAeGvweGrwfMHfh7QCgj/h68oHtA1Ur\";\n  b +=\n    \"q3ZMMMQo9vYcMsONufx3dUR0ZmKbanmsS2+TDQHH8GCisxaWqkSwCR1f0YignMNVnRMZ2GF4Ilb\";\n  b +=\n    \"qL32WlLtYoAVwdBeAalQCuoEXdDrXvYBzHf+nKJE6xIu7Z5e45bBCKpydpzOGcak9HGtlG4LnhA\";\n  b +=\n    \"grsTwZ8d1am46Rl9Nkcifgg7esNcgE1gKH2+2Mqw3qp9PexLIpJYSZTVHo3wFEd4W66UQbKYi7j\";\n  b +=\n    \"OY/x95hI+3LmAVMkfyVtaKAz9nM0/SmsQRSPa91vKKOz6agSxsvPAvY27dCtA4WdOOySJbZf0Nl\";\n  b +=\n    \"6BUGaPK3/5gcTtP4vPejT+jc8zFr/VTpH/NpfgANy+ZdhjhtBGlgAUmCUS7y4/oRAqE91Z180J1\";\n  b +=\n    \"qJhhghGY7GjzJgIcpAk/ACjevSYk+K6TQLjnh0iheE/ZO/3rUb7qDVudmDNoWib59aPdvCu9ZMB\";\n  b +=\n    \"wAS8RnOm6INT757SQifRX3Povjshmc33EvvpfieAWC0uCWYcHnT6EFehSIBT9LwTprvTjreSSeF\";\n  b +=\n    \"aSbeXiY+YKboQGPLEfTmwmmAcQ0NhVqEMbgCcwW0HvBRlrlGX2liZiYgh2sSS99ehkCixRDjnOa\";\n  b +=\n    \"fIqi4eEInkZg6tJJlDqxLluPJFjbw7pSjtDOo8cDtTEFQuxFSsGQygpNJk9F05/6HJqPpPos7DA\";\n  b +=\n    \"HZ0WlgwgRH7c2DrB9GE6ZnmUTNZMhps8igsja/K8t6jsvSsIRgkdlekTKKA21LkpPWUYJp+BCBk\";\n  b +=\n    \"fyidIicQNPd7eCjHcFmKPhdPOMoyKOGkMGU9SPIGm4iK1RDcStbSrf7luXkZG8iIC+smQ8Q55dg\";\n  b +=\n    \"dKG0DyFN9mayKJSBoUON1JOu1lUInmYt+3S1K1n7sOzTG1v2NbFhNWvZZzW27PMb3pk+w7vVOhq\";\n  b +=\n    \"y+rU/DsaXVcBP5EWMW6LO9n8K68+SWIGqwjBZWrXnTRRuwMSASeiL+yTWxAiEmHKshKBHOmvppO\";\n  b +=\n    \"RfhQdP0OXc451qoMmRIdmsQKReiulGRCDvb0RQEXwJeMykIJ6IUd5eTKCe/cEJEkCeyD+XcgFKK\";\n  b +=\n    \"+UyMdeT9QMxxJqCDrnRRLk0xeWy0MzNKPfJU14LiD2bc7GSrlEgAYcojfUsTycnUZSpw31Y5eKn\";\n  b +=\n    \"lKyDj7AYt4dWs+8Gv8IAzITEQ0IlilPKcHeIuiNJHi22d6O1hu99x9cd3/PxtboJSZhjDmVJfSC\";\n  b +=\n    \"mtcWaURkvx5TwMggpBOh+waDarMxSajf5o8HTbJFvN0aUtSQ+TGPdGCKFJujAHtMVrLUkhzi2D2\";\n  b +=\n    \"qHmGAntZeuvHXobASNDtBIV1rxSKoOAjdd0PZmDMV++NC+0fIZgkaUIWimMgRd+x7bfcoNeflWu\";\n  b +=\n    \"YmCTeBW5bgnmQMfgR27DYgfai/ZeEK8aMTSCQXGlgBbAFpHweTEo/6w5U4UTLUg3A6YagFYYhMQ\";\n  b +=\n    \"Oi39yapAajg45nn4PAzACJ/hpkQdhr3HUooMw6+DIEOHHBk3MwcWcF8ZeVJsQkvpzAO2Fa9cjkN\";\n  b +=\n    \"np/24wYoPeHaXxdJ3ym3zNYevEtP8jkTWHeEP5Yqx2CTSFTtVlb1Fl3x33Nwr5w0U+4nMEUKNv5\";\n  b +=\n    \"A0omken6QApPNhIElpYPujdH6/DzaMBL0ASph1pE60/sSVRfuQlFnMBXAmSAWxrokwglKwTPimK\";\n  b +=\n    \"VZMYm+RtJjEzzpQLywvFl9pGbCkjYTGVkBorMcCcLto3f6P36HpUFoOQ9PpLIU8IdJ3GDHaQaSi\";\n  b +=\n    \"wedS0SgcnE+D0az2ItZYU3G9HoC9OTBINohnK4Fl2G1egcXsDWTGhyRz3X42rOB/uF23+yyCCJj\";\n  b +=\n    \"JKWcJoaA75C+kbTgBlyjy/uKuY19lxaUkVBCE7pIG9hHOLnc3we85s6WPMCEq0VsyGizmW6iCwV\";\n  b +=\n    \"IgSvcO9pjT2WznxsYzUUd9PxOJOqv14wTxgTHX4yFUYoOsB3X9lvLnIRcJsdV9yKywISOXWfZHL\";\n  b +=\n    \"PcFKh9VPOT0gLIDFdlHbtw44xbxxuOdOqZf6GQy0KZmP2YAMRtFEsSkeGUmhfyisiCErEE2JOIx\";\n  b +=\n    \"BiRh806/IhpF6m5y4mtkYJWSpUA6BeG6WBGAts/8R/PFVTEQBdD0oQCazaMAKjtlhQJoBFEAjQQ\";\n  b +=\n    \"UQKMRCqDpQwG8zuN19oPbB17/Z2PvJDOTyvcGmPf2Ccx7NlE/mYp5Jztpd81DfDzf1Fio4p9ryj\";\n  b +=\n    \"ySDUm8+WbZHxtEZACEjZEqjV/EGHyiJpoZs58L8XQy8dmn/hmn4S0UZzU52a5v9pP+L3/NKxTrb\";\n  b +=\n    \"TfHejNtYFFIBYbdWRY3iULS+6aysGuXGKMFITyRJGetexYJ8FIPlJZBQT2QjMWXpI0nyP9i8w5c\";\n  b +=\n    \"c/4jmnPmb2zNf4KtWRqYUhLcxQNIkqLTFuLQpHisSKpnafKYxjAjvG4tknURzhN5EjE2kunO/WE\";\n  b +=\n    \"dnMo3EDlwk6CVCSJbC+Ta+X0TueZ5lAlgRutT46b7Xw0MIQ1UoAHxTlQKAiu5r1y0jqEBpc+cuA\";\n  b +=\n    \"9ggyaDDepTE7IRUjkGrHAsIgsRDgIi71jMX8ETID1mYWMYSYkpBJOCDxsI6kQ2aTqC7Tpk3mb2R\";\n  b +=\n    \"HUmQlmYZNWmk6QYSAia9EAfM5aHhOaFGM0Ax6tz/AjR8thfWRLpW2Qu7jQSAcadJ6NbktIK917s\";\n  b +=\n    \"IfANJm8anqdXyFvDLcEGCohqlKO6yX3j4Qzsik+GSpGeQkB0X9bIcMiBw+RF3UdO32BI2aXNodd\";\n  b +=\n    \"zCCTZi76+wJB4+B20HAZ8BTI9B8TeKFnebUi8HIq+7nDUdRk/dY6uR+qlYjPLINcHUzo2amRIqr\";\n  b +=\n    \"FzGjzTFeSElB9bCIeF8dqBs4ljnHExOPYeFssRODMFURY8FmDuR7M0sjfEfTB2MVgwsNaHzXYZq\";\n  b +=\n    \"oN0OiBWNcklELY7Nr+gCE5iEqApmHt+edxw2wxKRQVDrXsNB+pwJM6qZDsxcJLOHrOgYy13IjBl\";\n  b +=\n    \"G3SenlLjIYclHqpwzCEoiggpa0K0YMPAnSlE/UicKdHEwZ6XDeoWKQanRUJ1pFIwhDkwaKAu0Lg\";\n  b +=\n    \"csT4sz0aQTe0AeBOYNsGqPqGTsITiZMejPpHGkRSoHGEryTQEeFkwAIwCTRFiu03Nj1OpgRIYJT\";\n  b +=\n    \"cc2/2CxnOSrEgcT7blsLgr3buVHRR/wV4cZUN1mG4368ww2leabCMvKMUJ4PtpKEuzOQnHMx1ta\";\n  b +=\n    \"C2toURQcxdLRyjY+sRYRpFOjqL3FMogXRTw+aghNpxeYATy0cvyVpZ34lliAGQjSE0sRVQWiahQ\";\n  b +=\n    \"lR1ScqmAZIplTiGWTLHMCW2JUNXMMiddyZxCLHNil6UZICeA/fs50vGJP9R5IqitjKUXjaNWgyB\";\n  b +=\n    \"qSOmGc4mCWiGZAfnJEdZg4z/6JfFxySib1wFIYmIX+v1kPAcpNiDKLA+aD6WVBw0iUso9gZ8oWs\";\n  b +=\n    \"n82B4EIY9Beis5CNNtWY5xl8SHAfZhpvSwZhtDYDRlPAK/HXI85NlBxsMk0g8vAy2PfZfBdoTkn\";\n  b +=\n    \"LDFYFhsyy+4QIdSMrW71JCWDrN9uzCuOAcphpAESPHZ0Iqa2rM0PQRRFiiIawgE65niznKMHQcA\";\n  b +=\n    \"fxAXIRejvuWgYjCEiw+cM/2R4CDUG9KlfwmOPpOluscCgWFlkMcB7V4CjwO3EngcnUMo7oXH+Z1\";\n  b +=\n    \"1b29c9xe/ue5LYMET2JXOeoM+UgGWZYBZClUrLUx1pTAATDj3W2KB9YDCQEHGSQ1AwmM2dAGBHx\";\n  b +=\n    \"IyWr/Y+X4OVBoUkQzUXbhKEAMrTebA2LgoHuLIqfkSJBPpAbms0Y6H4NAMUkCyfJMSUdn9mX7uU\";\n  b +=\n    \"gZeERPYdonWt0mzJ361EqeG+/NsgGsFKzdYRfMukrw3h0nJLPcFlTDSyFgPkCHs06VhsEk4ODjt\";\n  b +=\n    \"pzf+7ui4L/4Z4H3oJiJIaBw+QsWZaCLckATrXyKGn2xa3jUTJpzjk+VZAQlWlIZUgQ1YElPMUgJ\";\n  b +=\n    \"ZsP1xd11NkgSLZLKWe8dClMmioYc4MHdds472b3eXeGDvFGNVrfjSMG1zYqq/tlaMZo69FUNxsl\";\n  b +=\n    \"GQNEWzW8XAqJ70y+GAcDAM1oloEB6mh+KU+xrOtjCarMNrqPK42Ed8axxHBrkBdjGVgyxWy+XIE\";\n  b +=\n    \"OiKn0M9jiHfwdysG1DpOBUBjNzl+PE0j5WDRBolJiljLlNur0oJ1NRXDip9FupyjtkBrZGpdlSS\";\n  b +=\n    \"40ktz2/o8qI/1OVFe+nyTDpLNQDkMgiQyxCni/23EPBeHBE139gC+Fmw1W97xCWDS4igDIBd9FK\";\n  b +=\n    \"WKQG7LAnYhV4RohxEmQD9UXk5il3FiQYHQsOjbqzGbxDIUYXgpampCseSiFrAr/OrcQBsPaDGWX\";\n  b +=\n    \"Pdej6HCGHEPkmZFdpTA+iN9aYuDlF9ZmBRe6jVHIxdO95EUwrXRPGjE+pmEgAsiBPQSoruA6YBS\";\n  b +=\n    \"pHlfcO7L6W09+tZcit3tFiZ335I9dKkXjI8is1UWUBTGm1O7BOl8cVeZ+myp3qsMlEqB4/6KcAR\";\n  b +=\n    \"IEs1D24M65JpWRGnRUWa3K7sq6TPZvIJtK3iPlmu9kkiDgwiDnTap+Awt2+3YCal0y5r0/5vKSu\";\n  b +=\n    \"lKNHY7AYFToeuAUa9DIOJ1AXtjFV+p10pjLIvCZFAXky+S5VhDwC3IFvD/AuetpdYMhYIBP7yGM\";\n  b +=\n    \"RbdGWbCyb18mAuS+iZRT3DJnO/skwCI8EmW/4+BnZo2cEobvvgZRjsWIXYD1zCyMTJTAwPMY9F2\";\n  b +=\n    \"mnQj2VkAeMD5TLs+QzKxRGx6DBlpCPpUA+QF1FRijNXnPyCoI1N9BviSa/IzyUbr5wj2Y6jibPL\";\n  b +=\n    \"lr6Suv2SQSCc6OiJmEI+rd6fURHxogkVVQeFqazWcXjHyFQRxdsrOzWy9DDcu29ezzrgDWSXpoz\";\n  b +=\n    \"PZERxjMslDaTcNSI/EqS/v8rtv7HKXX+8ys2Lf1uVc2WVkxMscvSAKE3ZzXhVKhOahuvXs/Z3Q1\";\n  b +=\n    \"PmONl4gyK2E4mE9Y0LOFIl7JC6t0M23hw1/+ao8eaoe5ujz4cpWImmKtEo7JasZH93YK3JHfh3j\";\n  b +=\n    \"JxJI7fplt8zcjP2QlCI3Padf4iMuGIvZMREddao7d+i7Z/Dd9tEF/HAhXgsTW8sQwjARWMZcu94\";\n  b +=\n    \"eB2Z8slfwKPaZ2sHvKK1j8mK+JesqEpVRPKd/3xKFkZqrf2mCQKyU3ftx+so9pT8BQv7R0Fznw1\";\n  b +=\n    \"7f5DJufvbdUGRdaPqzMbVmb7qxByCSmCWyF84TxrXlTAtqSKjcUVNAZJiRfMWreeK+JfIv7BhPf\";\n  b +=\n    \"arJKFf6SSwDQKdpvurClQN9ZCrNEqGZom/V4kwljiqYucv/ROOGGX/rWqphRDkmlQcSWwYNkoEA\";\n  b +=\n    \"4aGKFEcBPUFFEcmXdIhtHlURYpI8c53EAC1jEnArTu+kYBbWBQQHyXBWchm4tZv3p9w1v34Ic+6\";\n  b +=\n    \"4C51QOvY+j9Qx8am6/hf+UCT/OcxeaS/tMolEVumP8AoHMELv1uXcASLS/uEk7i9ssR2134nDab\";\n  b +=\n    \"YoPGADuO6m9Y3NYzn+k1XifgkYnkBngMpNHw6B3Yl2Q1YV8yEVZUq49j3YdV1fblUJZA16Z9dfK\";\n  b +=\n    \"liKXWfaya6cpqeUYf0CmNoGY0QZKSk1ghgG/uxj9kt7H+oFiAfiCsmdTvoEyn4Bum1MtiHBKwj7\";\n  b +=\n    \"b+bCkYt6v54HwQjc5c/KObPvSCHegAthUz0maZNTzVDbYex8xJn1++eWq990OQKPXAVNLPNHLgK\";\n  b +=\n    \"fvyzK2hm9Y3zSDhS8aUqD0dcE+SF4uhVpPVz9MoKV+tXrmBlPWZTGrGJ7Wv+arTB27mKt68GXUu\";\n  b +=\n    \"M2NVB01pEOGIXGiptv1q8Y8tIU1sCqU2B1GOQaiVTK672R6+6CVKtVayuqzmSltgFQvUKEAHJzD\";\n  b +=\n    \"6e/NogEGYUIZMRB8HwULyMEDO4oPm2fwFtIapaSdoCJHE0FjsnQU9DjP9LOsC4+rVeAE4o9V06g\";\n  b +=\n    \"TLYz8tcAdWX7hl7xEYFJoHymPqtHAN+/MuM4PRKCHNLk8D0OYwhNQs+owZHoybqBgh2+zbEipIa\";\n  b +=\n    \"d8LnZeEKoyGVBAzLKainO+dvEjaRHfPR5dfuQ4a2HbQoacuVfAba4X+L1LUqeOTIgJ5ACUZ8jkr\";\n  b +=\n    \"yC0TjbEdPzkgWSZSlLgD1tfY3Eq8tVqwsEjicSBRJtfkP06GqIV6yrIDuagTgn8IQuQYxPSnl9h\";\n  b +=\n    \"UGAQTiT3V47PfwX2L+vuEf1RgjRLOX87ekvdtT6DWFjEIeMzBiQKn6Zk6TJX/+f3bJ5zSnTWVtq\";\n  b +=\n    \"Qd1tVdt6S1zPG3ppjlKWzoygYGjtWnfo/ssRRLlf5p84gfaMljzz4pQmN7y1KQJYBHUABg5YLAZ\";\n  b +=\n    \"NGdF86mQMiDggGQUeYewdHDD0mBpoMHP2QlYhMjFPGZIo+MoHQQOOh8mu3hJylDw5VY5h0VKdFP\";\n  b +=\n    \"HeTc6MXCANBzRWY9F6G1sBPA5l0nhd70w2BL7DfEOPIS1s0TDZSQvMjCT1iIUwUvnwFI2bsLrLQ\";\n  b +=\n    \"pfXU9bCm3+SMcBX0cmj4gILDLGRgTitxj2klDcJCbctA+Bnyn4sw0tMbGY51gKE8JewaoAvGfxl\";\n  b +=\n    \"XeoAMMoJuZlIYnOZZCejTcLKOcWQ7kAkyEZcr3I8BKvu/MRca5+J6bcsCY1lfbfDcdkR2SjGb/Q\";\n  b +=\n    \"OJ/ZBmhiMxCQkGbbGUF0Vg8TlVFRycaWcVGbwFo1mHJAu1hd2sWOSBSho/USuWLqap/T/GtZ87z\";\n  b +=\n    \"4wN5Wd5Tsx4OWPIOMgtgKpelwjYYM12g0Fa4RSpexGtHmw1UL2faQMXBV2Ul0ON9nSjj0qKKVYA\";\n  b +=\n    \"0QtMUtIXZo85FGfJ54g2CpcsVkImd2Wawli1UedhYXa/LmrrT1bJ0yCFxI2SzPWIFhkiyzXhqdL\";\n  b +=\n    \"ENPE/AndcxZjjUzbvVAmyayxKM4SWBISf4mw7wBPVCj+ScUObTxTgtRip9JsMkDc3xQRruab9Pt\";\n  b +=\n    \"wtCk9qemdzCcHjAWNZsF2SMd+ycmu9OpHVuuML8+fTBs23DrOVN6PHmmQiaaCoEXSAiBElmhjlZ\";\n  b +=\n    \"4gNAYh3jTJOQlAnNwQrhVJJtkBHJTOl2hgsf+J8dh0AlbLBqAEsO2DcSIJVmmMpcyiSKHXiP0dD\";\n  b +=\n    \"8UWCCuTCAWRp9UeZaEKmBCmqJhepP4OPZSXeKnpcTZEwx3YMYQiCoMAakCA3uUAWh4IocJqtRxp\";\n  b +=\n    \"AxT2oDjNk7ABHqsJRuwRMk61WCTTmjiKY0+KcI/PaHEc0jlp9By4kiPxPyTRaBj+CxC/qxmeXvL\";\n  b +=\n    \"wVm63F2kTQs5F4J3az+mC4DfyJCArKJZp3oWUirAt00BvqMyCHfUD6gA9+wdOgAqoEjzOPy+0p9\";\n  b +=\n    \"rBLrQN2G4niCsV6wi0qp9pD0l0aZSUh+VYvvYcDyuJcJxwwaA6kazZlB9AEXiDyCJgTMx9CgECW\";\n  b +=\n    \"0Zo0wGkuw+eyHfOMppx67lCbQgLECJZmr6KSzlNt7utxV28YEsbOWBLOyBfReG4h10DfcJd2S4Q\";\n  b +=\n    \"pL4SLA8zAEfAoynke/BdAxgssUnwi1EknUGsy1DyNxS4qnj5AbiDf1GfRa9FunGxVcdAHTdAKbn\";\n  b +=\n    \"RCv95FvK/pNv6TzVBjRlPIUbf3QwoTGAHyTZQF2ts4mcvGWIW8qprX+jgSeJYQITIt5eYNHhpUI\";\n  b +=\n    \"KbNT96NeuQrGm+NfWYJSniA3U/oZDu4if35L7CXCu7FWOJzrS6Xvp1JDETi1p3KklXqcGq06hKN\";\n  b +=\n    \"S1KNSMQZB+yg3GICmy7uGT6NKWTgeKkplXN4H4JIg9+2hJZ2aW+85HI62Az337baXh+L0lvKNKG\";\n  b +=\n    \"Mx7C+4s4oSpEXMjdbBPhAVeQoY7dz5FLcIP89JVnEik02J9g6j02Jh7yPObiALkum+VfnSNjn8e\";\n  b +=\n    \"5iKNEJMGKN9PT0aWgkbnFZL3Mdn0UCyye0CEeqRjocDsABQxwLMapcEgqpUB1JZZTKmL33db7Al\";\n  b +=\n    \"FwI5GglWoPGbUtPGF8BXvPBNy5zxKYW0pSuljIrH4MWkFCVntzCxNgjv8voY932TDDlxJ/RNmYp\";\n  b +=\n    \"ryMCfLL5s8zBkYJJOUl6gbFycq83GoOBmQQJqmKZUMRXly5yxaz/rcnwlElUoiPzvCWNWxpP5Bw\";\n  b +=\n    \"kqM3857UQq62KSXQMEzB764hayoO/c+Rl+V6Kk83j1+9w6E208/XGLIey1T0Jhpcq8wyQDbJONs\";\n  b +=\n    \"k7g2Q8o8fRR0rGeCEpgxswwC1EKTXWXNSCFmTLbY5LV+MhNhUTe7sglPF0LGtOcY5Lygu2cSh5N\";\n  b +=\n    \"dTu4ssZN/w5riBUWB1OWaDLBvEmdP491YMHIXmdIZAfHL/HQ3s2r7LOLifRbhJkTOaFohL82Bv4\";\n  b +=\n    \"VC3zUDjMlAGEedPYpYY4lL486QxuFVRLHiA+8y4gH8NTFODz3sjzeGjZGBG/fHRkwP2IgBY9PDf\";\n  b +=\n    \"yRhMJj5hiQrtD4KbU4RmSAwX2/F/GfQH22AnoB84vLWLz77kwwWC7MxpD4HDknoQDWgH38Oixy8\";\n  b +=\n    \"kCvD4ecgcFFfEDgPeFF8i22B2G+xkw29Xp9J0PNgpg8mpZpEzbGJUtLJyZ/kZHZnhJ0wkS8qiJ3\";\n  b +=\n    \"g/xIUxJqwj1AWr3vmTXAC7zaylBRbEIN99nVCyMDneEIkBD5XB8OJiccvEDF+htv0S0kTDt1uoI\";\n  b +=\n    \"wXe960nmhVxfp0NINpaJg5FeFV40YGOQLgW7UOJDWcAU1/wgWJn7CJ6KOxAtyWcOMUlAaYkErFA\";\n  b +=\n    \"xVJSiQpxiDHSHivexMLWaIwm3IPMIN7APe1mVf1/Xg1+JUJn4UYAoyqwDBOmv2g5RPi8VdutsXP\";\n  b +=\n    \"//4W7/vV5j/Pwv35PCc0IeUm87J9i0ma7fALv7/D+37V9RssiO3uxpD7EOAE/RXBIu0bQvZcjrV\";\n  b +=\n    \"KIT81366g2zeLrSIftoJZACqXPStuLssyXHLkAbC3ZQCQ9BwQQXoiEVRAI80oQyiWM9CF4GuiDZ\";\n  b +=\n    \"QjDW/FkkH5I+81EtE06bOCTnqGt9QDMpQOEKBI/GM/im7TuNS+MgM47P6vQmhifMhoNJVgN1xqo\";\n  b +=\n    \"timOVsFj3zR2H5Txr3ZtZt8AzTyDdDc5XukghAwiPawSc3JCZShjvHi4AOkeaD4r6EBa4ryOCCc\";\n  b +=\n    \"KPtL8X4XYn5xqlfjDMd/U/BfG/9Nw3/T8d/M6j6xApwHibNfzN83EIo46tsoHdMnKMj3JDYc9Y3\";\n  b +=\n    \"MmFIFOx5C13M4q/qgrIZkXXhCNVvdE3uvLq+JJdpYg01rfr3+BxvZCdXz7sxBpP4HmAmSkLsXDg\";\n  b +=\n    \"Dh3zIG9wKJ5MIQbJhiJSEOge5RwVoCFYx2W2Dpohd4OAVQF/KOEE7UJELVwVB+Yj7WokwQPeeqW\";\n  b +=\n    \"T9nxPIITobsw3Qu0YdKLWdcQO0Z65LIKJCWCvVGPy6QViXT/SxBByaFWX4gKJ2vJflvKlgAU67T\";\n  b +=\n    \"35Y7V1OkuRjyJy1CibPXWfyN/mXx11jLkFj2Y7qYAkAEgQ4D9iozgPbRV25YiQoQfIspFZ96UYV\";\n  b +=\n    \"RRMUhng7SGwNjLv+uBuYHKRwHwxRKcIE5bwiCpoCIm7s3i99z32TiJqcJ6TjCBUh9hCg9xy8u+l\";\n  b +=\n    \"2N69zUAtryMcTfQG6RI2r4qmnyjU3fBt5YqQcbxr5Sw9h0xt24er1m30+eofYVIfufBFUHxJ+9y\";\n  b +=\n    \"zpM/BQzB5eGRnZm8petfkX5F9D9Y2PH+0565OnRhidUixMDh4Wt8iZUxDo1p3a41g/BsFaCgjSf\";\n  b +=\n    \"/4595fcgX/BkudaPY79WMVWd0BaUqUB7s58ANP3Un1ToNNueO/3teXLf7bnT354nzQA5jDNJV0i\";\n  b +=\n    \"gTQElknUfatdJix7r4J/prAD2I0oqvax9u+nP7e+HfYm/F4+rXjSTe9W++kym9yY5Qhnkd6eTIT\";\n  b +=\n    \"4ZO9jfm7TzgP+cA9a18J9VIIkrnxMYH82Z5MwTyyGnZbJtC0Kc0r4RkuikzGd1kJEEnkQoUliaO\";\n  b +=\n    \"vZiualWpFqjzedWC9mfu2NzlNQ3vOF6ZBQ0pRPhgTcgzgF8K7PW3XLjOo2PTlw+sw13270c8+G4\";\n  b +=\n    \"xlE3lTk+yQtGyPnTESklEhJobAkIaFBEaJMtHM1o0HNh9gAb72MW0TTKlUQ5It8cI0X5glN19Gr\";\n  b +=\n    \"XqOaOlcflfbgTOzZhLmrkVGYxVWivVsLofeV8WOU8Tu0yGukZEDYFNrxfTcIrAnGQSMRi2b4NST\";\n  b +=\n    \"wbJDlojvyHkhs49vZZuyc0ZxB6k3kYNZDMilv2NzqQNnCuddB2rUJMUpiF4ics34bVbpZB4KTiZ\";\n  b +=\n    \"4L4OktjK8MVwM7VLC/SZyJfF9cysBWTY0c1sbbBJolXBbfxGNVtS9rXGLVKLYPWUahtOcqH/6og\";\n  b +=\n    \"mjTCTmFbOstfWlTB1uOkYQhMs0IM6Cs6Draf+yf9a9BXxL7ebKJ5mgdPj3OPtEa+zjaii+iAuyt\";\n  b +=\n    \"0mBY72qMhyESBvjNu4ODNO4jUXUcnyiZY3CmxRkUf/iU+QbsmNAiX4eKyF+lybeEcMBEEiekpXt\";\n  b +=\n    \"4+mWTsSDhG7zQJ1wjCpGs0XsvszUaRRsrk/Spo/2oD1aBGUCUJk/Mnqw/qYvFz436jdPkkd2XCm\";\n  b +=\n    \"jX4+5dLKrKQDieDO0KC1QUNgXS3oB72r6j2WhNx+fq09ELy0XLBYH0wqmhIaLmzpnL3aauhiD1y\";\n  b +=\n    \"5HWf0KmpGJixeHAhAcQzYloAr8mr6GjJX/iBDDSCBHJCFL9PfMQjEAD+WBOskI2iky+LmzMd8xL\";\n  b +=\n    \"xs/4MXLJZgS9DEnwUjttPW/Rd4t56YClJhaMPkZ/QvtoEZ4UmP6/3bdvtrbHY1CTt/9JMyQcs03\";\n  b +=\n    \"5Vl/5/6zi12c+S9jHdrhXTrfk5+7ZJ822fE/JwJmiaIQyOYhgqYsPuuA+DHrLR/yJIpYDRv9Pop\";\n  b +=\n    \"JBHtjjBFoojoq10AeCHgrN3MbiQZuuxWLz54cDBiGj7k0U2goHL/O2gc+rIQF8WL14PfelEXYGE\";\n  b +=\n    \"ZXeKHRZoqCiKacYNeixLU6Is0uA00tI09/IzIAFspv06meN477rKPHUFwfaJwfOYHE+NZZ8mBm+\";\n  b +=\n    \"lEWvbzNjrNPCJk0gfzKUvMvf29Ibg04SSbxQlZ/qNg1M95EdgcGIHawp12yTvDvsTPZahOZpfDy\";\n  b +=\n    \"e9mux/67FD+A2SbqghzYDGfGYyaRykyvHZ5808IzZRh2NqOcR1dd8SdWW0CgnGqzV4UB0K58i0C\";\n  b +=\n    \"vHvEX0zuPZGJ9Rh3sjTAKEg0H5cfLxMxmBad52YOS2CHE3sUE3aXBkJ5lTytS/vh9mX8NrBifPH\";\n  b +=\n    \"/kV8BnU3sGYa5/1133n3UcK7ooR0OVE33Udgx6iSFbPwUGRUZNROtnuBCOvc20bzcyN8VCZI/eR\";\n  b +=\n    \"oc+1po0ljwCC13UbzpJn7cz9D9oB9Ozd8z85RohPpwWde72xsXblbD1pJvWJq7CBNoqoSlQIbSD\";\n  b +=\n    \"rNL/fmOQkOMk1lPohnINLnXbMsMLI7SGIuMY1pzzZjB3sUjqNhhI8O4ukhWpPTuhXVwOvE3mY0l\";\n  b +=\n    \"7GpFrVmbA0l3c5ouuH+e8yBNJXvN9TcTNY0OXGI8oOggRZuHYE1Zz8rOLWWGH6xNk5hhqohl+6D\";\n  b +=\n    \"e4bMYvduRTxlXLOfDYHZqyn67J/k9n/EPGtFFYpMc0DNc4mBH1+OCXhtqIZhFWAnADt0K1/DxNe\";\n  b +=\n    \"/woq1oL3yCcSU7ROz+Yvbfw2JNWK09G5cYdINXGj1NYIZt+db2CeFXSm2R1tLmMlN3siWIA6GnS\";\n  b +=\n    \"EaSuBNDRhJQ0f2lcr1aeZsjaBVVDH+ngDYorUfVbdQM6/cvsb0WiKa8ZDlek3jMnMSK/mBhos+c\";\n  b +=\n    \"8VhLkyUxrp1GCCwijWmis1ZdYSZiBjTDq4pnvaLparhs7Oxft3xzwUqSiysqa41TaWcqW5oWixF\";\n  b +=\n    \"Ts7rQi0xAXopMUZ9/YVuNFWKupjq6/OhCc9aaPI0x7mSTPPU0abGYtwlU8yQFB+xFfPZqVvlMnW\";\n  b +=\n    \"YWQ8MZyp5EiCnM9lr7ioz2Ip8TAmehjNCXUeCkfGR2CLd/Xy29MuEMtSEx4RcIph4HBL3U4/djf\";\n  b +=\n    \"CWY0+gR6/AS28ZVODGi9aBB4AssMkyAolkWiNfWGqgAZ1S3l9hf6oHS0qi/G01ziF6Odj35gcmd\";\n  b +=\n    \"pISlb7fNZgfZsf0qeqnLn+mBH5Ok636zJLV2J97P7d4Pz/1fn5rqp/bdfXzC+/nl97P77zXvvd+\";\n  b +=\n    \"7vR+fuX93OH9/JJ+0vnayde5AfgbB2OF4Q3MJO9noZfjPh0GESbEK5b8tRl/aUW6vYaG3r41JP7\";\n  b +=\n    \"nIdHsrTAn3NdWrYdH/4VP6K6hxMdmLAIgk1pFLEq7Ckxjdws9/ZA+GBRxGNWl2UsNzAkaDPEqHq\";\n  b +=\n    \"t8rcCr2HvpOr08FoZsUxIuEc1Opsa528AB658GPNHsdHFByhvehrmCd4/HpPiufI0mXOl+B82m7\";\n  b +=\n    \"CViihddvu3ja79Zc9Wba+pjFqjp+B/7cF8yRSt6864nf3j4nWeethPeMcWRD3+W5kbgn6h8zW3q\";\n  b +=\n    \"H11U7DY0WFDirjc+mfPze088XRwDmOQD/X/sg1WzGzRDQ2jZ2MOrdF3TNPlniD/Tl7bEX0lxZWX\";\n  b +=\n    \"pOOe8YaU1dZW13bvXVZ1fXTwl+9jznMlVTnGVc16f6urznGnFlXWlWojfgb+w+KupLulUUlc9rV\";\n  b +=\n    \"NpZWXZlNoySpXWdKopLZnSJS9/TEXnjtU1mjZa7KxHi/yXib9czUvPE3954q+6uGrc5Ene/fvF3\";\n  b +=\n    \"1Hib3z15EljxpZNGFNWVbsn+N/uR+/f8tHK/ktOePKVc+e9lO+6xePGnU61VnQ+XXSquLpvcRn0\";\n  b +=\n    \"rKzKqSmtHlfqq7ed6HwncS2uFE/qSusqKzUtwqGaYFyi4i/Jl06GvKKUqXWlVSWlOTk5nXO65HT\";\n  b +=\n    \"Nyc3Jy8nPKcgpzOnWOadz585dOnftnNs5r3N+54LOhZ27dcnp0rlLly5du+R2yeuS36WgS2GXbl\";\n  b +=\n    \"1zunbu2qVr1665XfO65nct6FrYtVtuTm7n3C65XXNzc/Ny83MLcgtzu+Xl5HXO65LXNS83Ly8vP\";\n  b +=\n    \"68grzCvW35Ofuf8Lvld83Pz8/Lz8wvyC/O7FeQUdC7oUtC1ILcgryC/oKCgsKBbYU5h58IuhV0L\";\n  b +=\n    \"cwvzCvMLCwoLC7t1E03sJqrvJoruJl7rJm5d+Jf23X/L19e0lIS5k+qbDy3EX+VkUd6Y6U53J1m\";\n  b +=\n    \"rNGwct2niqqtnM8QzTZub8AzmUWXZWJwrd/CzCeLPhrlRU11aUjZOa+n7HnC/lfhrrXn5+4u/br\";\n  b +=\n    \"70APHXUfwNGzMdqhQT38b5K+uU+QZpNBeGjZmB+bKbyXe6+MuCvGeIOVPTqWRidVlNp44lxdUTJ\";\n  b +=\n    \"neqLp1QVlNbPaMTdGRCWe3EurEdSyZP6tC5tKQkv0u3buPGdistKezStVNV3aQOYj6L6dwhp2OX\";\n  b +=\n    \"jl3wheLKCZOrxUuTamAAhor6x0C/xWI9GOqrrqupLenUNWd818L8nMKCvHyYK8VjCwuLu3Ut6Va\";\n  b +=\n    \"YW9IlP69Lt5zirp3zCnPGwjhWF4umlEyuLsXiayrLSko7TZo8DodXWyfKHyyuzxigFQ6mO/jSGx\";\n  b +=\n    \"OeQ/p4cRVtL62uKq50SqurJ1d3d0ohLaZQXVV1aXHJxOKxlaVOyeRxpX9onHDBjimvmVzVoXPHn\";\n  b +=\n    \"I5du1FPSqupD9MtWxsF4dXCNAdkOjcKkRi8dA+RLhDX+Oja0dWjq0aPHz129OjR8QM6pAeFguPp\";\n  b +=\n    \"T3fwpTcmPJfj2QeGsa6qomry+VVjYOAgj29dpfnGHJ+PK60pqYbddnLVwbxXQb5DxN/kmjH4Vdr\";\n  b +=\n    \"43k8Xf6eK1zqW1zju0AFOSfWMKbWTO9KW27essvL0GVUlTlmN+IDF08SOCR9Q5qe8juhonfiqwT\";\n  b +=\n    \"xQgNhw66pLuzsjpo+cXF1R4ww7tZ8vc9XkWrH5ltWWFVeWXVA6bmTpWH8DJpTWDsM2jIDNpSahd\";\n  b +=\n    \"Mjci2qHd4IPh/Ue5p7au7soXEymuhIYCayspm7KlMnVtaXjZIbxdAJMEltb2RTRqNqySaU13Z1e\";\n  b +=\n    \"Q88QJdbUlTqVZRWllTOG1Vb2K62i1nR3RpaJ6/k1Ts2MmtrSSc74uiqqAQoTvRV9ppy9Jk+ZUTS\";\n  b +=\n    \"jFgosG3K6g2NRVjvDGV9dPKn0fDEe8g3xSaomd3fGlY3DVlaX1tZVi83VmTK5RgzOtFLaXsV4VH\";\n  b +=\n    \"MLaieK/taKFVNaK8dRdU07RnzPo3kv7KLRHOvEe1NbTsv/OsNZJ/5yxN/dEVu7KGLj/aHieqT42\";\n  b +=\n    \"xm2tVfF32rx99ewrd47U/zOFX+W+CsproIGFJeUlNbUiFYPnyjW+TjnFNjOndNrJ1cXT+AeOOPE\";\n  b +=\n    \"AFRNcCZXO8XjxYR1xEyV3+f3Lrma2nG44mqx1k54iNAecGnU1oaI651ikz5MXA/1nQ+QzgDaBme\";\n  b +=\n    \"QpmXCWkiyteHnlxZXDKmrHTJefMIJpQOqRLvLxg2omlJXe0pp1YTaiXxnsOhqsXo+rLRk8rTS6h\";\n  b +=\n    \"kDxvEN8anFRxxUOoPTQ+vGig3BS59eNqGqWHxkWMpaca2YRVNqHTGTx5VNKxtX6oyd4VxQWj2Z2\";\n  b +=\n    \"+t7LvpWUldZXCsm6sRSMU8mFYupKMbxfLFTipGH12vE4E4ej+8X14j9UM3M0nHdnUlihp14kqBT\";\n  b +=\n    \"Ksd3rCytyj4Wyi+ZKDYXsZTpM04sFvNNkDJiQcpyIFOyTWfbAT5r2ifTXpdjEj0l03Kv9Kc7+NI\";\n  b +=\n    \"bE57LvfIAta+slg+STaL8U0W514eI3vyzz/b2MTrbR/EcPfD1iRt14o6obLGoa7SoY7ZGYynT65\";\n  b +=\n    \"huk+mnuC3DYcoVjyubLrbLmlpnbClOO0E8d+nYsWPXfJX/PaaNZfoDXnsyHdaJPtN993aJRKEv/\";\n  b +=\n    \"atIH+dL79aDZVwqvne2L30Zf3+Z/qtB61uml4SDfbyD6QKZvi9M9KJMfx6m81Kmv054/m3C+8Ac\";\n  b +=\n    \"pPjSLUU6pDX/34KM115M86WvrXmqP4y5Zj85G8q5fvE7dbGE/EBjas/feAKM7fGTLp9H/Mdth8L\";\n  b +=\n    \"5nmXfmgNXbf33I+E6+6anFkV970/tU5cO/EvD2gvbwfUv4/vlIT/Tc9ApcG1bdVYFPn9/+UK4Tr\";\n  b +=\n    \"j46+eJ3xkXAz7utIFXtIBrz/vLWsN1wII2bcLY3kcy4XpD/9oj8fndNcfD1T3ho9ywr/71J/58C\";\n  b +=\n    \"j7ffNBouB66asGkMPcXrv/c+sUifN7j/Afh+vKGx16m99vtxPpe/TgM47kk5/kIXB87/ukojm/l\";\n  b +=\n    \"a0lw/XX5nmS4bn2ibwpcv7r0vlQa/5yWcP26+xs2XJ0xS1rD9b/3zk/D57X3HALXo7K/SIfreYP\";\n  b +=\n    \"PzYDr9RftaYvPG1514HpDm3ePxPrzjjgGrrH3Fx+Hz08c1RGug+eM7IL1H3RTPlxPLj7mBP/3d2\";\n  b +=\n    \"/L7oP1p905EK5d+84Yis973zMCrnXdup2D9Vd3GAfXj8/6WwXVP7wGrp9eNf8vWP9ZvebA9exXp\";\n  b +=\n    \"l6Bz1OyYGvSbj55xG1Y/8ZDlsP1qmMmPkz1D306xPMH6y/7eQtcL/5142f4PK3vT3B9YE6mCbSg\";\n  b +=\n    \"fV8RXrPal+NVs6/B6/vnPk7Psz7F69fnHmLh86w+eH15ch1e7eHL8Dr7jbfpuWaHMP1WX7zalfV\";\n  b +=\n    \"4fXndI3jV3v8Or1+/3jWMz++pwev7JavCVP9PeM16uEcEn5dcitcH2r6EV+3rjChcW31chlc7+V\";\n  b +=\n    \"G8uuNSkqj+Yryu//hhvNpHt0qG64JnKvGqvfw8XjuffnwMn4+8Eq+3ffxtjOofnQLX4neexat9R\";\n  b +=\n    \"m4qXKfOvQOv2uw2LSxeH/h8R6glXPVZs1tavu+vXzTbxud2uBXmX31FK3o/vTWWN/MuvNqrCg7C\";\n  b +=\n    \"+go2HUT1j0vD9gzag1f7h5sPxvYe0fMQav+HeF1w6FVt8Hn4xHTs7+3b0y3eH3A8skcdhs+POzg\";\n  b +=\n    \"Dx+ug1zNo/BZl4ni+fF5bfP50+8NxvF/ddTjV//IR+D0uu8fB5wMuzcLvVTwhTt/vlCPxe76W3w\";\n  b +=\n    \"6fn3LUUfi9z0g/mr//MZg+KyUbn9emHov5zz7oOJo/hx+P5b3SoT0+n13UAevrProj1f+XThbvb\";\n  b +=\n    \"/h80MbO2N6Xvu+Czx84Lhf7s6skD58/tTQf+3vQxwVUf+duOB6LGrrj8y9fPwHHy+58Ej5vdXUP\";\n  b +=\n    \"HE/tp5Px+VelLo73l5uLqP5hvfF7jHu5Dz7/dUQ//F6ff9Afn7t1A/F7tmxxCj6fuGIwfv9zTh/\";\n  b +=\n    \"C3/80TJc8OAyfL5o0HPM/0HGExfs1lvfWM6Pweeris7G+qhnnUP3njsH2WAOL8fmYk0qwvV0KS/\";\n  b +=\n    \"H5gu4TsD9X9i7D5z1GVGB//zF5EtW/YDKOR7dHp+Lz6s9rcLyeaDcNn3cePx3H8z8rL8Dn7+gX4\";\n  b +=\n    \"nh3H11v8f6M32PKcXPw+dRbLsXv1S7jr/j8tiWX4/f8qeOV+Lz3s/Pxey8cfw1//+ssPo/w+cxZ\";\n  b +=\n    \"N2H+1b1uwefFrW/D8q767HZ8PmrTXVjfyw/fQ/WvWI7tOXb5SnzeddU/sL29Nq7C51M/XIP9eTl\";\n  b +=\n    \"lLT6/oMeT2N+LLniK6l//DI5HUut/4vPVkzZZvB/i89P6vIrjOWn9G/j8sv5v43ivevtdqn/6+/\";\n  b +=\n    \"g9Vjgf4vM7X/sEv1eLhdvxuT5mB37PhXk78fnWNj/i994V2uVf/5IuiCQTHza0uLqmtKhswoCqW\";\n  b +=\n    \"mTvKwQd39bHkx8OZx7xCr0FBVfbRzAAM/aDnpfSuiHI/SdK65zzTp1cVSqldX82LfvjwUTL9mZZ\";\n  b +=\n    \"sNaYn2nE78h3JP0r0xckpP/C6V7EtNTUjRW8cYkgSh2QCIueji0tKa6rEUUDf1wJnHK14JmKxSB\";\n  b +=\n    \"0lGVcrhGNJtO3J9RxB6cbD3vxmIllHctqxkA3ZiATJd+5O6HM+xLSD7IcVKYfSkj/SyNeVHyN6h\";\n  b +=\n    \"kOMJXjKyefL/lmFlOUlRRDc7J8772e0PYvuByZztWDz/MS0r11kinJdJ+E9NCE9Bid6GuZHpuQn\";\n  b +=\n    \"inS7X3pCxPSsxLSsxPSFyWkL05Iv62T7LZ0OgxHWa0zpbiqrMR7/rVOPIjueycmeIIjfOm2BslD\";\n  b +=\n    \"ZLq7QbIwNQYG8SAyPcgIjsEpCWklj/0Tebahh9I+0j1CdZcUTykuAZmSnCri3lqRp9Uf4IXFFjK\";\n  b +=\n    \"5BOudViquU0pLxqCaBZjiMVWlNbWlxLxvFvWcq5E8tfUBq49EA/0Ps7VTgLyOkHzqQPP1dxxGfP\";\n  b +=\n    \"3SEH0zbX/2pwM4oKXTa0urWAZybIatDddIDg084BE+ma3Dcru472w4kmV2Ms9RLO9L4TTI/4A3P\";\n  b +=\n    \"hZ1Ur3LaqZUFs9wyiZNqSydVFpVi3sHyxjFUSG2RJQIO3VVYjGVloivWznjj/dUTHaxY2EHD8q0\";\n  b +=\n    \"UYfyQBLtdcf55HDAsycnn15bXFLRPVn894fWTnlNh5oZNWLddO2Yl9/JrzLCvYPFqiA71eaJNp0\";\n  b +=\n    \"BOptDqB3/p8owB7YNyjA7JMgwO/rmRacDsgari88fI6apqH54dZmYH2IV1IivUVUBv4rlUSr3nf\";\n  b +=\n    \"TDbZyLm9rSer2X992Sysk1ddWlTlnVtMkVopRqkH3XlE0rrZwBI4djNnkGTL9K6PIMb/XtOJmu7\";\n  b +=\n    \"XrSdRRde15F17lP07X8R7w2zOnowvWl1iV4nfPm9Xgt/de/XGL3jSJx/WRa/wK4Ll142CRx7fnh\";\n  b +=\n    \"4pyl4jr/8A1r3xDX3KO/q0jppTVsLZjxtNtLW7L5kpG503ppG0+dMGn9fb20kxact+3M93v1nLd\";\n  b +=\n    \"qetuVB/ce+tUHb2w7bFDvq18fHH5xR0Pv7we+/5zRYVXvh25+a0av6Z/1XmBktz/ucqdPntnl4Z\";\n  b +=\n    \"0rhvcx5uzeNvWtv/aZ3fqITh8fs65P1psf/by1884+n81b0m1Uj2P7tvt7dO5XV4zp26YqtGrVm\";\n  b +=\n    \"mv6Lv5n3/h/79rY15y5+bObXtrd96LBz1UXF3Xt919nxos/tZ7YL6NsZK81bW7p98Bthxz36r9f\";\n  b +=\n    \"6dd24OKdl10U6X/n6Ke/PrbkpP4fH3pYwc/nVPcvXrJ1w/Tv7uo/Y2P692/8Y0v/Uy58cdSzX7U\";\n  b +=\n    \"acMvoXjserug74Nmuw7ffGZ45YPSShx48Zs4DA2o23rak84cfDriq+/PRWedmDLxx3KxnWmScNn\";\n  b +=\n    \"Ddr+9Oe6X4koE5F16b1u/RRwf2qHq3svKhHQP//c+0uZe9326Qu+vQ8k8PPWvQPScN/aDz0PmDD\";\n  b +=\n    \"hq87awe4zYMGnnezV8PvvCnQZPWWFW3bel0Su9vn9q27dOSUw7++7dtz9226JSMxVPurGv74ikL\";\n  b +=\n    \"isdfVlZtDv7up5M/NYcUDq7+8ar/bhhbNbjfL91aPPbr0sGHXrDx5WMff3PwrYu6961dnnrquFu\";\n  b +=\n    \"33bfx8qJTT3ru3Tce7Xj+qSndrp1X9vPyU5f1eveH2ZkfnLpg4Wt1S28/ZMiqRwYcdPkppwxpld\";\n  b +=\n    \"Zi+xsrZw855IZWyzZlrB5y9p7XX3py6edDbnjykg8e7pM1tL7TMe8cdf0ZQ8f8suO0r3b9bWjGz\";\n  b +=\n    \"fnXHPyfdUPH9rZ+vPHg74b+5YzQav3s406bdMbTrd6fft5pG4/LHXHo9QtPuyBv/X3vrf3naZXr\";\n  b +=\n    \"z3whdog27LmvOz5xZUbusG73PzqpOl427LlRxya1rLh1WNvNj5R+uvTVYe1OzX7y9sujp68o/ub\";\n  b +=\n    \"+eff3OD3lwpFftOlQc/qQ0Ss+OefHZaeXPLh5bN33755++JTnzkl6tPXwo07pturyif2Gd7z1sq\";\n  b +=\n    \"X3F104/MKnFx61YsA/ho/e+VNV+paPhtdMXfO3w6/JPOOTvg8e8u07p52xNP28LV8Nu/SM5w+f/\";\n  b +=\n    \"up9Hz92xskHHT/uhSlfn9Fic95JuzcdNaL1qRdvOqnn2SNesF+59ejoghG7Fz7bL2fgMyNO6r5m\";\n  b +=\n    \"1NrFP48Y3+6gNd/dljOy4Ys2R9c8P27k1k9u/qrlrzeMnPfAU98d2+OlkV+d07XmocHWmRV52vy\";\n  b +=\n    \"s4m5nPlOk7Sx7ZPKZjx3bUPjBq7efeVzukmff3rj5zDy3//RWv7QYtT67w+efje416uvqH+88Kn\";\n  b +=\n    \"f6qBVXTWvZyb1/1KZD7y17/JMPRp28JG3D9qVtzhqy8dDvll0++KwubXN+6n/+RWfNajezIOPgh\";\n  b +=\n    \"8+6pcPZobFvbz/rol1n9rowGj/79hM6LVz8txFnz0s+4ZFeHeadff1HG04fuHj92Sc5qz8ZbX5/\";\n  b +=\n    \"9uC7/xvPnXP86JwB/752SZfi0TPfcR/rX3/t6LOHtf7ssPeeHz2jZtArU17Qzhk59D/hwbtzz5m\";\n  b +=\n    \"07dr+W08qP2fD/ed0WD5+yTl1h60qHNnw2jmtiz8IT1qSdO59Mwe36231PPeNd87rcEao9txNrR\";\n  b +=\n    \"+Zfm/4nnPrR358yBn93zt35XVDO+ZdcdCYs9dum3HRlP5jqj8/J/32ebPGHPNg968+bPPgmK/HJ\";\n  b +=\n    \"FW89+7HY754+IU+I19ve97OYbdePuLOYec9cMxlHZefeplYHdndR8YfP8+4ftScaXnfnPf0rslH\";\n  b +=\n    \"vfbU0cU7f3mh419rRhdPv/Dkx/M2Lih+Y/RV7Xt1f7Y4JffBH17d+EvxZdpLF8w5p/PYe7Q5N3z\";\n  b +=\n    \"4UOnY17QP9xwev2nsHOerMad/99LYOz/5rODuLqGSF5d+2GdYffeS9ZesrLjmqiklXSbc1Hf6g3\";\n  b +=\n    \"eU7O5ZdOaIrW+V3Drx2B/y2tvjnn3q29peBb3HTX8wZ1hanxnjRmxdO37UdSvH5afkb/3h8f+O6\";\n  b +=\n    \"3VVr811K9JL02qGn/rq5lNLtz+3057T7+LST37qfHDpoWtKi6fPOuuJI74sPSl21Y9vvBofn/Lv\";\n  b +=\n    \"f6zeNHfk+Ktmj9m2p/yK8T/9/bEv3xv71PjCm8s/u/6X78df2jv04YWPtp/w2sAjV165s3jCX9t\";\n  b +=\n    \"uP+sfU6+b8Hm7ZV8f3mLThIPOj458da4+8c2Fz7ePfp43MbX7rwXPl1ZM7N9799hbjrht4lmvP/\";\n  b +=\n    \"7LJRNen/jAwBUXTFifXLby1OXLt67p+f9x9x7wcRTXA7B291TdCdU00W1wmd2dbbJsbGMbG9zAN\";\n  b +=\n    \"k7AcJ5qHZZ0Qie5YIxlY3ovoffQMS0hhFATOgk1ISEQgoFASEICJBBCAra/N7N70qlLxvy/fJ/8\";\n  b +=\n    \"O9/N7s7slDevvzeZo+nrr+/8YVPmH1UvDtpYeUfmt1Ourzl7/juZgUc9N/nuzPbHn7/0xF/vsn7\";\n  b +=\n    \"G8bmS702v/GDN8WU3BaPxJz86vuLcU0Pjoz8fP/PTW077+X57LkVHjfj88uXzlj681LHXLDhj6R\";\n  b +=\n    \"0laza9ffxjSw/k2eN+aX621Bs/wD/5yQNq1w0878lj7z+29tVnwysfuuCi2mf+88zEv+Bna4MHv\";\n  b +=\n    \"7xgH3NT7T65q6qO2sup+2jO5OfvvF3W/emPFz284/yr6xpeGuedd/+rdQOfOOuJ+/YqqT+/cbS7\";\n  b +=\n    \"xx3j6q9Y8vXGIw87oX7N2q8u+/Dqm+s3kv+u3iv1+/pRqx/5+JL3hmaXXb30wKpdp2YvOaXkx2X\";\n  b +=\n    \"0xOz47fY9Yerqe7Mv7Fj34qVXv59ds+i5lkee3KXh5Wj1KwuGz2045Iyrp3xUub5h/h1P7rD/yJ\";\n  b +=\n    \"82/OUSfFU290nDsD8U/Xy/2/Y54ajtJ9ljL/ruCUu/d+Gmhx4474Q/vn7i29h58oS3zt1lxyc2/\";\n  b +=\n    \"/uEef+47qrGzaMbX/vikBtKH6eNZ35+yZnP11/WeKf9349WHfZi44D0SblzZ5u5F5cd8wp6z8+t\";\n  b +=\n    \"nd+YevTK2twrTc/u/cA7N+RSR66884/f/W3utFsWXrrbJwOatn/uiz+c0DypaecTmxa89Kvmpms\";\n  b +=\n    \"vf/Wvaw+9s4ltecK5b+C7TdWP59b8Yc4OzQPumbvxtR8c1ryk7qIB4paW5p+VLZ+9+eX7m//xi+\";\n  b +=\n    \"3f22T9tfm3m2fedfLkymXnTLj+u3vMm79s7OznPv5gyZnLHiYnHr/x548v22H1OTce9MZny46+e\";\n  b +=\n    \"uzZy14esbzhlK9Gz7fSy/d3Hr16e3rx8ntP/tuTV1Q9t3zRtR/iiTM2L//PE0P3eu7vzooHP5s/\";\n  b +=\n    \"sur2JStuRnf86IyLr1mx5LjDGryTfrXC+GLRC5N3LV25zm1a8533qlfa1982duagxpXjn7to3HU\";\n  b +=\n    \"X3LJy1onLK57Fb61s2HCW/Pr6YSees3B0y7jyaSdm7woXn3X2qhNF7T4n+cF9J645dNSuqVM/OP\";\n  b +=\n    \"G47/17r6l/Gr7q95dVeR+9PHfVr8afaf7JOnXVtHMPOmXjlIdWzQy/um/A0k9XpUtOvPalU/c96\";\n  b +=\n    \"YvTd542+dbvnfTf+S8vPbPsgpPCA5985s6Kp0569vPcg0cN+s9JX/7jArlh7tjV4y4b/rOlF7HV\";\n  b +=\n    \"FeP3urdk+eWrZ54zctFzl7y0+t5/XxFt2s06+ermojOq3w9Oti4uuuPwP9Sd/N4xEw+bc8eNJ7/\";\n  b +=\n    \"Z+Mpuf5z/+skXnJ96f9cDB6156I119UdUTV4z8oJ9fvHBc8vWuE0bqvdctWHN9c99dOpnL7y75l\";\n  b +=\n    \"vw21E8oGZ40YihRUcDo3aWEfu15Mv3JPqHfPkxI/ZZyJfvN2J5J19+0Ij9CPPlA8xYTjJ6+Ys56\";\n  b +=\n    \"6372/qa/3d/W/r5lxwJVFpWnlyoGDBw0OAh3Vfo7f7/y3/TC+Rk5f932P+QnDzuoPZy8jfXeTQ1\";\n  b +=\n    \"jm1Q2ozGevWCyw+KZck/Fsd7q7C8V0H5kw73P0nuH95Bbu+sF9V66EwuzWpIY5pmm+s59GdEvVi\";\n  b +=\n    \"erhX1I/Pj25SK9Rz59hugvJOWz7WMCO3VZuoyTZViBROCC9424ZWiniunlBqxolLkQAZVHlGZWi\";\n  b +=\n    \"WOq1cSeKYx13YpW1dHarP1orIW0Iu6AiJpY3aJcp/J1Bc0slSsbHVpIJXxirBsPUiotW3tVo5Y1\";\n  b +=\n    \"Izgb7T6sqeNrJRqfJXLa2DolQ0EOg4vyNfOxKp7gJWMcsjT7o6VDdlMfVN9cx2FxrLNTWogjcrJ\";\n  b +=\n    \"KP9wfCtfirvWOvK43daiVkW0ljJc+VjmS4tXLVYy9uJjFrddGhVfWt350rEFl6oWT50zrdOQ9Lu\";\n  b +=\n    \"6uhH3qYs79ZVZejy02VWlWqATlaQJvmFhYGJqm+vqK7UNZMQofbGqclRyuapy5CljhmrbwZnwrf\";\n  b +=\n    \"RdF46JfW2vGhP73uZnq2llg67YOhalB4Vn1D76BXwP6PRsfXNtbfvn/wzP7f5N9bdd0zeNOdQeH\";\n  b +=\n    \"Dp2aNEx8I4fGrGNJ19+INGb5MuPdrj/jBHr9fLlXyT07v9a31OGYn3PI2Pb63uQ7bjY84MwIpRx\";\n  b +=\n    \"IZuTPwoALxubO/3FGs2t+1v0/wE6O7NAL6f805SuWeG6WFUIW6oxQ+qbiopq7RhGm5qV92nr5aL\";\n  b +=\n    \"1cF3hSMCdClxb71wN15WfOyCW1lbuh2uKpglAIM/Bb/XOOtJQ9Br8VrEc+aiEd+x4D+XbjPtSVP\";\n  b +=\n    \"Rp0ofYZhhv9zInbjN5j3bu382J9x5dCQiUNDaSlbDuybUYFVQWTYFyqfYpzKPNxYvnO/H+Szvxn\";\n  b +=\n    \"pW1WaCt8LRGiJWLG+D60IL7ypdZwdxi+H0BXCsvuEezWUDm9frehg73ji6Y82MSODm2w3Vlr1C2\";\n  b +=\n    \"msUdrhPVtuq3jvnQKslKmoVdu1zwbWx21e/N01Hez/gaUaD3lx3GsKRDuUbZwbVCO/Ygz2mHzlw\";\n  b +=\n    \"Tr6qKFc1VVUBwG4F0jBiZ9yJuyOZyGeWgH+u2lZdp/OwBuUqtlq7kpIlU1pAcEEtR36bI7UaVnX\";\n  b +=\n    \"f0nIpj3HqzGdsvEr9rQDFLRL1oVCQZQA3gNHld5YwpVZU005QDtCMAS9eQZmV3KmqCdpSdJN+ec\";\n  b +=\n    \"pIZVlBWzi4Haj+B2Fe5qrKoY88y2bG0WUoVkjBW0ZvljcoqlKvJ1EFPN0I7o7WcEOPX5noGfVNW\";\n  b +=\n    \"7RMV+6HmMQuT0pj8jKl4najLNq7szKZIGGNzfatjdrZBDVTBkfbWb2xugIuAXpsVtxnTxaZsFqa\";\n  b +=\n    \"5jX9QLdSTOqGu15H6lYpALs2xRlil0VwsyzChryhC3qgf5DB3sE5LxQpgppp0qIVqo5I251Y2il\";\n  b +=\n    \"y2uZHFBX1Vv04heFVKvNlPaM7CAud5r5wQSxUYwjDgV2t79UAkEqOIXiE9h9pGphzouWJv8kNQ8\";\n  b +=\n    \"JL/nVF+1IoXUENSrBqB9upFU+wLr3pUQ+p5bWF3arPZBjW8TD3PAIPY1MYejhBjloypzK2s0zOg\";\n  b +=\n    \"nhupIGd0tr52ZWVBC1A531foWqa5Lm4IVkxDvLbhZ3Laezq5ri1BbcW2dVueba7llVRPcH2TMrv\";\n  b +=\n    \"mcYVYAcuXo41ZuFHZkGkQ+VHx7PJ6wnmjMivpdvMhCvmLwInCzlS3gOWs1/CT/FBvJFSDTr61gh\";\n  b +=\n    \"CamizAS0G5oBK0K5ralSW8gsMw6jI5zWADvwi0PhmDenfMzI7I5hIhZ2TBHioPY/y9fZjEaXXeU\";\n  b +=\n    \"PAzk1UbHcEzyg/gLTOWIZJ93gDUQaN82PBFi+AZJcu/BXtNxRvm63yZ+IBDYwA/QAcKZLXj4bNU\";\n  b +=\n    \"vVu1mW2s01JN3Neie8OYJiqbZ2GdOkXrVMxLF33OraxnY7NAFKHT70N95Ssx24jlrkIc2qB8feB\";\n  b +=\n    \"T+IzdtewDAqNIA/imAYs1izFqfQGv7l85b/6k+VPTsybNO7xy/PjKIxfMnj1j9qFz4NU6OoWoHw\";\n  b +=\n    \"qdNjTCfs425wB4NWYF4ghMJKC8oqZoqMZpZkE/tiR8V7480IzjJOfqWhrfKygFmGoG3NLqR5JRw\";\n  b +=\n    \"ADLDnJHE4g8IDN0nhgQ30BwUsZMoZ/Q+HsT9EHpT27Nx/F1Xy1G4OlMvczGNkxcNVTjUuVP7ap1\";\n  b +=\n    \"0eiyUrOg8b4CXFmpuIpcMpsVRQ1QR9nlT60a2uX7dGVo/ia4r3w2puXtjrEdF8hORq7U5Es7hlT\";\n  b +=\n    \"WZLNL865B+spSDY26qy9AG7iLd7Q+B+8pGxfP8+rEtz1fnpb4lOTLh5ox395YAIe5BKbydFvxd8\";\n  b +=\n    \"1JjKIqL4PP8g7PrICPMoq24Z5csyblsrkWdjYH1q9yOQEs2D70p+he6Mfwrtdn7HKSqxs7ZszYA\";\n  b +=\n    \"pKkTM1LQdSJW4Rxvgb1lR/+TkXt5rPQfEvYCc2AGmPw2a16qPZR6N/72uBqCtT3C97XO1wB9Vgq\";\n  b +=\n    \"GsdqtiGjQKDoHGjDTfwe9tf8I4wnB/hYkVX1eLw3i16B59R78s97yXvbHlHSPgjZvJ2Op6ho/FC\";\n  b +=\n    \"9xvl6ThJb2u49cX2FzOtVe+H4GB7ydWoTH5l8+cTEz2NwAgdqbyh4H5D8HpT8/k5y/9v85ONk8+\";\n  b +=\n    \"XvJOVBSf92SGB5QPJbfYYk976TzHmYxHjslDxbnsRED02u7ZI8PyiJVyxL4q9+4A0tuhg+q+FTA\";\n  b +=\n    \"59j4XMofKrgMxY+u8HnP8G3+/kzfH4Ln2fg8wB8fgCfC+GzHj7L4EPgswA+h8HHg08lfIbBx4LP\";\n  b +=\n    \"p/7Qol/A5yL4rIQPhc9R8JkFn0Pg48JnN/hY8PkXjOXP8HkNPi/A5z749CSPd+XbdfnBsW/XSQf\";\n  b +=\n    \"H8FVixv6FnekRkPdaYOQmjK9EnRSDICiO5ZmVaS2J6X347sFxfNfMZO3y5dlFbX50FYm88mdLeX\";\n  b +=\n    \"UXFV1/mlE0cfKQopZLL9d+/Co2xUzW9znlkwGCYCU0MHGQVdSyHrDiaNsoeuKjAUWXeDCUn2f/e\";\n  b +=\n    \"do+mr9Y+8mGU4+ZVDf64wKHWWPP4x/nfw/r/37ZrW9+rv0Cdu6sb5/w/THlV2y0NoU7DBn7ftM+\";\n  b +=\n    \"f/vXy78ueyv11Jv3vvjILmvcW6z99/zLbLMPevuTxlx+zOm/fqzxujd+d/rYHbZ7Zu7bSxvqD3t\";\n  b +=\n    \"5yO++/5v6E364/73ymbv29XfY/ehfT64ePH8L+1luwQs7ffIf8c8Rjyz497Nvtbz19/rPX/rkrf\";\n  b +=\n    \"S/5xUXdTnVsrbJ4ULrY5UwsXIsB240q3SynZeNj6lTtHlCJSqaOWmo9ulpLupujeHhTH1zTj9d1\";\n  b +=\n    \"Pr8sh6eb6iNH88/u7yntqEjY1iNAGaXp4GdGRFXH6k0vLlsnVCOr/l2VvS1nVwzHZF0u7ChfDsr\";\n  b +=\n    \"u20HZLZY1lYgPWvSd9PzZhyanjLj0Bnz5xWM/cSkfr788wR+8+X/JjgoX64w2j8/oEN5YIfyoA7\";\n  b +=\n    \"lwR3Kwmjf/glGWyzuxqnDx1svD//Tz796YbMO5Xrmymd32txw51tfvabLc9565LGv71u+5Yuv3t\";\n  b +=\n    \"Llgb9dOumTC496bNjX7+ty9ddrLrhrz1fOHfX133T5lCsX2CMWHfHraV9/rss/fv6Wu87fcMI15\";\n  b +=\n    \"OuvdfmXZ3+8z/K9r/7rqq9TW1S5bt6KiRfOeOHuS78eqMsLX3rg2JXbVa+77+vtdTk46qtZ/iVD\";\n  b +=\n    \"n/jl17vp8pzLp4fZv156wZ++3leXn61at98vT216vWjTKF3+/LLHL3vx5dOu33UT1uUPNhy40+U\";\n  b +=\n    \"V+BNvU7Uun/dD78CvloQ/nLtpii6PO/iZX2187bn1SzfN1OWHXvz18AOm/OHpUzfN1+VLn9/v4Z\";\n  b +=\n    \"euW3rx9ZsW6fL6m+nqfWs3/P6hTVyXv3gzPei78s4f/GZTrS7v/48n3774y/c++2RTky4/2LLlj\";\n  b +=\n    \"tvu+vGPKzafpMtnH3ZSbXGanr7f5vW6PA/9HC/e8sjzB28+R5cX7P/QheecOvvSozdfosuPnjyy\";\n  b +=\n    \"Yd/l/9nYtPlqXT7/wQ8evO7Rjbecv/kmXb5kddMZL6dv//L2zRt0+eWrbjv/4oYpP31q8/26vHS\";\n  b +=\n    \"HIY9/+WnZWRs3P6LLD9i2WLDfvS/+Z/NTurxhzapXnnnv4Cu23/KCLpeMO+jAp4Yuen/Mltd0+d\";\n  b +=\n    \"cX5TJX7LvvHTO2vKXLg39RdMo/f3z6JrblfV3+aPiwi3jZB4+cvOVvuvzCGXOz5S88cs4VWz7X5\";\n  b +=\n    \"VFil/e+u9NPXv3Rlq+3tGG3iVe/tKUNsar4hT9vGZiU6IanP1pxl1UURyKuL7/kyxXRwWv30JSl\";\n  b +=\n    \"qOhHO5Q+v+qly34Wao0v8EmL/rrqJefk8+dpb8qiopqWv9x5U/ir39Rp7rmoaOreV+60/wFzrju\";\n  b +=\n    \"jqFqXD/jqqdfsG9nfb9QRAEVFt9313DmhePveRzWVKSr6vbhz+Hllz57yO+39WlR05e4nTP7P7s\";\n  b +=\n    \"c+9c9Ew/vdD3e9ZVRm1kWDDK7Lfz23YTj/2HjzAKNWlw9b/smVV/yg7sbJRpMun7p09f2rVpT/c\";\n  b +=\n    \"5Fxki4v3/kPK294f/79y431uvzE01cdc9Fpx5x2kXGOLo8/9tLnnp7nPbfBuCQe7/WX/XfR/Qd+\";\n  b +=\n    \"/1njal3+Y/r6Kx69btrb7xo36fJ+50S/x09cdfPXxoZYD33d5T9ovPKZL3Y079fllx77y/x5j7/\";\n  b +=\n    \"1E9t8RJffm7T3P3f67OszZppP6fLNKxb9+qqXKl+Q5gsxPpi316rPjt7x8rXma7GuCu152Vs/vv\";\n  b +=\n    \"69q8y3dPnSH/1x0bxX37jtAfN9Xa6ecutNb5x01VevmH+L13LKTbfOnLns4Y/Mz3V5+NUTH/jkv\";\n  b +=\n    \"DvPLrG+1uVR6xfeMvSTPV+ptFLaND3SvvAvH9w09Kpx1kBdvmbg1Td8ddXQDxdY28f3Px9H36gc\";\n  b +=\n    \"saHB2k2XT3351hOPO3xKy9nWvro8+g8brInv7/X4zdYoXT5/y5Tjxl695LyfWViXJz14ztXX7OS\";\n  b +=\n    \"+9qZVrcu37/rH+y/6/S7X/suaostvLN/4UP3jl340JDVTl/tGK5c0ZnLNmkdZMX2o9nddnfCg+f\";\n  b +=\n    \"LtCc7Pl+/oUL6zQ3lDh/JdHcp390LLKg/KE9LqyhF2ZXV1pW+PLKh/T4f2FE0Z1sf4l3ydwYk8m\";\n  b +=\n    \"y8fkpQ792kvRRjbxaLk67xj9DKOgu7n67xrtO/7ex3Kyo9iWEH5QLN9Pxeb7eW4Ltc2UQrPP2yo\";\n  b +=\n    \"1gU/0hPNPwYdC/wKXXQAWqTku3ydR7utA9JXU66NU8BtdR5L6qAxY0YfhDL1cjaZ3QufUUdWwO+\";\n  b +=\n    \"C964xY/o+csyYIu/wWH81WdsJZjXHkVwqIcOKvH1X28BzVVoRAQ0pLTu8oEmX4wfhyuzDYxm6Hr\";\n  b +=\n    \"63K7AH9MGYUPXUwbGO7uHDY91c/ntdgY3hFC3jKl2GcmNoqjzggFGVnybP/ePw2EaUb2ddge5rv\";\n  b +=\n    \"bYjNQHnlttr/Pjxnadq8YhaIZsqKxszS2qaRi6uqKxUZbi+eFRFfFH91jmTDpg5VMuAE2fGYzxy\";\n  b +=\n    \"ZmxfOm5m/P7FPTyzfmbcV9VQvp+3zYznfl2BnuVUlRcgySFWqf5WVYyqGAVflWPGVKweBf9XrtY\";\n  b +=\n    \"F+FqNVvz/JUlXuzU7Q9nKlf+UgvNv+NfU2CykToCmlCJKw9HYlEBtO/+FSqlU7Cq+Rl2q1WlSdN\";\n  b +=\n    \"zK7HgdXfjeuyuckMTkqBYVPqiZHetZcLJP48aVLSV+6eWzYzthvr388zOS5+MuxM/qzuYUtOv9B\";\n  b +=\n    \"o3oQtFzUEfpV96eHdtX820syrcRW0jippKhACrgWRGr7/V+0FavTH2il2v36MA5sd5yL/hWPjL4\";\n  b +=\n    \"8PY68+58c/icuB/DS2Lali9P71CekZS7bC/Gq8eMGTPmWG2jTdYKUEw7dKR+qf322pxYr79xTjw\";\n  b +=\n    \"n+X12/5xYH780kZ2oWJKpV/ZOtRQj1I+RlctrRDx0pUaFxirnxnraMXNj+7MzN16rjm1mk3nOl1\";\n  b +=\n    \"cnMS15+yPRDjeVed+hcZUZneAoU59TdLJyRKwlHqmHkO//+rlxzr475sb27R/OjX1GOr57TfLuT\";\n  b +=\n    \"nOXeOmM1VYKZUuJ9dafzo113kqf6mtkahUXl5SYpSVlpeXDKnYbsMvA4YOGDh40JDXU2m6775Tv\";\n  b +=\n    \"aOyU2tnYxRpeuquxm7nnjpXWQdboAWMMZNmmY9xq3m7ekbqz7L/mV8WbzM3WlvK7Vqw8+9wb0cL\";\n  b +=\n    \"vnn3OBbv9YfCQw2d+9fWYsQcvOjb93vpzz7vwotvve+jhp595/hdvv//BlqLUsO1G2jioGjd+xm\";\n  b +=\n    \"HHrj8Pbt7/0MPP/OKll9//oCg1aLC+WzVu6rQZhx3HxfoLr7rm+ZdeHjRsJFyasfCYRceluTj3w\";\n  b +=\n    \"tuhytPPb3z/g08HDZs6g4uW9T985LHHf/P6p/845dSzb7rlsceffvall9/8/fTLH33xmZdenjF7\";\n  b +=\n    \"zsLvHZc+87zz73vgJ4///JlnXx+2407HLPri35u3tNSd8PbGwXvWZ3fbPb365LvvWfPwIzvutMe\";\n  b +=\n    \"e0w6dPee7Ry867uQ1P376td+89ek//tWYO7+p+dL9x4y99Z6fPP7sy69vvHLiZZej8/f81WsvbZ\";\n  b +=\n    \"k95+hjSsuGDD1g7Mef1GeD8QdPnnrBhfOWND/3/Cuv/u6NDzdvKapM771uY2rdlLJdUyXD1m4Y3\";\n  b +=\n    \"HJn8Z7la3e1dikzUmNTOFVqGaUlpcMq5g7ZrnRBqZXaraLcKrNKLdOyrIGpYmtAiTF4h+LZpbuW\";\n  b +=\n    \"Liw1S3YcNDd1iDXaMlLDSoYMrErtvl+6si51/H4tzxWvu9caXrJuk/W90h3Ldy7ffuD2A48vqSg\";\n  b +=\n    \"ZXvK90oOKp1WMSg1MGZY9YFRqeMkAq2UD3Bprz7JabiqrtoZY1aVh2UHF67YM27ls7LDR1l5D9h\";\n  b +=\n    \"rSck5q3WW7DNjhjEuKxxaPKzUH71ze8tjeTQNbfjt8YHHLluKWjQP/eY0VlK9dtH3Lg2Utvyyu2\";\n  b +=\n    \"HmcVVESlk0rG1jSNGAP6+jU98pbTtl5t4ody2emWs4qufOmgTul7BtSa9/cv3RgcXHLLUPX/qvU\";\n  b +=\n    \"qDywBO6em2p5zNrVGjKoqMQwYHBmcWmpWVZWblYUDzAHp4Yaw8ztir8zbHtjB3Mnc5dBuxXvXra\";\n  b +=\n    \"vcXxqqXmP9Yj5svmq+drA35T/1nzdfNN4p/hd88PUn82PKz9NfWkCoBoDDxg3Yfac86+99rpVZ1\";\n  b +=\n    \"986Y0/fOi0+0pKy/3xE4767JVXU9vv7AdHLVxzx933POq9s93pZ553bSskKkCcPYeLRQ/8ZNfdS\";\n  b +=\n    \"ssqBmy/kx9V3Xb7794oDy648LbSinETZOb8i7Lpxz/+5Gj6+ddbrrxqzNgDRiy45vobfnDTrbfd\";\n  b +=\n    \"9dAjT5UMGLjD7lUHTz3illtfePH60l2G773fhIM//NsnW55+JlW5z377j3DDqumHzZw7b8FRCug\";\n  b +=\n    \"WMyGX5lasXnPWTXfcc+/PXrn7nvrsxcftvarYSo22pGWMHdOybnfLHrJbat/yPYoPKp6SGnxgyx\";\n  b +=\n    \"0l+6b2TY0owwNmH7I2KN+xomzncVMji5WVox2L97J2LTYmhqnDi8emKkrLSydWHpAaWO5bVcXDS\";\n  b +=\n    \"1MDS+fOCNxBbumYsoq1+x85e0TZgTsO33+37Xcqnw0vmDJol9KKkullB5Q3Dzh40oEl44orSo4o\";\n  b +=\n    \"MYqHWsUtZ9M9ppdVtNxy3N5TB1SUDPpOVUmFPyq1U8tPq/m8gdPLK6ZN3XV62bxBM9aWTqvY3Tp\";\n  b +=\n    \"0RmANLqsoiUor1vq7tPzEGOIMOuUq2Tyg5amzZrJB68ee/+q6Q2/46bqo9MDUopL9K6ZVjCj+zr\";\n  b +=\n    \"p7jxGHp6LSYRMVDFz2Zdn63x5YfuOHa93R1rBU2dpzzkwtLR5klZcOvWjxoeVN1S1fVOTKGnaY1\";\n  b +=\n    \"nLl9gMXlu/ScvraQ61TJw/ZYf3cPVvePajlN6Ot4Slz7cQ9h1UVG+vfafn3yJmpipR5yrApM8e3\";\n  b +=\n    \"PFFdYqQWFO+KzbWDR6X4wKMqWu4Odx80KlUOcF/ScuUpv4NBD7KaBn6vFHbRkIGpEAYzomzv2Wv\";\n  b +=\n    \"nD9zBKrZKy3e3BhSXVFSUlAFWbfnlfhXrS7pF0Ml3WvkUxDj6wqOGarvv4Yn9N19emNhR8uUjVa\";\n  b +=\n    \"7H7uQSmlkCX7rBv8Hzyn63IfEE78z01mdjv6AupCqVqEEJhRh1vhl7jUyoRFpI0El2T0lVFl1Yv\";\n  b +=\n    \"Ljo2O9cX7TdTpV7DqxcvOcno64/6EBUOSp7yzujzNsWj97jq8VjijZX+tduWexvMt71jYq9gn0H\";\n  b +=\n    \"vRvcOZhEY3e+IUK7vXvoZ3vsNfPT49+dMye719xrHrlhbtHL5Ajx6g1HFL2515FF77w7D71LFtz\";\n  b +=\n    \"93g1HvfLnd4+qLKpf+KmxZWFRQ1Fp0WjDMEz4Z0wfgHYYaghAkqZppPYx9tj1mAFV5eXGzimjHH\";\n  b +=\n    \"BK8UFWddmBOxuVAVRIlQEyLK0wdzeqVPVUGTxSYQ43TDMC5JMyAfkae5iWMUCVi+EBY3tzR0BNV\";\n  b +=\n    \"epd8HSpVWHuYYyDugOh5ghoHloFQDBSpeYA3arqErzUVOXdzMhse8vuxnQjZUDjRplxhGGWDiyj\";\n  b +=\n    \"hlk+oOQwc1ftvR8MNuCNxQOMfcsNmTJKoFPmLmbKGpoaBD9LjCEGzLu1u7kH/JtoGqVlhjmg3AC\";\n  b +=\n    \"SYDSbexvLrJRZbpRYv4dJgN6WqhbNspIK00B72ikE5WJjRPlAsxIGaVihoTtiVZWZ5uWWMcgoVS\";\n  b +=\n    \"+0zGcmFhlP7lVknWssriwqyZhFKaOi0pxrFinkbOxiFhuXmcO3G2TsX7bLgDEWMtSUHWAcAjNvm\";\n  b +=\n    \"gNhXGMNF1o1zWIY94FmmfGxmjYDgHHoUCXyGO8Z3y8usmCUqRFWyrgZ2i8yrxhgp1YZ/pCRMMoK\";\n  b +=\n    \"y4YWS43x1r7FRtkEY6CJy2G3GmlLTWSJcb1hle2gZ9UwdjQGl1rFT5apgeykZrRELZJagI+gXyX\";\n  b +=\n    \"wvau5oExdOd7QlQ1hwYIWF5Ub5r9gPQAajAvgbSmjsmJEiV6lEtMaA5NdVAqTYRy5I3QEWjmxxF\";\n  b +=\n    \"KtwgxOV68yYBxAF4uMg1NHqN9jzJ2KYMyp4rIys3SP1CVWUZByyozBxo7FxhBoaZhupRgg1hifK\";\n  b +=\n    \"iqtKy1a3PJpUZx8fMDOZndhGLeddkpLUUp5RRnXqJ8vFhd5yiadpsAYLxEgWafTy5Pf6UwuHfss\";\n  b +=\n    \"V1XVEBHKgHGHIN93XBwY47qtFtdJ88ZsQ7pRSKgMkhoPPU8G2EWC0dA8si1vZ1WmrqGq6tDaLCW\";\n  b +=\n    \"1VVUNjVll0Y/bW5JOimkvcEBG9JiIuIsFCaHNCL48j8A/P7IFcqwFHducm29rmdAu9K2t5stpz7\";\n  b +=\n    \"WF7QubBIEvRBRAs4xLQZDjCe5jIrFMze7Y7FGtrdUD3s23qX6n7ZB6IbF9RH3E7QBBe47DsO2EE\";\n  b +=\n    \"Q9sLl1HFvc43bHLqKomEGNE2gzmHVHPKzmqYzdUttlZOmtsVVWj0O4H+b4kxbTgkgjOI1e4yIkc\";\n  b +=\n    \"D9q1Q9+lgtggUXMuXFk6t7uViLOA5puMS2mHMsw9ipQigAuPQouuVNK+h7EPcrgjnLIF3bVYl0u\";\n  b +=\n    \"3b7QuFyerTXOEXCGo8B3muz6JFLwhW3Lm+h6I+kwKv3xpx2YnA8EBinJI0iTcTsf301oN1LraHV\";\n  b +=\n    \"LmpqOIUhES35OYCBmqRfcDSuwwCAIYmoxoUFHTabbnTJmanjVnyoKZU+FKfaYp37rycciwdJwkI\";\n  b +=\n    \"duYLngwTTnzGIlQ5DM/JELNFon8yAmIS30W+pSFA2RX65ofUzIemamtTSvvrNYFbpeGOO0GIWwA\";\n  b +=\n    \"GnoAsDahPrxHcIoEDYXkLsHSowPnKb+MbK2IUx2nte4rrTyAqqo09QVoFstbgVksT/uR66i9Aas\";\n  b +=\n    \"KGz5SjXJbMI6VvoUgT1I5aGGvjeZ0Fou2uWJL04hzwojHoaeSeo7CD6GLCYXZdxxuM8bCwXO7bz\";\n  b +=\n    \"hOoJ20GN9GUWRHPkwrg1+OVHCOcBiKwI8YcxFHzB9y5PGwu1YCUExLMhPrAcO2TZPGJbmCgddn1\";\n  b +=\n    \"YW09IIIOxigghA7sBWUUO5Sz6cODICHJCJDWb7NJQmEKxiMf7cizkMLbinf6Na5gN9p4bg8ACjE\";\n  b +=\n    \"MJt2wG21cA6FtwQkIJFHQ+kMW9LPlyzXiZjzr4lLaYqpCCQOqYMJ83yhEJ1gAXJCSagdCYzc7Rr\";\n  b +=\n    \"6+aLklkod0rrV9KX5cCXNfZva8EbiBTbAi3qjF7DIxxRhP2Q+peg7S7bqje1floZV9iNOAkfyQA\";\n  b +=\n    \"KgwoswCbgnhE0D5HsOFduHPeHc5nouZKYeGFJAj64DWNGnPqGCA5zvcGhnsFGqaNSKF6GQDiPPC\";\n  b +=\n    \"5krIj9ALiNqGUMBPwgJcBAFOPLwjgvyDS0UdBJwwnW0dmVV1Szt9ldVFTtf5xuNS2lPAGyEQE8A\";\n  b +=\n    \"DgkQBNVs5MK2JJK4IqTIZztNyze7IFPfFE5SAQiddrJwaYiQ8AIUAEy5TIOy9IFKwRtsxuHWzou\";\n  b +=\n    \"6aSet0tmmY01eQZvqanwxDWiUCduGHmIgnbZaaEAbPLIDQHk8cKhv7zK3q9ZzzZTEv5IdkZTTxA\";\n  b +=\n    \"9l6ALmhIF6yFcIglPB/AigmIlAMM8dPrOrFtt3M+mfi0LkYoRIKG2PeQo+nFCEHlB+ikMn8pi9a\";\n  b +=\n    \"5ezmBNtSB6AD3YjCm1gQBByJOKqVzZGwsXcDZ0gEJ7wdqvujSdiKvQuzxRF2PY4Ch3bga3iy93t\";\n  b +=\n    \"bms31TSqLV0jgXogQMmw+oCZKdnD6bZKXQJZNVISL4wcwFkMiUg4e05Xch4sbjNQnMT6pPB0bFq\";\n  b +=\n    \"sqor9cOCW9ihO52qUk2JOsYCYM+JKBijDU27wqHJqv1oSK4jmJCPsU2C3Qo4lIYCu95rct2bqmm\";\n  b +=\n    \"vTDdnlttoHLoA0oDTb9QiBxYz2ruK1ddpfrKrg15TkV/WkCVA9uVgTOggzB0VC+MIJuLNPCG9Ox\";\n  b +=\n    \"/nFYCfGacWqqtry9qm6zFVvpcABRwA2kS88xux9D++559pM22km09kGNQ0OjgLKIy90ie/DXt4v\";\n  b +=\n    \"iBuD6sAGx1rwqqp5TY3zBGlkNSJPoWt8JjnxWcSjkDm2zfYf12v/eWYZAF2d4j/cSEZRwF3gRhF\";\n  b +=\n    \"z6QFhwRBimR84q8wS11mBUeucOwp7M9vxBaA0wHbEY2iEXdBfrfBPqLGS7tONaohBRAGZAiPNPU\";\n  b +=\n    \"6AwI90C6poL2zoWjatf+n42Jwani04RkGgQ+eASz0QtYUPtlL/OrI0eZ2q4ToBMBIwLTwQPJQHh\";\n  b +=\n    \"b0Cg2wUQoNi5BPPi3CIYAM77ii3y6kEDlXn+E4rXrtGYl9RUcawSx03DEdP7w8U6F2QgACiEuDJ\";\n  b +=\n    \"E7aHQolxMGZqtR4rdBs+C9piZ0iuMn6HrIN6SVT2hKRYA1MsYFGRHYbMo5E/dlTBw9PygQEKqBS\";\n  b +=\n    \"JAzbdlwjYDM8F8igEsquhrx1fIWjzktYX2MAy2IhiYFYcQHnCnlzwqPaXTL7SipcXLFOnD91QHs\";\n  b +=\n    \"qtuz4AjMFCDexIAg53vG47mdbBbo2K0tfYwI4rqQK+meMz2x2UTjdygC+hFxPbhcARx2+psFoAD\";\n  b +=\n    \"h0qrCYZwMkB6LMpixzkBd5IHe2Vyao14uorrW0cisp4PLRhSXDgIRtwkz+vuqCTtDlTy4WC0bmE\";\n  b +=\n    \"T+KkQUVbtJ+2hSrkB6ZNh/6kNZjXeAiBRMGAEHLsAs4OpvZ98gqQr6QMmETY8NSB6RB+6MAzDZl\";\n  b +=\n    \"a4BNUx5oySiCtU3sc/qvLLlNDByYS2OwAoMLjvpKTI+DfcyStiIbagHVALKCb+XMX0vkDU9Ss2T\";\n  b +=\n    \"YC8dN1XQd2PWJVE7pernik+egT7YnepHYxsC1UAFsJBBYBwUTjsJ71WIhRMSZVVXP0/5qBytTXq\";\n  b +=\n    \"8ZqHFhsYA+Rx1ng+RxXj00QhkIvemSsplF/N+ofIK1jgWByASixZzty/D4F3dR9UysgUQA4GwaC\";\n  b +=\n    \"EWWITKjucpfrfI7xPo+1lmmqaysxigHOpLYNGyA8eGohyKmNOkXAlfi4lsbqI2H5G4RYmk7iu9I\";\n  b +=\n    \"6shqIJ2Az7jgewb6NbduZWN09/HeeTuJ4wvEiYNcUzRRo0vyuxwCYW7EwCizVfRX2r+rPbq6bkA\";\n  b +=\n    \"wQgDIepEIFHrA/LvOAwRReFOHJ+7YLhFQ++5rewMZFLnHsUMnJ7JCJXRGq+cuzC8nKQlq1oilNt\";\n  b +=\n    \"fAHW9CHEatAaJB5AzeYMqlXBM0Bx2VhG+tzODSqxAEwl04YwVqHTjj14MJVyKk35hGs3vhcD1Ql\";\n  b +=\n    \"LBD1egYRExKQDkUei5T0P633GYyHmW3Iqdtwa15NbXWzOgNkAnQwV6O2iUMQdnzpBL60Hex6h6I\";\n  b +=\n    \"ed5hCaLYfObCX/cABdpTx6TOrO+KjeTrWa6YKVYJetN5tj1xgqhRw+p4EXkpKH9sqnn3GoQVQpQ\";\n  b +=\n    \"lStcrd0Qm1a/eEZh+3ongBzbh+GAB3EBAQFg777lYStSRYdmW6UZmrFXUiisQ6HNGIesRHh8/qO\";\n  b +=\n    \"PH5eZ/RadqJYmBgQprpBC0vaFVNqAgBSBjQT0nQTKdaW8d7ol+ABUNgDJATgFRmYzFrUu9bWBOR\";\n  b +=\n    \"JOpa4bOAAcvn+/BOl2Mvml3dK9MF/dUrrzrtMIQBbDkQP4fbcs7UXrmuGAXFv/Po0aXcBtZVAqe\";\n  b +=\n    \"CQhAD5s6o3r9r4OkBcOIpAQLnkRAHgBJJQEV4RNiX8Sg+EDsgZQNHh8MA5D3mHIl6Y7hBFsduEH\";\n  b +=\n    \"gYeb4PUvK824zqdtukuXEZcHbJYYhxWanv2o5DhGG1P6RQja8vTeQR4NRD4nrVuXw7usn4PKIJC\";\n  b +=\n    \"W5UDGHEotAFmdgVHOS6YP7kPkIKsGog2WkuAsYIFFdw6fGAe463IOxqKyUkJqb5CavggpBmO1FI\";\n  b +=\n    \"I8lhhtFRB/e6KMnFdIyOlFhrcxGAUGS7mPkL+7/XJnEOgyKcx8ICD4AJAJTNeMid7+I+KGxqBA0\";\n  b +=\n    \"COwJqxSkFMMHfm1fdmUkDueZIFdKu4LTTTXWndWbjqZEOB+6N2bD9fccO3KMXVXdcmXnihDiyH5\";\n  b +=\n    \"altd0OtyYkhEnE6YxAsI/VPthxQLp1HEm464jgmEQWa412hBnR1st0bLps3ZEggQoEhMUmNpGSi\";\n  b +=\n    \"0Wiev862H69QE2H7hXeVbSvrQgdPEG9xqN+5Ht2hIOA2RE91iuA45yGbBhk8q2UFdRVWxV4beC6\";\n  b +=\n    \"MUjJGCoF4ripbbQmEZ60mrYX+ULC3vWFz5HLQpB5UNqJH04sz8pok/gIwcZTIS2KMcOhcKRKt0I\";\n  b +=\n    \"iDEh3cVWXnLTG0/N0zg24lxG1ajUQsK2ORC4WvgvijEfsjjry1nI6VsXXIGCKQ0GRC3wrhxrU72\";\n  b +=\n    \"GCtDo9niHkusA2IuCNgyhgII5Vd8VVE7UxajMUXl+bXeLk/6/xQEjwbaXHl8ImIH8maF0RJMWlN\";\n  b +=\n    \"tVkea6VBMNFmNKYPYFNDwNXGa8V0mESZF47UEYuikHaqa/evx+8SRuR7JGjmdBGQm1MZRhIL4xA\";\n  b +=\n    \"ppeBPLTDeha6FChSTxpqYLsk+bnV6LNLmxsUfHEHWGLhKNuDK1y8ZFJnnKx7B1OhsHJh9xKES4A\";\n  b +=\n    \"fo7B2COAkYDKqObK6YOslXzpuWold8HsG/OxNHobdKB1Jg9ChhAdR5vit4Tg6rUFBpba5VGY0AD\";\n  b +=\n    \"7bjWxgbSN6/Lg+0dFGsUxBX4S5ZB5ziEtJSIOlh1UnNDNvB5wXp5DpScqMga1GKeWoZ3NMODBHm\";\n  b +=\n    \"NSO7VijQ4WAAysRSU8ZN2xhe3V2DwIla9CqROBzQTADsVJlNvJlfV/5qESsVdyDENIRknoCoM/l\";\n  b +=\n    \"fnZsR4ZVb3AopoE91YYsDm90cRTZxOEYNdjdm4aS/5n0QFCT2AkIZsLHJ/SLKXadNr2HEA7IlyE\";\n  b +=\n    \"VbuA51G6cWd2FLkqj0ENUMrOewTJ0fJcI6UrOQ19GKNfbCknJCMGCAoYhwN9HTdN6FZtg0RSV0v\";\n  b +=\n    \"lLWmUnCjyvC0QTRNAokAFtruoVRtMqtlEjSN/BYegCSg184Drpst770Fyvko906oMA2uWFgggHd\";\n  b +=\n    \"gxfjrtk2zvuZGCgYK4CEHmJMjmuCNsJqDr5TlWVTkgPfFz1fLUp9P6tiRwWUu5IPwy50rOvHN8X\";\n  b +=\n    \"JW/MdSvMHoGsSUInYsC5hyE58bBEfZGPvM93Igm9VyRJx94rLBVfiGPeFboF7IYYc0PPC9xIolW\";\n  b +=\n    \"9s9rJ5DscQJk5CKMAYTd0ThoXcxcL+4QQgHeLUMhtlYoNNuvqw3tduUZgiwhs1+Z6lRoFeI8ldY\";\n  b +=\n    \"n0DJws4FKEuB/4BFD+ybf+77HwMc/qUIcArDEPxBPfx/6abYhTW4xt2Nhao7oHHkXzUel8kLsil\";\n  b +=\n    \"JRSIqLIk7ZPADjXGUcUiBWFCE0zzPlZmwZkFvpYiNoSLZBClAEIpWpfc9dDgkanGNucfdXviQIS\";\n  b +=\n    \"eFFAQwrLgghdb9TEjGgBf60d6vPYXCc8akwo/lyysjZLCpTgCWswObtilljQAG9sUtYAmlUqLaJ\";\n  b +=\n    \"GREFADpkIQ1ueavjJiiU5BEC6IMuPEqx6/qhJWo2j0vppBYgfOqFNgbTZoYP4aUZ1d7YAmmlanl\";\n  b +=\n    \"FULRbhtFHA5bBBWRCBgI99QcnpxkHtUNX85Ds24QSKqNkgLyDHAzrFzjCGddIVnWnUFG6PdH6Rk\";\n  b +=\n    \"4nXKq95+YnW61v4eOthukeqY+An6OfjRxVGAv6a+tLxbYocZPtnGRP7SMjjdJyxPGYT3/EdB7AL\";\n  b +=\n    \"kuJsY1yvTQDzmMgz2Pa5HwGGAt5RRmFwjtEfzAYTKZn0A6xddkR0ruEVQH4yS00KFOOIl3RCE0B\";\n  b +=\n    \"Coy5DHrC/iEvunWf0RoERZioiSrmRBAhGeb4xpivsk8yOVo4ggTiRsEtB7uH+BcblRqFNR/Ut12\";\n  b +=\n    \"ElO8yVXsoEZjW8amCd0H5j6atHZXKZpmwj3OywIZMbUGWZ+pVMukQw09IlBDjViDL/QuPYrgRzp\";\n  b +=\n    \"WrvVTQHhk4JCDViRZuhBfseshHmnHHsuQRfZDT2W8U6OdM0qZ73LP6oqYCHidYuUgEkUgigbyAy\";\n  b +=\n    \"ssi72OhdYyN9HB/e1Kpdx54tpATeLHB9isUlxqS+mlRbOQafRwRTh0qsuA6Hf9+Y0CPiWdKYXZ4\";\n  b +=\n    \"mddnGJpVFT7EcYRQyrBhNGA6l/qVG0BFHqrymCYrUbhkJv+vbnuMDPqEhA14niC4zpnVv4AAco5\";\n  b +=\n    \"W1XSExkJw9Kh3PpQAeyBGXG6M7TqZuQxMXvaFszO1QYKQcK3x5hTG1ukBU70nF0E4/y0HyBRYzA\";\n  b +=\n    \"D5TYkKiK42lPUlf31Bkc5EMHAawAqTPpQJfZYzpuFIyU5/J1aSXxF4XDqbKE5ECBy2EF/hX91bB\";\n  b +=\n    \"U0Ys7lFA7o5wPO8ag3TJtbQNBGQaIPXQWehptnu+YIJm8ZVnIJAQJCICM8cVLsfsWsNtZyuLUcw\";\n  b +=\n    \"x84/VfJ3yeFUrTAMsgaklgWtTlZX2uj7VEpGE1wGuV7GXhPjXG/XV/VdQTOJ92NgxE4cCkN5hlT\";\n  b +=\n    \"wWMN8NyA2KYejbBM5vXKl4np7nsKlxZTqv8WUhFy6wJSG2OUX4xv7uW6BAYURt6gXIFcBy/sC40\";\n  b +=\n    \"ui7GiSe8J6fz/Ny2ts3q+lDj9MIokxWJ6fRJmAKGJ8FQciIDYLUTf0dnoSJgXF5tgcwENj05v42\";\n  b +=\n    \"EDlA4bEkwI0xoNjsFmN2jw2oRI2NynzNs+nkt84gGDOFqke264fMxb7rUUGxc6sxsS8NKqtquqE\";\n  b +=\n    \"5pziBkAfYDyQWPvZgUOI2Y1q3kn2PmAuoBSMOinAUeCCqebcb47vjGlsNr+lkY8WKZw6CLXE9H3\";\n  b +=\n    \"MZEf8Og1Z3ov0wCtWJwusF5+UBXENhqv4Nz87QiK7wdg0hriuJ4/tB6NhY2HcaPal6tNtbjaNc5\";\n  b +=\n    \"pBtu1I6AD9sg4F7kFYaBW9W6KMGmMEwxEjyyMWKmt5lTO9KYq8lJwLTNBP+h008Q+nSteyulLmt\";\n  b +=\n    \"TGrgeQrX0FDYjgTO/G5jTo9rVMD/6Gu6vXYmeNd1gNkmPgkDBkyKd49xWF+U0hqz12tXFp1xN6N\";\n  b +=\n    \"9KzziId91XW4jJ6SuuNdg21SmWaKXgdiMUOIj5GOXyNC9zziy77rM7ozWgFsjpbnFAA4oCMUPjd\";\n  b +=\n    \"rexFrdng6dViQKvqoLruuYdLXp4Cv/rgmtj4No5NoRlgiF8C6guT9KRKOCiVImi4SZCYCmMccWQ\";\n  b +=\n    \"Kc8zh3/fuPwfprg2knNjAhbIkCBkWJ7gx/3VRz0bNuJXOV5JJgLGP4BY1ofu6FSFRcYjiOPcYox\";\n  b +=\n    \"iDpCZTNwfmLc9C2RB+CdZ8GUNjTXxkH4faAT2h1RgwnImhLbysdFhoL5Hn3QmNA9E9kV80hA7A1\";\n  b +=\n    \"BsMUgZinj/E9745KIytkgXRdYx8jjEXpoa7i+rpiKDlxfTAhthyPXRYGPiGRMOg+32/xda4VnZp\";\n  b +=\n    \"eLxulihZ7KTIFimAhBgSGSLKQydDB5pA+NLWho6K4xx0NYcIARaUc+f9S4+39PuaZcwfN8fU2II\";\n  b +=\n    \"oEjJITkgbLwPWaM63FXJVltlT+FdulzsOMG1PE5trHnPG4c3Fd3DB5b2JVLINCmUIVPeBGzf2ZU\";\n  b +=\n    \"9UV9ECujwsDlwM1KQWF7OxT93GjoTHK7JrgdT/yNSa9iN2fAxdn6Wp4Etz6rPb19W4LMHfohhRf\";\n  b +=\n    \"LJ/o1Xy5xcBRJkLKk47hMPGl8r7q9b0c7147EMzEZQy+TEQSccpA2KRB76kbBU1tPr2FPIeFGvi\";\n  b +=\n    \"cAiqkTPr31TREQ5x3sKVsuTFlkP2Mc0ifSumpVcsTq6tVKH+EyTBiNHIAW6nrus8YBmaYsAdSQB\";\n  b +=\n    \"FvEzktKKgLKSqWHQqrCNkT4nNG7tYDVNaQToamG2SBNBQFCgRAuctHzxqQeFCvaRyqjUHQ6K9N5\";\n  b +=\n    \"KskJdyJCsIMlFxGivzBWbAsk0KW2sIM60CbEdoAXBkkIWAIsfwnSVgw3MfySGKK0iaQBxBDSUD1\";\n  b +=\n    \"j1LQC8Iofy+MSVSJNijebkfxS2yGrTfuY+gBnggSOCLEXOS8YU/q495fXQLs6r77mTkPpiQAWVR\";\n  b +=\n    \"IeUf9FY1brjsifY6B/xecY6CXX4N9YvbDQgy7N4m5FKPQCRu1Q2qENIudLRh9iApprXR0U4TDsR\";\n  b +=\n    \"Gr9XcBn3sv/i9hbK601V6L2vHIR8iXQeT8KQfJ4xTiuupMz5SEgICgHvuqFyUp3CUgACoWwlF6q\";\n  b +=\n    \"dKE1xAMwYsBMSJ9hP7JfbcOw35i/1LJ9Zx6TSw94RhvkTJ/Djke/MnBXYhRMohaK8hphJtxQBBg\";\n  b +=\n    \"TEXIUReTXBo7f25gcOxIfPwJ1p07I5xzTvL+MgtAnUcBtHNrotf5w5QnjMqu5tlpxARM0JGmPae\";\n  b +=\n    \"HZIKM5IDchyuhvjDHt+xK/PvFAUtsWSZAaVR4u7AnfJ7/tF1UJEPc8F6lwQBdIafR6v2oLJICfB\";\n  b +=\n    \"nRHAhewlfidMa6volQcR0p87MhIBDBkz3mjlVXssFocALxeEwSXMd8mEaMhwth90zjpm+6xREfe\";\n  b +=\n    \"m+Y8tl9FRDBkY4cGSFDP/z2Iolul/2rlRqUXiAABwmcgExCK3jKcbvVw2oSu1NTUsyOHSwJYBtv\";\n  b +=\n    \"Ux38wDm4f/tWqBEvIoN5T6qxxNw3ckbbaEC8IAptp84uUbxuJx1KDGqcO2FdUtRawbLey9gTN0C\";\n  b +=\n    \"iNAqZh5DIVX7xxKzbAlMyy/AbgGeUNE7hRSBAPYJEDiqjzzlZ2zqYe4HMReQjELUbQu0Z1H/wmM\";\n  b +=\n    \"ir+okG7u6t4BeHYtlBLg98zDutW2J3BV0zoWT9EGMbItcOQUmlT9kdjfEd6N1eRt8bZiWGtg8pC\";\n  b +=\n    \"qfUZ9QlRziOI+O8bTvX+83vxmoiAhklfOTv7EWee/KCd7qaj1aqVi/FBBAyYUuAAf48D/Kdu2YA\";\n  b +=\n    \"TMzBRR2caqieNmtyJDej82AyAZf3ohLz9E3shEtzXwf5M+vRD4+pvSSg+JN4SorFP4nA2RnwAQh\";\n  b +=\n    \"IJpJwKkU8EZn/+9qYC9o9SRtmBHWGfseAvxrw+4pbW3R7TRB8X+DEHJOIodBXedG1PhH81DuzMk\";\n  b +=\n    \"ebj50IJjCtADBYS9p/0P+rpYRzigDMMYoMLU8S8vxmT22GuhCInAYH1PGZwVTBuYWCgTwIWYIQk\";\n  b +=\n    \"5cqt5O/GxO4biRvIQocKYwuRLX1pB0CJHZDpPfGxMaX7JrQduMuehETjQs8Wnm8DbvzE8Du5/sZ\";\n  b +=\n    \"SRpwnMJ13cPUCrhyGOUdMUizlp8aUwoieSckRVrnefGsjgDHJ3IC5EZNY/iNPCLoJtIo3OHF8z/\";\n  b +=\n    \"cYFtgPuG//05jdPfXINsS2jvw+V+Ovy+R00kY9EVojSB3X4WHEQQwRPPhsG9GFzw27Z0dqbR9wm\";\n  b +=\n    \"RMAefcCB2S94F99qMOF9JiUQeAQNQHhF32oIzwJ7D32HATYNPLZv/tQR4LkyF3pur6vrA3syz7U\";\n  b +=\n    \"cUAwAbZaybDIIYL8x7h/mwgE3ei+vmHLbQqyEBOf+NrO4ym3w//2hAWA2WaK5baJyvSKg6+M6QX\";\n  b +=\n    \"9k625EqbVF0T5qbC/VauWxdkk1dlyWkxHTLlQwxbwoijCMvy6b8qceCc4Lg8JBWznuNjxkb2pP5\";\n  b +=\n    \"UpDYCPItym1A0cHG3uT2VJaBT5IfNA7KMRCbYY03qKcFQXlAVKXWivpqDUtiOYSKFiJjjCLWZs9\";\n  b +=\n    \"88zLICUgf1P62Li85qoyoFdAuSHVHANsPKeWGv2o/8+cJ2R5wQS9k/g+e46s6onsqOSHQEuSjQG\";\n  b +=\n    \"MnBshIVtUwGDR8Ep36TyenN6L8ZdDVQKCwH+hP8n5As1rheCFIO9SIIk54T8VHNW94bfPrQnAJ1\";\n  b +=\n    \"LPyQuIGMmGTnNHNc9W9uqC08GW+MGIRYOZ4xF1AGm7XRzTHf+RYnfg6BI2FDBZoES5s7orYIDe5\";\n  b +=\n    \"SHwsaEY86EPLO3ChQqyBCEW4QiOwyis3qrEIUAy1JGngTG0XHo2WbdNtcFKek9XZMoI0Sgcmo4S\";\n  b +=\n    \"jMPJDU6x5xauIJ9NsSCyBzZLnEQbIZIOtG55jqjup1eN5Elp6ivVptqz/CgCoc2k0bex+drAkZA\";\n  b +=\n    \"GnYiR0WPMxycZ7KtVa3EQnM77Uo+PkaEyoGU+mGofI1oeH5/9j2gGOoDlOLAp5Tz8AKzZ3t+chp\";\n  b +=\n    \"qWz4RoRwmIkQDrvJ1hfJC0+9DKK4CLcAzDvaoyiJOXRRdZH4Ltm5JEQk9BzBzIBHA/cXmEd8UCm\";\n  b +=\n    \"pC5MO2CCnwXCA5M3lJf6cMxD/OAx5i4DKxEPz75oS+xZDnya2gwOICuaU0RDwK8aVm1Lu3ZVLXp\";\n  b +=\n    \"iAMA5ONMQgz0NBlZk+iAMibtg3r5ML/oSMuN/ukEAt95YAmQCKQIWIRucL8X5HnarR6kBIWSO4C\";\n  b +=\n    \"rQ+DQFJ2pfmtabgFA+rh2FyKyA1dGl1l9p4vQIckKpdTkHLS6gx2HZsfcJcEIRUgxkmErjZR52X\";\n  b +=\n    \"TFaGOyEqtH3JBJlHpflSYXiSuMe282lUzJZMamba1aH4+FxvIPZUKB/kc2CciBcbXmn5XuZAUoG\";\n  b +=\n    \"tJAqa0Id7NIvAoBbaYMpC+SHCdOaarikmlOIGFTZinzE3StQN6vRn1Slvzqgnp20BPmQDQAi6Ro\";\n  b +=\n    \"huAR+qDt7ESVyMbU0pcWI6IIWTf2H7nFNIXpaBckc7bZrSXsqOSbYQEM8DlDvmB2Q8zIwXxRAYI\";\n  b +=\n    \"OTYwWREhN5mH9D+BYY3SMQfCC2COI4d78mbz4P7lC6wJ3YDazEaKzQ0IZ7eYE3qPUNP8UjrWSwM\";\n  b +=\n    \"75CHsA8PmEgYQfWt/ZiEUhFHbYSoOx/UZu83cdrZLagOptW0PBVEAO9u/3ZzZR81Jl5K4jVyi7E\";\n  b +=\n    \"AsDEEe5fgOc2uUvIWpClxA1sLxJPKU54eN7vw2CB5nhAc0UgEc0gkdZ4Oa4a306tY0p2ADcMH80\";\n  b +=\n    \"HYC5euPCbbvMnuMEVTQWMMATH1fsMCOAHk5/t1mv73zuAxIgCICSImoAIF7vol0ca/p5pFgZ+VI\";\n  b +=\n    \"q8JPpRQhDicOE6EUjrzvm7zyh+aB3WYNrEEUmEMcIexwlUtV/Mic0V+3Ntaca4qDZ31Hqw0jH7g\";\n  b +=\n    \"eFpL7zaO7V9v0vuv0rj6mOTxWQVkNQC0T0KzjBRiEB/5j85C+ZGyK221oFDJOMRM4QCiI9OyIMh\";\n  b +=\n    \"mKB0zcy8RqragdBCr4LsKEcgJyy0+2rtqDW1ftp1tX7SHz8C6tICoWp1sjYKv9T8L0eI7kPhM0t\";\n  b +=\n    \"In9sDm+74yDTtYQStcD+AVSEXqB80gfqD93AwJiM1EBU46M+KNmrl+h51sXs0EClSszkhHBnmtz\";\n  b +=\n    \"8Zg5va8qb4Vi5jQqXBVjGxVS57kRsRnIkABlj5ukF8/EtsbaK4o1hoxNzwo3FNiWI+UZgW0peOQ\";\n  b +=\n    \"jG9s/M7NbE5/fD/d3GdlIeF7kCxEA/UQ/Nxf0K91TJj7FPqNYiDn1im5m67X3v0Bc6YuAwAklJj\";\n  b +=\n    \"9h9i2NVKs344z4R+JhLmuzsUmAKy9SIrVB3LXxk99Os0+ZTufgknzKsjQHYVMrPGxBbR66NkAXw\";\n  b +=\n    \"uHT5viet3KhZ3Zcn7pOJIHsRcKN3GfMsFvVOvAPmaY0yLmxcRXIFsgYUeQBVKvsrM/mZacequrg\";\n  b +=\n    \"SBf5RFKPBK7kQfhcK8FKvvIZcGMNoGpEKz4DxEjgSxpgH7DQ82afQ6NVMi5bSsDuGNAEdn6xVS/\";\n  b +=\n    \"85VbVesEc2bV5RbtnM8IIUBwfRPeAyBdNuxtTDI9ZNz3nfigjJ4woB/rt4pfMw9qBnjauxiJF7z\";\n  b +=\n    \"ok240cYPShm8KOgKi//C0gE9fBvpAgiAPmdXFIXjHd7uURQNxNJK4VeSIKkWAwmYjJV82TurH86\";\n  b +=\n    \"360Rhh281AeTxwppLIdLoSnJtFMfGSZjpsE6h3bjAjNaG8FR5LIQS71KcUe+hUg7O4Y2d50KU5E\";\n  b +=\n    \"hAviXIgDhD38675tEuypjEyRy4mwMXKd18zZfelBO4+iGYXrYLvA4jvAM/kgMdt+8BtAsf1scFZ\";\n  b +=\n    \"zU0GbCRIAMqoy7SOEiVQJbH5rztoa16BWroAjl4PUJXwXhYCb2Otmj2EG7cMLqgv731PUNHeErd\";\n  b +=\n    \"LFwxuUDZr8zhzdtUNOwqHbkjpSIKq8JADXsjdAVuqBy+8DXPjEhb3nOTikhEZMvNlLD0BKk66DY\";\n  b +=\n    \"PlUdoMI/d5c2NVGLPTC7goiNMzH0JaHDOAlJPEAPjC0zzz7rX725A/m0r4Fgsxraux/fLsIuZAS\";\n  b +=\n    \"pCvk+gAV8m3z8M7pRDunN4kRph6tLMj652EZRD6PQHRhykCw0fR6UPfVkQalkdRivYiAfjixk65\";\n  b +=\n    \"H3+k79fE8DoJdGAY8YCA1Be9uHTfVVbRnN+mObEKxABEcSAojxPbeA+zV5gakxbR5K3NNok69qe\";\n  b +=\n    \"3GpNjhTUtc+Ux2QsWbS8chAgXIZ8Efe4ENSj3OQTIAllz5B5P3zZO+kQZg//mj2kO5FsBmxCqTz\";\n  b +=\n    \"rqBENA2BcmWRSpGjZEPABl1RbTbpri7sROdSJW7hBAXQE/5aQFC+hMwelvdXlqd7qst5iTiHo5s\";\n  b +=\n    \"X/k9BjKSH5qdIkdipmKJssUoehQGoc0pUBGihoj+vI3H9ZdvZ1x/7QVaPBbZgUqNwCUO/dD7CLq\";\n  b +=\n    \"x1aqcNi0Okn4gbOLbvs8DwunftvFs/f3bma2PzWE63j3Gnc316iSLT/L4KWkRcFpWkd2ZyXdynk\";\n  b +=\n    \"ANCglIl4QEEVcKY/bptmYX/vEtsQv/NGu7MUzokwNgng7R34p0bY37PRCpENA9cZH0XMY+M7ci5\";\n  b +=\n    \"Ep5LvcSchXzLogrt2pbmYUoQYJ/buadsuPT4pQ1Z3n15CSmPZ1dHp/B4SmNtcBR4HvYj4j3r9Zq\";\n  b +=\n    \"reiAkQbCMk0rC0P9bBiTG/iOiLgtMUJfmKO7ER8SW7qNpO24vmNzlbfC/7fZU1LFTE5DqhoVksC\";\n  b +=\n    \"PyQAjArSYkS/Nzq7mCblL5/upFWEkEEB+XAFcBZLyPyZqv2nEClajRIt0a95UlRWOOQGVhIcqPO\";\n  b +=\n    \"e/ZtQ1/mj3rthBmzgwtNCLqB35buT5XwHf2N8op/bhTV0FNnGJJGa+7/pcuQ7ZX/d/UJvMYYWnV\";\n  b +=\n    \"ujHNptjuxeKMjr7geNSO/B4IIC4eYJsMWU3+0Zn2jtSLNvKHeNj5HARBRgQs3Q4a7GCPmjllmur\";\n  b +=\n    \"MchLJKBAewPHs8O1ltNTGss4n6jnREjZyMKQwiZlcp21rdhaD2EHM0SQD4Iyks4p1nH9bjlGYR0\";\n  b +=\n    \"bT1CZ7yAK0O3C1COfOmS9hbpwVW4ncDuR8t5RCSyYMm/jU62+oXdOcADSCmM+Fm4k/dOsiX2zp7\";\n  b +=\n    \"eZVyOY3IADqmFRQF3mnN57byW3faki9aMwoIjzM6yebOPx2Q06qUrk+Oo4dBH4OHTJmdYhfUoi1\";\n  b +=\n    \"jGFNZWujymwBl7geeysvswulcCl25EHcpqLvbOtWdVdcelxZtw+ZGmRWJ2ARZCnEuKL8BxrTnWB\";\n  b +=\n    \"y1tDNqNnf67+1s11tuN16KGwIwaoPkDKWx+hc63t4tMdYnYvZg3Os+we8HKcxlV6ANwiogDX1Ec\";\n  b +=\n    \"RPt/yetb60Ux8SgGWvq2izT0hXZtEF1j9NlZ5Uag4bOCHMIh/nriw/02o1QE+HcShMBS+519kfc\";\n  b +=\n    \"MMGS5FNjAVANdeKGF7XWz934od2FUnPQrhMRTywL6k/1OitAqE+whxAHvXdr//TacERdRXGZp5y\";\n  b +=\n    \"CiQQ/tSq65nU1n3QF1wGzCfQo6z1FfsKDZipJ6QGpehALgsZFMZBIyFl1kzOmWQVKcjAAFg+txG\";\n  b +=\n    \"zevqDGnqzI90wb0aFvAIhG075CBqg+RzuTW+D0kMlKuG1KH9IK6GgYdJAPwrEQ67op/1JbAsEeI\";\n  b +=\n    \"RQLiQnu9faY3p4egffe6PDxQsgo3N1WE57lVWNyfSJAcaEYWjkO0zn+LA5Vdb3ZwNEydNziXhZD\";\n  b +=\n    \"WYUu4wJ3K59HmE3Wus/iR6LQzBh12njnvDOKIhooxfa22rlLHXWd9Q8qCCc+DaYTfAfAJjcL3ld\";\n  b +=\n    \"4naYu8RlV6GklwspsWHBYTIYz6syA3Wgv7b9rrIHkIcEAA5p8ChBG6Egxutab2MUIsuieQyobVY\";\n  b +=\n    \"42DXR9AMcSXQFeb8wBrXo2azvdu0L3wQaz1PiXceQM1NVtBVlNchcf5ZlWAko7Ka6vObgP0WoQf\";\n  b +=\n    \"/HMFscrO1cKuta0cDiYIhJaIBwZJhm2IV94oi4d/yrbV8q3WW0S3+yi9iLP/P0d/VXbIqHRnSI+\";\n  b +=\n    \"uXzMs2NzIxqps0bjFyA+HCUX5fEmQoBpT3tm8K5K4IMcPAYEnpA7tEbv/WJu4Oa1zfQ2VqkCtsI\";\n  b +=\n    \"O0hddX5ZT6706rqeOCetqco/WwtUQh8BRPJvAOcCdf2Iy9kgFYoCjdYs7vMdd2jtrYQSwXAfnKY\";\n  b +=\n    \"HRIqD9eI3WV1EzbLaoV2CWA280VIAKX6IiKC3219czV94CNbug4DcsAwu8ca1ZUUkZjKalwHpA7\";\n  b +=\n    \"hS8aY9JHP77XGdt1jgMskNakTAtdAmesixTfL+6wxPSKFmijyo9DB2OXq6B3i/zAv13RH2PuTn2\";\n  b +=\n    \"mCFpxYaAP7YLNAZZQXP7Iq2vIw3m95XWGdeXHmZJWRvFadAFDDCIlsikgQUNg7hP3Y6k45kRwa5\";\n  b +=\n    \"gnhAz8okSc8wLcPWAd1mYkxOTfEiwR3JZBHkKNArvnJtpbtQg+4ZJcFLgo9ACT0oPVtBCn+9Nvu\";\n  b +=\n    \"9kPbXOZVixoI7ktgHFhkPwy08JhJx3YyC2tnFa24nUsaVZ6TqSdU6xhQcUKzTosfMeBzA8/3AGc\";\n  b +=\n    \"IAJBHLLvjRo0BNN3K6dbAngojhzrqXB0Ou+DRrajzmJK4WrUvyaF6j29FQz+zJnXcXTE8J8c8Jv\";\n  b +=\n    \"oz7XgEW0ebghBIktSRLiJqt/vuz63JvZBwdWxjnPq0IU/NXY86gFqQ58Lm4oHzhFVf/a2ak0Lq+\";\n  b +=\n    \"74kmKtkt9iNnrQW9GLh7RulkjbI9QKBxMaoiDB6yuprdD9OoNFBkthYBnbAJLDF6OmtIjgF5kEZ\";\n  b +=\n    \"OurIK2K7gGVdLJ+xgu6N9e1SLYOsRXyPYn1KMeLOsxbqFvEnECWUh7JPPRfbwAcw+7mt3Usuhjm\";\n  b +=\n    \"MbD+kgK0jyp63+psmASkdsscR57AWdkB+0e8WnAADLgahBGCTwSz8sv8tRFHgAmpxA8wD5NAX+t\";\n  b +=\n    \"0CcMiOQzmzHR56gcte7HcLoW07sMMd5V8jWOi+1P8WQgDrSIVdQCdIaL/c7xaUcg6kz4DhkHMnD\";\n  b +=\n    \"F/pfwuBjZVmhSHbpRSzV7eiBS/03VAKzBmmAftV/1sgNvAQkjhuxAC0gl/3uwUWRiD/04i5KhTA\";\n  b +=\n    \"c1/rdwvc4xgxTx3AEfrcdn/T7xYE7GSf2sILQEz2qfht/1uQkjqRAAEMMdcJ0Ov9bkEiO1KnmVA\";\n  b +=\n    \"R+II40e96xyyYKfdQZosAAUfOxBt9RmNuKCRgESZAEID/vDe3FidxjD2PKZ8Zj/IoJL/vldRp+q\";\n  b +=\n    \"Z1WK2kjskoor5SJwUowGH4ljWjHeUp8HM7HOazZ183wI8M2CKMoEFANX/4xqJBEAIzxx3qhhgjG\";\n  b +=\n    \"Ofb1hH9k1DzPvNz9EFyWtDkPvEFQth2ImC9Xbaxz+DiJOASMV9F5BIqQUogAX6n3y1wEE6JS5gH\";\n  b +=\n    \"zCqFht61XjF6ljASgbmQzLZng7tU/08oTPxPsyuULXRydkU1X1lfWdisXt+D4mbrkrNm5ol63vH\";\n  b +=\n    \"SynrWxmvHr2jN0wBYUIqQEdehQtiEvmfhaprN1vaWWAYDPULIdQMURohEf7SqujIowB5qygAY5z\";\n  b +=\n    \"1/4lS2IMv4HvAlDlNWfizft47bVp5s8QuYxwWjYcCQi13Xph/0p3euytOKGCJ2RCgJ0Z/6DCd2A\";\n  b +=\n    \"ifKlR37HmM6txrzPuzP6z3bc5TvncoprDIU/9latXVc7KScOkCkT7xsmuSS40k9hCmR0mU2UjKq\";\n  b +=\n    \"/Ms3RgZYMFtSlzIeugEP7b9aftdYuqOuOQBJkDpM57dyHYE/6mtFOwDqxGGzcxY5gUv+9o3H4HJ\";\n  b +=\n    \"huwHzfE6A6lP779bErnD2fJBJErxdK2RTXTanQjIycTAoSAhcBVrDNlNpnD62JvTNAJ1kDKrBQO\";\n  b +=\n    \"lhQMRmCj4w/sTaKm+5rlw2OoFEEobiOxLg0OWeF2IZ+p9a9V3YfgpxW/uxsGxtrTZ8qpMM8sPRq\";\n  b +=\n    \"C0OL0pkaFi3xIcghPcIW7DAoyx0uPsPqxsvB11JI8ZW/ZzwmYMRAa6Cg8CB8D/7UZcGJHAdrCxC\";\n  b +=\n    \"LrAj/mdWmdbrZLN1n1sHd7XSanlzNRnZpC1VTUoWzSswJbVDD/YPCF7MBxTyL2tOL/RdJ0FoI+8\";\n  b +=\n    \"qFaiWbvMHprHI9TgJXUBo0qcu+cJKEhPBUADycxmmJ7teKR2Xkdp0TsTTDmAbUSkkCQRlfhSif1\";\n  b +=\n    \"vTE3rLhDJ9T9a+N7Oa++AQ75KIEea4rlCHlnPypdVjcqJYGeX7jCseBaTk0GYI/8eaUJgYqQ92Z\";\n  b +=\n    \"pA6AsGwB2OIZCj/ax3TCyPRQas9YuSo9rj7sNxRKqBWsxQ2EtAzEEVCR6lc8FfW5G5b77oVfT5F\";\n  b +=\n    \"6PgOpQA+gHWY/bV1bP94na6CePXxDnEnXUIdGlHHc2RAkfQ2bYtObt4WjWzpYaRdOHf1hnNqCHJ\";\n  b +=\n    \"cJ2RKiyYxdllLyulywuYXphsAkdYGLloxFDwSjK9NzeyTk303hig3gEl2qaM8oCNKnHWpbRaPdk\";\n  b +=\n    \"rK7hohNTU21yf+lOo8PUC0wGAKlX6Nrk9txTq5nHiI+cJxONDOAJ2aGts+7LWGqLRlGg/GGj3lZ\";\n  b +=\n    \"qoOo49C6gLOEKelpnbtQSVgLhQaVxGo+Z/VM9r8nNQpLSCNEN/xlLvB6Sm72+OeW/P/qaRfMuJY\";\n  b +=\n    \"BgBbYXBGX1YdE8QwYEPGmXRh757Zl0rUBpZQHdEM3A30j5yVGtsVYia1wAml9aG2EWAv1+dURWw\";\n  b +=\n    \"DN8fOTs3pv3srFwUOszKQBGAbJF5AaZzRc1KTOmVMKUCmMRMcH6cdZwLQ6e6wEyJHBIKHKjvPud\";\n  b +=\n    \"u8V+elBideCIka+PzUAQVoquBnjTK2E8E8z+OwICS6ILUv8JNNytGCApguTWIVHMQEAa5YHR/tB\";\n  b +=\n    \"xG+MHV4n8KGRKOQiijA14TWogoH9CKKQPb1gaOK+EWpqh5T/LYz5AmlxrNdGXKYAx7gi1NH9rcr\";\n  b +=\n    \"QDHzvcmrImApXKTOKPV85vPwkm2+Jt8HxNaly2zfpixQ+BE2pycd5hEqLt3mHbwsNaTAfqAYmMu\";\n  b +=\n    \"3+Tuu2CZrRXEkXEFJpI7ZJu6V27ybV30j6CYC9gnscJCVHOkFwdWpqX3zEuwgogvPJ8KnXEUkqZ\";\n  b +=\n    \"Cua1Jb73fk+OpQCs/1EcgDVNJrU6g7tjidONRJZeC0PXW+giMJia5L9SFfre9KgFPbU4efg+wtr\";\n  b +=\n    \"0/xPmWf7OTn2S3d0ayGMjfCRg0iKkCs4v4NqeP6zVd2m/xygtY1eeosPMdBni0FRTemart9wTdN\";\n  b +=\n    \"26itM5yrY7SpLQHRRvQHqTk9JJ+drxZa8CM1Do9dPmdnD8kKnZEwMb67KnsTZ37oEJXaUdyU6tX\";\n  b +=\n    \"J1KWuOjgxAoopfBS6N6cO6Z0/bNVtqWhTbWMHGMNBAJKni7Ak3i2pWf3hwFqVrlrjqj3mIuCDgO\";\n  b +=\n    \"ggWyj25tbUwATSdR9uS32nsJg4mt6eOrg6T8YOqckC4ejKI2p2VqGW+qzWhwEOsF0ifeD1AOzpH\";\n  b +=\n    \"alxfcgSnGeCiNJKAqxgEoVCSPfO7mor9xJYQPi/gO1SZ6DQIASmCEeA2sSG1KT/p7nrirHrqqIJ\";\n  b +=\n    \"3BOCCD+IL34IHxiIZHN6GdkJTpEV4cQhTviBaHTqjKVpsT2AP5BM772F3hJ6eu+9J/Tee+8tdNj\";\n  b +=\n    \"73DfjN+N57903mUgoVjwa+dx33737nL3WPvus1bW0sHSUZNokIaQGVC9oAOipLmyOW0vDqXUEU/\";\n  b +=\n    \"g9USGawcSGZHpR88S+pT+/aA74H9zAxc3W0dJMflm1wrCMinBRGa+D1vKSRq4evjuf28ZrX3M9R\";\n  b +=\n    \"YoJBB5Wp6KikJd2WWeAwqps8ead4hCwlzV661mDWhXO6m9UqGfL0SfZw+oszeUDBlbzxrP7TBoT\";\n  b +=\n    \"DxRmJ9dWW+Cd7IpxMEswAPaAH2UuDPB4d2UzhvCSTyHHLIQTWTnF2FWjp7IH3hKZzswFx7nIV3d\";\n  b +=\n    \"5phFpanYo36vRw/OaZhwnXyAewBwcTHmTEuXp2qZs9NnZtr4KUYs2dgU9IrQK+rpGDqnPxKUdFw\";\n  b +=\n    \"NZz0nI8oxbNAy8vpkYNgzbrg5t16CjCEUVD0kZdZze0Ighg5dGWQNTgtLEUYHTinJj47op6+LtS\";\n  b +=\n    \"kalQCHnIIDc5Zu6vEFAxDzllBUHRsi8v7mxw7pvZ9ATqyerpwRlQgF1BfIOr9HdMnzoIjpg9YYC\";\n  b +=\n    \"T6UcmIyOvBgVxK3L7KMHsm5rxJpkt7aStOSoKiCVrEqgrrhsnVK3N885fGNuxUbMinyx9XknntP\";\n  b +=\n    \"r7dl+zlLywLZ5B6uhMxbth/gdzanrcH3v6Z8JlWF6ZCYjUzrpO5tnrrnCLoalsy2Ze1gGcQZSEz\";\n  b +=\n    \"xPd23gp9/d7Gi3k/o0peoxlZxGTXPlbPAqhEjRfVvcMwgK+mVDOUhLWaM9ojOBOevvbdSQ8J+d9\";\n  b +=\n    \"RAdVT8bUpFWmI4UcPDk72vOGL+U2v6wVEuVImbtIdOG7HB74f61Z+Jy115rBJF5tIKhxiFFXCof\";\n  b +=\n    \"GGMmRsWMS9FbVBLJxj/YrKMVp7+v3JiUs3OKFiUTd+GzzZaVxY/2vFGfRDo3WOCMeIzClmw/14w\";\n  b +=\n    \"l20fREApQlE5SUvf5dd1+v9AA4KQAuQVWJYHFti80T+4DDz6lyarDg7WDhfmq6fPF5hG3eGkfWZ\";\n  b +=\n    \"1S0wUtfYArFyPwkJP+0hKcWpODrOGyVDlcCjEwT4Pm3qbw5eZZo7DwMgxYtG051FEKSNgreFYQq\";\n  b +=\n    \"OIrzakDLzFC/LQ6Gysto0YBHsvsV5sL/v+cqc6ti7gtDOIDzRRUdvxrzYs7P7cNkL+f1jQ7yiA0\";\n  b +=\n    \"PZcAqdPXm/OO3NoXMRjky5I6fb/vw7X9e/d952srwe+zWoPf9sKvdzRuZFwCsbPRoBNqRL2c8I2\";\n  b +=\n    \"HH1Pf3MCY+tYGXuvbzZNWsLKe1n0L+b7TgYoCGvGsoF9DRMvp73ZF6XjQVkc8BKgCsN/wvSEF+L\";\n  b +=\n    \"VbN6rSFcx9yHkmCICLkn+/OW4lftk/jc7Yvfbu5AvA5gSRHwyL9AdNVxs8P3dgcq7nFTRdlMMmq\";\n  b +=\n    \"mi0ipQG+sPRD0k7jeL0gPSSgrjKPxoLryttneZBs+isiFL9eKzRWqdA0XOhSB5skT9p+LDM3hPX\";\n  b +=\n    \"FI4DzYuaJmsZZT8dityXwTcQNWEKvNekBDpE/KxxQ1M+gErkYHuruZmwSuQSjC8WXWZ+PmIs1tb\";\n  b +=\n    \"KjJ/aV3fusgPkKAH5aK8s+0XTcdu2oCEXMNMobALsY385Du4PPCYTOTryCGrZr5ptK2ubvfbtvn\";\n  b +=\n    \"k1MbF3/7K8ONrIUYxemwMQRvHrRoweP02FKgb7q3gyArL7b5qjYf5O4Qb6b8e4eYgpLgqaWxfAK\";\n  b +=\n    \"yX+bpyxBRtXIBojBYYX2e/HeWjoIq+BWpukvMziD0sZv6uBUO1gdypbDlMZUDst8Y/NCeOYIdUS\";\n  b +=\n    \"DAojc9RXzqxk+admW3cnpLZxKGgAVY4WG7KRf+4ab9wmmWhgykK4ep//0nUg0CKULJTJQs4UnP2\";\n  b +=\n    \"1c4QbyO5YMc8MdSPUQ43AAuAI5sFLLhCcSdiIr0n/bfQaB8+UI+OQkUYIDfb35qhWnvgf7Q8LB/\";\n  b +=\n    \"7ZPAZ+mJ1/Qf5X/RWwiH8DVz5rteBujxwtX1laF2KMElAijd7l/3QaBBzClRgzjS5kof/brPPwD\";\n  b +=\n    \"NN9NSnGYkySe2BLhjEtD5JtqxrWgIohaz6p/g1TAY2rcpXqrQoaJqjAjHSOekhG8iXkjMN2l3dj\";\n  b +=\n    \"r1pccYp/2B4GFr0BAgfnnRdAVV5Kth3W57Dr5FMmT9t18tk7T5mYmHzu9p24BQH/qD2nLJyzOkY\";\n  b +=\n    \"lpKaAyF5G9GEHFE/fMbl719lnnnRK/0AVvPZJKoOmJTGKl5NxhXhPz1O1tjhVa4taJVSs1BINOe\";\n  b +=\n    \"MryIA9fMwZswtV3QUoDbYjGKsluifxVxK+xPOnerqYO3buOnHV940AfnyhXheNxbNXkc1rFQdgt\";\n  b +=\n    \"Ziq3ciFZwBLtLic4fGG9GoyWvZilaR9CSxxhv5XArVs7WvI4/oUF15L3LDcOrO4D7h1acvBTujs\";\n  b +=\n    \"AEAkA6uHzfZ1ZFhpbBbzct9gVQBMFRMkl7CcxNeTYUkdqGHVGJ/GLrgks/NUJzwK+QaihwyrxdR\";\n  b +=\n    \"2oDRFKBmLl5aiF84bCR2QJ9ocgSAgpxg5YFMnfeEsvImYAUNOww3GmlnarUavgkgsMw+5AV6UeT\";\n  b +=\n    \"NZvzcWj3gSsEBAJucTfQuRQ2cU2ljWDbWEBrWUQj41nKq3kqesjkZYDIJwMhQDaIdmLd9G1jR+Q\";\n  b +=\n    \"N/3euBqOQqTNA5wtubO+eBoejtRa52JbV9GTVOLe2th0wmaguIQLxGF9t9B1oGyi5A0AwykKPgP\";\n  b +=\n    \"E/Wd5PFt/Paqhu9aOyL6ejRRMrteSChOjUHOZ6PQ540cuFCVhKYpmu8BRhI5aclpeTc5fkXluS1\";\n  b +=\n    \"U75kr870O5lPrj7N53z4/1Tv2zoDuMAqTpiSe30NO6HKBuu/ck+WP3FpdhIY78Jar95LtXa4Q/Z\";\n  b +=\n    \"KMWnW6ArSpOMQI5Tyo+D7SzMxP8fcT1s+ZgG1MTGyfw2yMhqSTe6pQW8oMDyJQQH4yafYB0nEbR\";\n  b +=\n    \"ZdkEi8wRgkfovgg6UjQtGNasYKNqUGLqD9EnrYy5A6ZE4kCIZlDgJcKIRE+3PUj4HUwEWCe8ZAp\";\n  b +=\n    \"ROpHun6pDK8T2BSHzMWz4OWjHZ4gzT4mB6lXGFhDRTq/wxh41sYoB58hDQx2F5BN7U7J3nncG4N\";\n  b +=\n    \"RYb46WkadUAsHEDWn8KDjx8gTerS6BbE1Oj5Otg5bOTOsRgvYyDxdd9Gn4YEqKxmKuHE0XP8Esc\";\n  b +=\n    \"MW+zx7aKlPQO69RPX/mBgr6pPEjJhoyx2wqmCkALCFecaT/RQZW7dzb65+PtMuocJHQNG2UOCbf\";\n  b +=\n    \"JrsHPdStTkXOHi7wkPOVtZzbFT11n+G7FjP5arDBnyxDP9RgDxWyQvJ7nGvhNN6b8bK+/L9BcD0\";\n  b +=\n    \"gIE5TdzKEvxF5Mx1KZ76/bk9tltbOyDAbfCy2ipLky4e/xkuwAo42eP1VBjqk4G1N0abXb6kwxz\";\n  b +=\n    \"IhTk8WsFxO09Idik5eWAKGSRgUY+QRYWOB5nlAM8nXTbkMgO86OrhpOAZPAcPk9JLl8LlpFstbL\";\n  b +=\n    \"Umea3RYeUzApWMnCmf/BXkwSOH98A8gqXJjaipIojWTqWgM4pN6ivJvkeqF+ZQ4XQa1sUQrC+GF\";\n  b +=\n    \"UCVIV21ga/kavLsIe1Cc/vmZ5ZUkHp71a1JJ/y/FjvRoAWb8jVXVrN8zRICXeNqreYHLOQWrUAK\";\n  b +=\n    \"yyVnVcS1Q4Ys9oYwZiPkWFkcD1Lq6wgbOGRTK/U+nSzDIxAOSG32sFpcT3YOP942WD6uFtNNkcF\";\n  b +=\n    \"4CxAdvZTYDUNewaYhpxfrMTVdJMBezSUsj4KzG8m6dedZzMxKmXVWTFjLbiLPX49MyKpTaZuWGp\";\n  b +=\n    \"hcMkx67wGuQ3oU4uYOD14IEZymCgigioanW4gYPKYVYcKJpZ1JmRaULAUwZW7tClSYT6Xu36L+C\";\n  b +=\n    \"Lyi28i2Ee1vh85r1K+oqOVC+CioU5br2zvdLqMR+yRdQmmCENkdDy+6pHAZGAAsKQBEjIp3dv32\";\n  b +=\n    \"NgQmRYqwIkUG6Puu9YcS0I9EEZZEaj3Q6Lu73kMSaCZnAcFxEVT294z5BnxS6PgUjDaomiXuJTs\";\n  b +=\n    \"GvwGsyg+kUYxxZgHxAhSCPOjFfV2/gilaOMjB1AgbC4/3kz3Db6GD7dRa21bHVwbuabC42R0inv\";\n  b +=\n    \"Z4gMwP/qwBosnzC3uqaHL9e+sgEcOlT4xe2uRjRBsXmqQ+4qGDBw8e8ViA2GkxwgUfdfSMn5taB\";\n  b +=\n    \"BRzZHMmIOojjumh75w2hwOPJoiy41PZFs230M1ze6am988cOPbpqEtsAd2ZYwHG8s1UwZ9nHPVC\";\n  b += \"PwP//Ci6hbkt9BhMfpt7dAZ+x7cY9z9z2wK4\";\n\n  var input = pako.inflate(base64ToUint8Array(b));\n  return init(input);\n}\n","/**\n * @typedef {Object} LITChain\n * @property {string} vmType - Either EVM for an Ethereum compatible chain or SVM for a Solana compatible chain\n * @property {string} name - The human readable name of the chain\n */\n\n/**\n * @typedef {Object} LITEVMChain\n * @property {string} contractAddress - The address of the token contract for the optional predeployed ERC1155 contract.  Only present on EVM chains.\n * @property {string} chainId - The chain ID of the chain that this token contract is deployed on.  Used for EVM chains.\n * @property {string} name - The human readable name of the chain\n */\n\n/**\n * @typedef {Object} LITSVMChain\n * @property {string} name - The human readable name of the chain\n */\n\n/**\n * @typedef {Object} LITCosmosChain\n * @property {string} name - The human readable name of the chain\n */\n\n/**\n * EVM Chains supported by the LIT protocol.  Each chain includes an optional pre-deployed token contract that you may use for minting LITs.  These are ERC1155 contracts that let you mint any quantity of a given token.  Use the chain name as a key in this object.\n * @constant\n * @type {LITEVMChain}\n * @default\n */\nexport const LIT_CHAINS = {\n  ethereum: {\n    contractAddress: \"0xA54F7579fFb3F98bd8649fF02813F575f9b3d353\",\n    chainId: 1,\n    name: \"Ethereum\",\n    symbol: \"ETH\",\n    decimals: 18,\n    type: \"ERC1155\",\n    rpcUrls: [\n      \"https://eth-mainnet.alchemyapi.io/v2/EuGnkVlzVoEkzdg0lpCarhm8YHOxWVxE\",\n    ],\n    blockExplorerUrls: [\"https://etherscan.io\"],\n    vmType: \"EVM\",\n  },\n  polygon: {\n    contractAddress: \"0x7C7757a9675f06F3BE4618bB68732c4aB25D2e88\",\n    chainId: 137,\n    name: \"Polygon\",\n    symbol: \"MATIC\",\n    decimals: 18,\n    rpcUrls: [\"https://polygon-rpc.com\"],\n    blockExplorerUrls: [\"https://explorer.matic.network\"],\n    type: \"ERC1155\",\n    vmType: \"EVM\",\n  },\n  fantom: {\n    contractAddress: \"0x5bD3Fe8Ab542f0AaBF7552FAAf376Fd8Aa9b3869\",\n    chainId: 250,\n    name: \"Fantom\",\n    symbol: \"FTM\",\n    decimals: 18,\n    rpcUrls: [\"https://rpcapi.fantom.network\"],\n    blockExplorerUrls: [\"https://ftmscan.com\"],\n    type: \"ERC1155\",\n    vmType: \"EVM\",\n  },\n  xdai: {\n    contractAddress: \"0xDFc2Fd83dFfD0Dafb216F412aB3B18f2777406aF\",\n    chainId: 100,\n    name: \"xDai\",\n    symbol: \"xDai\",\n    decimals: 18,\n    rpcUrls: [\"https://rpc.gnosischain.com\"],\n    blockExplorerUrls: [\" https://blockscout.com/xdai/mainnet\"],\n    type: \"ERC1155\",\n    vmType: \"EVM\",\n  },\n  bsc: {\n    contractAddress: \"0xc716950e5DEae248160109F562e1C9bF8E0CA25B\",\n    chainId: 56,\n    name: \"Binance Smart Chain\",\n    symbol: \"BNB\",\n    decimals: 18,\n    rpcUrls: [\"https://bsc-dataseed.binance.org/\"],\n    blockExplorerUrls: [\" https://bscscan.com/\"],\n    type: \"ERC1155\",\n    vmType: \"EVM\",\n  },\n  arbitrum: {\n    contractAddress: \"0xc716950e5DEae248160109F562e1C9bF8E0CA25B\",\n    chainId: 42161,\n    name: \"Arbitrum\",\n    symbol: \"AETH\",\n    decimals: 18,\n    type: \"ERC1155\",\n    rpcUrls: [\"https://arb1.arbitrum.io/rpc\"],\n    blockExplorerUrls: [\"https://arbiscan.io/\"],\n    vmType: \"EVM\",\n  },\n  avalanche: {\n    contractAddress: \"0xBB118507E802D17ECDD4343797066dDc13Cde7C6\",\n    chainId: 43114,\n    name: \"Avalanche\",\n    symbol: \"AVAX\",\n    decimals: 18,\n    type: \"ERC1155\",\n    rpcUrls: [\"https://api.avax.network/ext/bc/C/rpc\"],\n    blockExplorerUrls: [\"https://snowtrace.io/\"],\n    vmType: \"EVM\",\n  },\n  fuji: {\n    contractAddress: \"0xc716950e5DEae248160109F562e1C9bF8E0CA25B\",\n    chainId: 43113,\n    name: \"Avalanche FUJI Testnet\",\n    symbol: \"AVAX\",\n    decimals: 18,\n    type: \"ERC1155\",\n    rpcUrls: [\"https://api.avax-test.network/ext/bc/C/rpc\"],\n    blockExplorerUrls: [\"https://testnet.snowtrace.io/\"],\n    vmType: \"EVM\",\n  },\n  harmony: {\n    contractAddress: \"0xBB118507E802D17ECDD4343797066dDc13Cde7C6\",\n    chainId: 1666600000,\n    name: \"Harmony\",\n    symbol: \"ONE\",\n    decimals: 18,\n    type: \"ERC1155\",\n    rpcUrls: [\"https://api.harmony.one\"],\n    blockExplorerUrls: [\"https://explorer.harmony.one/\"],\n    vmType: \"EVM\",\n  },\n  kovan: {\n    contractAddress: \"0x9dB60Db3Dd9311861D87D33B0463AaD9fB4bb0E6\",\n    chainId: 42,\n    name: \"Kovan\",\n    symbol: \"ETH\",\n    decimals: 18,\n    rpcUrls: [\"https://kovan.infura.io/v3/ddf1ca3700f34497bca2bf03607fde38\"],\n    blockExplorerUrls: [\"https://kovan.etherscan.io\"],\n    type: \"ERC1155\",\n    vmType: \"EVM\",\n  },\n  mumbai: {\n    contractAddress: \"0xc716950e5DEae248160109F562e1C9bF8E0CA25B\",\n    chainId: 80001,\n    name: \"Mumbai\",\n    symbol: \"MATIC\",\n    decimals: 18,\n    rpcUrls: [\n      \"https://rpc-mumbai.maticvigil.com/v1/96bf5fa6e03d272fbd09de48d03927b95633726c\",\n    ],\n    blockExplorerUrls: [\"https://mumbai.polygonscan.com\"],\n    type: \"ERC1155\",\n    vmType: \"EVM\",\n  },\n  goerli: {\n    contractAddress: \"0xc716950e5DEae248160109F562e1C9bF8E0CA25B\",\n    chainId: 5,\n    name: \"Goerli\",\n    symbol: \"ETH\",\n    decimals: 18,\n    rpcUrls: [\"https://goerli.infura.io/v3/96dffb3d8c084dec952c61bd6230af34\"],\n    blockExplorerUrls: [\"https://goerli.etherscan.io\"],\n    type: \"ERC1155\",\n    vmType: \"EVM\",\n  },\n  ropsten: {\n    contractAddress: \"0x61544f0AE85f8fed6Eb315c406644eb58e15A1E7\",\n    chainId: 3,\n    name: \"Ropsten\",\n    symbol: \"ETH\",\n    decimals: 18,\n    rpcUrls: [\"https://ropsten.infura.io/v3/96dffb3d8c084dec952c61bd6230af34\"],\n    blockExplorerUrls: [\"https://ropsten.etherscan.io\"],\n    type: \"ERC1155\",\n    vmType: \"EVM\",\n  },\n  rinkeby: {\n    contractAddress: \"0xc716950e5deae248160109f562e1c9bf8e0ca25b\",\n    chainId: 4,\n    name: \"Rinkeby\",\n    symbol: \"ETH\",\n    decimals: 18,\n    rpcUrls: [\"https://rinkeby.infura.io/v3/96dffb3d8c084dec952c61bd6230af34\"],\n    blockExplorerUrls: [\"https://rinkeby.etherscan.io\"],\n    type: \"ERC1155\",\n    vmType: \"EVM\",\n  },\n  cronos: {\n    contractAddress: \"0xc716950e5DEae248160109F562e1C9bF8E0CA25B\",\n    chainId: 25,\n    name: \"Cronos\",\n    symbol: \"CRO\",\n    decimals: 18,\n    rpcUrls: [\"https://evm-cronos.org\"],\n    blockExplorerUrls: [\"https://cronos.org/explorer/\"],\n    type: \"ERC1155\",\n    vmType: \"EVM\",\n  },\n  optimism: {\n    contractAddress: \"0xbF68B4c9aCbed79278465007f20a08Fa045281E0\",\n    chainId: 10,\n    name: \"Optimism\",\n    symbol: \"ETH\",\n    decimals: 18,\n    rpcUrls: [\"https://mainnet.optimism.io\"],\n    blockExplorerUrls: [\"https://optimistic.etherscan.io\"],\n    type: \"ERC1155\",\n    vmType: \"EVM\",\n  },\n  celo: {\n    contractAddress: \"0xBB118507E802D17ECDD4343797066dDc13Cde7C6\",\n    chainId: 42220,\n    name: \"Celo\",\n    symbol: \"CELO\",\n    decimals: 18,\n    rpcUrls: [\"https://forno.celo.org\"],\n    blockExplorerUrls: [\"https://explorer.celo.org\"],\n    type: \"ERC1155\",\n    vmType: \"EVM\",\n  },\n  aurora: {\n    contractAddress: null,\n    chainId: 1313161554,\n    name: \"Aurora\",\n    symbol: \"ETH\",\n    decimals: 18,\n    rpcUrls: [\"https://mainnet.aurora.dev\"],\n    blockExplorerUrls: [\"https://aurorascan.dev\"],\n    type: null,\n    vmType: \"EVM\",\n  },\n  eluvio: {\n    contractAddress: null,\n    chainId: 955305,\n    name: \"Eluvio\",\n    symbol: \"ELV\",\n    decimals: 18,\n    rpcUrls: [\"https://host-76-74-28-226.contentfabric.io/eth\"],\n    blockExplorerUrls: [\"https://explorer.eluv.io\"],\n    type: null,\n    vmType: \"EVM\",\n  },\n  alfajores: {\n    contractAddress: null,\n    chainId: 44787,\n    name: \"Alfajores\",\n    symbol: \"CELO\",\n    decimals: 18,\n    rpcUrls: [\"https://alfajores-forno.celo-testnet.org\"],\n    blockExplorerUrls: [\"https://alfajores-blockscout.celo-testnet.org\"],\n    type: null,\n    vmType: \"EVM\",\n  },\n  xdc: {\n    contractAddress: null,\n    chainId: 50,\n    name: \"XDC Blockchain\",\n    symbol: \"XDC\",\n    decimals: 18,\n    rpcUrls: [\"https://rpc.xinfin.network\"],\n    blockExplorerUrls: [\"https://explorer.xinfin.network\"],\n    type: null,\n    vmType: \"EVM\",\n  },\n  evmos: {\n    contractAddress: null,\n    chainId: 9001,\n    name: \"EVMOS\",\n    symbol: \"EVMOS\",\n    decimals: 18,\n    rpcUrls: [\"https://eth.bd.evmos.org:8545\"],\n    blockExplorerUrls: [\"https://evm.evmos.org\"],\n    type: null,\n    vmType: \"EVM\",\n  },\n  evmosTestnet: {\n    contractAddress: null,\n    chainId: 9000,\n    name: \"EVMOS Testnet\",\n    symbol: \"EVMOS\",\n    decimals: 18,\n    rpcUrls: [\"https://eth.bd.evmos.dev:8545\"],\n    blockExplorerUrls: [\"https://evm.evmos.dev\"],\n    type: null,\n    vmType: \"EVM\",\n  },\n};\n\n/**\n * Solana Chains supported by the LIT protocol.  Use the chain name as a key in this object.\n * @constant\n * @type {LITSVMChain}\n * @default\n */\nexport const LIT_SVM_CHAINS = {\n  solana: {\n    name: \"Solana\",\n    symbol: \"SOL\",\n    decimals: 9,\n    rpcUrls: [\"https://api.mainnet-beta.solana.com\"],\n    blockExplorerUrls: [\"https://explorer.solana.com/\"],\n    vmType: \"SVM\",\n  },\n  solanaDevnet: {\n    name: \"Solana Devnet\",\n    symbol: \"SOL\",\n    decimals: 9,\n    rpcUrls: [\"https://api.devnet.solana.com\"],\n    blockExplorerUrls: [\"https://explorer.solana.com/\"],\n    vmType: \"SVM\",\n  },\n  solanaTestnet: {\n    name: \"Solana Testnet\",\n    symbol: \"SOL\",\n    decimals: 9,\n    rpcUrls: [\"https://api.testnet.solana.com\"],\n    blockExplorerUrls: [\"https://explorer.solana.com/\"],\n    vmType: \"SVM\",\n  },\n};\n\n/**\n * Cosmos Chains supported by the LIT protocol.  Use the chain name as a key in this object.\n * @constant\n * @type {LITCosmosChain}\n * @default\n */\nexport const LIT_COSMOS_CHAINS = {\n  cosmos: {\n    name: \"Cosmos\",\n    symbol: \"ATOM\",\n    decimals: 6,\n    chainId: \"cosmoshub-4\",\n    rpcUrls: [\"https://lcd-cosmoshub.keplr.app\"],\n    blockExplorerUrls: [\"https://atomscan.com/\"],\n    vmType: \"CVM\",\n  },\n  kyve: {\n    name: \"Kyve\",\n    symbol: \"KYVE\",\n    decimals: 6,\n    chainId: \"korellia\",\n    rpcUrls: [\"https://api.korellia.kyve.network\"],\n    blockExplorerUrls: [\"https://explorer.kyve.network/\"],\n    vmType: \"CVM\",\n  },\n  evmosCosmos: {\n    name: \"EVMOS Cosmos\",\n    symbol: \"EVMOS\",\n    decimals: 18,\n    chainId: \"evmos_9001-2\",\n    rpcUrls: [\"https://rest.bd.evmos.org:1317\"],\n    blockExplorerUrls: [\"https://evmos.bigdipper.live\"],\n    vmType: \"CVM\",\n  },\n  evmosCosmosTestnet: {\n    name: \"Evmos Cosmos Testnet\",\n    symbol: \"EVMOS\",\n    decimals: 18,\n    chainId: \"evmos_9000-4\",\n    rpcUrls: [\"https://rest.bd.evmos.dev:1317\"],\n    blockExplorerUrls: [\"https://testnet.bigdipper.live\"],\n    vmType: \"CVM\",\n  },\n};\n\n/**\n * All Chains supported by the LIT protocol.  Use the chain name as a key in this object.\n * @constant\n * @type {LITChain}\n * @default\n */\nexport const ALL_LIT_CHAINS = {\n  ...LIT_CHAINS,\n  ...LIT_SVM_CHAINS,\n  ...LIT_COSMOS_CHAINS,\n};\n\nexport const NETWORK_PUB_KEY =\n  \"9971e835a1fe1a4d78e381eebbe0ddc84fde5119169db816900de796d10187f3c53d65c1202ac083d099a517f34a9b62\";\n\nexport const LIT_NETWORKS = {\n  jalapeno: [\n    \"https://node2.litgateway.com:7370\",\n    \"https://node2.litgateway.com:7371\",\n    \"https://node2.litgateway.com:7372\",\n    \"https://node2.litgateway.com:7373\",\n    \"https://node2.litgateway.com:7374\",\n    \"https://node2.litgateway.com:7375\",\n    \"https://node2.litgateway.com:7376\",\n    \"https://node2.litgateway.com:7377\",\n    \"https://node2.litgateway.com:7378\",\n    \"https://node2.litgateway.com:7379\",\n  ],\n  serrano: [\n    \"https://serrano.litgateway.com:7370\",\n    \"https://serrano.litgateway.com:7371\",\n    \"https://serrano.litgateway.com:7372\",\n    \"https://serrano.litgateway.com:7373\",\n    \"https://serrano.litgateway.com:7374\",\n    \"https://serrano.litgateway.com:7375\",\n    \"https://serrano.litgateway.com:7376\",\n    \"https://serrano.litgateway.com:7377\",\n    \"https://serrano.litgateway.com:7378\",\n    \"https://serrano.litgateway.com:7379\",\n  ],\n  localhost: [\n    \"http://localhost:7470\",\n    \"http://localhost:7471\",\n    \"http://localhost:7472\",\n    \"http://localhost:7473\",\n    \"http://localhost:7474\",\n    \"http://localhost:7475\",\n    \"http://localhost:7476\",\n    \"http://localhost:7477\",\n    \"http://localhost:7478\",\n    \"http://localhost:7479\",\n  ],\n  mumbai: [\n    \"https://polygon-mumbai.litgateway.com:7370\",\n    \"https://polygon-mumbai.litgateway.com:7371\",\n    \"https://polygon-mumbai.litgateway.com:7372\",\n    \"https://polygon-mumbai.litgateway.com:7373\",\n    \"https://polygon-mumbai.litgateway.com:7374\",\n    \"https://polygon-mumbai.litgateway.com:7375\",\n    \"https://polygon-mumbai.litgateway.com:7376\",\n    \"https://polygon-mumbai.litgateway.com:7377\",\n    \"https://polygon-mumbai.litgateway.com:7378\",\n    \"https://polygon-mumbai.litgateway.com:7379\",\n  ],\n};\n\n// you can either pass a \"chain\" param to lit functions, which it uses to tell which network your sig came from.\n// or, you can pass a authSig that has and of these keys in it to tell which network your sig came from.\nexport const LIT_AUTH_SIG_CHAIN_KEYS = [\"ethereum\", \"solana\", \"cosmos\", \"kyve\"];\n","import { LIT_AUTH_SIG_CHAIN_KEYS } from \"./constants.js\";\n\nexport const printError = (e) => {\n  console.log(\"Error Stack\", e.stack);\n  console.log(\"Error Name\", e.name);\n  console.log(\"Error Message\", e.message);\n};\n\nexport const mostCommonString = (arr) => {\n  return arr\n    .sort(\n      (a, b) =>\n        arr.filter((v) => v === a).length - arr.filter((v) => v === b).length\n    )\n    .pop();\n};\n\nexport const throwError = ({ message, name, errorCode }) => {\n  throw new (function () {\n    this.message = message;\n    this.name = name;\n    this.errorCode = errorCode;\n  })();\n};\n\nexport const log = (...args) => {\n  if (\n    globalThis &&\n    globalThis.litConfig &&\n    globalThis.litConfig.debug === false\n  ) {\n    return;\n  }\n  args.unshift(\"[Lit-JS-SDK]\");\n  console.log(...args);\n};\n\n/**\n *\n * Get the type of a variable, could be an object instance type.\n * eg Uint8Array instance should return 'Uint8Array` as string\n * or simply a `string` or `int` type\n *\n * @param { * } value\n * @returns { String } type\n */\nexport const getVarType = (value) => {\n  return Object.prototype.toString.call(value).slice(8, -1);\n  // // if it's an object\n  // if (value instanceof Object) {\n  //   if (value.constructor.name == \"Object\") {\n  //     return \"Object\";\n  //   }\n  //   return value.constructor.name;\n  // }\n\n  // // if it's other type, like string and int\n  // return typeof value;\n};\n\n/**\n *\n *  Check if the given value is the given type\n *  If not, throw `invalidParamType` error\n *\n * @param { * } value\n * @param { Array<String> } allowedTypes\n * @param { string } paramName\n * @param { string } functionName\n * @param { boolean } throwOnError\n * @returns { Boolean } true/false\n */\nexport const checkType = ({\n  value,\n  allowedTypes,\n  paramName,\n  functionName,\n  throwOnError = true,\n}) => {\n  if (!allowedTypes.includes(getVarType(value))) {\n    let message = `Expecting ${allowedTypes.join(\n      \" or \"\n    )} type for parameter named ${paramName} in Lit-JS-SDK function ${functionName}(), but received \"${getVarType(\n      value\n    )}\" type instead. value: ${\n      value instanceof Object ? JSON.stringify(value) : value\n    }`;\n\n    if (throwOnError) {\n      throwError({\n        message,\n        name: \"invalidParamType\",\n        errorCode: \"invalid_param_type\",\n      });\n    }\n    return false;\n  }\n\n  return true;\n};\n\nexport const checkIfAuthSigRequiresChainParam = (\n  authSig,\n  chain,\n  functionName\n) => {\n  for (const key of LIT_AUTH_SIG_CHAIN_KEYS) {\n    if (key in authSig) {\n      return true;\n    }\n  }\n\n  // if we're here, then we need the chain param\n  if (\n    !checkType({\n      value: chain,\n      allowedTypes: [\"String\"],\n      paramName: \"chain\",\n      functionName,\n    })\n  )\n    return false;\n\n  return true;\n};\n\n/**\n * Convert types before sending to Lit Actions as jsParams.\n * @param {Object} params.jsParams The jsParams you are sending\n * @returns {Object} The jsParams object, but with any incompatible types automatically converted\n */\nexport const convertLitActionsParams = (jsParams) => {\n  const convertedParams = {};\n  for (const [key, value] of Object.entries(jsParams)) {\n    const varType = getVarType(value);\n    if (varType === \"Uint8Array\") {\n      convertedParams[key] = Array.from(value);\n    } else if (varType === \"Object\") {\n      // recurse over any objects\n      convertedParams[key] = convertLitActionsParams(value);\n    } else {\n      convertedParams[key] = value;\n    }\n  }\n  return convertedParams;\n};\n","import pako from \"pako\";\n\n// Contants\n\nconst skLen = 32; // bytes\nconst pkLen = 48; // bytes\nconst sigLen = 96; // bytes\nconst maxMsgLen = 1049600; // bytes\nconst maxCtLen = 1049600; // bytes\nconst decryptionShareLen = 48; // bytes\n\n// the number of bytes in a row derived from a BivarPoly\n// which varies depending on the threshold.\nconst row_sizes_by_threshold = [\n  40, // threshold 0\n  72, // threshold 1\n  104, // threshold 2\n  136, // threshold 3\n  168, // threshold 4\n  200, // threshold 5\n  232, // threshold 6\n  264, // threshold 7\n  296, // threshold 8\n  328, // threshold 9\n  360, // threshold 10\n];\n\n// the number of bytes in a commitment derived from a BivarPoly\n// which varies depending on the threshold.\nconst commitment_sizes_by_threshold = [\n  56, // threshold 0\n  104, // threshold 1\n  152, // threshold 2\n  200, // threshold 3\n  248, // threshold 4\n  296, // threshold 5\n  344, // threshold 6\n  392, // threshold 7\n  440, // threshold 8\n  488, // threshold 9\n  536, // threshold 10\n];\n\n// the number of bytes in the master secret key (Poly)\n// which varies depending on the threshold.\nconst poly_sizes_by_threshold = [\n  40, // threshold 0\n  72, // threshold 1\n  104, // threshold 2\n  136, // threshold 3\n  168, // threshold 4\n  200, // threshold 5\n  232, // threshold 6\n  264, // threshold 7\n  296, // threshold 8\n  328, // threshold 9\n  360, // threshold 10\n];\n\n// Encoding conversions\n\n// modified from https://stackoverflow.com/a/11058858\nfunction asciiToUint8Array(a) {\n  let b = new Uint8Array(a.length);\n  for (let i = 0; i < a.length; i++) {\n    b[i] = a.charCodeAt(i);\n  }\n  return b;\n}\n// https://stackoverflow.com/a/19102224\n// TODO resolve RangeError possibility here, see SO comments\nfunction uint8ArrayToAscii(a) {\n  return String.fromCharCode.apply(null, a);\n}\n// https://stackoverflow.com/a/50868276\nfunction hexToUint8Array(h) {\n  if (h.length == 0) {\n    return new Uint8Array();\n  }\n  return new Uint8Array(h.match(/.{1,2}/g).map((byte) => parseInt(byte, 16)));\n}\nfunction uint8ArrayToHex(a) {\n  return a.reduce((str, byte) => str + byte.toString(16).padStart(2, \"0\"), \"\");\n}\nfunction uint8ArrayToByteStr(a) {\n  return \"[\" + a.join(\", \") + \"]\";\n}\n\n//https://gist.github.com/enepomnyaschih/72c423f727d395eeaa09697058238727\n/*\nMIT License\nCopyright (c) 2020 Egor Nepomnyaschih\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n*/\n\n/*\n// This constant can also be computed with the following algorithm:\nconst base64abc = [],\n    A = \"A\".charCodeAt(0),\n    a = \"a\".charCodeAt(0),\n    n = \"0\".charCodeAt(0);\nfor (let i = 0; i < 26; ++i) {\n    base64abc.push(String.fromCharCode(A + i));\n}\nfor (let i = 0; i < 26; ++i) {\n    base64abc.push(String.fromCharCode(a + i));\n}\nfor (let i = 0; i < 10; ++i) {\n    base64abc.push(String.fromCharCode(n + i));\n}\nbase64abc.push(\"+\");\nbase64abc.push(\"/\");\n*/\nconst base64abc = [\n  \"A\",\n  \"B\",\n  \"C\",\n  \"D\",\n  \"E\",\n  \"F\",\n  \"G\",\n  \"H\",\n  \"I\",\n  \"J\",\n  \"K\",\n  \"L\",\n  \"M\",\n  \"N\",\n  \"O\",\n  \"P\",\n  \"Q\",\n  \"R\",\n  \"S\",\n  \"T\",\n  \"U\",\n  \"V\",\n  \"W\",\n  \"X\",\n  \"Y\",\n  \"Z\",\n  \"a\",\n  \"b\",\n  \"c\",\n  \"d\",\n  \"e\",\n  \"f\",\n  \"g\",\n  \"h\",\n  \"i\",\n  \"j\",\n  \"k\",\n  \"l\",\n  \"m\",\n  \"n\",\n  \"o\",\n  \"p\",\n  \"q\",\n  \"r\",\n  \"s\",\n  \"t\",\n  \"u\",\n  \"v\",\n  \"w\",\n  \"x\",\n  \"y\",\n  \"z\",\n  \"0\",\n  \"1\",\n  \"2\",\n  \"3\",\n  \"4\",\n  \"5\",\n  \"6\",\n  \"7\",\n  \"8\",\n  \"9\",\n  \"+\",\n  \"/\",\n];\n\n/*\n// This constant can also be computed with the following algorithm:\nconst l = 256, base64codes = new Uint8Array(l);\nfor (let i = 0; i < l; ++i) {\n    base64codes[i] = 255; // invalid character\n}\nbase64abc.forEach((char, index) => {\n    base64codes[char.charCodeAt(0)] = index;\n});\nbase64codes[\"=\".charCodeAt(0)] = 0; // ignored anyway, so we just need to prevent an error\n*/\nconst base64codes = [\n  255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,\n  255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,\n  255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 62, 255, 255,\n  255, 63, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 255, 255, 255, 0, 255, 255,\n  255, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n  21, 22, 23, 24, 25, 255, 255, 255, 255, 255, 255, 26, 27, 28, 29, 30, 31, 32,\n  33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51,\n];\n\nfunction getBase64Code(charCode) {\n  if (charCode >= base64codes.length) {\n    throw new Error(\"Unable to parse base64 string.\");\n  }\n  const code = base64codes[charCode];\n  if (code === 255) {\n    throw new Error(\"Unable to parse base64 string.\");\n  }\n  return code;\n}\n\nexport function uint8ArrayToBase64(bytes) {\n  let result = \"\",\n    i,\n    l = bytes.length;\n  for (i = 2; i < l; i += 3) {\n    result += base64abc[bytes[i - 2] >> 2];\n    result += base64abc[((bytes[i - 2] & 0x03) << 4) | (bytes[i - 1] >> 4)];\n    result += base64abc[((bytes[i - 1] & 0x0f) << 2) | (bytes[i] >> 6)];\n    result += base64abc[bytes[i] & 0x3f];\n  }\n  if (i === l + 1) {\n    // 1 octet yet to write\n    result += base64abc[bytes[i - 2] >> 2];\n    result += base64abc[(bytes[i - 2] & 0x03) << 4];\n    result += \"==\";\n  }\n  if (i === l) {\n    // 2 octets yet to write\n    result += base64abc[bytes[i - 2] >> 2];\n    result += base64abc[((bytes[i - 2] & 0x03) << 4) | (bytes[i - 1] >> 4)];\n    result += base64abc[(bytes[i - 1] & 0x0f) << 2];\n    result += \"=\";\n  }\n  return result;\n}\n\nexport function base64ToUint8Array(str) {\n  if (str.length % 4 !== 0) {\n    throw new Error(\"Unable to parse base64 string.\");\n  }\n  const index = str.indexOf(\"=\");\n  if (index !== -1 && index < str.length - 2) {\n    throw new Error(\"Unable to parse base64 string.\");\n  }\n  let missingOctets = str.endsWith(\"==\") ? 2 : str.endsWith(\"=\") ? 1 : 0,\n    n = str.length,\n    result = new Uint8Array(3 * (n / 4)),\n    buffer;\n  for (let i = 0, j = 0; i < n; i += 4, j += 3) {\n    buffer =\n      (getBase64Code(str.charCodeAt(i)) << 18) |\n      (getBase64Code(str.charCodeAt(i + 1)) << 12) |\n      (getBase64Code(str.charCodeAt(i + 2)) << 6) |\n      getBase64Code(str.charCodeAt(i + 3));\n    result[j] = buffer >> 16;\n    result[j + 1] = (buffer >> 8) & 0xff;\n    result[j + 2] = buffer & 0xff;\n  }\n  return result.subarray(0, result.length - missingOctets);\n}\n\n// export function base64encode(str, encoder = new TextEncoder()) {\n// \treturn bytesToBase64(encoder.encode(str));\n// }\n\n// export function base64decode(str, decoder = new TextDecoder()) {\n// \treturn decoder.decode(base64ToBytes(str));\n// }\n\n// https://stackoverflow.com/a/12713326\n// function uint8ArrayToBase64(a) {\n//     return btoa(String.fromCharCode.apply(null, a));\n// }\n// function base64ToUint8Array(b) {\n//     return new Uint8Array(atob(b).split(\"\").map(function(c) {\n//             return c.charCodeAt(0);\n//     }));\n// }\n\n// threshold_crypto wasm calls. Since they operate on single bytes at a time\n// it's handy to have helpers to do the required looping.\n\nlet isWasming = false;\nexport const wasmBlsSdkHelpers = new (function () {\n  // s is secret key unit8array\n  this.sk_bytes_to_pk_bytes = function (s) {\n    isWasming = true;\n    const pkBytes = [];\n    try {\n      // set sk bytes\n      for (let i = 0; i < s.length; i++) {\n        globalThis.wasmExports.set_sk_byte(i, s[i]);\n      }\n      // convert into pk bytes\n      globalThis.wasmExports.derive_pk_from_sk();\n      // read pk bytes\n      for (let i = 0; i < pkLen; i++) {\n        const pkByte = globalThis.wasmExports.get_pk_byte(i);\n        pkBytes.push(pkByte);\n      }\n    } catch (e) {\n      isWasming = false;\n      throw \"Failed to generate\";\n    }\n    isWasming = false;\n    return pkBytes;\n  };\n\n  // s is secret key uint8array\n  // m is message uint8array\n  this.sign_msg = function (s, m) {\n    isWasming = true;\n    const sigBytes = [];\n    try {\n      // set secret key bytes\n      for (let i = 0; i < s.length; i++) {\n        globalThis.wasmExports.set_sk_byte(i, s[i]);\n      }\n      // set message bytes\n      for (let i = 0; i < m.length; i++) {\n        globalThis.wasmExports.set_msg_byte(i, m[i]);\n      }\n      // sign message\n      globalThis.wasmExports.sign_msg(m.length);\n      // get signature bytes\n      for (let i = 0; i < sigLen; i++) {\n        const sigByte = globalThis.wasmExports.get_sig_byte(i);\n        sigBytes.push(sigByte);\n      }\n    } catch (e) {\n      console.log(\"error signing in bls-sdk.js:\");\n      console.log(e);\n      isWasming = false;\n    }\n    isWasming = false;\n    return Uint8Array.from(sigBytes);\n  };\n\n  // p is public key uint8array\n  // s is signature uint8array\n  // m is message uint8array\n  this.verify = function (p, s, m) {\n    isWasming = true;\n    let verified = false;\n    try {\n      // set public key bytes\n      for (let i = 0; i < p.length; i++) {\n        globalThis.wasmExports.set_pk_byte(i, p[i]);\n      }\n      // set signature bytes\n      for (let i = 0; i < s.length; i++) {\n        globalThis.wasmExports.set_sig_byte(i, s[i]);\n      }\n      // set message bytes\n      for (let i = 0; i < m.length; i++) {\n        globalThis.wasmExports.set_msg_byte(i, m[i]);\n      }\n      verified = globalThis.wasmExports.verify(m.length);\n    } catch (e) {\n      console.log(\"error verifying sig in bls-sdk.js:\");\n      console.log(e);\n      isWasming = false;\n    }\n    isWasming = false;\n    return verified;\n  };\n\n  this.set_rng_values = function () {\n    // Warning if no globalThis.crypto available\n    if (!globalThis.crypto) {\n      const msg =\n        \"Secure randomness not available in this browser, output is insecure.\";\n      alert(msg);\n      console.log(msg);\n      return;\n    }\n    const RNG_VALUES_SIZE = globalThis.wasmExports.get_rng_values_size();\n    const rngValues = new Uint32Array(RNG_VALUES_SIZE);\n    globalThis.crypto.getRandomValues(rngValues);\n    for (let i = 0; i < rngValues.length; i++) {\n      globalThis.wasmExports.set_rng_value(i, rngValues[i]);\n    }\n  };\n\n  // p is public key uint8array\n  // m is message uint8array\n  this.encrypt = function (p, m) {\n    isWasming = true;\n    const ctBytes = [];\n    try {\n      wasmBlsSdkHelpers.set_rng_values();\n      // set public key bytes\n      for (let i = 0; i < p.length; i++) {\n        globalThis.wasmExports.set_pk_byte(i, p[i]);\n      }\n      // set message bytes\n      for (let i = 0; i < m.length; i++) {\n        globalThis.wasmExports.set_msg_byte(i, m[i]);\n      }\n      // generate strong random u64 used by encrypt\n      // encrypt the message\n      const ctSize = globalThis.wasmExports.encrypt(m.length);\n      // get ciphertext bytes\n      for (let i = 0; i < ctSize; i++) {\n        const ctByte = globalThis.wasmExports.get_ct_byte(i);\n        ctBytes.push(ctByte);\n      }\n    } catch (e) {\n      console.log(\"error encrypting in bls-sdk.js:\");\n      console.log(e);\n      isWasming = false;\n    }\n    isWasming = false;\n    return Uint8Array.from(ctBytes);\n  };\n\n  // s is secret key uint8array\n  // c is message uint8array\n  this.decrypt = function (s, c) {\n    isWasming = true;\n    const msgBytes = [];\n    try {\n      // set secret key bytes\n      for (let i = 0; i < s.length; i++) {\n        globalThis.wasmExports.set_sk_byte(i, s[i]);\n      }\n      // set ciphertext bytes\n      for (let i = 0; i < c.length; i++) {\n        globalThis.wasmExports.set_ct_byte(i, c[i]);\n      }\n      const msgSize = globalThis.wasmExports.decrypt(c.length);\n      // get message bytes\n      for (let i = 0; i < msgSize; i++) {\n        const msgByte = globalThis.wasmExports.get_msg_byte(i);\n        msgBytes.push(msgByte);\n      }\n    } catch (e) {\n      console.log(\"error decrypting in bls-sdk.js:\");\n      console.log(e);\n      isWasming = false;\n    }\n    isWasming = false;\n    return Uint8Array.from(msgBytes);\n  };\n\n  this.generate_poly = function (threshold) {\n    wasmBlsSdkHelpers.set_rng_values();\n    const polySize = poly_sizes_by_threshold[threshold];\n    globalThis.wasmExports.generate_poly(threshold);\n    const polyBytes = [];\n    for (let i = 0; i < polySize; i++) {\n      const polyByte = globalThis.wasmExports.get_poly_byte(i);\n      polyBytes.push(polyByte);\n    }\n    return polyBytes;\n  };\n\n  this.get_msk_bytes = function () {\n    const mskBytes = [];\n    for (let i = 0; i < skLen; i++) {\n      const mskByte = globalThis.wasmExports.get_msk_byte(i);\n      mskBytes.push(mskByte);\n    }\n    return mskBytes;\n  };\n\n  this.get_mpk_bytes = function () {\n    const mpkBytes = [];\n    for (let i = 0; i < pkLen; i++) {\n      const mpkByte = globalThis.wasmExports.get_mpk_byte(i);\n      mpkBytes.push(mpkByte);\n    }\n    return mpkBytes;\n  };\n\n  this.get_mc_bytes = function (threshold) {\n    const mcBytes = [];\n    const mcSize = commitment_sizes_by_threshold[threshold];\n    for (let i = 0; i < mcSize; i++) {\n      const mcByte = globalThis.wasmExports.get_mc_byte(i);\n      mcBytes.push(mcByte);\n    }\n    return mcBytes;\n  };\n\n  this.set_mc_bytes = function (mcBytes) {\n    // set master commitment in wasm\n    for (let i = 0; i < mcBytes.length; i++) {\n      const v = mcBytes[i];\n      globalThis.wasmExports.set_mc_byte(i, v);\n    }\n  };\n\n  this.get_skshare = function () {\n    const skshareBytes = [];\n    for (let i = 0; i < skLen; i++) {\n      const skshareByte = globalThis.wasmExports.get_skshare_byte(i);\n      skshareBytes.push(skshareByte);\n    }\n    return skshareBytes;\n  };\n\n  this.get_pkshare = function () {\n    const pkshareBytes = [];\n    for (let i = 0; i < pkLen; i++) {\n      const pkshareByte = globalThis.wasmExports.get_pkshare_byte(i);\n      pkshareBytes.push(pkshareByte);\n    }\n    return pkshareBytes;\n  };\n\n  this.combine_signatures = function (mcBytes, sigshares) {\n    // set master commitment in wasm\n    wasmBlsSdkHelpers.set_mc_bytes(mcBytes);\n    // set the signature shares\n    for (let shareIndex = 0; shareIndex < sigshares.length; shareIndex++) {\n      const share = sigshares[shareIndex];\n      const sigHex = share.shareHex;\n      const sigBytes = hexToUint8Array(sigHex);\n      const sigIndex = share.shareIndex;\n      for (let byteIndex = 0; byteIndex < sigBytes.length; byteIndex++) {\n        const sigByte = sigBytes[byteIndex];\n        // NB shareIndex is used instead of sigIndex so we can interate\n        // over both\n        // SHARE_INDEXES[i]\n        // and\n        // SIGNATURE_SHARE_BYTES[i*96:(i+1)*96]\n        globalThis.wasmExports.set_signature_share_byte(\n          byteIndex,\n          shareIndex,\n          sigByte\n        );\n        globalThis.wasmExports.set_share_indexes(shareIndex, sigIndex);\n      }\n    }\n    // combine the signatures\n    globalThis.wasmExports.combine_signature_shares(\n      sigshares.length,\n      mcBytes.length\n    );\n    // read the combined signature\n    const sigBytes = [];\n    for (let i = 0; i < sigLen; i++) {\n      const sigByte = globalThis.wasmExports.get_sig_byte(i);\n      sigBytes.push(sigByte);\n    }\n    return Uint8Array.from(sigBytes);\n  };\n\n  // s is secret key share bytes\n  // ct is ciphertext bytes\n  // uiShareIndex is the index of the share as it appears in the UI\n  // derivedShareIndex is the index of the share when derived from the poly\n  this.create_decryption_share = function (\n    s,\n    uiShareIndex,\n    derivedShareIndex,\n    ct\n  ) {\n    // set ct bytes\n    for (let i = 0; i < ct.length; i++) {\n      globalThis.wasmExports.set_ct_byte(i, ct[i]);\n    }\n    // set secret key share\n    for (let i = 0; i < s.length; i++) {\n      globalThis.wasmExports.set_sk_byte(i, s[i]);\n    }\n    // create decryption share\n    const dshareSize = globalThis.wasmExports.create_decryption_share(\n      uiShareIndex,\n      ct.length\n    );\n    // set derivedShareIndex\n    globalThis.wasmExports.set_share_indexes(uiShareIndex, derivedShareIndex);\n    // read decryption share\n    const dshareBytes = [];\n    for (let i = 0; i < decryptionShareLen; i++) {\n      const dshareByte = globalThis.wasmExports.get_decryption_shares_byte(\n        i,\n        uiShareIndex\n      );\n      dshareBytes.push(dshareByte);\n    }\n    return Uint8Array.from(dshareBytes);\n  };\n\n  // Assumes master commitment is already set.\n  // Assumes create_decryption_share is already called for all shares,\n  // Which means ciphertext is already set\n  // and decryption shares are already set\n  // and share_indexes is already set\n  this.combine_decryption_shares = function (totalShares, mcSize, ctSize) {\n    // combine decryption shares\n    const msgSize = globalThis.wasmExports.combine_decryption_shares(\n      totalShares,\n      mcSize,\n      ctSize\n    );\n    // read msg\n    const msgBytes = [];\n    for (let i = 0; i < msgSize; i++) {\n      const msgByte = globalThis.wasmExports.get_msg_byte(i);\n      msgBytes.push(msgByte);\n    }\n    return Uint8Array.from(msgBytes);\n  };\n})();\n\nlet wasm;\n\nlet cachedTextDecoder = new TextDecoder(\"utf-8\", {\n  ignoreBOM: true,\n  fatal: true,\n});\n\ncachedTextDecoder.decode();\n\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n  if (\n    cachegetUint8Memory0 === null ||\n    cachegetUint8Memory0.buffer !== wasm.memory.buffer\n  ) {\n    cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n  }\n  return cachegetUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n  return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n/**\n * @private\n * @returns {number}\n */\nexport function get_rng_values_size() {\n  var ret = wasm.get_rng_values_size();\n  return ret >>> 0;\n}\n\n/**\n * @private\n * @param {number} i\n * @param {number} v\n */\nexport function set_rng_value(i, v) {\n  wasm.set_rng_value(i, v);\n}\n\n/**\n * @private\n * @param {number} i\n * @param {number} v\n */\nexport function set_sk_byte(i, v) {\n  wasm.set_sk_byte(i, v);\n}\n\n/**\n * @private\n * @param {number} i\n * @returns {number}\n */\nexport function get_sk_byte(i) {\n  var ret = wasm.get_sk_byte(i);\n  return ret;\n}\n\n/**\n * @private\n * @param {number} i\n * @param {number} v\n */\nexport function set_pk_byte(i, v) {\n  wasm.set_pk_byte(i, v);\n}\n\n/**\n * @private\n * @param {number} i\n * @returns {number}\n */\nexport function get_pk_byte(i) {\n  var ret = wasm.get_pk_byte(i);\n  return ret;\n}\n\n/**\n * @private\n * @param {number} i\n * @param {number} v\n */\nexport function set_sig_byte(i, v) {\n  wasm.set_sig_byte(i, v);\n}\n\n/**\n * @private\n * @param {number} i\n * @returns {number}\n */\nexport function get_sig_byte(i) {\n  var ret = wasm.get_sig_byte(i);\n  return ret;\n}\n\n/**\n * @private\n * @param {number} i\n * @param {number} v\n */\nexport function set_msg_byte(i, v) {\n  wasm.set_msg_byte(i, v);\n}\n\n/**\n * @private\n * @param {number} i\n * @returns {number}\n */\nexport function get_msg_byte(i) {\n  var ret = wasm.get_msg_byte(i);\n  return ret;\n}\n\n/**\n * @private\n * @param {number} i\n * @param {number} v\n */\nexport function set_ct_byte(i, v) {\n  wasm.set_ct_byte(i, v);\n}\n\n/**\n * @private\n * @param {number} i\n * @returns {number}\n */\nexport function get_ct_byte(i) {\n  var ret = wasm.get_ct_byte(i);\n  return ret;\n}\n\n/**\n * @private\n * @returns {number}\n */\nexport function get_rng_next_count() {\n  var ret = wasm.get_rng_next_count();\n  return ret >>> 0;\n}\n\n/**\n * @private\n * @param {number} i\n * @param {number} v\n */\nexport function set_poly_byte(i, v) {\n  wasm.set_poly_byte(i, v);\n}\n\n/**\n * @private\n * @param {number} i\n * @returns {number}\n */\nexport function get_poly_byte(i) {\n  var ret = wasm.get_poly_byte(i);\n  return ret;\n}\n\n/**\n * @private\n * @param {number} i\n * @param {number} v\n */\nexport function set_msk_byte(i, v) {\n  wasm.set_msk_byte(i, v);\n}\n\n/**\n * @private\n * @param {number} i\n * @returns {number}\n */\nexport function get_msk_byte(i) {\n  var ret = wasm.get_msk_byte(i);\n  return ret;\n}\n\n/**\n * @private\n * @param {number} i\n * @param {number} v\n */\nexport function set_mpk_byte(i, v) {\n  wasm.set_mpk_byte(i, v);\n}\n\n/**\n * @private\n * @param {number} i\n * @returns {number}\n */\nexport function get_mpk_byte(i) {\n  var ret = wasm.get_mpk_byte(i);\n  return ret;\n}\n\n/**\n * @private\n * @param {number} i\n * @param {number} v\n */\nexport function set_mc_byte(i, v) {\n  wasm.set_mc_byte(i, v);\n}\n\n/**\n * @private\n * @param {number} i\n * @returns {number}\n */\nexport function get_mc_byte(i) {\n  var ret = wasm.get_mc_byte(i);\n  return ret;\n}\n\n/**\n * @private\n * @param {number} i\n * @param {number} v\n */\nexport function set_skshare_byte(i, v) {\n  wasm.set_skshare_byte(i, v);\n}\n\n/**\n * @private\n * @param {number} i\n * @returns {number}\n */\nexport function get_skshare_byte(i) {\n  var ret = wasm.get_skshare_byte(i);\n  return ret;\n}\n\n/**\n * @private\n * @param {number} i\n * @param {number} v\n */\nexport function set_pkshare_byte(i, v) {\n  wasm.set_pkshare_byte(i, v);\n}\n\n/**\n * @private\n * @param {number} i\n * @returns {number}\n */\nexport function get_pkshare_byte(i) {\n  var ret = wasm.get_pkshare_byte(i);\n  return ret;\n}\n\n/**\n * @private\n * @param {number} i\n * @param {number} from_node\n * @param {number} to_node\n * @param {number} v\n */\nexport function set_bivar_row_byte(i, from_node, to_node, v) {\n  wasm.set_bivar_row_byte(i, from_node, to_node, v);\n}\n\n/**\n * @private\n * @param {number} i\n * @param {number} from_node\n * @param {number} to_node\n * @returns {number}\n */\nexport function get_bivar_row_byte(i, from_node, to_node) {\n  var ret = wasm.get_bivar_row_byte(i, from_node, to_node);\n  return ret;\n}\n\n/**\n * @private\n * @param {number} i\n * @param {number} from_node\n * @param {number} v\n */\nexport function set_bivar_commitments_byte(i, from_node, v) {\n  wasm.set_bivar_commitments_byte(i, from_node, v);\n}\n\n/**\n * @private\n * @param {number} i\n * @param {number} from_node\n * @returns {number}\n */\nexport function get_bivar_commitments_byte(i, from_node) {\n  var ret = wasm.get_bivar_commitments_byte(i, from_node);\n  return ret;\n}\n\n/**\n * @private\n * @param {number} i\n * @param {number} node_index\n * @param {number} v\n */\nexport function set_bivar_sks_byte(i, node_index, v) {\n  wasm.set_bivar_sks_byte(i, node_index, v);\n}\n\n/**\n * @private\n * @param {number} i\n * @param {number} node_index\n * @returns {number}\n */\nexport function get_bivar_sks_byte(i, node_index) {\n  var ret = wasm.get_bivar_sks_byte(i, node_index);\n  return ret;\n}\n\n/**\n * @private\n * @param {number} i\n * @param {number} node_index\n * @param {number} v\n */\nexport function set_bivar_pks_byte(i, node_index, v) {\n  wasm.set_bivar_pks_byte(i, node_index, v);\n}\n\n/**\n * @private\n * @param {number} i\n * @param {number} node_index\n * @returns {number}\n */\nexport function get_bivar_pks_byte(i, node_index) {\n  var ret = wasm.get_bivar_pks_byte(i, node_index);\n  return ret;\n}\n\n/**\n * @private\n * @param {number} i\n * @param {number} sig_index\n * @param {number} v\n */\nexport function set_signature_share_byte(i, sig_index, v) {\n  wasm.set_signature_share_byte(i, sig_index, v);\n}\n\n/**\n * @private\n * @param {number} i\n * @param {number} sig_index\n * @returns {number}\n */\nexport function get_signature_share_byte(i, sig_index) {\n  var ret = wasm.get_signature_share_byte(i, sig_index);\n  return ret;\n}\n\n/**\n * @private\n * @param {number} i\n * @param {number} v\n */\nexport function set_share_indexes(i, v) {\n  wasm.set_share_indexes(i, v);\n}\n\n/**\n * @private\n * @param {number} i\n * @returns {number}\n */\nexport function get_share_indexes(i) {\n  var ret = wasm.get_share_indexes(i);\n  return ret >>> 0;\n}\n\n/**\n * @private\n * @param {number} i\n * @param {number} share_index\n * @param {number} v\n */\nexport function set_decryption_shares_byte(i, share_index, v) {\n  wasm.set_decryption_shares_byte(i, share_index, v);\n}\n\n/**\n * @private\n * @param {number} i\n * @param {number} share_index\n * @returns {number}\n */\nexport function get_decryption_shares_byte(i, share_index) {\n  var ret = wasm.get_decryption_shares_byte(i, share_index);\n  return ret;\n}\n\n/**\n * @private\n */\nexport function derive_pk_from_sk() {\n  wasm.derive_pk_from_sk();\n}\n\n/**\n * @private\n * @param {number} msg_size\n */\nexport function sign_msg(msg_size) {\n  wasm.sign_msg(msg_size);\n}\n\n/**\n * @private\n * @param {number} msg_size\n * @returns {boolean}\n */\nexport function verify(msg_size) {\n  var ret = wasm.verify(msg_size);\n  return ret !== 0;\n}\n\n/**\n * @private\n * @param {number} msg_size\n * @returns {number}\n */\nexport function encrypt(msg_size) {\n  var ret = wasm.encrypt(msg_size);\n  return ret >>> 0;\n}\n\n/**\n * @private\n * @param {number} ct_size\n * @returns {number}\n */\nexport function decrypt(ct_size) {\n  var ret = wasm.decrypt(ct_size);\n  return ret >>> 0;\n}\n\n/**\n * @private\n * @param {number} threshold\n */\nexport function generate_poly(threshold) {\n  wasm.generate_poly(threshold);\n}\n\n/**\n * @private\n * @param {number} poly_size\n * @returns {number}\n */\nexport function get_poly_degree(poly_size) {\n  var ret = wasm.get_poly_degree(poly_size);\n  return ret >>> 0;\n}\n\n/**\n * @private\n * @param {number} mc_size\n * @returns {number}\n */\nexport function get_mc_degree(mc_size) {\n  var ret = wasm.get_mc_degree(mc_size);\n  return ret >>> 0;\n}\n\n/**\n * @private\n * @param {number} poly_size\n */\nexport function derive_master_key(poly_size) {\n  wasm.derive_master_key(poly_size);\n}\n\n/**\n * @private\n * @param {number} i\n * @param {number} poly_size\n */\nexport function derive_key_share(i, poly_size) {\n  wasm.derive_key_share(i, poly_size);\n}\n\n/**\n * @private\n * @param {number} threshold\n * @param {number} total_nodes\n */\nexport function generate_bivars(threshold, total_nodes) {\n  wasm.generate_bivars(threshold, total_nodes);\n}\n\n/**\n * @private\n * @param {number} total_signatures\n * @param {number} commitment_size\n */\nexport function combine_signature_shares(total_signatures, commitment_size) {\n  wasm.combine_signature_shares(total_signatures, commitment_size);\n}\n\n/**\n * @private\n * @param {number} share_index\n * @param {number} ct_size\n * @returns {number}\n */\nexport function create_decryption_share(share_index, ct_size) {\n  var ret = wasm.create_decryption_share(share_index, ct_size);\n  return ret >>> 0;\n}\n\n/**\n * @private\n * @param {number} total_decryption_shares\n * @param {number} commitment_size\n * @param {number} ct_size\n * @returns {number}\n */\nexport function combine_decryption_shares(\n  total_decryption_shares,\n  commitment_size,\n  ct_size\n) {\n  var ret = wasm.combine_decryption_shares(\n    total_decryption_shares,\n    commitment_size,\n    ct_size\n  );\n  return ret >>> 0;\n}\n\nasync function load(module, imports) {\n  if (typeof Response === \"function\" && module instanceof Response) {\n    if (typeof WebAssembly.instantiateStreaming === \"function\") {\n      try {\n        return await WebAssembly.instantiateStreaming(module, imports);\n      } catch (e) {\n        if (module.headers.get(\"Content-Type\") != \"application/wasm\") {\n          console.warn(\n            \"`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\n\",\n            e\n          );\n        } else {\n          throw e;\n        }\n      }\n    }\n\n    const bytes = await module.arrayBuffer();\n    return await WebAssembly.instantiate(bytes, imports);\n  } else {\n    const instance = await WebAssembly.instantiate(module, imports);\n\n    if (instance instanceof WebAssembly.Instance) {\n      return { instance, module };\n    } else {\n      return instance;\n    }\n  }\n}\n\nasync function init(input) {\n  const imports = {};\n  imports.wbg = {};\n  imports.wbg.__wbindgen_throw = function (arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n  };\n\n  const { instance, module } = await load(await input, imports);\n\n  wasm = instance.exports;\n  init.__wbindgen_wasm_module = module;\n\n  return wasm;\n}\n\nexport default init;\n\nexport async function initWasmBlsSdk() {\n  var b = \"\";\n\n  b +=\n    \"eNrsvQuAVVd1MHzOPs/7mnvnAQzvc29IMmBMgMCAeRAuCRBCIjGJGl8lBCaE4f2Iku+fwKhUSYJ\";\n  b +=\n    \"1rNRiy9dOK/1DW6Kj0n70a1onSiut2M6vUamldVSqWGm/UdP+9PvQfOt1ztnn3jsPkhg1XpK5Z+\";\n  b +=\n    \"+1H2fvtdZee62z11nHWLNzs2kYhnlYXfmA2rvXeMDai7+QNPc+YELKxAQC4WLvpUJnL1+haM8DB\";\n  b +=\n    \"sDdvQLx9oYpqgpFhvFAam/4L64KKX9vVNkJYZm9e/XKXpyMO8Eh7tnDQ9wTwvcgBKrviTp8TK5d\";\n  b +=\n    \"PJ09OKTHeGRd0gnPrItn1sUz3oOwPXujSe9B0B7ValrvenB9YfXqdz24Ycu69R1bVu96eMfWdxm\";\n  b +=\n    \"GdcH/V18BAg3Dsw3851mWhRg1bMszTLPJNV0H4aZpKgfylmE6BaPFzOTNloxrKNdzlelBqWsaWc\";\n  b +=\n    \"O0XFMZ+bRrmgY0U56pLEsp17A8zzUd01YqayosyzuuF0AGurZNw80aruEow5aGUHW6MqBLKHJMw\";\n  b +=\n    \"3JdVykzbbqW4Ziu4dquwkE5puPaOZfGm7YM18VxYknOVMowXRfm4hgm9eQaE6AOFrqNpsI2tipg\";\n  b +=\n    \"EyhW+ANTgOZpy2um/mBYpm03QvW0BahJ0zjhloAAvJYMZcG9oL3juum0iXWgDG5guePhLinsE0Z\";\n  b +=\n    \"t2qZrw1CoUSvcFyopqEsAczyUG66lZDr4MwNGi7fHqQBeLU8R8mHOMM6GBmyFpRbgxnZdqWhaiG\";\n  b +=\n    \"1Am+tOxmEq+IHBwPSBfIhP26bZwaABbFrcCWT5Xx6pC/cBMvgAgzHRXLEcrzAez0OIDw0t207ja\";\n  b +=\n    \"C3bI4YB8irHxyGYljUOqI2IgAy0nIZ8YdDIadgWDVbBsGGAyqIRY384Abg/0MvAQSqFfSqTSqHY\";\n  b +=\n    \"tgzbVjgNGL3lQgb+ecCgloXNDQ/+MzzAq01EY4QgAaFF2spafFvoCgaIGYsobhiFgm3ZVs7IAZv\";\n  b +=\n    \"YViZD0wFywhzwTgBAzoUJEtco6hX52UJIClcK468IeRMb4RQtJCi0gsVzhRH/ozWl8nb8j2qnJk\";\n  b +=\n    \"1s9GhIeC9INDc0NOEf8G0K/iEhbEM5CucDawfXZcbGkSpYnwpXH64RWJqIL8QgsARSEv7GIZJt2\";\n  b +=\n    \"yESuDR4pLrjMOltGj5i30ZkO8ohrOdsJDpVDX8BQANGQjtIBkzRLRT/EATZ0yaM2HaKqAb/W6mc\";\n  b +=\n    \"D/9wKj4wj+2Z28yPwH8OTHiu+5bMXrPc3d1vZPYa5cGv8LX7q3L9J74el2v3t/jaK+X9Z/ja9zV\";\n  b +=\n    \"p/3XJY32vb96fKndzx+atOx5VRvP6jl2rd2xZv/qdazY90rFz9c4N/63D+Cc/t1MHG3/jZhCwc+\";\n  b +=\n    \"PqBx/d1WF83c2s17IXuHSbZP+RS8Psv7lZarthPefPutn1ev7fuXzzTsn/E5dH+f/Fva/dxdl/5\";\n  b +=\n    \"t7D7JDbFM5gS8dugG99ZMsu48s8gW1bNz3K1b7h5tYnAD8I7yqjHAzvKvkfSnk4i29KeZj/EY9q\";\n  b +=\n    \"81rOfotHFWafdwuMr50Pr9nRwbBvu4X1lbD/4HrbdNg5rpeA/afbhPUe3PDONTtWw+7E0Pfw3Cu\";\n  b +=\n    \"gH3QnxXXXbt28ecOuzR1bdu3k0j90J60fvvQZ/T4wUob+kX6fCPoXet1tIfSP9boR9C/dVuGBLW\";\n  b +=\n    \"t2PQKz0uZ2zG1dP1zZZ9xGakcQ2J47dnfsNP7WbVxfBRzgWa/rWLvj0W27NmzdwuVy/6d51sOU9\";\n  b +=\n    \"ruN6zp2bHhnB/LsQzu2boZJGv/s+zgk5EPjOd99J1R46FHjK77XsYU6Mb7qe9Kf8TUfuGtLx441\";\n  b +=\n    \"uzqIxYwzfj5it3Ud63d0dBj/4OeEQwTwdT+86+Y1O3d17Fi9seNR4x/9ggAhx4M0+rAz6Z3wutP\";\n  b +=\n    \"4pN8KtAOFpaMSbzuNT/kT1u7owMqV0zU+7U8Mm1WhwtjvFx7ctBMGPWf1hp2rO7Y/smaT8ef+hB\";\n  b +=\n    \"C25qGHsF1UdMmS6nNjWH9YfW5V9R9bOSp6aNucuau3bukw/sVvigFRtZ/o1TY/ssn4XRnV5g2bN\";\n  b +=\n    \"gGONm3dus34Va+BK23YsmbT6o7d24yTic62rF6/Y+sj2wx/XAykukLEAZOHCS3XbFm3enPHzp1r\";\n  b +=\n    \"1nes3r15nfF9cyIV7Vy7ZhMwMDHDg8yMO41ZzTy7NRt2bAB5g6Jy60PGd/zGBHjDlg27jB43SAD\";\n  b +=\n    \"XPrxx9ZbVa9avx0VBI5xjfNgbrc5c44PeVTXqAGKqejs4xppzjR6P8YLQjvXAKOuki2/VLphrfN\";\n  b +=\n    \"tLzpzlhvEFuykB3tyxY32H8ZTZmoDqmP8rf1KibMead8V3Mz5itiRK1+wk2hknbOaBR7Zs2B5i/\";\n  b +=\n    \"f8XHiAYofy0r0GAXLuMXlPGN2fn6l1bhSWNPzSviqCAHkhs2LatY8t64K6da2GRrX04vEe3M2GY\";\n  b +=\n    \"msYfhV3P1bvecFUEHLnnd4c9V9U0Pm/GN921YVOHVvRfWquKov/tZKgIpAbICuNWRiRsZjC4bRv\";\n  b +=\n    \"nCoEfV3mCP7xm58NYAqTd7zJpSdbFNT8pRHywY8u6DWu2iFSkRWE8abXWWCNUz/i2yoV3Xvtwx9\";\n  b +=\n    \"qNxhdkESYkyIYtsGyslsoCuvMBszGEx4g9oCrlELDgNpBaO42DqrWiaCfw2ppNqMd8NmIA4Iqox\";\n  b +=\n    \"Qm/OYSu64gr/1kMpinJrf/anBL1v27d6q07Vq/b+siDgHwp/w1tgnq5MSirKSEMceYDdktlAa2y\";\n  b +=\n    \"/wpnPleb+d+rSpEazeNz4UKbWz3z/1Ihf+oz/4twinMTM/9LPxeJchrJcSeqp6PiaTUlumEtVPy\";\n  b +=\n    \"2P65mufFNjxvCTjN3fvvqBzdtXbtx9bo1u9ZAHdjujA+amSV33gtS+vqFc1bvsMyclrvnHkvldn\";\n  b +=\n    \"SsW7t689Ytu1ZDe+O014xyjfI7t8F+2EHgP/OyISXWbulYb/x3T+v1bsvKIhRarQPAPOOIOS5B7\";\n  b +=\n    \"s41a7c+iCz8P6r2PNgj1z6y450dxlesDE4s7GJ3tGFGNY6bDZt2PrzhoV1RpX1mjvqn0SLg4Yi/\";\n  b +=\n    \"YwqcV40712+ZvXrbrkfjip1R9xEBz5jZeEr37LZsPXuPJUKAWdH4sJ/Z+ciD0UB+N14MOAmh2UG\";\n  b +=\n    \"RmrgYmFj/U5gkFB6yLj/ia/daPsdym3S5IYzzm34NaTLXeEJFlEFpZ/yWmSPpQGND0v1QjdcWKh\";\n  b +=\n    \"bB3kNV91kNmlaCy+cpO0KgqEVbdxjf9iulgF7GXWxes42E3hzjkGzZoMptXdcRAt0K4TjHeL+bi\";\n  b +=\n    \"25OSPh8OJG5zGL/wx2XWCgREz3j5yIWBeTvNhp07M21vMpVHXHQJ+1Ir4pgmyLBELPMabOpimV2\";\n  b +=\n    \"G8WoccQzezLaojQ+6jfpa1S44LdCLpgbcsFnanHBXOOwX032OcZ/92vtN3ONPjNCFxHz0+Z4TSr\";\n  b +=\n    \"pZP59u0HTJpHMP1LRpGNSnvMrRZ5eliTzXON3qsk81/ioq2mYO7fvMJ6VPgmw9tG1m7bu2rp5w1\";\n  b +=\n    \"oq+6zIglAdBUVw9e5HZ8/+b7ONXkEQN9u6pfMR0mFeEO4UTRT0np0dxuf0boBRYLfc8MhOHKnxx\";\n  b +=\n    \"kJCC0bN+BtKmGpHBxLxEdDkN8FUdxofFfRpurCULEsqTmTrgAL0O970pEIVqloxQT/gXZnU4SKF\";\n  b +=\n    \"saLir43W1xzjQ2Pra47x615LUtEM9ROzFnyu8eeila/dCmYOq5JxZ8esYQvnGk9bWcEv0nOX8dd\";\n  b +=\n    \"+SB7E9k6wOcAs+rzfsnZXnI8k5paQU+Zy41ORlTFXa/27Tj7qUuj9N7IeANTxyNpNGrwQdyCwj9\";\n  b +=\n    \"vjIlii8sdt6XdHBPqW0xKCElW/5WQjnREX+V9F647zv6GuTCqy73pwA5j8GoOJXvo/vWkjVzTOe\";\n  b +=\n    \"aVaNSr020+EBkOiltEXMsjcUcbx5+E4hqto/Es4jrkjjeOT4TgStYxPec1A0CoF4hkvqwtt4y+8\";\n  b +=\n    \"bFQN83/pRds/Vj9mRvsrZs+ZBZEQ10ew73hJGPbyXU9XEbDWn5ixaoL5H5jNeJ8tq5Ob5NZmvF0\";\n  b +=\n    \"ltEtTLzD/flPTlvB+X/QadiTv911Th2CdPzAL6za8E8c5N4L9sVnQNhiG/a3fWAnbbXxNNSGa2N\";\n  b +=\n    \"iU215v/JOT05A3d7exvAkXGXNsNJS/8yqheJu/9zI4nOtBum1+cKfxhJV9Z8dapP5DHUBc419lE\";\n  b +=\n    \"Ys6+fDardseNb7tFHRgBxqoH1GJig9SxY9bIU0WRjc87zVW0mm38V9uY2XF3cb/dlsFOGf1tk0g\";\n  b +=\n    \"xDfEZSetrKYe7ja+5GY1BWy38WVXRwkAPuBktz+yddfqHR2bV8+Zu9DoV5ko3z7POG1lwuWOq/h\";\n  b +=\n    \"7XpSFbo1/9QphNhy78f3wyQjsDkRh40IMYZob/xZ3gw9YPqP1CjtevyjRkCUN51dVOszv2mo8FZ\";\n  b +=\n    \"ci1xn/LutL8qGF+AmrucpCfGiHcUpMvggsNuJRK9I1NL43/pcXgTXGN4ZiMG8wDP6GmQ/BoVjcp\";\n  b +=\n    \"zKhGEb8/cCLsoi/H4b42xbj70dVsIXG8yEGt4U4/Y+4I8Tgs1q/qDN40ZZDGPyclw7zgMGjcSlh\";\n  b +=\n    \"8D9DDHJ+9SMbtuy6fi5UYzBnBYPbatYGRtFrt8/TarckaodG+t8KHRLGPdT/bTtZf5PUH5L6myr\";\n  b +=\n    \"qf8zORlsXIvgLbpxHDJ92G6N8hOLvVgMXGufdfAQUJH9P6wyxPOBl9d3Y+Ikd786E579yJ1QxnW\";\n  b +=\n    \"DzC/LgRMemsOppp3YrwOoRd0IVVqXVH7jVj0BCbA3ardXYknaDdnK9yJ2eqkW/HbC6Jta4izyMn\";\n  b +=\n    \"FNd9nDH7jU7127YYPxe9OSzouB9XiE2Q16/dDkacn4laK6V0oyVbbOtdKpPmUbZzPyG+Qn7Cf97\";\n  b +=\n    \"/ofg79PuPv+kt/1x/xve19VvOt/zj3jf8//K+7L6EKT/P0h/z/8/9r9Z3/P/BFLHfcw/6b8fft8\";\n  b +=\n    \"PZR92v+f/NvwdgPwH/Mf9H0GbfucAlHwTIN+Av2/5XOs34O/X/X3ex+A6CLDf98/6v+fi337vX9\";\n  b +=\n    \"3/cP5Ofcn7Z+fv/H92eqwXrG6bW73f+1eo+1XzS97n3C+6f+p92P11/7vQ99+5Z9SXreedf/B+3\";\n  b +=\n    \"/t99yn3Y/7nna97B50/hDt/3nmP/xvOe/2z3knv/c5/2M+b3/PP+3/s/6H/IfO91kedP/Lf5/9Y\";\n  b +=\n    \"fcS5oL7vdnuPez9xH/degBT+dXufsvGX//ux+5te+sSHpsAY7lXr91p7rjDKQ97GkpphBGab6lZ\";\n  b +=\n    \"FI1DlU0ZnYBa+5qnFAWTb1J0rcghevJGgCLnNXhyY5YOqs00ZRRuSPZyEXsoHOOlC8qjqLN2JmS\";\n  b +=\n    \"xkjjE8A8k+1TnTMoqdeM/9qpiGzg+ZnaWJUNQLRcoobVhg4S2PAjQXSOYEZBrCzCnINEoGmh2CO\";\n  b +=\n    \"90lDXtMAMG1V659cu2Ha3kA5qbKPWZnud8oPO1PChqDTuykgS85vqgg+3SQeXpJ8L59pQ1LrK7S\";\n  b +=\n    \"xkWKmp80O4ONS4L9ixRW2rBEURHeoXy8osjsKm1YpHAQ5SNQtCEqgjscwiFl2tVBvGbbFQzZLO9\";\n  b +=\n    \"XncXXQ+0hW4ZY+A8LEvsdwlsekcTJAmKGkzORGt1O8bV43ecUr8XrAad4HV57nOJsvB50inPwet\";\n  b +=\n    \"gpzsVrr1Och9cjTnE+Xo85xXa8DtnFBXh93i4uxOtFu/g6vF6yizfALfvNzuIkuPY6nUXggnIf5\";\n  b +=\n    \"CfjSCHvIxzyU+DaDfkUwr3OYoB5uBZxXm5nsQTXi1A+FUkB8Cvgeh7y07B/yM+A6xnIT8f+IX8l\";\n  b +=\n    \"wgEvV2EerlfjfeDahu3huhLvA9e7MQ/3v778L0PPPukWbyz/+6l3f9Qq3lT+1Nf3f8Er3lx+/m/\";\n  b +=\n    \"f/Q9ucVE5XVwV2MCQyIluMRekiw2Qb4R8E+SbId8C+XGQHw/5CZBvlba3SF+Lpe+y3GuJlN8q5b\";\n  b +=\n    \"dJ+VIpXyblyyV/u5SvkPp3WIuDicEd7cQcdrs6oOBqtMPKgKvbrvbhNd0Oq5OZ5ZIwz0W85trV8\";\n  b +=\n    \"3htaFdDeG1sVxfw2tSuzuO1uV2dw2tLuxrE67h2dRav49vVGbxOaFfP4bW1XQ3gdVG7Oo3Xm9vV\";\n  b +=\n    \"Kbze1K5O4vXGdloAwS3t6hm8Lm5XJ/BablfH8bqknVZBcGu7OobX29rVUbwubVdH8LqsnZZCsLx\";\n  b +=\n    \"dHcbrCmH+24n57+aVyWsSRIcK2gEPwP3BTMADXucDHvA6D/CA17mAB8RHAfCA1zmAB7zOBjzg9T\";\n  b +=\n    \"rAA17zgAe8Xgt4wOtrAQ94vQHwgNfXAR7wuhDwgNcFgAcli/D6UEbAcvM6S04wEaQWiwc1E8QMi\";\n  b +=\n    \"BhcBwNOZ8mCyj7IKhBBXOF6Sp1yeCUj13r4e8rpLPzQCZxgClZ/bVR9CqWgOytIYcmsqCQVdjSl\";\n  b +=\n    \"upPJWPXaqOrkuBMfS14TlfhhJ5OrO5mEVa+Lqk6KO/Gw5JqoxAs7mVTZCWdXxugCeFLKwqq2Oks\";\n  b +=\n    \"G1IEuG6IuV1JqAMXcIbuzZFdjuMeOJOKARZ3anYXvWrAxXYldNUZdXRl2ZQfTsSQdlUynFHSUqu\";\n  b +=\n    \"5kBlZtiqrOiDuZhiXZqGRa2Ilf3ckVWLU5qnpF3MlULMlEJVPDTrzKTlR50O3kmYYoQ+B5t7PUo\";\n  b +=\n    \"qNk0BWmYpQg/g+4ULWENxoX3agUkiqlVypipfFRpWJYydcrBVhpQlQpCCt5caWQvtpgeUAruYiB\";\n  b +=\n    \"pXxY6AQudtoaderGPBbzQj68k1vNo23YfnZUtS1uX2OhtFW3vxrbz4mqXh23r7FGrq5ufxW2nxt\";\n  b +=\n    \"VvSpuX2N5XFV7eVyfXB5umAWlo0JqEOtUYmv4hVBzDYyN/Wty/tiYvia/v2hWH43JH0fWHIG/qX\";\n  b +=\n    \"wE1qbyEbj68RG4+voEVxdirq61HVgaNQuj7AE1xf/YJH9NoT82eV9T1I9dyudHkPJG1XImrrgMo\";\n  b +=\n    \"f7LwMtPjsLLT47Cy0+OwstPjsDL+QQvz4x5eRThPHME4fwS5PJLEMkvURoXxiCNC3VpXJuDnxiF\";\n  b +=\n    \"g58YhYOfGIWDn6jJwQWdd8EInihmMRi6Jhu0B002aA+bbND2mmzQHjHZoD1qskF7zESDtg0sluK\";\n  b +=\n    \"NeD1uFm/C6wmzeDNenzGLi/DabxZvwetJs7gYr6fMYhmvp83iErw+ZxZvxesZs3gbXs+axaV4HT\";\n  b +=\n    \"CLy/B6ziwux+t5s3g7Xi+YxRV4HTSLd5ChbRbfQIa2WbyHDG2zeC8Z4mbxPjLoVfGNeN2vim8iw\";\n  b +=\n    \"14V30wGvyreL88yIsbF26viW+j2qvhWGp4qvo2Gp4pvp9ur4jvo9qr4KzQ8VVxNw1PFB+j2qriG\";\n  b +=\n    \"bq+KD9LwVHEtDU8V19HtrWIH3d4qPkTDs4rraXhW8eGIYJEZh1IF1H6jU2emu8VmYl6ChVh4Dy7\";\n  b +=\n    \"myvUBdVJ6eeUigHJfL6/kdCj34vJQAGi8NBENQ6x/v9jbbxZ7+01ib79R7O37xN6+V+zte8Tefo\";\n  b +=\n    \"PY23eIvb1C7O3bxd5eLvb2MrG3l4q9fZvY27eKvb1E7O2y2NuLxd6+ReztRWJv3yz29k1ib98o9\";\n  b +=\n    \"vYNYm+/TuzthWJvLxB7u13s7flib88je1ukuCwlWEPBw2Jvrxd7+yGxtzvE3l4n9vZasbcfFHt7\";\n  b +=\n    \"jdjbD4i9vVrs7V8Re/sdYm+/Xeztt4m9/Vaxt9+i2du/7KrVzDGqVjPrqtVItvBoZvBoFvCLNH5\";\n  b +=\n    \"nJlQrt5Zqla+lWrnhTfKvTtUqP2bVKl9XrX6mhm6hbuhqbOyOURq7dWn8c2jounVpXJfGrwZDdx\";\n  b +=\n    \"LbuXeInXu72LkrxM5dLnbuMrFzl4qde5vYubeKnbtE7Nyy2LmLxc69RezcG8XOvUns3JvFzl0k9\";\n  b +=\n    \"uwEsXfHi707TuzdVrFnm8XebRJ7t1Hs3RaxZ3Ni72bE3s2Kvdsg9qwr9q4h9q4t9m66km/ZDp0p\";\n  b +=\n    \"dud8sUPniV3aLnZsQezWOWLHzha7dq7YwXmxe68VO/i1YhdfJ3b068RuXih29AKxq2/Q2SMWKpb\";\n  b +=\n    \"OR6ccMXKjvZCN1EpJAXWm6OWV4gDKJ+vllWseyifpRm6NQzf2dtCGuqq8t7O0KmdkAnOmdVShC8\";\n  b +=\n    \"ZMq08VN0C107BcFpFVXD4FyZs5eRKSN3HyGUjewskTkFzMyeOQLHPyGCRv5eRRSN7GySOQXMrWN\";\n  b +=\n    \"p4iW3JabMmpsCWnwhZb04csOR225HQYl+4BQLnNve2HpMHJfSjnOXkJ7pHl5EVIZjj5PCRznLwA\";\n  b +=\n    \"yUZOnodkEyfPQbKZh4YH7LYcpFtyYG7JgbklB+aWHJhbcmBusXhJPvVQ5cMgdtv5BofQrOPkQUj\";\n  b +=\n    \"O5+QBSM6V6aCIlulAco5MB0TVdTIdSOZlOpC8lkeLZrzHx93dHh9rD7n8OOCCy48Dzrv8OOCcy4\";\n  b +=\n    \"8DBlHWnLHRbeb1ZT9+KvN6Sg2gnD8PpU3BXXrpXZQaxNIzML7Q+yZOnoiTRyF5p964U1xnBnA1P\";\n  b +=\n    \"Ofp/jGd4jrTj0UnK4pM9qrBouOJojupa1xceE/youlcYneVOhepHs5gzYNmcKd40HwE+1gou1fh\";\n  b +=\n    \"uBcvEyva0toUrfKbCn/tsMsR7hXkXsNo7yXIGSeaFzkrNcvJv1u59HEg5dnhznPc0z168D4kiuY\";\n  b +=\n    \"VvmlHEgJF/2zhnbZO3qkSY+WGbfhzTeGHcUNc2CdDrgtCYVN9ywB/ZhR+lLzlGWqpFrMkL9ksyV\";\n  b +=\n    \"fYi3Elm50ousnnZxwSD67jy0YxW0YfMWsxeqqUzU5+uBXe5pQZ2OiiRTsNOm7R1tRZyhS+6oEgb\";\n  b +=\n    \"w4okQlaghwmcsG4oAETDcH4wMYEju+Q21maEGSQjUJxx9t7D/LvUShtDXJ6KasxvVh6wsW7Nuil\";\n  b +=\n    \"rNn10T7r4uBsvdSmVD+WnvfQ/yCtl7IyMwjoXIKeOp//+Ed7vo9LBdhkCbryfOcDH+25XnSGAVI\";\n  b +=\n    \"uBnX9C3G1LKcCM8h2ltLlAiulZ1z0CNB4ZiBUO+LGn/ZoIDA8qGcYQZrUEw+TNqgTupHh0gBd0M\";\n  b +=\n    \"b0Lu3hR+UGY7p7a3x37d6tetPe8N5NCS3qpd+7TZs5sXU8gJzevi8cQIMO7XeHH4BRXtwJKsYYx\";\n  b +=\n    \"7FQH8dsbRzZ8uKNrMFo6wY2VVBuEHHsJYkEhxJSkKYUftcLzLKBD5WzKlPu/nS/UX5NeehTsGd8\";\n  b +=\n    \"xzEy5e/2AWB++flPCgCa+9IR+WWWSC/KluxVNjpl2uV92PS9VLNN+TAxtQslFjCbQeuymx6qep0\";\n  b +=\n    \"zjMx77lUPs6vnoLh6kkg02MMTJV9grsRuY4dOI3ToRJSJQ6cHSXTovAszOciIQ2cWkuLQuTEwSH\";\n  b +=\n    \"nD4e+HhQ9WRujQ2RlLTnG1ZO/OfJhB786m0PvSIIfO10vDbpO9Jnvk2itXcrtcvBFdDGOlpynYi\";\n  b +=\n    \"H3k+dLAF5ASTwdZ9uekTWmT5rS5KbkpbdKcNjclNyXZZsoHoagzKoI77Bc/zn3ikteNZEB/zlXI\";\n  b +=\n    \"VSSKu0N/zot25MQprp2NsWvnLPHDvFb8MK8T/8vZ4uc5R/w854qf5/Xi5zlf/Dzbxc+T9NVB8eM\";\n  b +=\n    \"8J36c520+9rpgo7o/uv+myX6asFeQGl7pxwm71Jj8N2E9kR8o7E01/TjRf3Om+Hnivt0N1zfI3j\";\n  b +=\n    \"NPfCZvEp/Jm8VnclHkk5ku3h3YwI8OMCJuJRnQ7W0wQxwwSTzYwzKwf9lgtjhgwnhgrmSKE6XtY\";\n  b +=\n    \"umrLH0vkXvdKuW3SflSKV8m5cul/HbJr5DyO6T+StgeJwUrI39OOj9y5PzIk/OjjJwf5eT8KCvn\";\n  b +=\n    \"Rw1yfpSX86MmOT9qlvOjFjk/GifnR+Pl/GiCnB+1yvnRxAp/zUVyfnSznB/dJOdHi+X8qCznR0v\";\n  b +=\n    \"k/OhWOT+6Tc6PQIE/JOdZB+V8q0fOuw7IOdg+OQcD5n8DLUw5XvJY/6Tjo1lyfNQux0fz5fjoej\";\n  b +=\n    \"k+apTjo7lyfDRHjo9my/FRQY6PrpPjo2v5+AgNi9Pi1nlK3DpPiltnv5I1OC/W0EEtL7nBJH0T6\";\n  b +=\n    \"MbHdSi2+8mdc17SUXEepU44vJDZuRmFVrivTU16YspjCHxSk056YqbDjqZWdzIl6Yk5Je4klfTE\";\n  b +=\n    \"TIWdTKnuZHLSVW5y3ImfdDn1w04mV3bC2TtjdJ1wOpNClixE2PlQ2y/loy7vZHXKYjOt5FRjGE0\";\n  b +=\n    \"sEYj9pIF389MZm13smiqedUFXDnskZioeokBH6epOrkx6Yl4ZdzI96Z47PewkVd0J+YS2VDyiok\";\n  b +=\n    \"5q+oR283OqRCeR8pF050Tdb1yl5kFMxSg5ER5BXZH01LwiJFVar1RKemqWwkopvVIx6XlZDCv5c\";\n  b +=\n    \"aWQvoP6M1Qc0J1cVHke4LJj8MSKxxHEY/mKZ4on+FlXBY/OTLpjzozb11goM6vbtyXdMdvi9jXW\";\n  b +=\n    \"SFt1e3IHvb7ikSy1r7E8rq69POYll4cXZu2gUmoQ61Ria/iFUHMNjI39a3L+2Ji+Jr+/aFYfjck\";\n  b +=\n    \"rTrGq+LviFKuKtal8BK5+fASunpfg6saYq2ttB/rRQOMoe0BN8T82yV9T6I9N3tcU9WOX8oURpL\";\n  b +=\n    \"xdtZyJKy5DqP8y8PKTo/Dyk6Pw8pOj8PKTI/ByIcHLs2JeHkU4zxpBOL8EufwSRPJLlMaNY5DGj\";\n  b +=\n    \"XVpXJuDnxiFg58YhYOfGIWDn6jJwY0674INPEmsYrBzxY1zn7hxHhA3zh5x4zwobpyHxI3zsBxf\";\n  b +=\n    \"9crx1RE5vjoqx1fH5JirT469tGOwJXIMdqscf90mx19L5fhrmRyPLZfjr9vl+GuFHH/dIcdjK+X\";\n  b +=\n    \"46x45/rpXjr/uk+OxN8rx15vk+OvNcvx1vxyPvYWfZHjaKddp8eLsFy/Ok+LFeUq8OM+KF+eAeH\";\n  b +=\n    \"E+J16cZ8SL84J4cQ6KF+c58eI8r9iL85JiL84hxV6czyv04qRTsw0RvUIjbhIfqCedOReLxcSc1\";\n  b +=\n    \"MPnUG7V6oA6ab28cgn0sLNnVF51EMzOnj3hORcvf42TJskJCjoTkrF9vxjbbxZj+01ibL9RjO37\";\n  b +=\n    \"xNi+V4zte8TYXinG9h1ibK8QY/t2MbaXi7G9TIztpWJs3ybG9q1ibC+peDlysRjbt4ixvUiM7Zv\";\n  b +=\n    \"F2L5JjO0bxdi+QYzt14mxvVCM7QVibLeLsT2fjG2R4ZFftAo2iLX9sFjb68Xafkis7Q6xtteJtb\";\n  b +=\n    \"1WrO0HxdpeI9b2A2JtrxZr+1fE2n6HWNtvF2v7bWJtv1Wztn/ZFatZY1SsZtUVq5Es4dGM4NHs3\";\n  b +=\n    \"xdp+s5KKFZeLcWqUEux8sKbFF6dilVhzIpVoa5Y/UzN3Ma6mauxsTdGaezVpfHPoZnr1aVxXRq/\";\n  b +=\n    \"GszcSWzlrhQrd4VYuXeIlXu7WLnLxcpdJlbuUrFybxMr91axcpeIlVsWK3exWLk3iZV7s1i5iyq\";\n  b +=\n    \"cPVvF2p0g1u54sXYnijXbItZus1i7TWLtjhNrtkGs3axYuzmxdvNizXpi7Tpi7dpi7WYq+ZbN0F\";\n  b +=\n    \"lidraLGTpfzNIFYsY2itk6V8zYOWLWXi9mcEHM3uvEDL5WzOLZYkbfIGbz68SMXihm9Y06e8RCJ\";\n  b +=\n    \"eHMecIRIzfaC9lIrZQUUGeqXl4pDnq8cFfj8so13+OFWxcbuTWO3MjTQRvp3ejLeTf6chrky7kR\";\n  b +=\n    \"r33o01nlqrkodtW8OXbVXBy7apZjV80lnDwcO3Aeihw4ywchuYyN7ZvEh/PW2IezR3w26U3ClfI\";\n  b +=\n    \"m4R3yJuEKfpOQXDXt2FXTiV01vdhVMxe7amZjV80GTp6NHTjPRA6c5ecg2cJDy4gPZz724RwQH8\";\n  b +=\n    \"7T4sN5Snw4T1pyWG6xdEk882BPzQWxp+as2FOzPfbUvD721GyMPTXFwfMCJGfLbNzI1/Nc5OBJR\";\n  b +=\n    \"rzHR93kwnktu2riw4Cz4tJ5Rlw6nxOXzgF6GEPOmqt0f8tVlOq3xdGzeVhHT/Tf7Iz9Nztj/83Q\";\n  b +=\n    \"TweSCT/QjeI1E/lrxq4xG8VrJvLX1ItMdqjBoiOJInYsJSfWTnGg2YiunBsXqW7OYM19ZnCXOM9\";\n  b +=\n    \"8xCuj35H4VvaH7pyyUKxoU4s8LMmd8xAt2wHNnTNynYzcOdFVqUVO/r3KxY+DYa/M7tCdM3Lo0b\";\n  b +=\n    \"wyyZ2TZcSg5s5JTpkDbnKsCafMH8YNT+junK2huKm+pbiU/Sh5yzPxk0NxShsQZ87D4sSJDj/jO\";\n  b +=\n    \"YhdcQI6cjqaIyc+2ApvcIIcOfO8y4hHJ6CtlA39NymR1f0385jIBxNiR8795KqZ1R0qeWvvdsXN\";\n  b +=\n    \"c2ItV83IzbMhyOul+aSbZ76WIye5eZ4hR84aDqQDlY6c/RWOnKQv9JNiMaDrXjly5MS3T3KdpQz\";\n  b +=\n    \"69XniTpqtdDykLuLGn/ZoIJEbYYZUk1rOlN0uDdBLOlP228OPygvGdPekI2d474mVTqR07+ZKJ9\";\n  b +=\n    \"KXeG/NkTMjjpzhABoqPUlpAPlK987hBuCgI+eYx7FQH8dsbRw5dOTMVawZceQssIske2JCCWkZL\";\n  b +=\n    \"ejIaQSmOFgOooNlPlP+4B+T++bhY6E/58WnycHzxNMC+PS9ajP7YPanJNwmujgW7+YomcU3SPzH\";\n  b +=\n    \"e3gR4rkBbpR4boCbIGpquMHh+QFKOXIZxDiKb8ZBmOy/B3shanAUBzHFLjqo6ZEfHeq4gz777w3\";\n  b +=\n    \"47L/X77P/HmwG5K/Xm2L/vRMSt7Enxf57sC1Q3MfuFPvvnbfZfw+2GPLfg42I/Pcu2uy/B7s6qm\";\n  b +=\n    \"jlE5C/HyUMvYZiFr5oBvfxhUON2slQo/YIoUZBG8b6cO1RRXKJPYBephw+1MEr6D9ZvB5TQE9+p\";\n  b +=\n    \"2Ur6N53o6fHW9CPdBtySWtwN6a3L4CdoBWL7gq2YXpiQKCJCHo9gyYwaAKCVjFIAcg6QT6cqpM1\";\n  b +=\n    \"q0hTCLYusEjngOugXAfkSq+8gEbzjMWOficsDjCaY4fUrbi1blukziN4G217F6gl7qsAPxPDzzI\";\n  b +=\n    \"cNtWti1iF2Upw1GpQvPOgyM+UFP0GUfTzoujPEkX/WlH0rxNFf7Yo+nNF0b9eFP15oujPF0W/XR\";\n  b +=\n    \"T9BWJoLBRD43ViaNwghsaNY3DbvJfCcOJrABnQ4B0wMmzNZdOBncouTob8FMhPhfy0V8Bts1Fz2\";\n  b +=\n    \"zxus7tmn80a5TGb3TiP2kzFIzZTtddmv8TDNrtrHrLZXfOgze6a+AYlaqAHbNZA9+N1MijFeJ0i\";\n  b +=\n    \"bx1NbVeXkJzT2tVFi0+Knrf4pIi4CrR24glQuolNQHU/Z/EJ06C8UHVWlHFil9vkLaWlovkuE81\";\n  b +=\n    \"3uWi+t4vme4dw5QriyvuZtZN+m8cdPnHqc1hZPebw+0dHHfbbPOKwv2avw36ahx32zzzksDJ70G\";\n  b +=\n    \"G/zx6HNfIDDru57ndYyd3nsJLb7bCSe8lmJfeiLTw9J1bHL/rot5l41+GEBQtPgsGULKgMVQrRz\";\n  b +=\n    \"s9PeQ55Ygep8hAKc1Rv+XnMXVFNNuyhp2FcNqGP1ur2r49qTYzb1/TWhPYTq9uvimpNiNvXdNSE\";\n  b +=\n    \"9hMq23P2zoRfa4VcKne7kaNmU4Wj5kXZXEtONUpPuJFEuUhaKyhdmqNmc8XzootRJNFMxVv30FG\";\n  b +=\n    \"6upMrkz6WV8adBEkfyyDsJFXdyYxk0MsZcSc1vT2hE7+yE5gjIbTPTDhqniD3S10X8YWLGCWI/9\";\n  b +=\n    \"hRc3LFM6VDfOAdVSJHzSkVD5YO8al3VIkcNadWPF06xEffUimkb5/+VAAHdCcXyfPRhgpHzWkVz\";\n  b +=\n    \"0OJx5oq1O5DHDGpgj1nJt2aZ8btayyPmdXt25IezW1x+xrLo626/dVJZ+ar4/Y1lsfVtZfHnOTy\";\n  b +=\n    \"0FyDKsUEsU4ltoZfCDXXwNjYvybnj43pa/L7i2b10ZicTqBG4G8qH4G1qXwErn58BK6ek+DqfMz\";\n  b +=\n    \"VteS/pVEz/2KE/kuQ9y9B1I9dyjeMIOXtquVMXHEZQv2XgZefHIWXnxyFl58chZefHIGXGxK8rD\";\n  b +=\n    \"lqjiKcZ40gnF+CXH4JIvklSuP8GKRxvi6Na3PwE6Nw8BOjcPATo3DwEzU5OK/zLpiSjXiERZblC\";\n  b +=\n    \"YstxmcsthhPSiCOUxKY47QE5Biw2GJ8zmKL8YzFFuNZiy3GQYsdOM9ZfHR13uKjqwsWH10NWXx0\";\n  b +=\n    \"9bzFR1yXLD7y6rb5CGyfzUdiFy0+Ijtg85FZj81HaAdtPlLbb/MR22Gbj956bT56O2Lzkdwhm10\";\n  b +=\n    \"uj9nsctlns8vlcZtdLo/a6HJJ1r/uqbnPYQ/Mi7bE0bTZA7PbYQ/Mgw57YO53JI6mwx6YPQ57YB\";\n  b +=\n    \"5x2APzkMMemIcd9MCk73TQk6fjTnEj3d4pbpLvdWym4TnFLRHBIruNXTW7rYSr5kUlVhIzE6zES\";\n  b +=\n    \"l/NSeFqTuvllasAylN6eSWrQ7kfl4cSoE//3Aof4qAvIVnY7xAL++1iYb9NLOy3ioW9UizsO8TC\";\n  b +=\n    \"XiEW9u1iYS8XC3uZWNhLxcK+TSzsW8XCXiIWdlks7MViYd8iFvYisbBvFgv7JrGwbxQL+waxsF8\";\n  b +=\n    \"nFvZCsbAXiIXdLhb2fLGw54mFfb1Y2HPJwhYxLmsJFlGwRSzszWJhbxILe6NY2J1iYW8QC/thsb\";\n  b +=\n    \"DXi4X9kFjYHWJhrxMLe61Y2A+Khb1GLOwHxMJerVnYv+y61awx6laz6rrVSMbwaHbwaCbwi7R+Z\";\n  b +=\n    \"yV0K6+WbtVQS7fywps0vDp1q4Yx61YNdd3qZ2rp5uuWrsbG3hilsVeXxj+Hlq5Xl8Z1afxqsHQn\";\n  b +=\n    \"saG7UgzdFWLo3iGG7u1i6C4XQ3eZGLpLxdC9TQzdW8XQXSKGblkM3cVi6N4khu7NYuguEkP3FjF\";\n  b +=\n    \"op4rBO0UM3sli8E4Tg3acGLwtYvA2i8E7Xgzaghi8OTF4s2LwNolBmxGD1xOD1xaD16nkWzZE28\";\n  b +=\n    \"XwDD8cOU8M0wViyIYfmJwthux1YtheL4bwLDF882IIN4hhfK0Y0jeI4Rx+eDL8EOWNOnsM46t5y\";\n  b +=\n    \"BMjN9oLa/tqQp1WvbxSHED5RL28cs1D+QTdyK1x6sYOAtpQ70VnzXvjwJtbxUlhmxz2OnLY68hh\";\n  b +=\n    \"ryOHvY4c9jpy2OvIYa8jh72OHPY6ctjryGGvI4e9jhz2OmxKo8sTHfo6cujryGG3K4fdrhx2u3L\";\n  b +=\n    \"Y7cphtyuH3a4cdrty2O3KYbcrh92uHHa7ctjtymG3K4fdrhx2O3LY7bCgSD7AIKv6gs9W9Xmfre\";\n  b +=\n    \"pzPlvVgz5b1Wd9tqrP+Hzu/JzP584DPp87n/b53PmUz+fOJ30+d+732ap/xmer/oTPVv1xn636P\";\n  b +=\n    \"p9jXZWagnt0D8h7KHXRZbe8UnPwlqjobkrtx1B0b9CbbFtgHU3x9ZBc9+P1DVQDWTUg54/ti1Qv\";\n  b +=\n    \"wreTM8eRVOj8AfCeGH4wFTp/ALw7hu+TrvvZH8Qm55ATsXPIMxbFY0LHkDgcJoho9iw8FLpKBW+\";\n  b +=\n    \"uDIXJ8ZP7vNB3sjV6J6axeuGRX8zsUO4f93SHlMqwl7w+UfAmwl7CPpEYk1UV9pIb4rJKhr0c8m\";\n  b +=\n    \"vdUg97Gd9SD3u5z2avr/32CnsxekSij6nuFbnPjrsbstArssDyXMJbYhgk8YpsDL0i3xSGt5wQF\";\n  b +=\n    \"DBRCN4Ye0VimMmWWl6RGGayfBFKx9UKbzmEpfvxUDso6KXyXgdta+j4UMsrsodEYmoYr8i+VIVX\";\n  b +=\n    \"JPrq6l6RtDP38hae0rQcJwpv6YhXJHLAUb/CK7I32tyjxjW9IvtS7BiYDMnt0QCtpFfkRXf4UVn\";\n  b +=\n    \"BmO6e9IoM7514g2QovHfCK3K/95LvXcMrMhxAIrxlty8DKCScNf3hB+ChV6Q31nHU8IrkcTjoFe\";\n  b +=\n    \"lUrI/LCW/5TB95Px7rC90hP/Zx8o/s+8Rw4S1tDm/pYHhLGwbQ/4lEeEtbwluir5+sTPK/5FWNw\";\n  b +=\n    \"ZcHdRuEC5yyub3wFTNQrzWGVBl41UjIgVOmxMFn0djnBEbhB3aOBtefwsCZH7pWXbnXJqfN9MaS\";\n  b +=\n    \"PcNQi8f2H+7tRqnt7qU2Jf3SzLtzJqYKpVl3w5JpC2Z1lV4TtN2XsyA987Gg7U05OzCvMSaB+mZ\";\n  b +=\n    \"eZ7YWYZZB2yJl03ouG0EbSPKn4Lcb/hXuK1mTUR4DIsoqCNNZqFc+ZBaOkY0xcxGGGrBppkYwk5\";\n  b +=\n    \"rPHK75Uax53Ex0MGsRvvNvl88o7GAWdTBruA4GsOZZpXeA7vKQPSzZJe/GlrB/WoH59JLZ71sy+\";\n  b +=\n    \"/3Ba5bs7Xr0sSWf/a1nz9t7lnT/3hd7j6suvFHJKhd2lQuPFBsRl5wupcrG64k7zMLbsH8M1CzJ\";\n  b +=\n    \"AcXJrJmB3EULR5zayO0AnIFeGst778TWUNIoJSWz0BT10xR10xT1EljlF16wtheaIM+ftLfLh1K\";\n  b +=\n    \"dZXsHJOwdpcnlXlNMOhdUoZQQ38XaA6rkQ8pfObnklNvugls7wA24u2TtDLEmaOxwWZ4zYcVkmx\";\n  b +=\n    \"G2ZzvGqkSMF2GrIX9c00IEdHWWUkEKhlDKwpi6cCUgBDYLek+GHGqN0oTAooImsIKyK4JckFqxA\";\n  b +=\n    \"6phjaZgwgqANq3YgeIBWApuYOLFDMbB4lcgwJfTAm+x9+L3FGC5lYAdDqfQpQ57hQu+E1B+TvHN\";\n  b +=\n    \"Tbx5im9uYdfmih0gfzJLcyg+rl6Zc+GidmET6KRsYk2YbWfRyeD6Rmwhli5aMCOwQAMH8GSWZ67\";\n  b +=\n    \"KNTIdAL1FIQ4mWwjhgB1guF2IFOQLxOdeoKc5uWgxzYA4gcnIQ/KRHzRir2iW9zL+UjKb5TBka8\";\n  b +=\n    \"XkkrU0Z8K0Qcgjb7k4gubAZUq52VQGQIAKBykAt34nzAB409pO/WZBZ1hiFNuCcUUz62dgJFb50\";\n  b +=\n    \"gsvvOBt31i0wgKkX2DOV8aS9J6gravUhm+/mGUbd/JcCAaej0r8YUuyw5RgEm4G6wTpaWHfFhAz\";\n  b +=\n    \"64FOgihvzOYy5R8996xRnlLu+cqzIpJ7IVWeWu6PAANfoRoXIsAlBLSXj381BJyEVHlB+VIIAIq\";\n  b +=\n    \"2lS+9+7MiqVOINVh3RWvYScP4ZLQWohJosCpIFS1ivbanSiayj4vsg/LPAdJ3BsQ6Ls7DzfBCM5\";\n  b +=\n    \"BzjpololY6ppY1Nmq1FHHF1aBWy8+UWiaO/qeMzmNmLXyC9PcRlanAX8oiEgU6otNHdLojo7NpO\";\n  b +=\n    \"HQ2jYROUB+HQecwJdlhSl4pdNqEUJCOPuJTIeZIGjI+fajvBH4GEYeCqNeRXQL3ItgpzHinyNI5\";\n  b +=\n    \"LleBPas4heUgCa1TLjXTaltgv7pSoqD2VK32kFejNhgKXGJB7Wk1lRPcy2BzgsuQV2oN/KA13qT\";\n  b +=\n    \"CDa44XW40Hq+9TnEiXk+5xUmyQeVkg5rAO30xQGHt4AsmNr7vVizh5D18wQQ1mGIKVygg3gX7yB\";\n  b +=\n    \"lRhsPYWYbjfgNbbiS/XRy2G8lvV5Pf0HkaeoPt2txeVqtyoKgFDvRskj1H2+1y3IFxh00HV0Dnq\";\n  b +=\n    \"XhndQOP+/bCvbW8dyeAO0sN2uaapxtTCe7r3oqgIXBxfyWB5Af5Fbjb19hf04n9FTf+xBZrJ3bY\";\n  b +=\n    \"aQgI70N7rBvtsW68x5qyiRplH+bjFH1AXbYJ1Rw/mIR/RNCZK2jOIyEb2OqykR2hGXr3QZ0Bhh8\";\n  b +=\n    \"O1w1Baay4zmu4LlThOp/AdWE4XDdcDq6njg3XLSGugzSuizSiOo+odoKJ+AeodhnV7oiohvWuod\";\n  b +=\n    \"qPUe3zcgxR7Q+Dagd2OEC1q6HaZVS7jOpiEtX4cpxTjWpnBFQ7jGoHUe1EqHbGgGp3ZFRPqUK1E\";\n  b +=\n    \"6HaqUC1y6gGEUOoboTOg/H4B4imbaqJtqXhES2anyDaiRFN2HAiRDsaojXhgQilBRX4Gqp9RrXP\";\n  b +=\n    \"qA5eIlc71VztMFc7o6LaHxnVoHBfssbA1s2Ia59xje8HZoJsuXFZDh/LZjvpcxc3GMgArGo1QKo\";\n  b +=\n    \"hVNHzUNVkaVGTDg7TgeyqMdPBYYafHmhGlU9mgi/mVB6lLIwhXW5bmbPgnmlW/JBN4MJ0SjOd0k\";\n  b +=\n    \"inGUEO7j4hplMB6FTAu14ZW1GFztJVGpGuFhsKKgZXrgiuAqoAheilfS+4egVAvRoUmpGgULqSQ\";\n  b +=\n    \"qOYUV5EH083o9KoaDi4FJJmVEgvGz9ZBfgZD1sM/MXUuVwbyYtJ4wkXC2k8XRY5QfPtaCjdvgPU\";\n  b +=\n    \"H16JuOEwEXjB4HyziGlL1EUP1UUntIUAa9lVpIZ5sa44vI7oBd4wOuIwJdlhSobREXnfgqV3GTq\";\n  b +=\n    \"hgzqhU6Fik0rooW4XWyyoERb9aJE1IL7wLdcGxlcD4qthJHy1vHrx1YD4SjG+IpOkARHWgAhrIJ\";\n  b +=\n    \"MkTyYJYCzPGMsjxvIjYazp1YuxPGIswxiLjI48YiyP0Dw9gcNTzViZx/bZLD/aACsZVy/p9/zID\";\n  b +=\n    \"Be4KU9gUCZZofjIjSI+krvrWB+vhIp5hraZVTk8+QIjwSnvhZ6yRVMtJhm9d1nOJCxQ/zhPPDWF\";\n  b +=\n    \"nfa1hlF+3TJ6Nhuk0BolRDkINmmjygYpkMArAEcw/M7y7MDCx45ZemQ9hypQJAw8cQqyWIQ6SyM\";\n  b +=\n    \"ryLOxnJ+UwOhA8XCzpNI0li987VmxHtOhLfmriRyWQb3G8umopp+wOhsS7RoSZflEWT5Rhnc/i3\";\n  b +=\n    \"3+anWfUHYXfQWq8UbThwvs7zY+xuZHsv1pCklAPVyKenAS9zITOVfPlQ+857NGeRIDvpO4ORafm\";\n  b +=\n    \"28W9l5hlLtd+ZIUbZvteLpXnteJGQnts5AyPmduoowE8sF3+9uUxME5aVBRi3x2knOtnDvNuSmc\";\n  b +=\n    \"G+BcIMF+ODdDogBxrk3CA3HuGvYzx0PJUhpI1v1P/cDz5R+/sLOcLdyLhwAWMpGC7VOHDuFTDmy\";\n  b +=\n    \"XgA6STuBUQAdw0w8waFmiroXKNB7DJPqliCqZCmi/icdyfgW020KlMl8Bxa8NFtDKT0B7oN8sGm\";\n  b +=\n    \"hJKH1/r1B5NxufamSTUOjRTtQCS6XUiAs4CVUUCCYxV8STl+grwlvh0Z/zXOEVH7f7Mt3xlcB45\";\n  b +=\n    \"hXHTuqnckfrMnp1XoE526+Se/gv+h7OK85ZLxc+Xgm8uq/APRpf9D3SP2NZb79KpFL+VSIFGl6m\";\n  b +=\n    \"e/g/Y75q+AWSEK8Ef77YXPZnvtu+8nrLK6//vhKr5afDVw0/lV6zv0C9/jzLktzPlSz56WhC9i+\";\n  b +=\n    \"Q3vpy4cN5VUqony+d+pVYO9bP3EJ+5Xv9xV2vr7w0/WXkj5drbWdeJdRq+CXkgXqvP2+y95WXkr\";\n  b +=\n    \"oVZiRKDfpv+Fzy9KfbxRc/PjPMKdcQvsH1vK2fc1209YOuS7Z+0tXtdGpHXfsc/ahrv6MfdR1w9\";\n  b +=\n    \"KOuHkc/6jro6Eddhxz9qOuwkzzqwkOmhqCh+qyrW866GqpOn6rPumbXOurC45901VFXX82jrn46\";\n  b +=\n    \"6krXOJKqPurCI7SxHnXhwVqm6qgLj+ayVUddPXTUlXlRR11DdHhWP+r65TjqStePuupHXfWjrvp\";\n  b +=\n    \"R1yugSNePun5RcZV7lRx15epHXa/4QdNPZx9I14+6fo75KvcLdLyZ+aXb67L1o676UVf9qOvndu\";\n  b +=\n    \"3UH7f+Iq3XbP2o6xfoqCv9KqFWrn7QU+/1F8iazf50j7oSB1h/c5Wayp+bHXA3lrzRIpdxvLJSH\";\n  b +=\n    \"K/siihe2QyMV1YKZnQFJYxWVgqueCwoUbQyDlPmBaVFKht45QIG3SpRmLBSGCbMoTBhHoUJw7QP\";\n  b +=\n    \"6RYtSJhXPmFqQcK8MEhYnxkHCSsNGyTMqREkzOUgYR6Hl+OIYJ4EQXNrRgTzOMBaGBSMw39Rk8C\";\n  b +=\n    \"Jwn959LXTAsCPcmQX7tPeUfLD19U9DIt61MFIAjCK9AoKQlIot62EexSKJvd6xOksNmBWXq/MGf\";\n  b +=\n    \"S6ZYkjNsgrrdmyuV3tpXhhS4xiKcCXxMvHnE7swgwa8HVLI8iWfyLvt+LLryV6fZLeBMvOV0SH9\";\n  b +=\n    \"+0rAR0Ofv+s1V26YhG/4U5FwRUM3vNYjUpaKd65vBtfT3Xw5XaHYtcCsjJFGTeGBZI+sSfpB3rB\";\n  b +=\n    \"Vwrf1QlYSN0FzONhfGB8uZRCCGZzGeG6vfAfB80on/zSs0YnRQVAgoT1V+Wa8dXTpTlrUuA8TcO\";\n  b +=\n    \"pjO6EcScAoWbOBCRcgQEsGFMqU/4cvsc4OX6PERkgxhlTEt9kpZYh+tzAxflcQZi5Iih1l2ZoqL\";\n  b +=\n    \"sCF4KgLS4UKNx+OHQFDfbiBL6of+iAcEXzzWAogDbll1Jws9TKyaUGjscTvS5u49ujJoavaaCgc\";\n  b +=\n    \"RTxSlW/YLpnezFPq5Hm2OcQt1DoHRoA8AfieXzghAEQshS8o7PUqkVBmEgxGhAd2WD8iqA1yGIU\";\n  b +=\n    \"BDrVdoOJKwDqrthRxBBvPkd2oCgI+SCHM89JFAR7L6yJnIRAAKLgC7sc+YEYOhtGQHCjCBVOFKH\";\n  b +=\n    \"CzcCYolfFXXpTXmhbTrwt7tHb4k4Aiwr/OO7NqpwbLVAUUbjCIdXAwXAcWntO+GqzMxkQGS95jG\";\n  b +=\n    \"vBvAHJLKEJX1NmtGUlLs5ywsDkksuvN7tx6JAU3r0hSC0lyWKAyMumM/hu8q5SWl/jLr62jt1LH\";\n  b +=\n    \"K1S0FB0sinm0vDNdTcssDDaTBj8qtRVKi2icHp0zJ4PwfQ2upT4w5ZkhynBJNzMYc5xaTFgHC0/\";\n  b +=\n    \"CiLnR0HkDpypCCJ3+ExFELljZyqCyD1zpiKI3OkQUPFSdPJF5Sy9Pp/dSAxcGwUwWhm7S8IzcFc\";\n  b +=\n    \"F2aJLPAibE2wTwIgpDtrlBWlkPA7nk6KYXakM0Ai4rchbAu8iGJ9L9hPcTRoDW3YHcoBwN9K77b\";\n  b +=\n    \"kcxR3J4Sr0KEwm7AvJ7eCMkhKTQnfxLoLrEmNjJms79JkqLsFAX9O02rLnJGsfdXj7LLbCdVDhp\";\n  b +=\n    \"9+98n4bP+XO6z5gMZCVDjAeWJFkTNGP97M2GGNxEl4ptDzJouIUmNZ4lNGA9PHFvOgIPkc5oqgD\";\n  b +=\n    \"4zkGD6y7ootinKpiCBdZMLROiIuKsEbwJfJgCv7B+gxXyIhLUdYff8AWU+l4JaZxCaajlZjWViK\";\n  b +=\n    \"tHgk1oCbBKgQ5CZTF+CRI7uW0QEFCNgUB9J3lhYXLMs29NgeuFr8nHWQ6Sy0cnIck1zi6KZWBfA\";\n  b +=\n    \"uaVwQtQRolYxorZYJxKzDaF0hGFAl+ZywgKWRRZ8lnyZji+DAex0txkCNx4+GIW05Q1IMlOTgGn\";\n  b +=\n    \"8fgrgAUOigeM5mcmc1nwATKrwClLBdYK0Ejg9yyHEZIyGOUA8htDGMgeEEKla9U0S/7GZi9H0zG\";\n  b +=\n    \"v5AamVGoATz5Yqihy0W/mMItLEUhlaoJ0hxMr0mQlmqCjNMIMiFJkJYVwbgEQSYMR5DmyyHItLE\";\n  b +=\n    \"QZGkuF+G5iaKXZi2Kv4G74lkUdu9DgQak4hyKN8B2KpiEfxTWiJZXekRKgCxJUsKPKSFxxEJK+M\";\n  b +=\n    \"PtUMU0Sqy0Rgk9aFJzMDFJCQk8m6REakRKpJgScfjZDIefHZ0S6ZEpMXVslCCOTzMlQDCSRl8Rw\";\n  b +=\n    \"APUhTSpC2Hky7FqBoz2VIx2iXsSoj2loZ3U2wjxaT2qGCI+lYgq1hy0vsJLACOmlFKJqGIeqypV\";\n  b +=\n    \"iAfV67iZxHwqwnwqxnwaMe8z5mGbaEL/uzwGdUGhBDCJKhaG9qkKHkU6kis6Up5ijYY6EAxfQvv\";\n  b +=\n    \"kYwXpZ6cYaQFFx6ybpFA3SYlugppJFDzKSqomYfAowWUuGI9UwgBnGJXVAhly4UzteDMpPZcw8Q\";\n  b +=\n    \"ssXwqM8gJ2VECUNyRNT0C5q6mlHNo1G2E8MjY5lJETz1czPwkcY5ACKg1Tkh2mRNAmAZWIoo6Ed\";\n  b +=\n    \"S0kg9cQFdyNtG5qjwo6iIiIqnfgrArcohNSgazZAkfJBXOCOJ0DLBWQDIUM63J9YqCZ6E5JooNM\";\n  b +=\n    \"VEfiJXEEI9SAWFyYbID5lKoOrMmW0HKK+EfB70j1RVkBxp2NxDGBKTKgs+YwBJIZWKvwiUygOin\";\n  b +=\n    \"m0facYgLqtMfQSZcivoCdBg1I6KAT6A0tiw6PMcjhgsQQSohZKIYbwy2yKM0640BLWSgp2YEdx1\";\n  b +=\n    \"jK4SPXjZBBq97mWEoYoIm0DJVRe8tzYMTGJAm5hDpI2VzGAKqck8rl2RlWtbtR2wUtuzHUt+/EY\";\n  b +=\n    \"a/akTPpfjjEHJIcd80D/xDGMsKZ5QwCHo6AUTSknBYNycNQtBQNKRnxKHUZEY8en6Xu3+vgo7Tu\";\n  b +=\n    \"1MaSOQMNVYO8wfttTtrt6qQkYbmekiRYy6clCdwzIElQJ5+TJBjcZyQ5pV2dlWTQrgYlOaNdnZN\";\n  b +=\n    \"kW7s6L8lr2tUFmGB5IX7Io/gWSC3eiKm3QuqUQcC3QXKAk28PjJlqdvEdgIBDDvpqGxgsST4BYq\";\n  b +=\n    \"KnOWwbb+fMfgcX49s40+2gD/RbOXOR3MrfQpngHQusIRnLAxTL2MTHWtDxOSP8UIyJCjyIU6N8X\";\n  b +=\n    \"oMdo1oXNEgfuXkb5SENdpxqPa9BTpCTtlG+qMGeoVqXNEi/g5HvgUpmDDvp4Hd6jPI+DXbKwQ+w\";\n  b +=\n    \"GOX9Guw09XYgghjkrD4uRPAhszPEcK8ZYfioGWIYFzwmEcsXofvxADphxlgeAtgExBtmzkOmNUT\";\n  b +=\n    \"5IGQmhig/A5lJIcrRA35yiHJAdb9JH08yy/vcztIUuMFJbfz7ATYV6a/BDgBsGsBOa7AegE1H5t\";\n  b +=\n    \"BgBwEWAOw5DXYIYEVkFQ12GGAlgJ3VYL0AuwJggxrsCMBmIDdosKMAuxK5QYMdA9hVyA8a1tHx/\";\n  b +=\n    \"uoQ6xdjrHerCOv7VYT1HhVh/Qx01oaUUjHWYemXZoZYPwWZWSHW+yHzmhDrJyBzTYj1PnwYJVin\";\n  b +=\n    \"lwPwpQqg+oeexQ8u8GsVip7Fo39ot0txPUHM9HwYK+D3b8In8S69pxDniYi9IJUGkYjnoOVrYbx\";\n  b +=\n    \"HVIyQ8y4y4VENcgFqXQuwYxpsiGr1aZDnodZ1ADuuwS5SrRMa5BLUmg2wZzRYt4e1+jXIPq+zNA\";\n  b +=\n    \"eZS4Ptp1qnNMgBqDUXWUvFpMP3OK4PSXdGRaQbjEl3PibdUEy6E9DZPCS3Rro+gM0PSXcUMu0h6\";\n  b +=\n    \"XohsyAk3SHILAxJh9/kel1Iun4P9y4DX3uJhQHNY58GOQW1bkCe0mCnqdYBDTIAtW5EdtNgz1Gt\";\n  b +=\n    \"gxrkDNS6CTlQg52lWoc1yCDUuhnFiAY7B7BFyAsaDL8SdQtygwa7QL0ds2Kc49s3i0Ocn7AinPd\";\n  b +=\n    \"bEc5PWRHOB6wI5/ipqDLSydK2AoAtCXGOX5q6NcR5N2RuC3GOX6haGuJ8CDLLouVCwfsNfEsnFg\";\n  b +=\n    \"YAW47CQIPhF6JuR3bQYMcAtgKFgQbrA9gdyCsa7DjAVuL2oMFOAOxOZCAN9gzA7sINQoP1A+z1y\";\n  b +=\n    \"BO2xhMAW4VcocFOAexu5AoNdhpgb0C+sLUtAjbFe6Itwo63CDveIux4i7DjLQI6uxcpZmtbBMDu\";\n  b +=\n    \"i7YIyLwx2iIg86Zoi4DMm6Mtwkd7kLCP7zWlglAy4Zc5ddmTpnexNFlUHgRpcH9wPz7b+eCzFNo\";\n  b +=\n    \"wbIs9eYme4hydDvTbclAwE7SeBcrm5GlIZjn5HCRbOHkWklM4eQ6SM7iHC9DDNUHDTAtRh1+8Ar\";\n  b +=\n    \"ThB6sAZRm8vB1PHodsFuxGZ+DLx6xMigEpaMFQkYKUxRtDjCzsDJkR9I4gH7UD/SL6iJaJekT0w\";\n  b +=\n    \"WAT9YWgKSQ0UmA2DdjqdRZYD6BIhPLmWBhCriVqC1pCMDnKgZoQfSAPP8rQGUyMchgMuzXKoYEw\";\n  b +=\n    \"IcqBqhB9D5UQ1O2CcokqOuzxwZSYMSE3NWZJyE2LhRTkpsfiCXJBLJogV4yFEuRKsUCC3BWxKIL\";\n  b +=\n    \"cjFgIQe7KWPxA7irJuUy7a5h2r2HazWLazcQLCRnVGbTFqIJcKFxUREXY2CPBAv2HYsXUdmF8vc\";\n  b +=\n    \"8PfI29TXpv0adXCUfYcHFz5U93soiB3LVRDjZL/jQwiwvIzY5ysPkFc6IcbHLB3Ig/gDqDQJ1eF\";\n  b +=\n    \"byOcbCQcbCAcdDOOJgf4gA/AzovZsMYB+djHAzGOMDHe+HiVhEvczRQO+oGtqvghhixkLsx5kHI\";\n  b +=\n    \"3RTzIORujoUx5BbFYhhyt8QcCbllMUdCbmmUg+0kuC3KwY4S3BqvSMgtiXKwnwTlKIeva9pk6Qp\";\n  b +=\n    \"3QenymLsgd3vMXZBbESs5kLsjVnAgtzJWbSB3Z6zWQO6uWKGxO4PXx8oM5FbFKxdyd8cqDOTeIL\";\n  b +=\n    \"k0U/LNTMk3MSXfyJS8L6QkCOvg3hhddkRJkPGRcmJHlIT9IFJM6HM3REvk0VRC1OocWym2TXrpl\";\n  b +=\n    \"hTMqA32MJywxucDRuEg/JRn47NJowi6a9Emm1/hox6rnN1Roq95IlVhhJTeiQ8ONKDFQPyyDEay\";\n  b +=\n    \"3lGytUJK7+Qif0eput2OHfSZS5gzvvErj61UYJNryc+B4WziO9L4IEiU+cIRs4Yt26bWRXYs5h7\";\n  b +=\n    \"WLNg2tSmyXjG3TbNb29SuyGbF3G7NWm1TXZGlirluMzJSMbvPjOxTzO43NdO0TR2QLJiFwbgy0D\";\n  b +=\n    \"Mat24YYv6kGdmEmD1lRuYgZk+bkSWI2QEzMgIx+5wZ2X+YPWNGph9mz5qR1YfZQTMy+DB7zoxsP\";\n  b +=\n    \"cyeNyMzD7MXJNtHJtPV0QzIyMKvHBr4qfgeMrOCpIVFTF4e/HUsc7TlYdFh7AgWFuaPKM24alNH\";\n  b +=\n    \"VWRZYfaY0oyqNtWnIosKs8eVZky1qRMqsqQw+4zSjCggg4osKKKC0ownoIKKLCeigmTBZgmuj3G\";\n  b +=\n    \"BVotFrGFpJguwhhXZK8QalmaqAGtYkZ2C2R5LM1Ha1EErsk8we8jSTJM2ddiK7BLCnhWZJIQ8K7\";\n  b +=\n    \"JGCHmWZogA8iSLH2xarBHUJ9MLv3Ue2QDEH1ak/hN/WJHmT/xhRUo/ZoesSN/H7PNWpOpj9qIVa\";\n  b +=\n    \"fmYvWRFCj4hz450e0KeHan1hDw70ugJeZJFXdoN7gmngbyVFNROharhVOnTpCuXe39N41Noq3Fp\";\n  b +=\n    \"sicS2EbhS7iMzcJ1ICUNlJQkrY1IWlfL3trSWkXSWmmFKimtaxTtANlsoLQ2RFrD4PbiF1L37tx\";\n  b +=\n    \"env7OosJHp934NdRAZf5lulJ7p4aPQikwBvVF3oNg+uHFLpxG+T/AYB8VF4YMMqQAtoZAhhjSit\";\n  b +=\n    \"8iYwgFzJhpBSADBNLDkDYwdASC31EysGfApPQDEDtwOdPvYsaT1h5mfBkAZVKcQT6zg7RkuMtC3\";\n  b +=\n    \"GW3q3U5oHfZq3c5pHfZr3fZz122xl326F0O6l326V12+1qXA3qXA9xlEHfZq3c5pHfZr3fZo3c5\";\n  b +=\n    \"qHc5yF22xV326V12e1qXA3qXvXqXQwlc2vQh4X67ZC/58Qs/euHvX3jhvx7fu6fkLPnjr6D33Wd\";\n  b +=\n    \"e+LO90gfuw0teeOHvn/j+Cy98ZZo0x+/2Ljly4XN/8sHnjh/6riHTwWPvJZ/5g4OH/37oS39+Tq\";\n  b +=\n    \"Bo8zhLvvYPH/+tc//5vQ98QaBgLwD0t774whc+9hcnuycJCmz6KLCNn2aHseKXju2S0xU49z3dh\";\n  b +=\n    \"cYvmHt2V4kKeh3gR7gO2LQTnaI2XaV0VynbVXJHmVN3rTkN1ZzToFVzTlatOfVbNeaEyj2srvue\";\n  b +=\n    \"xq9uhzPzYEJdGLwEZmjJjIacEi7rM1wnHaRw0g30eW2YdJ4QgIoOlmYDn3ogFPQ5XaVCF6JhptU\";\n  b +=\n    \"NVdMYf4Z7wQ9R2/gdK8bh6JjpsWpgprsmZoZqUntQ1cLMgKqBmT6FmEkTZvbrs+4qNRJCLJxLSn\";\n  b +=\n    \"CHD84Idzmq0UTsqwh35fPcOh80IM7y1NgWjPS7wBJghHrUy0XGnxdksBdhqm6XaIHaIBYWdOT2M\";\n  b +=\n    \"3Kbu0r0+fMei2iCZpngt9e6HPz2qhr47VG18NtdE79DtVeTWQO/YH4Dfhto3od4vA0871ILTZvm\";\n  b +=\n    \"khEKXLSEAo1UYxwxHlGgWShwSgkFmmIKDJhMgYtMgVSQRwo0U/dOiDMPaeIFWe7FFQ5OMQWISAN\";\n  b +=\n    \"CpBwzA1fJ8TIRIvUIkU7VINIA3Gp8V2lCV6kVqEVUUcRE+Gxd6NSnLodO5EpSSadesxadesxadO\";\n  b +=\n    \"quSaehWlIPH5e5iHbkKx5vY1CgYU6imdNcCkLJ/SElW6jGZGJ2hZRsFUqeDyk5jmq0EoaIkhOEk\";\n  b +=\n    \"mfMBCUnYI0HmJD7Gb2ZoBkJOZHu7whSB70u+mp1nlnKk0UnS4lo3Zug9ZlatB5M0PpQLVr3Cq3P\";\n  b +=\n    \"8GDG67QeZFpP6SpN7SpNE17rM4mn8dmbkLvfvBxyL95YTe3ZtYgd1KJ1oQapK8ks37+R0d0dD64\";\n  b +=\n    \"0HQGLccW5SFNkWp5FC9FAFmsvzNCFpchscihkk0kxm3QTm0wTNrmohE0mx2wySGwyVdjkTMgmrT\";\n  b +=\n    \"Gb9FuyfYSLbGLEBX0+4jqDLIM8xsRvYj4V/hhK8MfRWvzRl+CP87X4YyjBH0dr8Uef8Mf5Sv6YI\";\n  b +=\n    \"gx+3hAGn8Ct7FA+MNs4+JQHi6FdaRpMs5nx7lOrZpq1TLvfx3URTvtirWl3+/q0T9Sadn9i2hdr\";\n  b +=\n    \"Tbvb06d9omLaAc58vFDuVIJyoQxUvMKZ/OcT5BdVY8hE+k8RHtqf4CHZc3tMpPLUwGXkMyO6LGu\";\n  b +=\n    \"QAaHKbORIB4ULfwoKa4wLpnONcQss9O7wgmlQTJsuYB4QLDuIL2SZGMudgQSC9/tJBLPo9xHTIY\";\n  b +=\n    \"JP1ULwACE4EATv95IIbkIc50K+V4I9X8PeoInYawwXjynYy3GVLBHIRDS6wiuHTOGVRq5CilqAW\";\n  b +=\n    \"Bwnq3ihLGKXKzQvsAoB7pDjCTOk3bUAokQi+zrDyu4rmCnwDX1Zkp5Gi14fUdQkmDlTiZku+oyU\";\n  b +=\n    \"7ApmjWlvw1k3hNuuKTyX1WZdwEmHYqdNOKZB5rzAaqUptcRTSkXK7vlwSrwNsVYmU2Jl7Kgvypg\";\n  b +=\n    \"bjdeNxnvRSI6XOMHAcYfjbU0ON73ACvAzazgO6RPuxGO5GI4lT3W5V4Az2BecLrDaym3RV+52L6\";\n  b +=\n    \"evtxFSSvhEsvdjz9KYSu59ORW+RQRW2P3ku2uAxP/KH+Gbcf3dfw3jtPnAD0R80Sn79HVT7AwfF\";\n  b +=\n    \"Fd3GDh3A+6cx6DNEvT2wuVHbbsekxd3SmZ5NvuAKjb062Z+3cyvm/l1M79u5tfN/LqZXzfz62Z+\";\n  b +=\n    \"3cyvm/l1M79u5tfN/LqZ/xLM/IE/eJnN/LjDuplfN/PrZn7dzK+b+XUzv27m1838uplfN/PrZn7\";\n  b +=\n    \"dzK+b+XUzv27mv7Jm/qGnXmYzP+6wbubXzfy6mV838+tmft3Mr5v5dTO/bubXzfy6mV838+tmft\";\n  b +=\n    \"3Mr5v5r7CZf+zlNvOPvRQz/z0lNUnClDaRmW/xt1UoKCFU6QzjBmC8AwoU4MUFXlzgD1eQ3VGzK\";\n  b +=\n    \"w6IHAcP6M1QyPAwvoqF0RRAqclwlA9oyIDuLAW4jgF9WQrpFAMGsxiaNBMDenIUYyEG0FOMwgra\";\n  b +=\n    \"TGFYDMH4NyqOM6PiODMqjjOj4jgzKo4zo+I4MyqOM6PiODMqjjOj4jgzKo4zo6oDtE6JArROjQO\";\n  b +=\n    \"0TosDtE7nAK0Bb7OJ8Kz8IGU6J0ETC6ZxEh+4TOUkKNrBFEoGAYVlVXEoG1UVllVxOBstKKuqCs\";\n  b +=\n    \"oqD1a0kKyqKiSr4vA2WkBWVRWQVZ6maOFYFUe60YKxKg52o4ViVbVDsYaIlECsU+NArNPiQKzT4\";\n  b +=\n    \"0CsAdt2iTCs/Mgp4OT5GLGDMWLPxIgdoJCtgto4yo7iKDta8FXFgXa00KuKY+1ogVf5OZIedlVx\";\n  b +=\n    \"xB0t6KrioDtayFXFcXe0gKv88EgPt6o4+o4WbFVxAB4t1KriGDyVgVZDnF6McSphVqfFYVanx2F\";\n  b +=\n    \"WA9bgE0FW+TGb4BRMuRCn+DxPcAqqS4hTjP2TE5xS3J9CUIiCqzaAiOGoKPQgD3bOxiArcVVNLq\";\n  b +=\n    \"NYKxSEWssrLeqP4qg/WlRVVRVVVXHsHy2mqqqKqao4ApAWUVVVRVRVHAdIi6eqquKpKo4GpEVTV\";\n  b +=\n    \"VXRVBXHBKqMpRpSRyKpTo0jqU6LI6lOjyOpBqxrJuKo8kNKoQ7o3yF18GmoUAestpA6GD+1NaQO\";\n  b +=\n    \"RiJyE/FTVVX8VMXxiLToqaoqeio/gdRjp6qq2KmKYxNpkVNVVeRUfhCsx01VHKRIi5qqOE6RFjN\";\n  b +=\n    \"V1Y6ZGuJWIqZOjSOmTosjpk6PI6YGrG8l4qXyA1rBLaipIW7xSbDg9mKMW4yTOjHifB/jbepxUh\";\n  b +=\n    \"XHSNKipCoOk6TFSFUcKUmLkMrPw/X4qIrjJWnRURWHTNJioyqOmqRFRuWH4HpcVMWxk7SoqIrDJ\";\n  b +=\n    \"2kxURVHUKqMiBpJajuW1HYsqe1YUtuxpKaO4mio/HA6lNQxbgdj3IKCHElq+qTDlDC8XixHPPxS\";\n  b +=\n    \"oiYp8vBfQnJQ1KYGaJGVKKhm1BZ7Mmv1BDkjMDRVo9yfg9EXrpOjkUgTyXViaKcwC79UpT+sAoU\";\n  b +=\n    \"Yld9aTJ9vRDUNeom1KsUqWhaBWR3o1wKiapZoTt9iMDWlTNGn50KlzBSlTNHHF8oYf4qVMgtDqD\";\n  b +=\n    \"fFAAww3Bw0xwAM6dgStMQADG44jiLShX2kIiQgfkgV5DLW/yjJmh8lWeejJGt7lGQ9r7pLDe0aJ\";\n  b +=\n    \"qMsll6Hn8SkFBbAKK57OQZBneLdXqY59aVI99cQma4ADKVFkY5wL00MiZOXpjCok+XboLhv9nMf\";\n  b +=\n    \"wXiJlmdR8NSM9n3QFH6FR8tr49cGncR+lkPw6TcaZGU90RWGP8skPkWKpgBCx4dB0WjAqagfDlo\";\n  b +=\n    \"c5jjGa5gr4Ad6JPZrCEOVwCrP7izpX2tFfUDP48qNm+DK1UtRBuh5XP0O3caO2mAPdq0eWDcZlh\";\n  b +=\n    \"lrMGKcE5FwMFGFo3XW7jNQsQmjZip7AZswkMwuYLsFki0L2FiB5JQFbKFAcsYCNktUaIvg00uNk\";\n  b +=\n    \"yMDATdRtjbUEc5ekOwxzj4v2eOcvSTZZzi7j3VrdZKzoc5+2gkm8IPwxD1DDRp3F2m4j7OnJXuA\";\n  b +=\n    \"s89J9iBnz0r2MGfPSfYIZ0Ol9pgb5Pg8JLwpcVCSdyrYpuLjwbEaiRsya1HqHGePSfYCZ49L9nn\";\n  b +=\n    \"OPiPZSzI9ye7zeHqi2R3w8EOa8cLC496mSIor1KwYndzsgGRPc/agZJ/j7GHJnuXsEcme42yo8F\";\n  b +=\n    \"zwgoma+A5aCNrrMyalzRHOXpDsMc4+L9njnL0k2Wc4u8+WsXI2VAJO+7C+os0AF1I6sZCsiqVoV\";\n  b +=\n    \"S7FxCJ0Em3jXLW9X+5uwmcgX52m0ntb8RlIj7mx5OCnWuYru9gILed1zgdtowkjXxqUbObg4phs\";\n  b +=\n    \"wWiZnBzHQcYxOR6DRHJyAscbx2QrBpbk5EQKPY6pSZC6iWCTKQg5pgp472tAF4JLG+hBcJkBOhB\";\n  b +=\n    \"cAtB/4DKlWMRLK37laL5qwc/HzleF4gy8ZItX4sUvXoXTxi/Gws/srlJ+yQvwL//ewALYY6XgKf\";\n  b +=\n    \"z+2QMBfmCwMcjj15O6So1aHTsIALjEfG8XVU61q3VQuRBcFTRy5Satsq9VLjyF3w97GCpPDq4Mm\";\n  b +=\n    \"rjyZK1yNijolTPtahNUnhTMCCZz5Ula5UKycrZdbYPKE4MrgklceaJWuSVZOdeudkHl1qAUTOTK\";\n  b +=\n    \"rVrl1mTlhna1O8BPm00JWoKpwbhgWjA+mA7iqBi0cuMJfBnPl3F8aeFLM328ulnr/pqgRcu1BeO\";\n  b +=\n    \"03IxgvJYLgglaboo+rCg1JUpNjVLTotR0vHvZ3L4RDK/8U9vx+33lvTtL3vYdTGI3aASoF6QQsI\";\n  b +=\n    \"4ATQRII+BhAkwmQAYBmwgwiQBZBGwjwEQC5BCwiwCtBGhAwG4CNANg+lMB3fcAPX0MWgA0TUD7G\";\n  b +=\n    \"TQOQFMFtI9B4wE0RUDdDJoAoIKAugLFi1FFi1HFi1HFi1HFi1HFi1HFi1HFi1HFi1FFi1FFi1FF\";\n  b +=\n    \"i1HxYlS8GBUvRsWLUfFiVLwYFS9GxYtR8WJU4WJUuBjV8Itx9uUsxnmXsxgXXs5ivOlyFuPiy1m\";\n  b +=\n    \"Mtw23vvQF+ooutWHlwWUsPE4VR1iCsyuX4LzKJbiwcgneVLkEF1cuwduiFVeUVfL2aMGFa/D+aL\";\n  b +=\n    \"2FS/C+aLmFK/DuaLWFC/DOaHGH6+92UHTxEJt/0OHKAuWfNHfKoX4QQWAbm93Jp94hzMAvHD5An\";\n  b +=\n    \"zl8rJTHb+sRZB3+2MTvjEQosrnoYfzxk0U+F23Cn2yyKMtF2/CnkCwqcNEu/GlJFrVw0W78aU0W\";\n  b +=\n    \"tXJRF/5MSRZN4SIUU8hQibKAy/ZR2Yxk2Qwu209lbcmyNi47QGXXJMuuwacGgDn8emXEZGZggda\";\n  b +=\n    \"0HX2UGJ2QBVNj+9NY1Q5FiOATyvywzNfKfC7LhmVZrSzLZYWwrKCVFbisJSxr0cpauKw1LGvVyl\";\n  b +=\n    \"q5bEpYNkUrm8JlQVgWaGUBl80Iy2ZoZTO4rC0sa9PKEKt4qMJ468R610C9znbCKWB6NvElYRm/b\";\n  b +=\n    \"zUPv9kFkHnMnAkqGHQqg36T83G1IodWld9EH4icj4sX2bSqfPHGkodFi5lXq8pPkskKZbcxx1ZV\";\n  b +=\n    \"OEUh7qHsdubbqgqn0bbHsjuZe6sqDJBRD2V3Cw9X1YANtJTFwvuEk6tqwG5bymHh/cLPVTXO0kN\";\n  b +=\n    \"5KHy7cHVlDaTU7OEZejbKk5ChaduMiYpHoRFD25VlbszQbmWZFzO0V1nmxwztV5alYoZOVZalY4\";\n  b +=\n    \"ZOV5ZlYobOVJZlY4bOVpblYobOVZaBpdMmoARDhziNZSzikFBXLWPpm09S5FcWuYy4ahmLCPSkq\";\n  b +=\n    \"FBZ5DPaqmUsoi8lRa2VRWlGWrWMReRlpCioLOKPvtaQsPSZUSlqqywCzEnRNWNgR6MmOxojsKMx\";\n  b +=\n    \"AjsaI7CjMQI7GiOwozECOxojsKMxAjsaI7CjMUZ2NJgdHXyIA3b1TyYpS+xqTz6Byo+v2KOfXiE\";\n  b +=\n    \"gV3STXiEgr3w3EMigLU71fggZssUn3gsh3aFLeyqE4AsD8hYCf2jFDzN4rOyFGXSvT4WZIarmSp\";\n  b +=\n    \"cuVpMMHr+mwkwflfjSG5VIZpAynrSB3pxoEvS2gtwHD2HdsDc8APXDDoaoa+kATwNT7G7PHwwy0\";\n  b +=\n    \"Xmy5CecD+0K50P+iJCd9D6kbwgBMOl+yJ87siv8D/njSXaFAyJ9jAmgCSdE/nqTKe59sOeY9ApA\";\n  b +=\n    \"aon5vq6SQ99As9EHxwx98H2E9dkluwsdadBraJS59Fs15oLe39VzQZ/lGnMxasyleh74AgIO3oI\";\n  b +=\n    \"9zUSnUHzoTW8D4EdkwrcBPJhYkFpyy/596JjkoGdRF8+6x2ZvO3S0MUO/fJe9RcnZ3uGPWyEY+7\";\n  b +=\n    \"WA6/0QCe5oBK2FhB6rJkGtmkhQNQmqahAU37kwyQu9wN7z/MFZdsbOiDO9Gb5V4LGHfAPhzEZnK\";\n  b +=\n    \"vruXRexQOAxpjwE4osEmSBPDnVm+DoB+WaRrxUhRSEOCWn8lTCs4oQ+cznG4YkIh32IQ3esOOxT\";\n  b +=\n    \"NXDYW5ORelQtHHbXxOGQWWtRmITDPlVqZncy/jCbNuNSnjBm4oTTiFb+vBh7SnviDm+Gryx46C6\";\n  b +=\n    \"HaGdPZg9JEq4nwv84/t5hFzMtvr+R4y9PMdnEm1Vj3hbyX00R55LXfoj1oyHWxV9yAmNdXPVxha\";\n  b +=\n    \"jLwXq/WQPrfWYtrPfWXL49Zi2sd9fCOpmg5KjdCnNmrIuTYpb99EoTscI2RDq7vprxWwpNMdL5L\";\n  b +=\n    \"YUWcio0Q4dhT95jaOSPWTOlxkXIx5cTiM/x/Y68uN2a4Rsgudi3FAmF9EFi+DoxaOngKxQFcbo1\";\n  b +=\n    \"45csIr9ek99EiOkl7yM47Nod0Usc8nFRmZdDrwGjBr0Wb6xBrtm1qBXUIlahilY0sLtLkwDHyNg\";\n  b +=\n    \"tNE6Xcbs/fKGGcDuZihz2FM+zXHDEKTVy4Db5jZs8fztbw3cpg1jOMZZzEc3PJ2guwsdA4vvCNu\";\n  b +=\n    \"IrmmW/YuQXk1+KGAecVeDVaumvjQj58M2KmHxHVQ3y9Zk6+eT9Aif0vB7P5BN3c6j+gE49m93Mc\";\n  b +=\n    \"+Q9a4ZvQzTKmxvo/NvMBY74Ek8Wt2iTX3dxIyTKGzFJJKIXfB4xlmGMZQBFKHwBdVlypzbLoTe1\";\n  b +=\n    \"LrYH6T0Bnxy4zfA9gXGx06/JrxI0R6iTlw2SqMP3EQpAIkbdCbMG6hYj5mzBnLz74ITe5k3sKE6\";\n  b +=\n    \"UD8fNYtEtjWf3Xf4sHW/ME2LM4AtdDn/GW8MJLBXARD7cwTKEZFyqGUAG4/986PCuY2OIvLp9oY\";\n  b +=\n    \"T4xDcnsIE+8fkIG+ITn8TGbERGkyBDfOIjZDSw5zeJH949cFShvLoYyqvxIq8iXnMFYzz3ZqIdz\";\n  b +=\n    \"h0n6vJEm9hjmoXXxdB/O62vNBOp4Qsfidd6PvKZpvd4cZ4NMr2Fydnl2MXbJTKxUzULxW6PNK3z\";\n  b +=\n    \"ribPmBsdHho9FUdgAccYqibiY54KGZmwV8CxhhtvW1LTSLFXd0GQIp79DrugE727ZHQ+u5Fz31C\";\n  b +=\n    \"1VfDqa77diny7VejbTdSmT7clA7Ir9O1W+EA19O22E77d9P6Ig6u8aJd9+oQbdhb6dic7DGz07b\";\n  b +=\n    \"bFt9smzqa2XY/RhzN9/HCm+HbTBwLr9lfd/qrbX3X7q25/1e2vuv1Vt7/q9lfd/qrbX3X769Vsf\";\n  b +=\n    \"yVDaL0M9pcWQqtuf9Xtr7r9Vbe/6vZX3f6q2191+6tuf9Xtr7r9Vbe/6vaXZn8de7ntr2Mvxf76\";\n  b +=\n    \"fyerhr0K7a9ec2MpO8NQi6v/g9re9pKyOYMBgEpWeeYKmJm11F5cNopW1sJ34dWu8uEvPctvDTU\";\n  b +=\n    \"GRtnuLDqBheAuvLV6Z9nEgEbW9qIPtbMrcmYZoxxdgp3G276RZueQh27QuCcAWhUWkackRkFi/1\";\n  b +=\n    \"AEo3tlWOIPW5IdpgSTRaAxbD5FxB70rQAhWTMDA20rX3r3Z43CrzpGJvBxYoE/0qigA+lO4cRgT\";\n  b +=\n    \"qsCoBHht/BUSS3NYXCnq1cCnQ1CQ2cZX0/mmE9mZ9FCeluQRXL425fm7Ai3q3JmjFs7o+MSEKhh\";\n  b +=\n    \"046xaS9eYhQLQAkYtx0jFYHRFJZ0f/Zr11Xglp2dw5IK9A5fmB2+cDgkKw3J70Ukj4ryGuO9LKy\";\n  b +=\n    \"7I6G8AChXgGE7yGKsHLNwzC9aIYMDglfZuIKZFuULwNhlRYQIVOGHZtFFnscsrUIgbjGFkSU6ix\";\n  b +=\n    \"506cIM7PJeXNseJLDUpkmlluUwMABUs2n8uPjhdsU008KH2aVhBhm1mN7+bcO/lZM3lhx7LzTbT\";\n  b +=\n    \"XG7kBXTT5cKS7q79/3E3QOinHGzd3nOpE5hQJkEnm1kmZCJkU6Awh9+4NfMPYxXWNZ7YW6I1qdK\";\n  b +=\n    \"DtweX/RTnYhElCMO4KtsZYiUJg08cPBVEHyRWK2YXHQB/07WpIhp0Eq7MaIoSXHCn4XIftqfhAQ\";\n  b +=\n    \"SWgTbmdk1UtgxKeyIFPjK1PNICjtBClNI4Qsp0kgDEsEWUQGyDuHfxzdE0styVoR9ZqkU3ijFmE\";\n  b +=\n    \"fch5jHiG0bG5RnmBlpkXUz6NOOt0E0WPSOYpBCerz7G59+2g/pAZTfWEqV9yyjoStpiRxSkhcFQ\";\n  b +=\n    \"kr843v+5PsqbJYqP7aMGI5GmtLr/XtKp5ct9EoJvWyhlwUrM0ghyZxMMcWDtmjmKCeCVIJyQjU7\";\n  b +=\n    \"QTUAWDhc4W/AeBW5+o1qeqVjenkavdLlfV8Genkj0is1Ar1sXDSV9LLxRl4Netm16KUCeyOIygp\";\n  b +=\n    \"apDUq4mBkaXlEyr88+n8yIU1soAm1tCIq+lVUPPf1b//AjVt0cQs7apGtavFvn/idr+TiFv8Pt3\";\n  b +=\n    \"CiFoWqFs//6IW/aYhb/DfmlJZQEkf13vs73zR0XvGEV2zhFS/ilVYgL/KKnwkFksYrdi1e8Sp5x\";\n  b +=\n    \"dV5JV3NK93miLzSkOCVXuSVhtF5ZXhOUSNySi1usX1lGlbE9l5G4xHhISfiIZ2uTgUPZSt46NJz\";\n  b +=\n    \"z6va9HVq0/fxT/1kmk5eauBGDVqqGvz4B89dNOIWj3ILL2rRWtXiE6e+/NvaoHZzCz9qMaWqxYX\";\n  b +=\n    \"vf+Z3NDZ9F7dIRS2Cqhb7T3y4Nxu3eCe3SEctZlS1+Po3//Q72nJ7hFtkohZtVS0++pMvfjIdt9\";\n  b +=\n    \"jFLbJRi2uqWrz39KVT2uLZyS1yUYvZVcvo72x9ETVULKKGaBHNk0WUH/Miauis3hVrLR3FSyetL\";\n  b +=\n    \"R1PaWq4WZ6My8dkLcUrn8HlM5n7M3H5pCIthYNhdRZz0F8KVkwax+njG9YEthBUhNnAkvFpj8+x\";\n  b +=\n    \"qkK1aC1hSBHIpf8ve28DZNdxnQe++/feffP+7gwGwAADEv0uR9JQBCXYIgYURZG8KPEvlIrcLVa\";\n  b +=\n    \"KpVKlVLWuWu2A69UMaIYVD4CRBMlYG7ZHWqwNx7A1iZAAsYFobMM2HDPxKIa90AaJRjEUw2t4Pe\";\n  b +=\n    \"uFLMiCs1NryIFlWNzznXP63r5vfjCkaFvxgkO8e/rn9u0+fbr7dPf5Yfs5XVk30iqNtAZGF3ZU+\";\n  b +=\n    \"EejivZre7sd0zjT7eca8SgN9rDljm4coP4HqQWxaWN3BEV9cCZTojvWf6DMRQr7mJ2/9IXKkzRF\";\n  b +=\n    \"EIsX0b5hGMwkc1ghhilFIBP1B23KZJ4QtmVbA6Zg2bCU8agD6oYqjHc7YAgnsbBEMvcnPHLXqAQ\";\n  b +=\n    \"1NMS8EDJnDDQhFGMCINw0Kw38AQMOSxsu7+Za0c117uYmTjhHKh0g1H3Xd989NuzHBwPs0+aCvW\";\n  b +=\n    \"mMfZrx7q98uFXJFgm/sHlXGccSqvvOGQ9rA/aKOrpph/gcegmK9zvp+6mfdEQL3ePwVgn4SV19h\";\n  b +=\n    \"uAkL09BRDVPQqaKmD7amXw+fhxbXFFqp1SJavkNtdjvF+UgUzdwLf9KJT29JJIXJNR4vuVZ0799\";\n  b +=\n    \"pvEC1Z0IqM9adtOcGLGc2/TxGUMuDTqVNnfzUR427LLH7/aV7fuuWZytVJML3i9l4dyAvThM7fH\";\n  b +=\n    \"+mzM95akfCLHOZPFGMYzmJU6ZtymlTy/ZT/fJx/v2eJ86xB/c8+jhno/0Wk22b+slWyEM23AsJz\";\n  b +=\n    \"P6vJ4GL/U02Hl3/W1u/J1piHoMKfeexNAHmPIX/ILChZox5EKhapp6K3mLRstkTZuycZS1HrLGR\";\n  b +=\n    \"zzeq71Rspb6RCuVSpOg4shErxNBK1eyT6r5+jpa3n79Hd2Lmjfc0bgKreSdjJDt5Ip8RiZIL+lQ\";\n  b +=\n    \"5Stc+YpMVUISFa18xZ2qKqh5padPK9YWebk/K7fpzwoqXCkPseVFuZVZGwFuecubxOj4bmlSUZn\";\n  b +=\n    \"/XzdJO7eW1J2CbYevPvBWw4oMvBLt9gw8FzFeqTnOV7VJlfUOvBKGmC8jXPDgyp6zlXucOehXaP\";\n  b +=\n    \"skFeNDrtDpsNjpMGZKmJMskB30MgHfUb/ZbYCUF7zuXqPZI6nLLVQ3EFdO3RAf0K54TpaGMCfOY\";\n  b +=\n    \"DXifPPbersS39iEIhfst6uocFjrrKlc3xCn6OBN7lGCnHwvrEW+t63TGyThatLRulXZSUe5itK1\";\n  b +=\n    \"eRVNdY2uZW69VL1qfqvzBvt27SLtHdTr6ljb0mved19TKw5zwEOX9tiWjudzXnL9nAE2hRXdDOm\";\n  b +=\n    \"2yHJ61Wzpn35BOQY+jkqGaCMF0bCRSuPfbPVrsjObCXlnhg1ZoNyhbtb5tMpuyYJxPj/sBnZLJu\";\n  b +=\n    \"3hPTJn3MnHncvz0WZdOJMg6fB5BfZWXEEEOA67s0oeyZbIkFTnzxdbPQkFHA9cgWVMozyR9zF5Y\";\n  b +=\n    \"l7CklfCikTU8iQpTr4pXLRsDW0pS56zNwx4rgkKdtu9M5VjTd5pcifWNbuE+p7nNZ4vTuumTxdy\";\n  b +=\n    \"nAr6jD7Jacd6n6mz3yeHwhq7+WK4j6kBV+d8TO7cjq5ZnFuxBhe+f7eVgVO3ikxd5TLptQVu8Kx\";\n  b +=\n    \"f7AGLjyzYj9TlM3W7sEMsq6eo3ttl+7ZgylGI7HNumBlRXk/TFnqa5ry7/pZp05j8poNSE/MYWR\";\n  b +=\n    \"UDFqa0hLBinzPl5X2O7Ovrc8n5pvV5b3FuxdaPmZWLfEM9XGDi9fVwb0PecA8vcs8Vm18bIz1bk\";\n  b +=\n    \"U+VD5aI7+lhzAOHF67nK1Kfs2qU+7ZixR10atd+rdymX3sZvJWLciuzNi7W2msIHr5rmrR4p0k8\";\n  b +=\n    \"20byohBklQ9EyluOYptRNxHgyGlk7DRSSblUwTDfDL0ZbQ158bXlha+zpVUZes5qPY2Q8xFd4te\";\n  b +=\n    \"Ye9baNtq3lRp65h6XILxS05yvhsu3nOtuX0PMF3dx4w4uNFrOhUY5pYarUeqb34m3K9FF2+voTV\";\n  b +=\n    \"/PFIUl9G5TYeFxb19bcTnY9Zbvp7y8Xy+s1a9ar3J9vO+8b2u8VHDd+JJv9a1yvThPXbF7167eG\";\n  b +=\n    \"+rf27TY7txfT+faljJFf5c1teIwDjwveSz9zLS88w0wvDXhBJO63VjNeD37p5kQ+6df2uoPHqxi\";\n  b +=\n    \"/7TwGW9vGtIGyvBGKMxmeJeSHYTQ4NQE1YF2jvdXWDLtpckUl6RFpgM4u5FMAWeqcqaIRb8wr33\";\n  b +=\n    \"swk/80T+iXezHL1RpTxuO+qdnvLQPl3qj/ikC6yxHEGTbX4Lk1RkTnDHRGVM9s5+Nbos5zM0n09\";\n  b +=\n    \"o+s5mvgZsTpraPZTeHOFbCuBX0Xkpr8EYxMZl5+/iC0HuZdoRVekzSpxsQW2tkhrEU4lPRmT2v/\";\n  b +=\n    \"erXf2bjlHxov5rZ5KJQBu37tv/AZOqbvjOUnepDbTjARsDN0B60CxfhsBBu6mdMbmM83OWfmPHw\";\n  b +=\n    \"mKXHUN4Oqv+3Oceh/VyGNG2LhfTjqb93DCgiimgIznIMEnXspd0iRU6cyQ2GT8GxDYWtyXBYRod\";\n  b +=\n    \"A4NBJvjedZX2NXf7xGa87TGXG7DXAbJk6Se9xwRPjbhdEQH6A5nIXOPVkZG9xugAuUjY7XeC/7i\";\n  b +=\n    \"6I8J11dkGdu2CzdAHjfHPeBdukRxT/2yyQm4gfNpuLXtiy7l449Wb1wi7/2B30v270n3jz0H/0D\";\n  b +=\n    \"vpfN/pnGf0RzSGMcr8HwUOPAKuYR5f1xZDg/hFQPWXIUe5blI9hOtIlJPm8T//jK2P+kRlxP4b4\";\n  b +=\n    \"Mf8wh7zkK0ilpHE+coQUyKz/Ita76RGcZ/rJL7MTXxghJ6ZcQ9dZcILhxRF1Q1Zy3zvzFt7tOM5\";\n  b +=\n    \"5r1d6Ymb+tALxHd/GROi/KEuk/+6v/CRhKIA0eLF6QwCG1kPrkXjcQnEONXMoyaHBHBrKoW05ZB\";\n  b +=\n    \"SC7FcKRyG8XSDKgpjL4v7xLlEcvq/ieRX1kQzBvSbfLbwIBjaATrNvGk+k8bD1bige+dgpW2T6W\";\n  b +=\n    \"GvaTYvXSGP/fOBRaBsAZ9PDZd/JUkmRFPezfg7wySzjsyI94QOp7AxXnMAZjgiz+U9TX6NxMwCa\";\n  b +=\n    \"2cPdPiWKbpwFNAd4tB3Z3q2xMNVBfKA2wU5Ygpe7A1SjvnFAbdx9s1g/DaeYWJVheNYGi0IMCuF\";\n  b +=\n    \"iAOCk6X/Z1CbSeha9TJMMS0zBQd044Tet7+22UK8nux1mi+ZErOZvqosJl48S3idMC9oaeycm08\";\n  b +=\n    \"Fs+0R3Iw+B6ZEXx7nzN5U6X91jS13HWcVOKaAOCmgRBWx8Im0Nu06zkzw7a4SNmw3GyRDfLgM70\";\n  b +=\n    \"bYZEkJ/fdwkRYY1CKJJf4OEeJ5xnMHZMJD6ZBDEJmVnleRu45kOC83lYzEUyiLO9rC31iN7tFvL\";\n  b +=\n    \"Qr5LwYx2mGcTop4fJBqmEiyp+OhsIIkpxieKAbl4L2WPoIZCImjDy2nf3pxp/9sgjIM06CaIUJk\";\n  b +=\n    \"wUlolJiZpBJQIY2AtwqibAUsYfSAM2kOY/ifSeokw2nn2Dg3x9rjpmHqJMNbOUCKMNo9LqMytkz\";\n  b +=\n    \"Bqr5MwWisRBq8qM7zWEHDUAscscNwCsxY4YYFTFjjNAO2RsGn6zDb/LlHbgtkMf0TdPhuPL2jou\";\n  b +=\n    \"1zZMHlF5Q/gMypMPmvdigYSkTuIC/hPsi+yPAwKk1dDx+0kBNgq2fy35yvjmjPMvTfKGyICt8QS\";\n  b +=\n    \"EFKeCFEhPq8CfJ8GReSK1Zh2qsHa+E41JE1+WZGc3sCb8smKyhmcBQo0CkipIgerJ3OmCg2u+Y9\";\n  b +=\n    \"9oeK2Yd6K6XGvqks8dq2J/eriX0m7p512V8SDeRpm//bEvx+CY2V2SSiuvAU4aoEZCxyxwGELHL\";\n  b +=\n    \"LAtAVueQrctMANCyxZ4LoFrlngqgUWLXDFApctcMkCCxa4aAHxtG7C3A375Mr/pdHwGLWaRnYoR\";\n  b +=\n    \"1MY1TS/AFNwKEi4mgZmIzvIQlbVyoaeYFlRSM7eLj/kJlRYGkTQkHaXKRt00bBkFQj4eonJNHp6\";\n  b +=\n    \"VIinQrWdXqG/pZQKG5CxVZCQDC4mfI4oeW+1g4GvDlehaklbLD6ZvMJvBqV3+Ya3XNmckH0n/na\";\n  b +=\n    \"lcR34FDMfqbBR4xejdIH1TP1VkSoDW9qCV5eP0MWeOukb/nKk8qeddLcsGNXhr5bdS+e/SNdutr\";\n  b +=\n    \"HJJ3yWvikQHWezr82Xxrq4lEYR1NPT7ES3PNeJF+Sq+vVyk2hV2QvVkVF/KQSKRv3F6r4JE+yzP\";\n  b +=\n    \"k5H/RuacLW6z4SSdFWTbmrStSLpmibd0qTrRdJ1TZqOJGmpSFrSpEOadKNIuqFJhzXpZpF0U5OO\";\n  b +=\n    \"aNKtIumWJs1o0nQtT5quSdJRTTpUJB3SpGOadLhIOqxJxzXpSJF0RJPmtcnTRTWmtRrnNelQkXR\";\n  b +=\n    \"Iky5o0uEi6bAmXdSkI0XSEU1a0KSZImlGky5p0tEi6agmXdakY0XSMU26oknHi6TjmrSoSbNF0q\";\n  b +=\n    \"wmXdWkE0XSCU26pkmniqRTmnRdk04XSafBUcXCUTGx8w0BGMhIyZ6d1XL+aJ/lByURmWmXicxVz\";\n  b +=\n    \"Rzlmav7LMu47pJpR8QzvL3GcAYojSGZtaOeUe3OHpFMOovLol/h8xIgu9qtcX9UcdRMXVYVVZSF\";\n  b +=\n    \"arfJHV8Fy0y0Ue22mXyq3Q5TWBUKHKP+q1Vszkb9c1X2j1mRcStInasKeaaDQsHpRiHydJOMg3S\";\n  b +=\n    \"zDJV0SEZTukUGXLpVxmQ6LMM23SYjO73L6PBPN7jrJm3+7hYviNlrr/3ll35w4gxtYijfWWJOhs\";\n  b +=\n    \"9METP68185QJF3n5li54lTcGe5AUdC20/i9EYnGLz9pR/G23cRA81vGs69/WQ6gNwbJDNPOdvgn\";\n  b +=\n    \"3n4DL307dc+/01vgjJvt5n7kXlAMvMkNEx7JskMuy4HS5kTZO6XzDwtbYUWDWee/We/+WvVUuYO\";\n  b +=\n    \"MieSmSeqLcR0S2YYhymX3EbmjmTmqWsIbpU486Gf/IPPlUtuIXNbMvNkthn+mTgzLMyEpcxNZG5\";\n  b +=\n    \"JZp7eNkFljzP/ypf+8+Vy5j5kbkpmnvBg1UUyw0xNUMpcR+Y+ycxTIMysSOY/+dyhhTKe+VSvLp\";\n  b +=\n    \"l5UhSXtBQZSOSRmp5LBPkKtlXPJDA8YYwuSn5eHD+DjXUXZB0pPYs0j6Lk723VwHQpC+ujLY/La\";\n  b +=\n    \"FuAXY2+EmhyzvcEyvVHPVy/bD00VjUycU1DM1NtnEVWwFPXMGXgisrOHH375BinhlmpPs7yKchY\";\n  b +=\n    \"54x102cz1vOM0LvtLbFWlFjbJ861AnCKQ8Vxj9URdWqEOq9So6hUI2RcpUZRqUZFictqVJodA3b\";\n  b +=\n    \"OzTOi+N3uWm/dSXcf9pph4eRbwQqbdbFeurl78pCvpjzOG79z0MOeMNmbNsSSB7X+m96z4WPE4U\";\n  b +=\n    \"xlcRYnP1fLBvkxniXy3Jv9w4lsPza9FY0iJMHhIE3HzwybygdaYvWAk7phdu6rv40zisfZeEe4F\";\n  b +=\n    \"xYTWD0STOm0/3SrsjXbTiDMTzwDRckwAzMcv/zfp5W92EkbHGTszR4Zb6Q4DMjOf+23eauRVkKc\";\n  b +=\n    \"qlaT2dpLbEPBC7gByYk4JSaSChYVXNp4P0swpRs/DVoVa36kkg1yMWBYfaaVu17Owglqp5T+5DA\";\n  b +=\n    \"ShrvoM4++YCosKAIFxG4Fd5Rey2/gszQIqi8lv1qzLZ1IqbEBVeTbtY+UK0zRDbmAlWrSBv1Z2B\";\n  b +=\n    \"Dci3POpydS+prHLDcBKOB4LeWPehCBzM5f4+JTQtyzYCnB1u99dhj6QYhLvhR3q/TSv/N93ApI1\";\n  b +=\n    \"zzL26cwmY4xDyT/BJes02yoAsEv+mJiI3iZCCt4KXuVGkCkT51zVpqC03PjvZRCIxvLeUw7LE5D\";\n  b +=\n    \"Z08yRTe4ytUxeJDEg+3uycMb4xdw7mrC8eR3q7jJ/XKcBkQL9OEsETpRIvpB2qc8M6xUo6rXB/G\";\n  b +=\n    \"bVwbnGVTVystUrWACO8PQIuUDLZokicK0C4Dq2go9QGMjZhqkUQLkhnydLpEgFJzSPJ0K9tFE9E\";\n  b +=\n    \"feDY0CzxHjOcfy063IYjliLOd95cFIi9eD4Fp2UZK71eWIpq42NWA6YJse2cF9PAZwQhe8lNI++\";\n  b +=\n    \"6vaFiiVCv1WpFwiWahtmMoYe5v1x9zuyg6Y4B9OsP4oZJ2Cl6g7aO7+ckyDoUZfynCivZ1IF5SM\";\n  b +=\n    \"Ql6aAPaA6dJXA/2qV/6qZ7/qOV+1jaNv+/rtQLAUMBqZNwxeYty7SKuwfih6ekWcOeSJsVeh+oE\";\n  b +=\n    \"8ay55UkWYPGuNLiwtMXlWLHnW5EE1jhtcrKj+4vNq+kXwUu2h9RpovdZD67WC1pcVBsMxKw6Alt\";\n  b +=\n    \"fotZnkDu+naQK+UARhmqahszGV0zsh01wd0jO5GZkG3ogx01L1640cZz7PFYQupVcqH0l8Rms/3\";\n  b +=\n    \"BVIz22pokQgviCiztYMQPjaMA/vcWP1YsXD1OJL5+pLcQPVibvN7BIyEhwSw3RJPjaechGX8cHL\";\n  b +=\n    \"eUu5354ZHmMF+seyBUmgyl4hSGRXko/FJobRhgqVzcMSM8mSLeJxQ/389GQLRE2Z/3mMmT85GZv\";\n  b +=\n    \"mk4BST0aOlpz6HwgPwsM21Y3YkmeirNKgKZqLK8qETV1MTbwumz7IRUl9VFLfY9V6lo+SOmFy6/\";\n  b +=\n    \"n6E9Tj9qvdev5+IGr5pv6BUNtWfwbS7nnjILLTIKYSabT8Sc+nnb3Z/0AYBClVhCoqeyHUgyM56\";\n  b +=\n    \"WFiQJ4eTlvoiTaxxh3pOyGhbqDldCPN3fW5bmw8mMr0pAiPCAajtIaeAjkS9xqzvAzt/KAvsTcN\";\n  b +=\n    \"xsTxaobRFtryI1u+b8vHsAmoLPZsThPX3vFx5L8OPE9PT4MWuJbTMaPmXh+q/23cQFyV4G52jpr\";\n  b +=\n    \"QI7uGmjRRp0WuE6ArXHtAyG/aBLGcFNMspipqQ4hRmmLFeabFOG09QWsEPUwd/mmB4y/FyeUqH6\";\n  b +=\n    \"pihUQMrZBxY9lk5K8yBfkrTUE+piAfuvuxqPA3cWshD0xBTKkgC6w5sboehnfcPuBIeiRSfPLMp\";\n  b +=\n    \"P3TrfDFaLQXHD83tMbnijy90sf3gh6o0eN7WedYie9JHfp8fvuEWBCDTbDMe7IVWfYpUgxgkRNz\";\n  b +=\n    \"Ks18qdHpXyZ9boa/2qRPbPXLOu+HRDJd9kXPlNiMZDSYnLbsfAepxYpQVUWoijg8XaWECGUmw3s\";\n  b +=\n    \"ooRjKsqTY+UjfLU9JVRnajGVmAR1E24LyivSNJzdCWEe7mFeU58fzyyuKyU9rGUCQjRoKQgoVjT\";\n  b +=\n    \"AR/kXfyRG+CfRUE3ri5acmHVFjerLfoWnxBur72vax246aC+g41IXRisB5DZx3Uy4jcFEDF91si\";\n  b +=\n    \"whc0sAlN9s1BK5o4IqbbQmBqxq46ma7icB1DVx3s03/MQVuaOCGm+0wUm5pAM882yE3ZQYBxCBw\";\n  b +=\n    \"xA0cQ+CIBo66gVkEjmrguBs4hcBxDZxwA3MInNDAaTdwDoHTGjjrBuYROKuBV93ABQRe1cACAuc\";\n  b +=\n    \"1cN5NuYzARQ1cdLMtInBJA5fcbNcQuKKBK262JQSuauCqm+0mAtc1cN3NNv01IF4DN9xsh5FySw\";\n  b +=\n    \"O3/tjJNoOUQ1/TznKzHUPgiKYccbPNInBUA0fdbKcQOK6B4262OQROaOCEm+0cAqc1cNrNNo/AW\";\n  b +=\n    \"Q2cdbO96qasvvCVFtZ8sU6x1vDq6SysvDaOQwh8r4qh4lLYXVh9W75l5LqcCQsrb1dWXFjBQwQu\";\n  b +=\n    \"O/mBVuU7nUmJtaNt8gh9vfHDW/yqqDPO+nvT6kjF2rlQIw47IapMO7dxVp7selY5sap6h4VdmZJ\";\n  b +=\n    \"SoS8aivZGqmxahhNmvFx1sdcqiyqLxqYG+61itEaEm+u7reVVtfTard3G+kRhYabmWpCIHesTVJ\";\n  b +=\n    \"7VZqitWhXn3TrXa79Upc4GYmtWKLq2zPoEZM06vTZwPJWvrpVqGDvGQrhSlbXrVJsqNer26LlNE\";\n  b +=\n    \"3OVs/W2r7dZaknou69pbsXW37yVi6xJoTWrVAPnBt/9ZCiiDlYTtfjA/HfUrPk32Kz5N6VZaxYp\";\n  b +=\n    \"FCQk/UYmjr/dpi23IaVGazrgxaGCKbO082lM0uvrR0iieKKRYhv9nGwIwrzBF9Zq8Opf/84aXZF\";\n  b +=\n    \"GysICPTna9C6bYkpDSWu89vRSrtt3NLWUi3Ir853Mmv/VNwlH7bluPxtVYQVMbebjqtaUVqSJhQ\";\n  b +=\n    \"KmNjJ2Gmmk350KugZ23oy2VhwFzFhcTr2OlqogG6tcFqNelpeUt5Ovfxp1V83XM9fkX628adPon\";\n  b +=\n    \"YZ8FzSExgBUBiuqQhi5E7Wwj5HWrbI6f/XmD6RVSlRdxDfKZUGueNbHjebXN/l3y17E0Baq2zbR\";\n  b +=\n    \"CHtDwB1QZzz76EQa7U3rvEmpGgI7qc0QOBkaRYYmwMzrDkIg8aXugMT26V1pyLZWIzYrmray4Fm\";\n  b +=\n    \"+kZqa6CYqvFyXK23e2/G5GbZUdRNDSLkfkf1uZLxSZHOy53W1UixSyCaxeA0m0irfZq34TQgXy0\";\n  b +=\n    \"Um5Cer/BLqyNV3ax5TDPQTOlKKx7tSWwpsGVHNWzgDbrmR8UqRVPPy61rzmlg0j52ae1zzjhUAw\";\n  b +=\n    \"OlWT82r7AnCePYlqOx4E2mLxg/Uk5BzIIOGUDDRreHIciCrSmtgJsfLE9Ma+ioRg+M1+A7o175q\";\n  b +=\n    \"sLnbNFLB9QaqO+kEYjfQdAOJGxh0A0NuYJsN6HJVFW8U/dKkmFEglcjzsbC/SJhbfOWNLTXPbZA\";\n  b +=\n    \"lvma5QU23QU23QU23QU23QU23QU23Qc3VG6Qk2XqcRk38eKuSV2WNZslwyqovpRvhjqENu8zDfA\";\n  b +=\n    \"HQ3UaPcLJ7l9mY3f396abMM/TvmeHu3URIt6TDtxPoT3Q3CwkbpqnukEFXZ8HT3S4PUEAp1aUNE\";\n  b +=\n    \"+Z1eiQQ+w+TGd+0R/0hojF6bMO1w6ifUP3oMUjYvbu7lcY/BgqmrJjgVgBEJ6ztC5GGiOWz+ifO\";\n  b +=\n    \"7E9HVFnNNxSc2p++hcLpPSfTDfRCa98ElO4ApC1K38vH9VUT7zMbaOzuY5DmQKRA7ihBvPGhoEe\";\n  b +=\n    \"zNQe8fV3oC9BE1GJNu25s7sHn7jEjqsP2ySmuw0mKessnT+I0xXuZHWtsf8mMsEAYtXMrhsBWTP\";\n  b +=\n    \"Bt08K5cRuHwDE9+JakzdakoahNYMfcRTjaDcGtutlGv8McRG89zqIUbE8dFGfSx935h4d+XzGT8\";\n  b +=\n    \"cxRg0vKUmS8UqSdOfpWnvOMENiQ0NaK39NZQ2lsSF7oo+HVHmXibePYfyD5b7cSzJGxRDY5klo3\";\n  b +=\n    \"2NO47uM6Plf4WGOlxjVWalzj9o3bLnXdLI1r3L5xm+WFLQhtMXczi7mRxsjdLxJRYjBBskgcVoR\";\n  b +=\n    \"EMB2EPDxCap7H1r15xiAYE39i4h7K7itTdl+JsjsYCkTZyT4GaF7vI/pNTIvIubXPdGiK3scgPC\";\n  b +=\n    \"1N7BUdJcQ7lN1RylYxmyoe1XVRdtxD2f2g7H5xz2Pb1GBJKPiiqqFzwQcx7WJFn/DF60raeJyd4\";\n  b +=\n    \"dyD/sbqEWYHJrpNG0PI2P4DomUn2gvEPbHSVJ8K1xEMuZ8zVLk+2ASfSu95hA9PcX4LGy2SvcPZ\";\n  b +=\n    \"+4rsHZgOvwcyf/oG4O49KFF62EcPN7mHw9KXfee7XD3+uO98XIpq2HFKjTD3nATPhKvBtDZJCG8\";\n  b +=\n    \"4C3+zzLL4YheBS5+QcemLziXrQ5Xj41XiidSXlVOm9maZfVEMax2aKLNZetcl/Kq+a/uSdY5Z3Z\";\n  b +=\n    \"f7uCHekIrurNnB7H6BOgciekSNRPJnFHV108RSCZE2m8adVCCWSJ9VtnxpCxsgqvHQQ0IjtF/gf\";\n  b +=\n    \"bGUYaAazEw1xHnUx0/FP5hXNKvkVQ0s5eWqsToNQNLP1MeZbNj1QEFqPAeVcoRrU5dWO9BqN7oe\";\n  b +=\n    \"MFmx/Z/ypbVgn++nx6X+7cyA1Z7f4g8Jqz1fVYWyPZXdwUcgqR2NJ+dwervER/cIfjFS4IIFfoH\";\n  b +=\n    \"lST3JSW/6R8ESLM3MV3iWmyHc40CJmy9v/G9442Yg4ujiDhObAx+uh/mweN6JO8x+qnz18chxqN\";\n  b +=\n    \"6SCOZ7KrvvPZGfrQbJlyNJw+0GZP5hdyV6id2IwH0qymDtykgLjMFB1PIAHKPYT7HvqDEqizUe0\";\n  b +=\n    \"6plcW7/x61mhTcwPdANno4YHBAsAOwTPLD9lIVovLtBqYRf4yOwa5Xx5Gogb0h0cj0QfCsyf9aX\";\n  b +=\n    \"ojX1VphnpsjkN0TGncabuEe5HIzzFVU6iPuhUASE+u4leOvuYCGQ/kg3Gk2hyLko1wzE535OFFi\";\n  b +=\n    \"CtCaeXfKtLmdKTrOc/vdRjwUfaEH+sQUrV0v3PtvCJfqpf/HbqPeo/2Gx1PJQRZxzpWE3oBmxJv\";\n  b +=\n    \"NAG5NDm93GuE35w7BEiP+Z5g1e53x2e+yrhUEUlnwjENtReucilfoQRDM/0GJx/xe6UV42vZ38C\";\n  b +=\n    \"Ws9sU6ikArYc4N5XnJtSH4zUvqEOvMifWUztrZbCxodEmOp6Zac/fGheJcmOSn58LzKlLv1pKq3\";\n  b +=\n    \"hOK6bSuaoaQ2zc1EW5Kv1LDaCwAVR96tD5utU+k2PqObku9vg09Ps9Vswz6dtRKmw7x8PUGGE9e\";\n  b +=\n    \"G6SQXGBXPd3mEPCd2iivj2QUardk1+uEM8nnDeZ7Cz/uTc4y2W4HoW9wMRC/jRtAVzaSgG4mpUx\";\n  b +=\n    \"M9AY+pT0yK+U9r3HmY5mGCm4wzHJxQK6x5KaCdqubUgXC9yRT4HTIFTtfG5rOtyuvHphx3Aqn7B\";\n  b +=\n    \"ZtbCZvDjE0+olgFowXxfNoZY8Q6GR5aQc/Q8oiVC8qDaqlnUN0M0tgZVI/tlTxKvu8T8oW9gxqY\";\n  b +=\n    \"ptmf8p9tgas8PHNeBtVjPYMqEl80am8Lrkm72rnJ/1rTuvMsDoBmcTTRs0o8kmkg+UakE8tpYsq\";\n  b +=\n    \"Qq5rNbINp4BYcdhMXSPurJ0sooSGafCFHiZyhneLp6tVIhKcFDf69/tkIuJn1dNoJTaWMoTmvjK\";\n  b +=\n    \"FznvIWgqEHxyWPYuhhWugEQ1S1J1psafZHFDcP9uBGZLQs44FpuGKZciatj2oN5vMa/EhNaVXOf\";\n  b +=\n    \"P+4mjeYItXCValT/yLUKYxvvD8XiS7XA2P+VV/AncDEoi9XHUFxt7NzzL/mcwNHeVr1bQN3SAOb\";\n  b +=\n    \"MKT6w9qw0Z6GBbnFMZ05vTKB8pLjr9EbS770Rm9fTPdQ6+Gg1BdGNTu1qiNS1TZs9/lPtGAh9to\";\n  b +=\n    \"PaZXNWn2hq6asj7GebNVyg/RD5Tl9G2jmAy146TkVcOFQxMYEHopvVpmfZ1njNCkijnFEnEfogj\";\n  b +=\n    \"8T6DoiY+JfcJ8hgiaSqLQY/Z6D0n5dV2OVqNO1M+5ZVdexpkYOQpPykjooS+qgDP8wm6fRT8t0d\";\n  b +=\n    \"ux3dElNVlxSI+sYxJMz5CW7VCZXC0YBxJcTsLISVK0vV5WAY5eAm2NEKALGaCq1JVTmxiHgc1Eg\";\n  b +=\n    \"bixRkLQglBbQNAgr4CG17dnWJhxvf0VbUFmpBdbWJY6biTMnOuNJDMXyJLZoZzO06atVsM+Osw/\";\n  b +=\n    \"N4yuAgfsNnVh0DvQcBpYnw2kbM19V10yspReN0SqXfe7TtEbdpyhbQOD8j9KC9fth5Xb5bhyx+d\";\n  b +=\n    \"CoQ3hL/XMu3Ztd+iEbxF7waJ64dpEnfrQoMsrO5m/x2pCddcqsZJdsKk2N+P/Sp9b3jRvONyrZ1\";\n  b +=\n    \"R91yzz0Y7bMaz7+v/FJm4pN0dEfW2crfsxFzNkfKxAzT0U6jQiz807iYpAdPazBP9noPXiQVSw6\";\n  b +=\n    \"kL72u/20/+JBxNouItV+H9shHO/yecKAmFDp724w4u2VL1TEqAKRmadmFfh6QgwrdHGBI6YV+Bh\";\n  b +=\n    \"BjCuwIXkxr9DFkZAYWOjilFRMLGCBVCML3bY4dweIU3UxswDHaGwMAc4Ku4MUeFXiN4rLc4CbCD\";\n  b +=\n    \"wr4GYC5wQcIvC0gFvEZzjArQSeEHAYVzoCbiPwuIB3iYtugHcTeFTA7dggf6hr8Hih28Xj+W6Kx\";\n  b +=\n    \"3O0z6TH+7sjeDzVfQse7+u+FY/Hum/D4+HuKB4Pdu/F44Hu2/HY2b0Pjx3dHXiMdu/HY6T7DjxM\";\n  b +=\n    \"9514bOvuxGOo+z14DHa/F4+k+y48mt0H8Ii7u1imvzvGO/jubjxmvO6DVHUYhXi39CqcwVsrLZ9\";\n  b +=\n    \"Vl2/E6b0i1lQpNRTrKA9xZEh/gD7rsYNrtdvhWbsdnrXb4Vm7HZ612+FZux2etdvhWbsdnrXb4V\";\n  b +=\n    \"m7HZ612/HusjkNIsnt5sFJc/ekuWvSbJs0w5Nm66TZMmmGJs3mSbNp0mycNIOTJpk0nUnTnjStS\";\n  b +=\n    \"dOcNI1J0zdpokkTT5rapKlOpjCQCSuZ+ybMmNk9aXZNmgcmzbsmzfdOmu+ZNDsnzTsnzTsmzf2T\";\n  b +=\n    \"ZsekuW/SvH3S3DtpRifN2ybNWyfNWybNyKS5Z9Kkk6Y7aYxb4iQ7/bvObBGbpb1WyUfH1YodHbS\";\n  b +=\n    \"V67JmmCcdwzHgI7Mj4EBFx5y9SYhyJOGN4vtYuYUdhHI8hs4t6qcmAhgxwo2x9/cbFI+jzhQDhX\";\n  b +=\n    \"hL2blulLqlmxDYLLVLhxDYwhqVVMN0K4LDZR1sOY9ALY96xOQj4qhG0B5/C0cc04jjntnMEcc1Y\";\n  b +=\n    \"paZeIqY1YgTHutMjwHgiFMeqzqPAeCI0x6rM48B4Ig52BBCxJxGnIVMKSLOasQ5VrGgiHMa8Sr0\";\n  b +=\n    \"QRHxKlujs5RezdV3Qc9Vgp43iv+Y5lq8zBiojfk3EGDsVMf8mwhsUkblFgKDzPlO4xC3wxoahwA\";\n  b +=\n    \"2GTwCsI/Bo3zKy3mP+6agFByzbIA/xg0YdDi6C8SWVSQ0sc8aCuDahRJ91NtnAkkIJSGWhGNFQi\";\n  b +=\n    \"wJTUk4XiQ0JSGRhNkiIZGEQUk4USQMSsKQJJwqEoYkYZsknC4StkmCkYS5IsFIwogknC0SRiRhV\";\n  b +=\n    \"BLOFQmjkrBDEl4tEnbgZpcnyzTmyJgiaU7MHsBhVc3E3H+cIsrEHu15cO0LFbkKrpoCa7HByx5m\";\n  b +=\n    \"7RGx6xBySqgpj8FkCTvDDXUMiTKzk+W8mOu2eTDoGr15LpTz3NQBW8pzsZwHg7rVm2ehnIfmgLT\";\n  b +=\n    \"dm+dSOQ8mjU5vnsvlPIdx2NKb50o5DyalwZ48wP+Sl9ZoODVyVH9Y5hCk3fBgEGj6xFwt76KKTD\";\n  b +=\n    \"hIvUlb0uzj03OzU6XOuC6ptzzaqf/I9MIfHsj7HPdxlDLtp33Zv/qFn/nZiFNE+7yBlEN+2sh+d\";\n  b +=\n    \"+6ffktSGvvklpZSDvtpM/utf/nFj0tNmvtE2YpSjvhpK/uduV/7N5LS4pQ2Dz8/bWd/evn3P/OP\";\n  b +=\n    \"OKW9Ty/1aQT6aSf7yV8+vijf6XBKwkPQT5Psf/niJ57nhETRVOXRnoYTOoXQ5mJCJ5DQ9E3oBBK\";\n  b +=\n    \"aBoGHBGwSeFjAFoFHBGwTOCNgh8CjAiYEHvN5oPtYZCgqntCpKzS1CZ3SiMAneP4ZZKsFv/mvf+\";\n  b +=\n    \"/zPJ64kgN8XF83AzxD2vmR/QX6uKmuE+O3QR0JzR/gI/3k4/RNWur4wikMxV/P7BRbK+Q8G0y9d\";\n  b +=\n    \"76lMXQAdwoBrNylA6ae/DR4jg0U8dy4KfIN8AYG5eo3ndekdLzoZ9ufMf1dn/P0ix5zmWMtbsMa\";\n  b +=\n    \"jc9v8BtiM3v+LXvTgE1mh+JkaGRcvtZUY9hNx2J2U6y6SJ4D2H5JnpDzNAuD2WFhMDtku7c1XHu\";\n  b +=\n    \"cHknr0FmjqXMkbbFJhTA3lx3yNWPtzP60k9tzbZ/E7NS21mqrYi67w7ESVnPZVddabYirwBDXhy\";\n  b +=\n    \"9Pdmvsp5hGibHCduswl10tWavtiLVaVMN0cmu1cOxrWmdMYs3TBrv8EyP4nR0xnbwVVPvcUG07b\";\n  b +=\n    \"1iyorHsEXhqFnTlyCuZCW73mAnu5FZs2eN02oGZYCK8kXHaPFBNjo90B9j6DSpjkpK1YAf/bC04\";\n  b +=\n    \"ZGvBwL9TTca0eK2uK759I71S1/5Q/NfXi//1WAu2+G8x/tuCf0Z4O8f/BukORf4GC/RbYMC0i05\";\n  b +=\n    \"I1t0Jp96kTtjlH7uD/NeL/BNvGvKP3kH+60F+CDvZQL7P9otDYvV60Nt5hHDK5ye9HdERxD9CBE\";\n  b +=\n    \"/pOb5Dx0g2EmjtOIwnLx+0igP2kkvsZoqP0F6EMML0APTCpr86r6aVQ2e5nBtQ93G0fsOmDe3KE\";\n  b +=\n    \"XNv8GGcvhIvxenXKvY8llZKjllyYm5yzE0nZnrDuLCPecxhjjnsFQe9bNI1URO91IT7K58fycKX\";\n  b +=\n    \"xbxy8mfsmGpgnCj3r2iTm3W6kbSy62c+O02JVZgmyOZGcCdWo+wvimlDWmnr0P5t8RLKTMw4mwd\";\n  b +=\n    \"RA8+TRF+w6/wy8UnE0UUvp2xNuaGmnRsT1F2NvWpYGVURs9b0naySPALCmgjth+FJGsZ5TDCeHR\";\n  b +=\n    \"lRsx18RuwN5x+ECVqxKC3f9PBNH9/09JveBMuM8MBc4ZtixviEv9Yje5RlGWigEG5C4k2a7OThB\";\n  b +=\n    \"4XJyfFEiCaqFLPFWo+DXI/bVsIWwQRFxcy8wWJYtB+kZu0tialvHAextdWvwvy3WFJiKsXbbpjN\";\n  b +=\n    \"KM+MyPOoPo/p87g+Z/V5Qp+n9Hkaz/m3QLzixzd5QwdhrbdPTDMdzFhTv0IMuzcBK0kVGA6eTBO\";\n  b +=\n    \"1lWECEfNp8fBqQoSjQxskMXHEwo7ybOqT7xwwfCHowlH4acmJR7dFJVTBEsoxekvKbkKSEyW3iB\";\n  b +=\n    \"wXoKkaFBK/LTG8nCe0i4R4tYTm5IpFNSEbpN9Gk/TTAZtKfiPNamqzmlRCFZLaedH09ZnaOJtJ7\";\n  b +=\n    \"0jxbbUD3A+z0KitaQ7nQs1t1IwIrN8M6Ifk2Ry26THVDtai+zW97aS3YNOrpTa9aNMAs9BoPKz9\";\n  b +=\n    \"N7Kl2rgGb0IyayHmLailQ54AG9l0nTAD3ldmxIa8l/yDx8UgSqWb4NZmIYSthSRLMBVUHzfR43y\";\n  b +=\n    \"xzqXrb2SqyX/HR0Achi1qmIJCRJC8TWzWUAFscKAoIXTfFhm7pn4vKAgvtB8JbY9iGRHBcUlouQ\";\n  b +=\n    \"nxaglEHsuLUuIQ69sNDObHW97WrMon0ditj/ovpLzvfT7lTe5zKe9o35/yJvWplHex76P+xUk0b\";\n  b +=\n    \"cNwEk3bNZxEp4N8Eo1jQhyubJLjl81yPDMkxzdb5Hhnqxz/DMvx0DY5PrpLjpfuluOn7XI8ZeT4\";\n  b +=\n    \"qiuHW+kqBpLRCLb6gqsz7qsL0fge2k1f+o3LP/mXG7EsNSDgtAeb8m/9x9/+xJWKxJ2jOGzuf/W\";\n  b +=\n    \"Hf+Jr/0Xj5igOhwTf/OF/fuIPNe4UxeHA4dWPTX9rL0ft+avXfmR6enr+0J9TltmIiCmkKQpPWr\";\n  b +=\n    \"qP4dmiKQzPNk1peNJkcwTPDi3tePbTlh3PAb7obJgNtLEnEjGDtNfHcyNtxPHcRLtwPDeP+dfxH\";\n  b +=\n    \"Brzr+G5Zcy/iufWMX8RTxolV/DcNuZfxvOuMf8SnneP+Qt4bh/zL+JpxvwLeHbH/PN4pmP+fMiD\";\n  b +=\n    \"YT4cT/6LZyldwOmqOsNwnDewaaL5UE5PGvdSMbv9UMCLBDYFvETgoIBXCNwm4FUCRwS8TuAOAW8\";\n  b +=\n    \"Q+ICUe4vKfZhjg+loN0vxEniYwKcEnCHwOQGPEfgCVXKRT5waMAkoiww8YLgntW7YzhvHQPts6H\";\n  b +=\n    \"qIV8/s7U8Md3kiaMLKnqlghZ9nSyKNDM78+nA6yJbo/9KzU458PNnTZE0Kf5VcNEHsaeQBzDmf8\";\n  b +=\n    \"dypRd0Q5MdRIURZQoH5wjcWuJmywZKGjJQYZ68NGTz1McY1j6c+nLA2ZIg1xxjxPOpaOEdtyEBs\";\n  b +=\n    \"j3Ev8NhMcFrakOHaGeMu4RHcj3PRhgxqItIHBH4wJUJ9UOCH00HpLJ4NiGC1Le9LiWjfJ/BTKRH\";\n  b +=\n    \"uUwK/PyXifb/Az6VEwM8J/HxKRPy8wC+kRMjo1CPEP/FRkxydfYjmCUgObTFDZrPZZDaaQbOBuP\";\n  b +=\n    \"d+Sk4giw//1VD6YQsyhP/VjKl7vJw0wLLygRvO3zTqEEXx6RzO8TSOeF05y8Opn8bdqozLyR/OC\";\n  b +=\n    \"DWOuGQ5JwTjqHE3KI5PFXE3pnHEX8sZJE6hNe46xfGJJdXdxhFnLmecuH/QuKuVcTkVxW5A4jDc\";\n  b +=\n    \"P0RJf/UaLn0R+WF2mIBFZhbm1hvJ7xAddu1ywzZ7IMtAO4hsqTrOIsO+LD2BUqeIHIvkBLuEiGx\";\n  b +=\n    \"C5CbEqyWwl5jeoly+BINuQCyAL1bg1IcHgLwO8heLGSB+kD5DTbWVRIQPsmdoEETP0BBInqFtIH\";\n  b +=\n    \"iGDMidoREQO0OjIHWGdoDQGdoJMmfoARA5Qw+CxBl6GATO0GMgb4beB+Jm6CmQNkPvB2Ez9BzIm\";\n  b +=\n    \"qHnQdQMvQCSZuhD6C610E8ofCI8CGRQP3h2yjETMiXgFDF5D2ySMU9NHXnUE3NSyXiRyoxLZibF\";\n  b +=\n    \"VAltpRqwYAJh6IztjMz0gSH+wwHvvWCI52vs8g8X/d54ca0V4YI2dzgOQ9VGomCV3ctDMEQtoc+\";\n  b +=\n    \"yHydcIkhEPrm2+U+yY1buaCHycpGvw/pquD7j/AypH05iLvq1hJ046fXULK/UwterY5bf1ctj31\";\n  b +=\n    \"4e+/by2LeXx769PPbt5bFvL499e3ns28tj314ei0sNEW23bh986/bBt24ffOv2wbduH3zr9sG3b\";\n  b +=\n    \"h986/bBt24ffOv2wVdpBDaa7SmGWF4mxUwmGCD+2kiIUb4kcv+IKBkXdvsrVJP+eLXIFfJKvkkF\";\n  b +=\n    \"H2JWQRODtvYyHpIEilFIEyhOu/flV/KQKlC8QrJAMQvpAsUtJAwUu5AyUPxC0kAxDGkDxTEkDhj\";\n  b +=\n    \"LuKqC3IGVBNlVSIKMFZIguwtJkAcLSZB3F5IgDxWSIO8pJEEeLiRB3ltIgjxSSII8ijE573UfU4\";\n  b +=\n    \"TFNMsr9VZtiDEP9wx9EpHjtI//irEhRYS99qHDx/IU5OrjMZd/QyPz70Tw35RH5qW0+E+/FY2zd\";\n  b +=\n    \"6aVvpbgdjzv2w4vjnirzUskQY2Vl0VTx8b17eY+s8Pcb95h3ml2mu8x32veZR4wuyDpYB407zYP\";\n  b +=\n    \"mfeYh817zSPmUfPYKgXdO9ndoJWMaCQ3VUZEa8TOOZhObUwIoTHm2CDSHufxcAckeHBjIpYhgRO\";\n  b +=\n    \"gAEhIFGX9NlpGgMxbxRekd2ZFnyaPXQxY7F5TuU4y6ELgvqqh4l2bhz7Upxk+KwdWIkAo9q4lMw\";\n  b +=\n    \"6qZJ9d1312XffZdd1nS5k1u9eu85ZX99pwXlaFCWs1epDf+0OVij9H/+pQxbGfpJqxBL2KdogK8\";\n  b +=\n    \"D4T28tM1htu2IyDIjCNG/pGnnFQM8LE9jpKrGNDXte9JB/XUVXqtvU1uS4HL1bPX6zpi+F4gab8\";\n  b +=\n    \"C+EKX4jH11VigKoE1qnUJrNJ3ilTXmkMat+6A5D7daAIFleK/KdCTM6gC5zVLOwhVV7fTEH0YS/\";\n  b +=\n    \"R099GU65aE0M3r5aEPuux8l3ifEzm+8CZ71eqkjsSQltQldvxWc8dhQhixa0WKU3jjtZOkaedU3\";\n  b +=\n    \"zhCUMJBTk9djZXciYW2XR8HHYTepzMrZmursRWKT8GGcXWMaKMwIpQoZfPAaJCbzYUTgw99slhM\";\n  b +=\n    \"7BbnqgnA4wjrFpCmdYoE1uD/yeDXh8YrOkqXxDLOi4jlA+RUx7NMiHEOiHEOiGoDDPlrNrJIOYJ\";\n  b +=\n    \"QicDXJHQ6zWZDKztBP0EHwzLqs6u6cK/hk+akG0i1xjBWjR7h85xVhX1OddeAbuEXilymWUDMWl\";\n  b +=\n    \"As/+Tao+491Pesk/5K33KX+lT/hqf8jCzylLBXlbSqswYfdbwP8uLe3q8EJkingXzRcSBeKkiXl\";\n  b +=\n    \"g4NsPBfFa95x37i4/2sRstXsewYQuYuWvaaJlM5Be10OgF1mnFIjbDk6hEj/pXWFPyMv9e4t8F/\";\n  b +=\n    \"r3Ivxf49zz/zvPvq/x7jn/P8u8c/57m31P8e4J/Z/n3OP8e49+j/DvDv0f49zD/HuLf6dU23qyd\";\n  b +=\n    \"NOrfYpGGm/x7g3+X+Pc6/17j36v8u8i/V/j3Mv9e4t8F/r3Ivxf49zz/zvPvq/x7jn/P8u8c/54\";\n  b +=\n    \"WUQr+PcG/s/5aNdWZMyx2SE3digD/CAfc0ZKxKTFOiLtribPnkY4ftKKQeXaozkW5XKMt3LOfiM\";\n  b +=\n    \"pUqWlF7ELhkNAWLY5CfFsb3tqJDenlm4dAi5C3yu5NZH/GORnSnPZNdVaiG8OK1CAo7QuLBldW+\";\n  b +=\n    \"46uj4uB/RWcw2FdpC4EFRHsuwiHFvaDGKCeoizsQZT8ViQrCsvRUaQWDLOXo1eLRofjvTyC3Zv1\";\n  b +=\n    \"IL8iflS0BhqLG4EKLqbmPXHwJwY82O2fBS8W4EIBXirAywV4pQAXC/BqAV4rwOsFuFSANwrwZgH\";\n  b +=\n    \"eKkDau1nwUAEeLsAjBThTgEcL8FgBHi/A2QI8UYCnCvB0Ac4V4NkCPFeArxbgfAGeL8ALBXixAB\";\n  b +=\n    \"cK8FIBXi7AKwW4WIBXC/BaAV4vwKUCvFGANwvwloKy3Mionubzsdy3YmCj1LcizxteEVlc6/Nfu\";\n  b +=\n    \"GzeCFeZN1y3f0E+xNiJZ2ne0JVLS54txdgh7RVxK9SnPKzd+vCKp24MGzIL+fopGdM8avEZj4ff\";\n  b +=\n    \"jKdBSRVvippqESTuW+w84BWxQeHPkMdlPjMEFllhMdLti3aU+0UEFnbICVd7HJOCZYqcMrwedDo\";\n  b +=\n    \"tkhi0eBpaTY3Lg16Dz+BCPoPzH8sOGv8l2tQZbyKtwXoA1QAue/jO1kp6iOGCqvJxVeXjqsrHVf\";\n  b +=\n    \"M7W8/ycVVm5pSPg1EwXOAoHxer1RnmrQ5C2mY6eBHO6efZR4jw9bV1f7W2vq9WjHyH+NRYrDXIZ\";\n  b +=\n    \"+KyqQyxBu/nnGQpMl4pstkbqVuC8mdTseLJ99IwAMSjriK+3u2Rp2kZjaGBu4f9JfgY2Ra8VoCL\";\n  b +=\n    \"BXi5ABcKkKYf5+qRo2iecq8eOY5mNPfqkeNo7nOvHjmOZknn6hFR7tUjMTFi90JGWU04Usf/X37\";\n  b +=\n    \"8Eagf9hrTcdtEKxyOtMQfmZx2YbnPI2QikekoKg5gPJaR2cnu4iW2KKzGH9Q1GoXVeJjVNCfzrC\";\n  b +=\n    \"HzrCHzrCHzrCHzrCHzrCHzrCHzrCHzrCHzrCHzrCHzrCHzrCHzrCHzrCHzrCHzrCHzrCHzrCHzr\";\n  b +=\n    \"CHzrCHzrCHzrOFteNaQedaQedaQedaQedaQedaQedaQedaQedaQedaQedaQedaQedaQedaQedaQ\";\n  b +=\n    \"edaQedaQedaQedaQedaQedaQedaQedaQedbwNjyrnOqzbQp7wrjER+eBTnBecTKvmfXg2AnxxKs\";\n  b +=\n    \"jh1dNdhylqT0TP96NbXmlW4BY3ymoTBaq2InBMVsgC0JeMaZizxLTTvZTbn3d9Z65ahFh4SMvv+\";\n  b +=\n    \"8VNpVzytWC5MxPa9mXtj10rQuYF1Dnv4iXq1U+oXO+4JF5Pspd1TsRi5kGv89YsApyimAYDfN7c\";\n  b +=\n    \"CO/Orrwlw+pIrXgbZsa07R8rWd0YNmDXpa8WhJjmBrBHGnRt3dY0zusacGaWjpj//VW2ENGmbi0\";\n  b +=\n    \"9/UKikkqjyzJ8tHiJMeSxehwBTGceSdU2wb2NNSOFL80O8hCUtVSedDmMTJwbbBn8PrLBq9bDV7\";\n  b +=\n    \"MUDUoq8o0Y+suY5Zt69gxy4NagpLKNS9UXgUv3Abfsq31Itbe67mXGmK7Jx/JEE+RUcx8DcA4n0\";\n  b +=\n    \"FtPvyV3tTDfOIsPzbgDx3cCP2UGU+OH71d/g6oEu/yR6FKvMsfgSrxLt9AlXiXvw2qxLv8IagS7\";\n  b +=\n    \"/IHoUq8y09wAbjLb+Lyb5cf4+Jvlx/i0m8XX/jJ2WIAw1ih2SH6XZHxXzyTDh+AtPawuf/AlNjL\";\n  b +=\n    \"2vYIrA0hZ0zR9x0w2/L475P4JsW/3Y3/iMQnFH+vG/+ixA9S/Ggef9cj/kclfoji33bA3CXxdz8\";\n  b +=\n    \"CcV3EQ1bkrQfM3RK//RH/FYk3FP+WA+Ipdio1j/hTEj9C8SMHxK3vVNp9xJ/2JGGUEu45YLqS8I\";\n  b +=\n    \"5H/EOasIMS0gPmHZywOzis5w/dUK2tZk3rfXQXNNsIh/vT4ZPsDkwiv4/xa4ZzOfPhRyjISR/hH\";\n  b +=\n    \"ignwS/VNiu07jEG3eQmJd/lJCflZFwK3u0kD5aTYeJiu5M8VE4eYiuOkHXHkZ+XxmeYwvjoz0vr\";\n  b +=\n    \"HBrlI0Av7ePQCGGsKM4QYovQNrfwHNqWQ3fl0N05tN3K3kfQq6QvfXgCCx42MdHEpOJ0lHAKX90\";\n  b +=\n    \"wT8mxocR+RGNjiY0l9kWNbUpsU2I/qrGJxCYS+5LGDkrsoMS+orFDEjsksVPspdsMn0TcNj4S9a\";\n  b +=\n    \"DRxcp1lLCdE3ZwRB0Rd3PEKEf0IeIujmD9AVNDxDaOMLwPh144RveIjO63yOh+q4zut8noHpXRf\";\n  b +=\n    \"a+M7rfLsL5PhvUOGdb3y7Bm0wDJme62YmjfL0O7Yod2BUP7HXZo31Ua2jvyoXdXaWjf58Y7Q3ub\";\n  b +=\n    \"O1Sdof12d6g6Q/ted6g6Q3vUHarO0H5bPlLT0tCmqSDNTfm5Q5vmArXx987y0KbJ4J23H9pQ/Pb\";\n  b +=\n    \"PFKO7D7JEAVSJw9WGOM4HHsR9ljta4+V5WLX47tUHPPI8tpe2U/m41WSzrcgAFeO4NPgGl5dyga\";\n  b +=\n    \"01dFcf/hU+ibCDv1Ea/M3S4G/p4L+nNPjTN2vwt/emlQni1dsY9/7EpOA7lJFPKSGL01B8KO6ie\";\n  b +=\n    \"exTfGTjWd2yKqOf4qs2vqqeGDH+Kb5m42vitZJnAIqPbXwsltF4DqD4uo2vyw3hRex1MBNQms8z\";\n  b +=\n    \"AQQuKzoXwDDTlQrOpBtIxnyQNuTFyxzdRDRmBatCeomjW4jG3ABJTj5v42hYg+UZQgRIoSf0px5\";\n  b +=\n    \"cW7HjJsB8QwQDKJgZuwlPhd1+nvu6AzzZdTfw7NYd5OmsuxGPbd1NeJjuZjxGukN4jHa34LGju1\";\n  b +=\n    \"U2leA1VhPKLFmBcCQYXk6DCVFgZssaVbasEUMCBXY3/ML0hmie+PoWwVA/IUQPT2aEbCMmiyagU\";\n  b +=\n    \"NY4OeD7B9tggZZCNaiZzYWs70Rcyp6/eu3PXvvSa6/9xf988EAa7vn5r0DL6zde+7WDyUUwqLPg\";\n  b +=\n    \"EolGv/TD33jtta/cLZHMOu45cf03f/nHL5099rWKxE5z7G/8s6PHv7T0H3/9qsbCwlO453d/71/\";\n  b +=\n    \"+46t//vUf/Xcay/zqHriy/9y/Pj+9VSIXwDzeG8yGuIq5N4inUphNOsdOR2D9795gLkxDWkOeP0\";\n  b +=\n    \"OTUliqebSs5vPYlvbWfAGSdstqvoh96PKaY+/aW3OK6an1nNR6PkhbeM6EMCtyb5BM0exCjO/zZ\";\n  b +=\n    \"3BQJW1omCqqPpVWp9hN++WAo0M2Hhisv2mzKzVtJlipadPBik3zV2ga9k/LmzfvS6cE6Ix7g2m2\";\n  b +=\n    \"l3FvMDTFNopjbt4xaZ74UaD6N7lBvmCgzlkuSFPrplXCwDkHA3OrYqC2DANzOETrxQCfrC3DwAz\";\n  b +=\n    \"H9mJgmmN7MYAzz9oysvQYA3O+dPBSIB1splLsUPq4eYcFA30mkuZ1kHPRc5F02VckNR0kzQQukk\";\n  b +=\n    \"5ZJDUkSzSVJnJqmiNp3l8NSdXlIwAHU71ImuPIXiTNcmwvkmY4thdJ0xzbgyTefFH1PCGTxUDG8\";\n  b +=\n    \"Ci6uWPa3Lyb0ry2JZN+tmzoovGap2jsOGicDoDGyNJasAIaZ5XWEs5yTvCVWFpTNF72nNHmrZ/W\";\n  b +=\n    \"sJQso7XH9q5AajtXojSzEqEly+kM1XqOSKtfieGaJQaeMwidvrhCKdBZUXT2O+hc8ktkGZTx2cc\";\n  b +=\n    \"0R1laOT5PrUSWc56Lzwue4lPJsiH4FP1YweeHC3R2dgfzodhxpWTWdrZNipe3aNFHk/psk/wVmj\";\n  b +=\n    \"StTWpJ/0uWFlqYN2nWQ5Ma2qRz3gpNegwt6miLLle0RUqJ4e7gQuhU9Jq/vKZLnlvTwz01rTFmP\";\n  b +=\n    \"SxZtqanvBVquhMVDbmiUVFD+v4Cvl/T79/0ln9/mgqP4GpA0ODpilJzvm+mWFZQPv9g+ev0icvy\";\n  b +=\n    \"iUga4Omy6nwiwRfsmjVa/gC9v8i+OvX9Iff13cG1cAU/daF1uQObW8dOqreh0PFUVDWh2t01nT1\";\n  b +=\n    \"f+bmP4e5m+rcr/Ll5HBER4XajLLYe7ELXg125VBM9d4bqD6O5eyCrR9SIM2Wq3n62kNfrzY3KKt\";\n  b +=\n    \"zX8VnR5xI/OjgARmkhZ5SwTnjq0IhdCRWLClgUooi4WHyw7EMSulijsFJSn8TFWlrBW7RSFgtxb\";\n  b +=\n    \"OrFsh6bvoIZik2jYFsqKDx/cTpwXpxzX1x0X1yUF4eKF2fcF+fdF5fcF5dk0YNZIN6h/E+YGdE9\";\n  b +=\n    \"Hy1Yptqeb//qX7z2+emv/5+/4ywYtT2fnPuhfz/9sT8//i5nqrzwrW9e/MU/+fqf/1mltKjScib\";\n  b +=\n    \"roM+83mH1idiaEuPoi56wCTftusDjMK1NCVWuUrf5Fes2t1LdZjmyt3JY4frsVGCHYiyzmx3ndX\";\n  b +=\n    \"cuwsSIOVFWooadiFvF4q1DXZoF1qhf56V5D7NbvjrJ2lQzfWs3camyUhMXKys0UZav3ibuHM+nM\";\n  b +=\n    \"p3e21rDAbsAYM6tu5NNXZaRdIPOp/Vi+WhgYp1KB4VRsqtyAHzFOh/ddJE1pVjC2t4qmKN+xXJs\";\n  b +=\n    \"l4aNU+kmxexHeTmw8xZPiLfHk1kJTclyLC3DEH/BpJuhP+cuKm0zwJ8bsstOrWA4mmYwR8JCAAQ\";\n  b +=\n    \"2gLGCseuUF9kSenSpLqNnRtGj69HGHD2bLFtd0Z7ZIG9t4F6h9Rj92IfFqWAU+rmPppj0knyBkF\";\n  b +=\n    \"UpJTzyQpGyRnCFdqr0Kerppjb/suXdBjnXoDB5WNRsG8+t1MZ5RoNt47GeNnbQFHboViyXNTPkr\";\n  b +=\n    \"GjPARH9wHnBcAyg7chR1zWrRYhJnDUrMZslQ7I7gP/qGNgR93GgoZzZtMzRYEH3S4GwCW1309LO\";\n  b +=\n    \"m4T21nV9VB6ivAJXUN9EmzukrbXV3R0kuGPkXqkxuqkuscsax0JdU/lH4tI3dgdDstfARQr8AYR\";\n  b +=\n    \"qQP8ILF/ACHbIBpJpJ54t/MQ8bfh/wprQnwvl9phtx4vleDain73KCvBiN/9cKIb4z2pxc2G3Kk\";\n  b +=\n    \"u6qT7BxvT5Lh1rd6qLYmFTnx0Q5m5Y5ZAAl2FFRdhnAZZwPlbg98UqygWOO5Wr4vOmHwbudWeZW\";\n  b +=\n    \"9ifIbZgLjS1kynX77xa2Ge3C2xVhPW19XgDhvXlzIcAvntSx4e3dwIItbPQfiP3WXCHSbjDJNxh\";\n  b +=\n    \"Eu4wCXeYhDtMwt8NJuHcT9PafPmn//aZhKIid5iEO0zCHSbhDpNwh0m4wyTcYRK+G5iE6Z+ltXn\";\n  b +=\n    \"2Z//2mYSiIn8nmIRPDYglzqWWCKai/GfYRh/kbZ8RTa5s7qvzbAo1yOZbEI0SXZUaLL+y1o6jTT\";\n  b +=\n    \"bTEl3sqGQ2dLEJaamITQgVsXPNcb7hK8dON8U5TbUUu9AQh8Tl2NkGlLOrMNXlxC71Qa8l7omd7\";\n  b +=\n    \"4N9nZh9cDv1pdjNIins1rcO55W4aSvVtz7OOgul2nJco1zXmC3PlWvKcc1yedXxdEtG5PS1eaj+\";\n  b +=\n    \"iBJDuXQY9FSWqIwlGFVpK+fUg5NIfHQuMDNWwks4zlMlmLtye4mMeTlaYlahhB/YBFUupNwiWGf\";\n  b +=\n    \"ZoFxST7sCWDCRBXxTuT1s0YXX683l5rCe2VC5IdCK0qG3LJ5/txC1vlJWxl8lZ2vdOdvrztlZd8\";\n  b +=\n    \"5k3Tn7151zYN05N6w75+C6c25cd07pW+Ruma3Z4jeE1Od6SN2Sskvklohd8rbk6xK2JVyXpC3Ju\";\n  b +=\n    \"sRsidUlY0umLgErgW5agUDLRIuPBjlpcUjjluXi3/a6c3bWnTNZd87+deccWHfODevOObjunBvX\";\n  b +=\n    \"nbMgLTfWIausI+YTWRw12/liqiY62PzH/zPPitiYmL3xknMU44tRJ9HRnvmmNd9emjG9Qot7qca\";\n  b +=\n    \"GG5JXsrboBZdSSyWXk5iobOWkJaVPy+9OuCZxS1mzWd+8bbPYIbipqhJiXucZaW1e5/Ky7iSuVm\";\n  b +=\n    \"ss+rXe5hYvusO9lvfYjFea3PNJY1k8azMXOoS1nnCoJfbGzZfiiMGB2VzRAhfD6kstOSzxRhwDj\";\n  b +=\n    \"MyBVaH/HMGYkKhZB6pmHaiadaBq1tAUVDVryPGajqpZd6iEKsTRd1pTRI72ZxrkNh0x27D9pMJm\";\n  b +=\n    \"lJ+HRKM/t6oG/cWWRPSYngtym47tkqHBoGT7MWB1S86vNh19y8tpCTuFR8CHbJ3+BtwBiq3BWMD\";\n  b +=\n    \"rNu6aBa5aYNECVyxw2QKXLLBggYsWuGABtejoqUVHFuVhfWuwkEFu0VFCuV3BSCJyREYmKvWPa+\";\n  b +=\n    \"crKOuxgb9VHThrsytmE7huyBPl20JtG/bMPBk6vVrbvfbx3prb/Sxs40ViZaa2zECeV9gQq9mip\";\n  b +=\n    \"6vjvVVczTKvIyQuPohh0qtaNiunY6WmY6WmY6VWMqpXt+OlVjaqVxovZaN69nOBa1DPWr3D3tla\";\n  b +=\n    \"p6tOmLq1qDe5vpxUZu4kGt9qss0uRk1uyC8QU359JYN4fXlBYhAvMH1sxo9tpCJTPyTZ8kz9eaZ\";\n  b +=\n    \"4/DYlqfG+IbXdV7O23MRyISs0wBuXWI4vNSV0TPLRZgUZ+wqTfFXrVg2T17pKrKEmtcKeWmGkL3\";\n  b +=\n    \"InssJSn85VSREsGb9M1rTU115mqU/0KsVa5dr2+t7aY68vtlYB1VbogCV5sdLKEW+O1b5kRat9Y\";\n  b +=\n    \"vkSM6tjuy8u2e4Tg328mLWs7b5A7atxn+f292JxfBizOTzuoab1uxexVQ3HUJ94GPVNnGesasZ4\";\n  b +=\n    \"fF0lap/bdWs6N0Md6JKo78LiANvt6P2SL5WqOlYhq051ankmVMipc7SszmrOb0iNCPpseM5Xa9i\";\n  b +=\n    \"KbLExYjqFjcCg14ggmy4sZQD5r1qCj6/6vUYEfyHx44ObcKOyc28ajbBrEvmTU5jmc3yehCuRlg\";\n  b +=\n    \"WTtPGc2JBvslzuBwlumtZ+WsWbL4TycoMPe/HfdorC9P1Obyj13uPFBLfYjQ/N6B9GJRt7pum/5\";\n  b +=\n    \"Pk0GCam8KOgwsYe8yn2n5pK4vT0fEXTX5H0pCd9etrTDFOSIV6WwX7hgGQIl2WQb1CSr0ntPY/+\";\n  b +=\n    \"0EmarQmte7PkpSz5AXq98lQL2ioHTXgm7Rym9rc+gWPDlmn8/RZsxWobm7tZjJfQw8lNTs5mDxp\";\n  b +=\n    \"bVLZQeTGbOxmNZ/8h+R+JMf1y5dkWcBK+RIG531PxW+sziuWfO3se/UTa/BR7h0o3H0gH8LzLwL\";\n  b +=\n    \"FW2jGbD0xBENu+0C9uqdK7p8yAVYZrmP4D0DDMc01x42MoWna37PEyMetzDl9/p1cZ35s9OnEmH\";\n  b +=\n    \"fgUVePgVHcjPEwY+n4T5bZQfl5u0362KR+gyh5Imyt8ZRMV0TkAhzUINdmDFzvH/lf60a7nH2QS\";\n  b +=\n    \"6mCe3HPwk3sePfwpdo2Vbj2Qbof3iQPsYSsdRnutm6u0fSAdQuy2qcLjVsO0pTpDy2uSDk3t8XB\";\n  b +=\n    \"VMnD4JI3Gmf9QeVZs8B1679MtNoT1b3/3nU+3/CzOYGVt+ug3rgRPp+EwLdtIkQgTDjcDrOtX8X\";\n  b +=\n    \"ZGY4zgazXNd7VCcJ6l/gxFeRnMvPY9PQyjk2GG+X/2R6uan+qAEN7wGlk1A0s1feaPQk2mmnGQ0\";\n  b +=\n    \"hvd0GyZ6kLzbeMnujgu9PZm3ng3poiWSQj/U2bTVGr2o4mbkAcGnjzRuP3+bs0O8awfIuWwVkkr\";\n  b +=\n    \"qljVeahSMZtED/jFvWlwxlD3J6YxlTb/fquFc+YnWwGf5BKZ9qOEZ4a7wR5PnA1126YFr+cmeIJ\";\n  b +=\n    \"GSXtP3wE4SYcx0wbBRMSEbN784SsopOsRVVMKtAw2EpW/gMnJIzYp63+WSqDo/cQ69n+QOKkmtW\";\n  b +=\n    \"1w/wFceUwRxVDs8xTTRHrjhclWm78D/8RVLhLEPrW/uwGXE/uJdinX/u7gngr7DkJa2jQDzxMFD\";\n  b +=\n    \"U7h21MfxMl55nWDZtJguyoHtZodswE41DoMfLCVUFT/fmpmswvLv/0fhGHPTiPrp7+LX/2C9WRP\";\n  b +=\n    \"oet5iPCU3ULokxLilodECPj5/m74ONaCOcqQbclmke+PKV+2eJUi7s9mbITBNJEt/d9aavbqlyn\";\n  b +=\n    \"9ruzWl+0L5/8TRezO5q/aiFtfoYixbC6PWEDEtmw2j5j9Cpcxk0f82SXOMX21+CjVNhByeZrIZR\";\n  b +=\n    \"OQ3oJXPiKN9gepIegYmo28qW4/dVn7eZpxDuK+pkn9Av/bNCaHpsz2KfhvMm1g/q4pQxPTFozgz\";\n  b +=\n    \"Wbrfpq6hvebbfvNEOF1T8XAsUgyRd23cQ80+ZsSGASJEZhuRs+1qNMw4UnP8QvE5npdD8Otj9jN\";\n  b +=\n    \"g0rN+GQXU9fgFJED3uUFiyJhFKczRT1Jld5Pldtg2h/kyxEAXU/LFCt6/dkV238ydh6HpfEX+Ns\";\n  b +=\n    \"oDNdgzyNqP6hr/wcn4emlucf/YIZ7x017pqZeGG55Yp6x0gwbFgrYZR0MB9AaLTZSYmLt3uNVYD\";\n  b +=\n    \"un0W021F0YsWT55/r5Fgt+RPhziX6uvWfwAGXiL7b3vHDAtEof9fOPsrsob6WPNoiD2UmcQQdAB\";\n  b +=\n    \"RYGIlzHEmeXDY0nM9T6z/R7Vb5f8VgEA6i4vwKb14vexOOsoHIEuzwqNXsnbqtYj50mKLblUWUD\";\n  b +=\n    \"CuyVNry/gmkWLmkD0ZGOaG22SX5v0n6wb5oYuIk18Be07Kf0M4EpgE2+3F8J3UxhBhdb1O5GtpP\";\n  b +=\n    \"d3O8UO8YBHzrtFJe6XHwEN3/Om5p6IE/1Vkjdn6f65a9O4eoImTixVG+wk4SfUGY8VvanulmEwT\";\n  b +=\n    \"ReoAaXq8sQV1kdcd5yxK2K0ynhKHsqJrgykVQMrolD5uGlcuyqmG8cV62Qt3qFvNUr5K2rQkxdK\";\n  b +=\n    \"XvzrmRY1L0JYbxr2dU/0FPN5BWaBoD2qxXr7SLch98P46eyb1KuqjUp5vD1PNzk8FIeTjh8Iw8P\";\n  b +=\n    \"cvhmHh7i8K08vI3D07mjDcPhQ3l4hMOH8/AohT2Fd+zDhOkzxbjtQdoDRTt25u0YhdMYbcMo3MZ\";\n  b +=\n    \"o/UfhOEbrPgrXMVrvUTiP0TqPwn2M1ncUDmS0rqNwIaP1HIUTGakjPT5UriNOmaJyNR0HI1LVea\";\n  b +=\n    \"/A+QWvjPOLXhnnC14Z55e8Ms4ve2WcX/HKOF/swfnVHpxfK+G8cLPitmmGneSU23S0p00zTpuO9\";\n  b +=\n    \"bTpeE+bZnvadKKnTad62nS6p01zPW0629Omcz1terW3TZigmJym/4gPwHu8tvKhs2s8VWyUlg4G\";\n  b +=\n    \"3TCKSv7IB6/k04TKptPDZabw+aveuGsBnz03cXzkxserxIuhzXI5vAXWQy1ZlKfZeSq8qGc8u/O\";\n  b +=\n    \"4D+BCjY2bCpsV0C6GD9tsPdEef5L9uQL0cpCfOLvDvJwFOB78De8JsXPIUxC21OxtfZL4RCwm+F\";\n  b +=\n    \"6U0SSEk70q24s4+PfY4mmoa608NBTLoymPRB6D8hiSxzZ5GHmMyGNUHjvksVMeD8jjQXk8LI/H5\";\n  b +=\n    \"PE+eTwlj/fL4zl5PC+PF+TxIXl8WB7fJ4+PyONFeXxUHi/J4xV5TMljWrmLQ/o8rM8j+pzR51F9\";\n  b +=\n    \"HtPncX3O6vOEPk/p87Q+5/R5Vp/n9Pmq15A7UriWavxfiV8/mOAYY7GiUh+ZkgwjPxDkB4L8QJA\";\n  b +=\n    \"fCPIDQX4gyGeDKHs+/e2vfeunfv1XTrD4C1s92fPjf7bwma995re+HknUBYr63Lkvvnru1379V+\";\n  b +=\n    \"7jqD1/eu5//+yP/+K3Lj69O5A9FUwwZWac7Vg9tpdt1HZpmxjAHm2UmS4MmX6Y2BrljLzSehrx+\";\n  b +=\n    \"qfWY7zSetqT5K6nPUlT4lYC66mTYokZ62mVqHbxK2y69WDyQ3L2B4uZB7NYZoNdRFn0Qyw8/T6I\";\n  b +=\n    \"nyEGH8DPIIM78ZMwuAM/TQZH8RMzOIIfNk9k8FOZ4iOEqam0xa6p2+Kgmn8T/hVf4QP8i73+yWJ\";\n  b +=\n    \"PP7DMnXZ+DJG73LaHAqZlAXsUgX3JoPXtzWKIU+lGCbMUYufQ/nSThj9+4c9/JqLwZpv/L7908x\";\n  b +=\n    \"fp/SFNPzz3tZ8KKH2LhiGf6FN4q81/5he+uPjKFNscgi2hvcS2bDg5gX7eR1xhbq2LaGWAokOz9\";\n  b +=\n    \"aS16eWZfo7ZctLa/vJMwjFDJ62NMNo5c8zmk9aWmGfaHLPppLU55pkWx2w8aW2TeabJMYMnxYZZ\";\n  b +=\n    \"bOJs+j/NV/Iu90GSfmaeYaGqQOaiQOaiQOaiQOaiQOaiQOaiQOYifjwM7gMzsJ8FE906LAzuZT/\";\n  b +=\n    \"bNV/ueLPgabbKjDmbIqYmuryOyHCB8/dIsoGusbuA19mXchtLvh0NHkZDT9L+PMnvTZpCwzQxcB\";\n  b +=\n    \"PhoIVGI9909JmGKLPXqQFqEfugvghp1d7q6CJTy9jQcF3ezUeV544q786o+mseVWr5qk/G1daTs\";\n  b +=\n    \"LI1pOPLN9WJSczFNKrQdYM6yohMJuB+JqCxBetbiY412lJQPKzobT4J61tNHXG+iSdgcDygcYb5\";\n  b +=\n    \"NNZx58MkHzzL02iDVa5QR59v6hSPe6jBk2J0S8agbxoUj5v74ElmYqoPVYYgkPlQZRBWOR+qQBg\";\n  b +=\n    \"1fqgCF5rRQxUIytYfqmDL7uFYA0bRh15+qDLMUELQVnFLQ9AWFuxE6maGkLqJIaRuZGPsSN3AEF\";\n  b +=\n    \"IHGEJqP77KqR2GkNpmCKktVIZTGwwhtY8hpNZRR06tMYTUKkNIjZizQ2rAEFJ94QIJYkzAm2ZlW\";\n  b +=\n    \"+M7WL7f0Hwl4p8jFXaxFrI7XbC9db0mzipPNk4k3ttx7DEXqLsl3Q69kG+Ynsu3VE/lm67H8m3Z\";\n  b +=\n    \"g/kejndvO5hlZz6emXvm+HkbwHsD3jDwLoK3Frz34E2HmvrPZS7qLCq0k73ZgdRyRh1mX+viOkX\";\n  b +=\n    \"EMXDrWGfRhyNWduCwBQ5ZYNoCup/17EbXsztgz26NPbtn9uxm2tMNN+yCYLNtRV7EK2fHqRwLsa\";\n  b +=\n    \"RWcsdNgZBpuyfM5vLr4qaiEL7xS+UtsYV5/aIRrBR5Pfu6+ELq/WjkigTgJAjHQfsmun3sJYht2\";\n  b +=\n    \"V3j36v8uyj+j/j3Mv9e4t8F/r3Ivxf49zz/zvPvq/x7jn/P8u8c/57m31P8e4J/Z/n3OP8e498Z\";\n  b +=\n    \"L2WTgEe91QQZilrjur+2Sja+BqhaEYdIRJPkKhG3lWFxcVojJsFexU6uL2c1Y39WQyrqcCjA2Vc\";\n  b +=\n    \"ouQPeO+dZA2hTlFLjUuqRntRmKXWmJzUppR7tSR10U8VdlCQQz5snTePA6VjPm0Olco/3pG4rpc\";\n  b +=\n    \"72pJpS6ome1JFS6qme1NFS6ume1B2l9kRGMIdb7hmwMCxY4hXu8iKhd7eMZT0Xg3kJsxHd6q77L\";\n  b +=\n    \"drixNgGs5BbPtocVxA6E9nkqDQ7iWuxsGRH30rLlZ1BtUtOm5DO/qZXFs5VG/YsKsdFFcayox4P\";\n  b +=\n    \"7VGPa8E+JfOi1b4jxiKtZiYxWiFjtCxjvL6MMW7mYztulEJhcbvBmXwlT/F3RgnsjjtPOqRJh5H\";\n  b +=\n    \"E3rvzpMOadARJ7Ow7TzqiSTNIYt/gedKMJh1FErsSz5OOatIxJLHn8TzpmCYdRxI7Ks+TjmvSLJ\";\n  b +=\n    \"LYr3meNKtJJ5DEbtDzpBOadApJcJqep5zSlNNIYXftedLpQP0RVpSMLVVYeYlWIS/B4hw52ajTv\";\n  b +=\n    \"nKGeK0MIbqNBo1Od3MB5Cn+IPH6D+oxRB9fjvhZ5wO4Fem2aKTwbYOeWeHU6m3i0E9cpeN8wHs5\";\n  b +=\n    \"bXUh/e3zQYGJeWMUq/yMp0P69gKcXo8Apy4I8Ifjenntx31pPx9H6NEYe3Op09v0nXA93hzDkjf\";\n  b +=\n    \"HQvAtwnci/Y7Hgn1tlmdXF1RwOcGqGB3IN7JTQ0/4mLAwdB+ytw+4jg6ZcxFH0h6LIVaVs0g0DR\";\n  b +=\n    \"wAZAwhbRip37wNnCbyTKGVV9rAoH/QEcdj30T42TcxSa+KyhUkISxw1gJzFjhtgVMWOGGBWQsct\";\n  b +=\n    \"8AxCxwVoKPypTb6sAUOWWDaArcCy4hZ4IYFlixw3QLXLHBVgDb9rMIKtGi7wNcos74Ij6bB34RU\";\n  b +=\n    \"7MBfrzxskEvEpuFqrFJteIwbDe8baSDjg3j+YdxY+jwK6nKQHQrbKmTXMSFRiB38QvdpKIKtoek\";\n  b +=\n    \"4aSp7KfN5H59g5y6piRr7ELTSc571fNsjhVuVF/t6xPlEwpkzMeRJ1435izjZ8e4lhnO3f1Xhiw\";\n  b +=\n    \"RfV/gSwTcUvkLwLYWvEnwoFPg6wUcUvkHw0VDKv0XlH9f4aX+3P6vwYYJPKTxD8JzCxwg+FzpDi\";\n  b +=\n    \"iVQI0cO0BNJwNARk8vFOSMrJufxOSUE7ohZQKYmIaDI1Mwz0Sy9dkkq+2clTxOVuM1lRMPcdWot\";\n  b +=\n    \"f1OW5kTct65dfKIOrJ1FvuZk4pJY/LZH8K9EaVRue1y+UBUBxKaVW40m9pVIzslKTExPZVzio/L\";\n  b +=\n    \"bKmdbtDWbP/oFFovtaWpbrlfWbmrbShm6fGFPU0voNg1a6zCDN3ItCrgR8SCj2PVMP5+WyRjJpv\";\n  b +=\n    \"ez/LDjQlvdL9Gsu58FNJ3RIMNDxwiPKgSSj/vMGrrjBu/1hDNIjdNey6N1qsUOHXixpV3pK7IrR\";\n  b +=\n    \"VXqtio163ovW9wvrv3mfxDVaSQfh4gIunCWSV3F33nxQ6HcuNJbUjTe87Ptz5hW1+c8Lf58D0sg\";\n  b +=\n    \"NWsphvh4onGh39sK9mKmb2/aIPbiYBaaCvqhlfkTLT4AamWeGHFXsZEWcwAfSlt4vIA98qj/fMq\";\n  b +=\n    \"G2Z9L2TD7+1M2zP5UyobZ35eyYfbHUjbM/nDKhtkfTNkw+wMpG2bfmbJh9h0pG2YfTbfyliYd5n\";\n  b +=\n    \"1Pyv4ntqV38Q4qvZu3YOl23qelhjdzaZd3fGnK28L0HtmMjazmZoxa0MguRK6LO6hcZ/NRycUdx\";\n  b +=\n    \"52LSi7uOG4uKrm447hTkeviDlGui7tgFpKbLZr28GwTd4tnhxhgPBPikfHsJzYazwHitPHcQMw4\";\n  b +=\n    \"noPEr+O5ccy/hV3HpjH/Jp6bx/wbeA6N+Ut4bhnzr+O5dcy/hictQFfx3EbTOZ53jflX8Lx7zL+\";\n  b +=\n    \"M5/Yx/xKeZsxfwLM75l/EMx3zL+B5z5h/Hs8R1rEOWSaqgYEG/aAGVLqIZBmcjXkAZzkzdoIdDU\";\n  b +=\n    \"GnGgOYQFpJwt1+KOBFApsCXiJwUMArBG4T8CqBIwJeJ3CHgDcIfEDKvRXikA2xwXS0mwXwCDxM4\";\n  b +=\n    \"FMCzhD4nIDHCHyBKimu/BqQk8+mv0rVbDnX0Ng/uuGGNDA55j3e8nlIdJuQdlrgm65mloDnrj5u\";\n  b +=\n    \"osdFWIxlpOU3MtVk1pcdIluvrSSPQFSKd5DJfSIrRSXwdUlRRFh6vek19M4XXwxE0BIzb9N+ppn\";\n  b +=\n    \"fYlNhNI+3bELLTYhXS2hOrlAUL5C6BaHvG2q8txWtj/mgp6mbIbAfVJX2erYN7dK2oXDO3gQ731\";\n  b +=\n    \"SFEloa+Eu+XOLgUxDNY+eaUseSC3R2sBkUCUGREK+WAD/qKxTVRIttNZzbfCCadoPSOl9b52vr/\";\n  b +=\n    \"Lx1Tds6v7xZCdG6MC8WfQsNAW6VFO+rO892vhEMLL/XRAOJQYQ2bEc/JM9g2KbLTtKXhds2SNN1\";\n  b +=\n    \"I6nrpQ7ZXw7skOXgTQzbhZj92Ga5rzQMW6jrg4vN4BZMxjGPhH/wOCQCK9nSEFTFW9nbnxju8sh\";\n  b +=\n    \"osixn5f5KBXISPBh8tguAU2+fSP4vUSqURFAUralvxRBoZN4qmWi8vLVRGlsSjV8ZHA03LvkdT0\";\n  b +=\n    \"YK6hLSDnHee3E8W8r1MUJVhHCpAazJJHGCED92I+OVIolyyq/rKFEXrdnSAHsrp/nlRazLNDstV\";\n  b +=\n    \"oWVJPBqVS5uCLxWlbsdAq9X5fqHwKWq3BAReKMql0gE3tR7Jkx1VdxDMDhdw10Eg4dquI9g8HAN\";\n  b +=\n    \"dxIMHqnhXoLBmRruJhg8WsP9BIPHarijYPB4DVMog7M1yHkweKIGWQ8GT9Ug78Hg6RpkPhicq0H\";\n  b +=\n    \"ug8GzNch+MHiuBvkPBl+tsQwIIYRFuuMnwoNAEvWHZ8nEMJWw6704eQ+lJuJxspEc9Xh6hIRons\";\n  b +=\n    \"qzb2YwXRJt0BanQSjNIHOaBaCEmT5wMpfafiCmvKbDvak3orvH7NjPfYGtgERiDCSEqR/ee2azm\";\n  b +=\n    \"kKTj0TCj+IpjazZSDhMnNPI2EbmZr1CE0kMzHqFRJxSEGvp1ySwwIFYA9asV/6iaPTri3Pui4vu\";\n  b +=\n    \"i7lZr/zFGffFeffFJfdFVvhls141ay8pKuwleepTpWwwSfQqo7LFJA9mvaIeo0m8c0b5837ah+e\";\n  b +=\n    \"Mz+cp1qxXfQqbITHrVZXdu5j88disVzQljjhWqdv8inWbW6lusxzZWzmY9arB9L0cDODTVXV/0O\";\n  b +=\n    \"TaarWO+Y7JL+ILPOuqwhOzXjhmyr17iNUkbhbMerWnpOXz7FTAs2a9PDbrFZna2k0U5zW9TWR3r\";\n  b +=\n    \"L1NXKis1ET4smDTQZ4169XQGnZQhzmuVZ/i4JjFgTX85bFZL6Ag9y/REstmnpj14qbBrFdTvZ94\";\n  b +=\n    \"1qyX2kdTLMGsF7B02fpbCAssLYrxsw2KWfYk4lmzXh6b9botnsxKaEqWY2kZhvgLhjYfLcXSOYs\";\n  b +=\n    \"lMW22kRuofadmvfrEthkjYUFtdjX5ZTXr1Sx8RXhi1qtAz+FgBfTMKHquWatnFj0btGfUrFdVzU\";\n  b +=\n    \"EBX+yYhc161dg6lVd4ElGHKW3GqJr18mDUy8FjJGa9+FO0IWPfIugga7QrKYgEZr1qeRvPrdTG+\";\n  b +=\n    \"VIbj/W0MUFTqorgUxbBGx0EPIf2syk1ud4Vs17WzZI6YoJ9hBbnGFVDWoOSoSVmvUI2pBUz8oiG\";\n  b +=\n    \"+tiOmGfNetW0R7lJMOsVQp1BsNvbpCnWtpTGXK6s0GHswcWSzFCPVygx6yW9IlakqC6hdJF1lCS\";\n  b +=\n    \"eXPKPxKVv7A6GsqGuz5a2fHHDQbyG+sfws3M/p9p6VVjY8uGCA/uJqhjaqrBPqdde67D3jYp4+m\";\n  b +=\n    \"DnG6r5mTveKJfV63gDhBfmjjeEpczMk3rIMM22r76UiO2rxWpuHpN5IT5ZbxdnkD44fTmDZCFKT\";\n  b +=\n    \"K98uOPur5p8sOKrS1h2Qevk8K3b3kCO8HHsnugbs9BMtSrELHwQSrh0/xZKbls2v+WWjysDHJZ2\";\n  b +=\n    \"tFRcFlAnGvcrvi1F6xfab55l92H+iUhc2r8qwdMaPC/Bsxq8KMFXNXhJguc1eAXBUf9iJBwmgbM\";\n  b +=\n    \"EzgV5xeWXLZtwVYCKLWZLjkBUtE+tUYh9tT5rrKAmYEkcu6YHWtrCQik890ZuP6Z61nqazClFbI\";\n  b +=\n    \"4KsReCe51+vWoZcCrWnyuRC7hKFwkR9HaRFD3PNy1yAzPotHKDGbR1WGBld45Y4bQ7b6m3vL1sH\";\n  b +=\n    \"IltDG7QvHJZNGDcT0kJUYlibQxX4IYnfRpKn96S4EUNHmJvbHy6geARCV7R4FEJXtXgcZ/p4XqY\";\n  b +=\n    \"0wOOTZa8ogEsnYKqsO9lp5oNtcnhw1Cahtj1cqN0uBnzX8DOoW375kpa+9go+vbl2PY1x0on2RS\";\n  b +=\n    \"LAL0s26gXY5ucSm2EvqdcRzC4egct7xy92dusd3lDTus2m6F8hglh4oUjVjDxoi1c1kYx41KnSm\";\n  b +=\n    \"22MwCbNdlk3M/I262CUDXEH35AhnlVOu5hGeUaOl8RitDgRQle1OAlCV7SIJxnUkdfqeZ9PlfFh\";\n  b +=\n    \"s3nbwrG2QREjjDUra72F3w2SVK3RhOqAq5gqKGeN2q6hAp2MF50LLJrx0pKbqABKdr6YvaXIKZh\";\n  b +=\n    \"j2altk1mowHsj9xTWyuV/CUbv0XiuScsgW+0BYpBnaYln6KcgnA84zlTI2KbWuI8q3H5PKq5tCU\";\n  b +=\n    \"uLbRzxqql5XGhQ5r1HIEOlnWmrogKj7scHPdKy8EJr7QcnPZKy8FZr7QcvOo5y0GFZyd0Q7+2S2\";\n  b +=\n    \"Raqmqoo2hFMZ0ipp7HVfU9rKOYwzsanuNLlpqudquV05fH1WxPcTkNHTMVHpbYJwyt0NdF/zfyO\";\n  b +=\n    \"DtBLVbBUPzjjvcIGIrZWL286w1xt/+v3XJS39+o5SQ2MqlrGe5b9GD8FbEKyVdKoYgQYjJrSkQP\";\n  b +=\n    \"uyTZZYaUlZLPBFwDk1URCZK1IHTMpojNPhvjWzTfK0asAb5dViKA94mBc4A7ZLkCeL/Y5x5lH9u\";\n  b +=\n    \"+Irz7TrGRDnCnLHwAv0dsdgP8XlkdAb5LucEWAg/kGnLdXbnyXHcs16vr7s5V7roP5tp43Xfnin\";\n  b +=\n    \"rdh3Idvu57cvW+7sO55l/3vblSYPeRXHew+6joDXYfU3lNUTRs47w/N9AoIZEI5Wv6duk6oMN/R\";\n  b +=\n    \"fdZwU+xG9UrNoYc7Rz3rjCZV+oVuXfnMvTTbCWvqpJsjohJlMudVLUWOhMXFMFfUk5BTfC4sbmp\";\n  b +=\n    \"vSD/2pKnRs3k3Eki2cyW80ZoJV9hUB5cIMKaL9bUJTbqZWOYUciDPTyIohAf0RdLqoL6YRdJZVm\";\n  b +=\n    \"8IhZ2X+O8I8pvoNwoR9V8HuIWisUhjuhhk5UcovG8TfO1nv6N8rEoxQn+duboKzLEbgaYsa2vma\";\n  b +=\n    \"duMRdrWi61VCtSoryNms938iWlElZI4btHJaS+nPrXwFW1B0sF/UWrYEgomqnPcg/NgoqVWm1Kx\";\n  b +=\n    \"01hWlvLtpq517zd3Gd2mPvNO8w7zU7zPeZ7zbvMA2aXGTO7zYPm3eYh8x7zsHmvecQ8ah5bTWI5\";\n  b +=\n    \"XCaxHI3LOGCBvtDewkRiG03TRXysVkqPb5PenFyr/CoLo1j7Sf1SsYh38JFqveoaovdD4bCr/gp\";\n  b +=\n    \"BFs0A/g4/pQzx+BolRLghiuy32RImrc1f7Hy3KT2uqe0oSo5sV0UMOQD/yzQdYWkBVpw4PexND0\";\n  b +=\n    \"sqizVXuap2R7nqr0O5KmTlKigW0OAoVBZDVqmKHJXFkJWpIkdlMWQ1qshRWQxZgSpyVBZDVp2KH\";\n  b +=\n    \"JXFkJWmIkdlMWR1qWi5yqLtchw3wx7+m6u56E3wPSUB4nb3AOuDsIKiirGJkmLaUGptjK+oqWh1\";\n  b +=\n    \"DmlE96TXIKtVM31qkS1+qRs2WF6nR+UwtC/zndod5cLvFuXC0FUutEqEW1jpsFAutEqHQ6wsWCg\";\n  b +=\n    \"XWmXBNZQLa65yoVVGfIPKhaEoF1ZFuTAqKRfWVlIuDHPlwjBXLgxz5cJqrlxYzZULq7lyYZQrF0\";\n  b +=\n    \"a5cmG0TuXCWq5cWMuVC2t/V5QLQ+bRYmYuXOXC30u8GNvshWBvGo+gwdNQACC08DfibMe41DmGJ\";\n  b +=\n    \"Q+FHsihB3Po4Rx6bK+FzlfyyAsFeLEAFwrwUgFeLsArBbhYgFdzcE9ld2Do8fO/9OO3Pv25X1r6\";\n  b +=\n    \"/QococR7Xjvxa4d/69P/x8d/+iCuYOI9/+8f/3/svX2QXddVJ3r2+bj33K/u01LLaqtl69zjtt1\";\n  b +=\n    \"KZNKAbbkGk+h0ETseJy+e91JTmar84Xr1qt5UK4/nloQmb5ClDpGCRAw04AwaxoAgBplgTwQYRo\";\n  b +=\n    \"CHtBlPRhQCBCigMHqDZlCCEsSMaiLyNEFEb/3WWnuffe69LXWcQAJMFPc5e+199t0fa3+tvdZv/\";\n  b +=\n    \"eqffOT4Xx3/qQO4IErn//T08TN/cObPfuFXD2AzkQryRFqeuLgSlBPZLmqoRt7EUxxoZT9GMz2b\";\n  b +=\n    \"MFCw3+jQC7tZKj8HA8NyxyLuOHYAZFZ0tKV/W9K/LenflvRvS/q3Jf3bkv5tSf+2pH9b0vYt6d+\";\n  b +=\n    \"W9G9L+rcl/duS/k3LHzAL/RYtHU1M3002cEf3YZ/T77GabxtgxG1M4hheFGY1TRC7PjEcRYwGib\";\n  b +=\n    \"BBosWow8i8eU/ugJpltFj03srgI50Rv9mGoTo+Mv5HeQtH2CYSNChmfslsp9cxoGRShnsgZihkY\";\n  b +=\n    \"IMKkBO8/W3hyxVlzM99/i//8EO/+rl/NSV8+QM/88N/evLU0c/uELb8lx/7rR/46U/9t9+BwijY\";\n  b +=\n    \"8td+7o9+70e/98/Pb/S5kgWPu1jWnjBL4owdloE0x/djzy6v3wcEIZ12WJzGOuQ1LobQGIo1ZoG\";\n  b +=\n    \"TfKXjBqY3JyLgtNDr1vDlaHu4R15fodd98voavR40kvh0xAAtqQ6g8bKxt4iy78ckySC4YTm1Bz\";\n  b +=\n    \"eMe8qlpeu08OB9b7n0pWgRTpP27tr1IC8RKRS41pA2lrTpWtKmkra7lrRdSZutJW0maSfXknZS0\";\n  b +=\n    \"k6tJe2UpN28lrSbiSu2LJTJXt7diX3XV9z3gdpenYh2CwdArQ6El0HYIwTu9ZMgvE8IXRBeAWGf\";\n  b +=\n    \"EDIQVkBYMkKZBOU1UA4qZQqUU6AcVspm4abdlp3uC5YNc/VyxV0+Yxk0kvEaybhGMtpIuWWsNaS\";\n  b +=\n    \"dsYy1hrSzlrHWkHabZaw1pJ2zjLWGtPdbxlpD2ocsY60h7cPsbKwf6LmBZ/YUmmwzQecnxsLkQA\";\n  b +=\n    \"wpwTHDUgLYBbAeQ/5Iz4igAcoEfThHe0LkC1ML84Gc+DP7Ns9zYzRvhP7QgtWzkDAbcGRVeHbBK\";\n  b +=\n    \"lFwmFU0MBWzpKE8Iwp6Ts5QnvIJWAxWfMJJG4CE4VrgFPwklnjMqgEK4VLglAWFcNQGAElw1LjK\";\n  b +=\n    \"LVevh41f0SWVrPaTUIQa+JN9LOXDGUcYEXI0uEg7dtp4RhBeonU2gQZ5BE2mFOcIioAXtLyhXk7\";\n  b +=\n    \"eBxVU8UdXNOfN4YPs5mz+LR9UyKg8pOUZv701erJoejlADYV/k0Eg5IYoHpWL/Eb5PoeVljft4S\";\n  b +=\n    \"lFQ7AeDOWXDuYXi+ZkUx0nqjoKO8cLxEWfOATcxz9SKaG87tJ1bMtoe9E57Ak5wW+NdhQtv/nMm\";\n  b +=\n    \"pqPuqNqPvigHNV+UDV8ne3XYgZpDTSgyzCuvNfVGrBdubJr37IBv5zidWzbaIvZBhxUWZKWWbBu\";\n  b +=\n    \"AcFlHGgDDzeCG7mnaYjOY+amQj7t1S2v84aXEdUTWkpN1VLyPfU9PVA/vziPCMK2WfDKIzyjjgq\";\n  b +=\n    \"NVaNif4XaOMFXi1dvnp1fsFt4IfTyBJCvK3NbVL8iaJDRxzvmjeiS+Y3Kbej/ar7w1WjUqhmbtZ\";\n  b +=\n    \"rcqlHr/PsVN+pgdn7B1t6oHX/25XAgK1CQJzyjp7zyMTixTvcBvTJmsQtD7dStRayvzlM9C9KBH\";\n  b +=\n    \"9h5Ztysx+l7iU7frZlArNK6YpWGW94mHef2Frcv5N3pYopRHvEHSCt7iw15A6DjxTokWQ/9p/U4\";\n  b +=\n    \"tC7wGXBvAWh33F2u5y9wlAoXyi3fUYzvLDIiRRyY2EmHgX4jz/DI8jE8xvJJkX0fYGixPRBATeb\";\n  b +=\n    \"QC10PmSEDlVEmvZw/XsQeoYkP2jhX0F4hyOPpXfl43uPYbM+uXfm6srlYrNubb9izCPXRvUVbLH\";\n  b +=\n    \"TNAmAHmov0TZMOZ3l75yLOOYadXGQ76Njn5ZdxZlTFCfwmZYr88slFeB/RHBuaYwM5NmyO/bbAr\";\n  b +=\n    \"DVkkzLGCAf5BE3NVOVxPG5jMyQ2Q6WW7kfA8gYv8Ykkn8qpA0J0wHoGCYBG0W3QPMpwwO1vyjfi\";\n  b +=\n    \"sTHvohV63HbUWKnYsnapmuwTbxo18uuzUeozkW8aqE8b9YEJJh+cUZ/2IleF/vSkPnQiL4NHy3A\";\n  b +=\n    \"PX3pQvTRg8fHzMeFhryBGC2Kmsx3cuSnjzO8pwB5FxMYwXGtYn7LZkW/91BJTqqbz/WOJ6SgiTK\";\n  b +=\n    \"hqn4u8QA1h5BIPv6byAvm9vIWrvWHzrWYV0ayZb42OYPOt4axGloB2uIEg6bG8xoi8xoi8xoi8x\";\n  b +=\n    \"oi8xoi8xoi8xoi8xoi8xohMwoi8xoi8xoi8xoi8xoi8xghQqhGgVCNAqUaAUo0ApRoBSjUClGoE\";\n  b +=\n    \"KNUIUKoRoFQjggEjQKlGgFKNAKUaAUo1ApRqFCjVKFCqUaBUo0CpRoFSjQKlGgVKNQqUahQo1Sh\";\n  b +=\n    \"QqlGgVKNAqUaBUo0CpRoFSjUClApT0HI/jUTeruLmM8kbhZG2D7MHpJ/s3wzKHtqL3B+h9Eco/R\";\n  b +=\n    \"FKf4TSH6H0Ryj9EUp/hNIfofRHKP0RSn+E0h+h9Eco/RFKf4TSH6H0Ryj9EUp/hNIfofRHKP0RS\";\n  b +=\n    \"n+E0h+h9Eco/RFKf4TSH6H0Ryj9EWp/hNofofZHqP0Ran+E2h+h9keo/RFqf4TaH6H2R6j9EWp/\";\n  b +=\n    \"hNofofZHqP1hxEuFkQXNNf+ZcGHQS2HAyGfiClQVUiq/f63Z8EwoyL0XAyQ468ZZgEMQUc55lMt\";\n  b +=\n    \"MOe9RrjDlgke5ypSLHuUaUy55lOtMuexRlrh4VzzKQaZc9SiHmXLNozzDlOvV5AbVEFqNr4+Jf4\";\n  b +=\n    \"EzoR5XPVRrB3ftcLAdQLZDznaQ2g5r24FwO3RuB9vtsL1xGJSXZ+yLhWh32O0O1N2hvTsYeIcP7\";\n  b +=\n    \"4DjHaK8g5r34OifXM3WXYEAGgoKYfK4AsVm+If6jM5XMqOIQ3O/qi847Gxj29TYNjW2TY1tU2Pb\";\n  b +=\n    \"1Ng2NbZNjW1TY9vU2DY1tk2NbdO/fsRBxhtcY5uGQ21qRrWpGdWm5qZtqjpjVlHZQ4/w/LwacY0\";\n  b +=\n    \"pys1x3hzwoxqqgnZai1l2WOj8WTj0mf2LAjQHkRLlh4X81cEzrDfvV4pu+KxiHA7mqs72kpoyZr\";\n  b +=\n    \"BQUzHztb3mFmoJ4sGW9/XOVIPNDIHfxwysE+j7oKpg5ZM3Vn1ZT3dLVay5IMnQz8vfwNPmc76Aq\";\n  b +=\n    \"6TGlTV2OtZOPS/21gUBARVVNkt2Dl50SSirtaCsFoGymv3Latovq/m+rCb6sprhy2pqL6s5vawm\";\n  b +=\n    \"c/u6XL0+W70erV6fq16PVa/PV68vVK8vVq8nqteXq9eT1esr+ipDcUAxchCUsMYtK2YAcdAqhgY\";\n  b +=\n    \"+Paj7/h0cgYw8aHliTnEHJcT5c7fnuJx2r4M5OQa6ol6SvTjD3JpUmveGr0eTOk8UARtB+Z+ZER\";\n  b +=\n    \"UJBnLviAorrb4f7JkttPrStLW0EvTp2IqRyJKEjP88Nl2sp59/786iQakBOoADzMSePhwF8UG5f\";\n  b +=\n    \"3suSoLhU0VrZzGOI9S4PS4383E+LvdwOE7gSIuPyRkfjtt6OE4FW2gyTxbYxjB7DJB3WZ7uLFI9\";\n  b +=\n    \"zuYdnPAyd9hNpumA29bzNG7YE3ss3pX36Ny7N2/SEZr2GHqUzhYxB+8tGKQq0QNeggNespPPwYu\";\n  b +=\n    \"76JxyIA859abFghF9mjiycUVwwgeAAN/uNgT6ognT3t5CeezDr0JuAM1MpzwoOFLwsSSwHsAk4m\";\n  b +=\n    \"cybeMZQopzYMC+WnwXCoBdRY4yfdq/izfcJgx+9kJViZ2VWCcKf4+dTrBvA6hXTKF/ijuoh/JxO\";\n  b +=\n    \"v8cgCIX932/zapbQKAHX6JdI8hxWnmXebH1WP+2fAP8h+2GKoGw1J0QUGyBw1wO5gj2qVuai/0i\";\n  b +=\n    \"T9idbpKvf0RwvPP12TSUHgEl0s3vFHehnXwSEozONPH1Bqzvt0Eu1Icx3pYFK8IBe7P8R7j6tul\";\n  b +=\n    \"deZ6vq0Q4xd6cODcF5/JlfKqcm4JzU3DuGDj3rpw4liULYxAwCMeOLfRngNbxaP9u9Se1jAPgmD\";\n  b +=\n    \"BvB1ZTMwKKsS7vKBdvpLc8tVw8Juf36YV8XT7N3LlRn+m0jU/hKxigSEzv5Bu9eJ+L8zEBe+zmd\";\n  b +=\n    \"w1wMEYjcXgv575r5nezTKXJYxe4ZY/qsYlqIM2chxY+K3s+FByLhG8AgIkDLGrKJoZgsd/K2xA2\";\n  b +=\n    \"5XSyGFfJDLPBRLnx8T7NReX44/2UHs3H+xPUq+YmvdoU4SD3aRt9OkG7OddxE9MsvtsFXAelZ6C\";\n  b +=\n    \"n07sYLBCEKRDGp3eVZg86NUantgTFmXo0Ro/G6NEWevQ29CjrzrYsyvPevLXQX0eTHvXoRr9HW9\";\n  b +=\n    \"KjbfToOunRDs0m0qNj0AqJKxhDhrPdgB7bIIiR+oynbTw7ds7b4vSZnmNefK1HW2LoG+e3rdajU\";\n  b +=\n    \"zpnUq9u1F5VSVm9V2ll+fVu2DsQ7r9LgUkmKHlJS8dTi0VjJ9WwsbPfZhAfWjp4xch2E/9THwp0\";\n  b +=\n    \"KU298QF8uYghssh+J3gG772VIYsa2CMkUOlcp+rlLTkfjGHrJTVMd7+UN1/aV6x/MzfEWF3yxtH\";\n  b +=\n    \"rRdsRCdgj6frjuMkCLHID4jS0+zpuGkQACU9/pQKtYfTmBVbrTOArYywff6k/CV+dVOIeu8mYp2\";\n  b +=\n    \"W4KvK+xX7XUlQNVTPtQCLae4DynNwPl5Va7g4gj/yYqsyITG8W2d3FiHzDkXjF5kAEury2NfOu9\";\n  b +=\n    \"OEYj0YpFK9RA0WCeJg+0izqktL1x5MygC3s+OJO1vcWpQHuYcM9LN4QE+xK2tLVGFZ5h9NLE9lO\";\n  b +=\n    \"N7bTu4Od3vNary2tN44d3LjrWWM7vk1rhD0iRjfreGM7XrV6e7bjTSd2vwIbgKrjjdfx43mn6vj\";\n  b +=\n    \"u6I4f8zo+qore5Hl0oJXb7Cy+FlOVGZHpzSLR8V7Prdbx4pDLdt44d3xbO571kG/d8ePyrfYltZ\";\n  b +=\n    \"frzHyCEawUl8gshge426X+IsKgrky9NjHVYIgYx5HmOpRhPbPwPsfYjCZVS8Esvl4UnOv15C41J\";\n  b +=\n    \"Rt5ptqlnb6BJkD1Uw3OSJC9IOZfkI4F4CZ9nbCDSqoAPx7hKkSOF5uKi2oqB2op7FlTFJJxy2iK\";\n  b +=\n    \"o21Qo7xz7y4RRXC8An1SozFYJ5JkNomWt8ltG/uO2ZALdE8Xyth9J1rlmEz7GazKcTFFIy7cTes\";\n  b +=\n    \"kD0IehrkN8/BTDXlhRVTrUa4k1Seu16WFi6q2fP9S3rDDCuI+sKdgjXLciDHV4FryfQpXKLZjqi\";\n  b +=\n    \"HjHMWQ38HBJ9BSNqT1w85HeuZOi4YRe8arf+2mq2N/o6arMZtpWZRiD+Uj5mPsuLX4jhWjY7yG9\";\n  b +=\n    \"JHxP0nOxoZqoignYAcGAcMk3DtymnGJycbYFC7UU/RNjMHgSc9ibSvaeJfR3hKZFW8JTBhiyvGA\";\n  b +=\n    \"CbtqHdat44xLsUMppgckm41pVKwiOm2QM7xGq4cRpYmkRZwMqHG1C3GCK0Z2YUqsGemrXbeax3F\";\n  b +=\n    \"WtVaUzCXWWsXHfJzveV9LquovqBVeQgyDPYDw2FhbQ1fHGlVLIZLDpNZziWsHhudQ1PQKQqQ5YH\";\n  b +=\n    \"8fMzhB04WWXIhzgSVuKoQRUBaWsZBFPIBvYOMEQ62CtfC7xSVo+Amu8E34zdK0K2QEiXNgKWkV0\";\n  b +=\n    \"3TtoukCL12vlsOImCZsI2XEcHuNWda5WXslAy1VNXNzlVZim1eFZ1BDzMzDe6lAYRDT4lcgbzPq\";\n  b +=\n    \"toxgHnkNPtY0ZKXR2bnAgsMAl+rvIlrMW+L/BSvRAuZxRnLFQbaVV4k6LlEK+YaFmW5ZAYeXE9Q\";\n  b +=\n    \"drH+YaIcAUyfSJx7otPOPEVnQaXbU0LAJU9EkTdmG0iZMNSF73Lh1jopQbeE+FYdJgSeVSWTDl3\";\n  b +=\n    \"crI03e7TRtAj0K1BMwNvZqOYT41dBaccaKsPCTPVU+afxP5ZMh5ZP874ryCYYmK5/kX2PlE0Zsm\";\n  b +=\n    \"qaGdconjT2Qgu4uMLOsQfmkjq2qyifDxNWUTy4Eqvthf07PMpHVPqHpbVj7JK0i0pr2yegI1T4Z\";\n  b +=\n    \"zEr9Bw8WIdQdK67eeAooPdRZL5D6ga4fyPzApB+Y8gObbUDMvW1BGqye0RxUz0DZijDbIhWxf7M\";\n  b +=\n    \"tqq4TSh/9DZRWhHq2tEPKC1I4Rul2ygu0jsoVVYunwhZDDLgYLBEA5lmB2PY1VgN4vnL+jF0uUV\";\n  b +=\n    \"7wKKeZ8qJHOcOUEx7lLFNe9ijnmHLSo5xnyise5YIovniUi0x5zaNcYsopj3KZKac9imhonPEoV\";\n  b +=\n    \"5ly1qNcY8o5j3KdKec9Cp0w0GYe5SBTLnqUw0y55FGeYcplj7LMlCse5VmmXPUoR5lyzaM8x5Tr\";\n  b +=\n    \"iaeSwWvUr3T5IIVLobx2J8TKsinfCR0LB+6EslXuhNLV7oQm7J1QxqtXm9esjq5ZLe9OqIdJje+\";\n  b +=\n    \"E2nmLVk17J9Srr0F8J9Rxd0It/05ooroTSu0KN7GGO6HeLe6EWKOuPXAn1Kah8S9exc5pxJ1Qa8\";\n  b +=\n    \"HupzDtrnIn1NY7oc7wnZAcfBq6u4eUlYWvhd6aNyGAbfAJA8J22nSy44t8Sora1JNYwMXFQcqCa\";\n  b +=\n    \"SzYt9S9dd1b5t4m3duUe9vs3nJ965YtlNVtfWgp7vI91i2uZjpyNZPiQoLeUrmaSZkzUu3ZO7B8\";\n  b +=\n    \"38ne6BDcgmBO/d7EDU3Czt1qQvxtVojfye8QxzI9EeP39GqmJVczOS5C7nRXM63hq5kt/tVMfy/\";\n  b +=\n    \"tSuhbezXTUgZqLbIM317NFBDkt+RqpuVdzdyV9yDIn1FBPo0m8HlHZdLN/C5R11tHaYWZNtJb3r\";\n  b +=\n    \"LM1IN8euTVTGvaxhMzjQHoaJ0K+jd68RgmTjGzx8yEc3GhzNSxzkafh1sSOa724PvEE+83HU8Rn\";\n  b +=\n    \"83wXqQrngXTunh/28ClzWEz8tKG9pmUQbs/gQsbnjX8K5tMrmwyXNm06NF8nHZyI65svN7uDl7Z\";\n  b +=\n    \"ZP6VTVZd2bT8K5vWKlc2E3plk464sknrVzZpdWWTDl3ZcE+3padT9PQ66ekepZWeHoPAz13ZtOU\";\n  b +=\n    \"8tgG3O6OubNr2KOZdNftXNrWebqsWkruzwS4QPZ2iY9vc0222W09X6+mN2tOjLnK20XLwJ2Omww\";\n  b +=\n    \"hy4c4ipo8hiBPXjLRedAobvBC8l88/wNyAiF+814yFYcBe89TJQ4pDjEiKGiopaqikqOGcPKRWU\";\n  b +=\n    \"tSoe77znTx8rdz33tp9q++KrjzwdpYWN3mkNEWGK8d02qwu+PhCvAcPqz04bzJHEYe02OT2hrra\";\n  b +=\n    \"WrFEkLu7u6Um36Oj5fjEzf6plEVENmaEN1hW07BXgBSpjjVhmM48HovzQr77agqPdyvPDTEL+OS\";\n  b +=\n    \"msesT01HELjt+aFREHhPWq2Fc8+XDElLa64h9X4ytkX09XL0uVa/XjHu9Ur3SLrDugCjG5nHAAV\";\n  b +=\n    \"GMTeeAA6IYm9UBB0QxNrl1B0TqQD6ypzaafrN/zG4qRNGjpU4/KnmRwqE2+LxVUcVHYmqvY/2oK\";\n  b +=\n    \"7oL8Kg1f5ls0K6HLnsScOt/6Nb/0K3/oVv/Q7f+h279D936H2P9j5XH6i46WV5b7UHlvNeGAl3b\";\n  b +=\n    \"J6ajiHLI9D4fcPWxxAjSibjI4810hJ3da8bbTDPllEd5himnPcoyU854lGeZctajHGXKOY/yHFP\";\n  b +=\n    \"Oe5RjTLngUZ5nykWP8gJTLnmUF5ly2aOcYF+a3J2O9jKnuupRTjLlmkd5hSnXPcoKU5Y8rezXmH\";\n  b +=\n    \"LQo5xiymGPcpopz3iUM0xZ9ihnmfKsRznHlKMe5TxTnvPO5xDLlGLlmQiWscwcMQ0FQd0LRaGhp\";\n  b +=\n    \"zqhNay73gB8YQ8j4GZeo9iOLHuK9580o7q1qyMIrWWY/XToBaN6sFUP5vVgxkGFhzXWZ48RHS3c\";\n  b +=\n    \"O7Ann5wJcF6nr2O0UdNXwXL1klkw10AJHd4+4ID2e11r5H1lwMh7blUjb4zrcjZ7Md1UmXWzhvF\";\n  b +=\n    \"c9hJoDKlx9PirgSNAs/PST3sE6FUi9KKN7jfYYJpVK+ecwTQinEW1M7nUFKzou4JP1WR6rm4yna\";\n  b +=\n    \"zJ5nfON5leHrD5nVWbxOXXYfP7s5/80o0bNz5+45cPsOE04xrUDX+XRxtOouVuaTg55wx/X08ZO\";\n  b +=\n    \"7aBtNl8y+knX4/lNCsVu2ZcWaUZV77CZmzxmjxoP70y2n66asab2E8PN+PK67WfftKzn54dtJ+u\";\n  b +=\n    \"29bOjTSgnhtlQD13U2PYNRj7ylXF7KCx70rNgnp5zca+XzHP3jw7v2BrMvadu5UF9ZOjLKiHDbf\";\n  b +=\n    \"nviqtulxr1ZU1t+rKV7dVV4Zadfl1tGrHn49lfcNFR0MncbGnrltFX2Gr6KVuuOlAF2vKirHeRO\";\n  b +=\n    \"bEmQgvZY2aF4A51vjJPSJ3Bv/JG4woruHsi/AcmItjEIpSFyEV4X18wEI16IgFSQEdsvp8hsrpq\";\n  b +=\n    \"I+Dluj+TfX5GDfZ50NW1u/xgas/xkeu/jiuRPi8RgUL1e7qPcUEH/qKdXzsK9bzwa/g89rbiw18\";\n  b +=\n    \"+KODO45/xUY+ABZ8oHu4uJ0PgXB1ygfBIqspN0wX04KWWd648Ze/852LL+WZnPmi6Zf20YbjZz+\";\n  b +=\n    \"5n2j0XmxmLZc7jkNvcU++meZXqOzAkcAmqFVMv5Qjj9/5HspjX34HJ958vBhH4kzS0iFUUPw57Z\";\n  b +=\n    \"dufOwvDNJutmnHkHZc0tKpNZ/CLTWnff7yv/vFA7W0PaQdk7R0zM03Ap6f0x77qX/3y41a2i7S9\";\n  b +=\n    \"iQtrh9uwyU3p/34Tz37XD3fDtJ2JS0dpPMNuIXntAd/+P/9SD3fNtJ2JC2dvPNJbJ847R9+6l//\";\n  b +=\n    \"SFxL20LatqR9OzsPSDXtL/3Ofz1XT5sibUvS0tk+XwfREaf9kd+68ZtRLW2CtKmkfRelnYB4m9N\";\n  b +=\n    \"+7iMHz9TbN0LaRNK+m9JuZqxIokVCe48qxDCvfyDcBCWfAFpm/c3ivQivd0DRR17vFF9heN0CZR\";\n  b +=\n    \"95zcXJFF77UPiR14LduuHtLnp7mGkz6t4AjqUegKdpXJ7OESuCIaOKmUx5P+u6RZZH99GrMGZMj\";\n  b +=\n    \"Hk31+8e/nvvcfqcanTP8aIplVKbyRywh47l7uXEM9p8cZUS7hXuopSO4WY45V2abVKlhB+4AtIg\";\n  b +=\n    \"y253ccpiOE/4aOhTSsdsBafsD+f5AqUE0pBjtT6nzIfzhKOHLZTSMVrOKbcM5wkndndSSsdmWzj\";\n  b +=\n    \"lncN5wlvEHZTSMdmddsQP5nmSUgJU0rHYHTUW8/KEy4lBNsMlXRPhu3UOWbaGhxFfB4MFG3VfKh\";\n  b +=\n    \"5jelFBLdJk/1AA92kF+HTX5BDdnYhEf06UX9wCkLBOy5yoIhnPvojdk7AZnXi8Y3FEwmuAGIJiq\";\n  b +=\n    \"v5rNa+1imBOepJ4qkZLrAVnVMjtx1lD1f6UM1XFzZWWsL/Jmav2p53BKo9qKSePaikpj2opK49q\";\n  b +=\n    \"KS2Paikvj2opMUY1lZmGNGuCsRcfz7oMvob5wJhoPP+VLujWkdzzbr0P8m72vo4Hyd6DwtzttNJ\";\n  b +=\n    \"ME+PdQQy9hQZKnwbgXV6iqV2wl+BfjBhXe9Byjg0W2TTTa9QVll4xa/mlF8WkupUb65WJJVtdKc\";\n  b +=\n    \"/Pz1WUlQQr+hVWcrTxXAqrQjdARfZs7RqztWvM1q4xW7vGbO0as7VrzNauMVu7xmztGrO1a8zWr\";\n  b +=\n    \"rFoWLJ9a8z2rTHbt8Zs3xqzfWvM9q0x27fGbN8as31rzPatMSxb5fryWbOa+DeRK0e+JPiOfkeR\";\n  b +=\n    \"5Vk5MpUKOUWttlV12J13FvP2bif9bNuEYzn0T+G00apgUcIxTZgurClHRZyfEXlqLrevHA9dLoD\";\n  b +=\n    \"81UtIDe/pfsVefqpFxvdA5cwjb2VU2zV/FQJKDQcBKKl6jJ/4bsq8zvcnoXgEDaoyPivHw6yM25\";\n  b +=\n    \"4ay7FN9cAcUrFtXJlzepyHYLNuU8o3Ij9u/L6NbE+gYHVlMfF4bOPFHUGjFp/eIh5+kFfPn5Xqt\";\n  b +=\n    \"INVBafSEtcBqW4IegOODBI3xkT2Wk8gjgxWySECW0WWrSDIpGXmwz0zBu0C8aSyDkY+rEmA1SP7\";\n  b +=\n    \"R/xNvw2RhGDb4oRmAXYjmEW0+H6o4SDWGcsWIjfozwNR2yeGo4jRIJGVxYw2Ut6y56hosYDq+4j\";\n  b +=\n    \"fw+1X31ghfqIf4L6ElowLwbcEqpRP+1EkBw50O9uFJuBbsxigsDjo0dDaLir32G4V41vDYHuYCp\";\n  b +=\n    \"tSOONwxuEXYBbF4SleZw1wNkVX/9ZgpMW6BwNMYNiuFCE+iqlfprC7qD6K3EeRQ32NsW0BYwF2s\";\n  b +=\n    \"8maf94XTfdF0/viFW6UGOCbCb5IvC8S90XifSF3GDEgONf4xWuMahwDiHONX5ziy5AYcJxr/OI0\";\n  b +=\n    \"33vHAOVc0xdBvk5vKpj9Y8EgF4tcNiBko1zWZ2W7XNavZdNcvqtm69y8x2+boRhWQQbHYp8bO/z\";\n  b +=\n    \"l2OEvxw5/OXb4y7HDX44d/nJc4S/HFf5yXOEvxxX+clzhL8cV/nJc4S/HFf5yrKDLzM1PWWaGK9\";\n  b +=\n    \"yKlWkT5THyYQ0RG1eoBbFYBLMvYQwUHTCjhko1SKrhsdrAGAGmOrWXHSpr96HnAN0jQ2IN2KtAi\";\n  b +=\n    \"ojXiEELYU28Rgxa3NvHa8Sgxa1DvEYMWrjVjdeIQQu9kXiNGLSBeBfI+V7v54xMjH0O/byGCg79\";\n  b +=\n    \"gobuwsDgtxmm/6LS7+bQL2noHg79Gw3diyHEb7NM/2Wlb+XQr2joDRz6VQ29EYON37Yx/d8q/T4\";\n  b +=\n    \"O/ZqGvoFDH9fQm+D6bsx80wG9UYlxo2JVv3IjywAG83tg+wWBUhOPd8E+GQKlNh5vh4EZBEqszf\";\n  b +=\n    \"1tNHVEECiN4fEwbWIjCJQyPO4vJvCYg2PW2XBbsR6PWfhSnQ1nig145HDZia7YiMcUPG2iw2/HI\";\n  b +=\n    \"4NYCmw1jUdabBYl8jtEe/nO1XBxelCWYK2PfsoOGg5gR6CIbLirCQUlqNjicIKK3CEFFX2HFVQU\";\n  b +=\n    \"Di2ouMvhBRUzDjGouNthBhX3ONSg4l6HG1TMOuSgYqvDDire4NCDijc6/KBim0MQKu5zGELFNzg\";\n  b +=\n    \"UoeJNDkeomHNIQsU3Oiyh4pscmlDxzQ5PqLjfIQoVD9waU4ja7k6Z3bXNiP0Z2CBvMsxB3mLQg7\";\n  b +=\n    \"zNEAh5hwER8i7DI+Q9BkvIxxg6IR9nIIU8Y1iFfIJBFrB0AFp6PQMw5JMMx5BvYHCG/DaGasg3M\";\n  b +=\n    \"nBDPiULxe2ycmySpWRa1pbNstjcIUBu0ByB8xyHFXGyptRgYVZ8pQYLyOIrNVjoFl+pwYK8eEoN\";\n  b +=\n    \"IPmaGDRhQ86sdipVwyU+XFIwcAaMBOgCV6mjDodpHojySWVSRfVScyTvVMCYS8FX8Uw4wAxf4Qn\";\n  b +=\n    \"xWT0nDubKApemnsHZEZxvFhZ4EvjGEE2MpyjCIwkATe2sE7Cgxuj7oKXanP4J1E+o/ogYGeEWZO\";\n  b +=\n    \"D3YpHkaw9Ygp9zIiTtDfjPlT7E7a9qnzwgj/vl8c3y+CZ5fKM85uTxJnl8gzzuk8c2ebxRHm+Qx\";\n  b +=\n    \"1Z5zMrjXnncI4+75TEjj7vkUcijL49cHlscwNCQKR930WBjVGn8RjdDfVVn16AuV5GucR0wp+0v\";\n  b +=\n    \"Ic5b3HfHruHd0TeoyYfkW78nbDc0RvBPyHaU/hcdkb+IZLBpMfpCWhsPQCOBVk6MYjbL3ZQ3ypV\";\n  b +=\n    \"gEdOk6Aw2yrcsOiPtGFrcsMaATi3Od/IM9WnkiT8yIvqoaQLNnj8OBAKHsr1hFtUYaoFe/mHPbP\";\n  b +=\n    \"p7D34TKHBloMCVgQJXBgpcGShwZaDAlYECVwYKXBkocGWgwJWBAlcGAlwpZvcsxMVaF5RvYv9o2\";\n  b +=\n    \"CoAwB1Ku5AjNNnJHzs9oz40vv++Jvv3s1HhYNTTkBFpZORHpjwZ7hPPgHTqFgWS+4LYTwSGYsP6\";\n  b +=\n    \"TjnHZlBzC84aPZQ7UC1WzKzFXxqRsHPsfhdrRsQ+7WJDPzZCsSJOxJGRH8ma7jTrssYp72MMm7a\";\n  b +=\n    \"VcG1mFtWZOEuio/IiJhCZ6MsDogVbk2rHu0W2jdPk7l2e5Jv2fBy+7MJdDl9x4YzDV114ksPXXH\";\n  b +=\n    \"iKw9ddeDOHrTyedp8cPujCMxw+7MKzFDb6vm33rp5Ui46kXp2cAq3UY87VQ5VrU3l/2JVf1W8ze\";\n  b +=\n    \"f82V25V0J2S97e78qoKby7v73LlVCXfWXl/j1dGeyVdLv0XlikOoK8ypJsHuRrqpQKvq4bvM64Y\";\n  b +=\n    \"j/Dj6uuc4R2FNmDda5wb+8jlJqCQ/m8q0qN6x4UmwF9C142/dvO4Ece+2bcCE2N/P+6aAcVKBxk\";\n  b +=\n    \"5Qk+YSzdCVXiILtrC9XwGlCzZNbxb/bI+RcWPsQZxHu9knA5Iy+D1xizypdZuTV5EqtRmWKmNrf\";\n  b +=\n    \"KfNyUPFQGju9o1XSwzK231b0q1vg2WAzg60pvsZpb+itjrzo74GBa9CVbcYDt9q3ZnPXNDh9AoQ\";\n  b +=\n    \"GYbPcWEEd0UlRdarBRoc41r3cTU0KVdiW2Isz7BXrXCGveIN15JvsTxq2V9jIWRjYoF4LW3aJfU\";\n  b +=\n    \"EAdfhb6+Qwq18eJXXFZw/zvkH2uOXm7xgpNWD1D5b1tLCdt6djYP38F0fDWef3PJY9TX0iTyHRx\";\n  b +=\n    \"kd9b4nZS2+hY+mLvK82m58t1Sc8G9HKyhX2e2vXYds8x14FMErPKN5xJcEg58aN2Fe0XpDn1VFQ\";\n  b +=\n    \"DWFktHRnXK2ruDDfqHumPJuS233QG1X5THdkSVIhr5XdURnTV+MbrefryYi9Rq/wxqnw7VPh1Z+\";\n  b +=\n    \"3So9uIn3NYRt44NduZunK93m8aM8DAudcTA6qzxi6qO4u2ap2Q+yoxKXdWo6Tig1k+OeQeotfzO\";\n  b +=\n    \"JHbisQ7L/WnIiE6mPw2F/E86Qj5Xz9C1o1ukwC8O/sP6mXeGthGMq2Bj9YuRPnQ/ZMTcmjujZiI\";\n  b +=\n    \"SOjfaiIiGwP5HRbC59XBWfFlkKq/VmPQGVaFlqvR0nO2cSJlpoSVQ0hSvIUrAIeGkKLtm7Kv+9S\";\n  b +=\n    \"L1b/VJlfs1M5TfSlsRGXpW7SGZUdPGFTjcbVVuRmADCR+kLpy3qjfrbSTlHdyWd8Q7Xu/RRI6aV\";\n  b +=\n    \"MppmLcBhx0av+VJerbE3qA/Llr1/YlyUowd5eCRyMEjkYNHIgePRA4eiRw8Ejl4JHLwSOTgkcjB\";\n  b +=\n    \"I5GDRyIHj0QPHokePBI9eCTQGXwbPXwvdlSEmhe7hyjse7Gbo7DvxW5WsntGs13GcxZDO812Mfz\";\n  b +=\n    \"z7AJk/gl8LX4s0sjsH8kLbbmQimnlx6KF0mS7+P5WP4KfmJOGfwSvK4Z/H6+nDBcNr2cMlxqZjM\";\n  b +=\n    \"t1QQKrkVma1Kf2sGdmK/eOndw7Frl3eDSUxNvWkvg5TTy3lsTHNPH9a0n8vCZ+aC2JX9DED68l8\";\n  b +=\n    \"YuaeMdaEp/QxN+2lsQvhzTpTdBckkl/vUUY4FIoz8v6vKLPq/q8ps/r+lyKlC/1eVifz+hzWZ/P\";\n  b +=\n    \"6vOoPp/T5zF9Pk+7hH4KgJy8xRvpJgNkVCfGBh/sGnJaTWvHxYEo/6w4ELWPbTP5oOjF6EERCro\";\n  b +=\n    \"s72P/3jG79P4/RQAIh+dC+N/KvJ+ikVHhWao+rcj0vB7SyknPa6HYPF0NAZ48S81H2yh6Xg5hOD\";\n  b +=\n    \"9LzVuMVVcA7Gh5lIvotriI7oiL6K64iO6Ji+ixr9xFdNu5iG47F9Ft5yK641xEd5yL6I5zEd11L\";\n  b +=\n    \"qK7zkV017mI7jkX0T3nIrrnXESPORfRY85F9JhzEc2NCh/RepTig1TA3Ols2mchEXNQGxpOB8Ld\";\n  b +=\n    \"gXA2EJ4cCE8NhB34RgyFiljBN6BZJToTv90NJ8TgZynVs1F5FGeQckZsc1ju9mD4SsyQahKbXTF\";\n  b +=\n    \"iVosLJNpuPA7xXM+IQjjukejwTPsY0Qtnz7aCKG++xSioOnZu2ffEzve1XDu12R223D2F4iEbF8\";\n  b +=\n    \"on/tVK5YNxx87yBT/80EJ5zA8ftYG5vC02QbAdzH434aswyFCg/g0ZMUSBbKl4tPqerQ9P+OFsw\";\n  b +=\n    \"f89tmL0fw8H0QVx7zz7Xlh+4BatzZo5IQstD4jJEuO4Q+n1RCwntlNB5eTyhVgOmjt2OtIxhkBD\";\n  b +=\n    \"9dwvwTZne3Q0ljs9fsw8ojXM46qGHe77PgdzrSSb8hyNkRFQWPJUc+2gT5suMEUb7aGaheW7+Qp\";\n  b +=\n    \"P7Ci+kh5hpmkJxiPaizN2di15eyHj7qf6ZC825e4x5p+nTpr99sK8oxcKap9Bpfgz+iJUpZozwU\";\n  b +=\n    \"L2pUTbrsG+Q622EHuEtG13NJa2eQ6wAIJn9NYebOdQpKIFWOFEfqGPPfcXogW2afq1xgJmS2qJt\";\n  b +=\n    \"ux8894jvZBtU/v4+cMs9+B9XTEpNV9iEm/tig1CuqYGdCDdJu3MNlQbt0dXsPd9IYJaon5/jBVM\";\n  b +=\n    \"9cujFJjI9RtKvoyWOhUNdMZKtFDvjZPRat1xIsLyRLWhLlA7+Thm9KLsepNahE24eTLgI2P2zcJ\";\n  b +=\n    \"D8+Z/7bHLgK0m2G5wDTiFjXcDVbcUACKwYb2jpICcgGm9Upr4aj3V3QYzVh9yQUxW+TobJH6Vt6\";\n  b +=\n    \"i8RG26HiGuDB+iXQiWobENEVvj7Qx7R+Dz1pmIGaw8iXMbjY3sLLjkMFVw3LXOEoUyF7pG3034A\";\n  b +=\n    \"3A5on7CnDgrw1pa5ySfBa5Q9v8iFkbUeXJ33qFajT3ai7uNjgx+yyNu5FsOcePe8kfFHcK5/GMm\";\n  b +=\n    \"+2Uj/aE/McMmN+X7w29B8+Be+DncziW0PdFvsp9rdBPIwmYxjGMMurgbdPCPb34OEkNkH0hwtFr\";\n  b +=\n    \"lc53YWY+nNq13eFHITrAIKh1YTxK7nsjIqK8nL0Z2PaHY7L+tYT1ZNv9zPRmxnhyLhtcTTBUD6w\";\n  b +=\n    \"mNgNHryeHoda8nh6O/8+vJJxradiPXE2m7w5G0zTPRmtaTz4SynvxYfPP15JoZWk/kkqC2nlwyq\";\n  b +=\n    \"64nF3iCCr31ZDn01pPDYX09WcLyczIc6IwT4cB68kK4WnfQMXMN68lhK/qS9eRw9DVeT86F/npy\";\n  b +=\n    \"JvTXk1Ph8HqywpJ8luuthLKe8LyM9eSTDV3hq/XkSuivJ5fCgfVkKaR+Cqv15LCd17G2UfY/Uq0\";\n  b +=\n    \"nmCcnB9aTY9HAenI0GlhPlqOR6wk4l39M1xMRVOInhteTZyJZEOw3X+Z6MuJzfz2pTeu19STBen\";\n  b +=\n    \"K0ZyJG/XGriUhTQ9+XlxOzllDrZOHfGb1gK1j7gK+4tJ7Zp8KvD6ySaACrJOHrhgGskmGixSqJb\";\n  b +=\n    \"oJVkoh3tQqrJBrCKomGsEqiIaySaAirJBrCKomGsEqiIaySaAirJBrCKomGsEqiQawSmQFrSCXR\";\n  b +=\n    \"EFJJNIRUEg0hlURDSCXREFJJNIRUEg0hlURDSCXREFJJNIRUEtWQSkTO7jiYuNNKk2moPMXC9h8\";\n  b +=\n    \"yLp27IrhFuguNVdLZBEuttWV0rLPGgvXWWLDxWxVs3RoLNrnGgt22xoJNrS3d0vQay3fHGsu3ZY\";\n  b +=\n    \"3l66+xfDNrLN89t+iIlVm5tR5OUuY6l3kZshLCKulZjaeI9fJGavPfg1Vzz1537mtEycFVgEPCO\";\n  b +=\n    \"TEIjXMLrBy5QKOV6fc7YfeAwUnnQqBmrbmBXTT9mdtXZG8O59hq4H6ajpUc55m4BqHI+znyIdpZ\";\n  b +=\n    \"amTqRT7EkQ/TLl4ju17kwxy5Y2eRamTmRe7gyNeodVsaO+nFfhvH0o67aGvslBf7No49DWtWjd3\";\n  b +=\n    \"sxb6dY2nJLroam3uxT3DsWYrtaeyMFysGvOcodkxjZ73Yd3PseYodV3XpbRx7HO5P3uM369NIrg\";\n  b +=\n    \"0d59ysSDhvPrCPo2KJos3kUFQqUV1xRlOL6kpUlqdDUZlETeatoahJiZrK20NRUxK1WdzB1KI2S\";\n  b +=\n    \"1QuDnNqUblEzYgTpVrUjETN5mNDUbMStS0fH4raJm6fjXiloNGT/T85ezeZgx+cPaKNeD+jveLU\";\n  b +=\n    \"kgCN0pRb1DsMeFOUzDg1jRkX8/Cq3xBXrvLNa8GqH4EfV/nq9OpfnVn9q7Orf3Vu9a/Ou6/q31j\";\n  b +=\n    \"VY25AXHuX0s6ANNrJjhDE6NGoCxL1dxS9pFCGArW7+NI+5d5AEAr5UMl8GjttKSSr92H1U857Td\";\n  b +=\n    \"mVnV4eCEpDhDaHDhz9hP0FxgwxlFlQn3ViiUttnD/ppBLXtXH+nNOVuMzG+VNOJnGTNs6fcCYlb\";\n  b +=\n    \"srG+dPNlMRttnH+ZLNZ4nIb5081ucTN2Dh/opmRuFkb508zs8L8dm4R9E2zuADlXFaxoUn9Zzrm\";\n  b +=\n    \"DexEIbKeftSQv1kZ8qeVIX+7MuTvVIb83cqQv1cZ8o9VhvzjlSF/VhnyT1SG/OvEkH+9tURgdZm\";\n  b +=\n    \"WhW707YfFul6StQbshMO641foLPYnvwZYpc7+Ph5wkOvrqhtryC+q7qMssWu68OyJVoEjvD+JdV\";\n  b +=\n    \"ekfm3mBkyyNeO54XwFYWLbQBtu85zsauZXrJPeOpqA/WvrUZEaq5JEXf6K9eo7aFYu0XMLfuI5Z\";\n  b +=\n    \"xjesg0kCpwDBumWKTyjcmkyLslZZpsme7XpMJjhGPDS84l8Xb5+VUABOVfCFdLS0vMnmrsX82i3\";\n  b +=\n    \"2nJyfhoJy519u2kuc9Hn/egPLZ354/216At+NGyBklr0RT/6D0/85Bfr0Zf8aFgXNWvRl/3o3z/\";\n  b +=\n    \"xy79Wj77iR8Ne6Z/Xoq/60T/8i89dqP02m/aE7Bqq4+hnwOjX/O9+6Dc+8K5artf92H/3bz/1MV\";\n  b +=\n    \"NFjzYU871bKM/wSsPuTSoXNpRJc7dzKd+0CT1fN02XMNWE6cKaclSTe3HRObnLW/giFWkIJ6u3j\";\n  b +=\n    \"gqfXiQrRcPxvjitrCcAztiqOQxY+y/xzfUfdc0ET9UtCyrGmnPZd7CuHWaADt6h8qra1KkoSVsL\";\n  b +=\n    \"MXhIStn3tXplorlqpSkyHDhdCLeGrzW3C46MBE9r8CBLCcOzGnxGguc1+KwEL2oQvhAo58uas+h\";\n  b +=\n    \"q4696jQoVkyWxBQlZhIPRHloCDiktBi21fqxCPqc4r2kwDRXycixI22HlgStkcUCoeo4Rq44v1S\";\n  b +=\n    \"icCLq5cUWsaQjG+pk0pmRX9ykVsl6h7wDL/SzgHdQzmOQiFPx1P36W3TGg2RrSbOcTKNoS4bISL\";\n  b +=\n    \"iaQZBPhqhIusy9vIlxXwtUEEm0iHLTdliwIQNszTbWQmA0vNGiEJhVfNG1RImvx5MokXrbatuqx\";\n  b +=\n    \"DUk7NwUVsr1KS1VtFKrUpmopoV4QJV4vtaXwDzzbZDY6qJV7ToLPaPB5CT6rwRcl+JwGX5bg8xp\";\n  b +=\n    \"8pcks+GLDtcISvS43q64I2dPZQMdV3TfcNqhSQ/3MUeemNiTsyijfTBjZNlWryKeDXBQqVEpVoC\";\n  b +=\n    \"WvNUcXSL670Kh/J7+x1KhXr+I/7Ru1hwhZU73hVari0pF8yxx7Nt3O4PmYAviVufQivzJ/XuZX5\";\n  b +=\n    \"syr/Mo8eT11vXEmtTwZezwZLqyhyMOF1QbymzRdEFgnjybp9at0wVbQUrPvCl1xNNNaPzW4tQZp\";\n  b +=\n    \"jVJML1g+r+MrrmrRdTzlU9PhYcIqx1DIfNqJdDocYtFOHlVSnRoB02aNcGKQcGGQUMl2pNyQi9L\";\n  b +=\n    \"a8htdUzhfAzMKJKKmSHb54M0gm1ckzkxYFs4BiKqm7hs9O8+BPSkbodls5jB/Cyws9O7U1Pg9dH\";\n  b +=\n    \"6gx7vp7ECPd9G5gR5P0JmBHm+n8wI93obzAu3haY9Pjx39DXg83L8Nj4f6G/G4vz+Fx1z/djy29\";\n  b +=\n    \"TfhMdufxmOmvxmPvH8HQzX072R0h/4WBoTo54wh0e8z7ES/YKQKAI3RHr8/w5AY/bvzGFq8R0N5\";\n  b +=\n    \"LuvzsD6X9HnNyPMKnh4QPsyoayj4sKWuQeDDoLqGfw+rah/8HpbVQ5D9Xvu+D4C/gBVDf8CCCy3\";\n  b +=\n    \"K7cmtyW3JLcntyK3IbcgtyO3Hrcdtxy3H7catxm3GLcbtxa3FbcUtxe3ErbQKDgD7DoPbroZ1Zr\";\n  b +=\n    \"ii+7by2He9ip0bBqGHubSLPYdyoi6DvAArWKzoptXdzq2TdHdVPyXoWVCW9pLwLlI9LbqW7Fj+Z\";\n  b +=\n    \"9+VTXsu+vpqz0S9RqR2w2wrWS594FWAhPkbUJbHdG2iHkPl0OLV9Z0ooT1vlaS7q/opbfKGNrkk\";\n  b +=\n    \"Ue8SI9uzoewZCZTt11l7Rj5/Nm0lgTd/Ae3ZhkeqaLryBLKr6HhMPMv+ZMTpVDQtSdJbJ+nuqn5\";\n  b +=\n    \"KnIY6F1bRMH8G1o69siFUb718b2zdBufVkZb9i+EPvXrn33wy35Dflm+Et8ZRGIf5TH73agB8AX\";\n  b +=\n    \"IM2OkKHdq27O1c7pppu5TIMYXtNB32pbcmLzMK/vJnVgJrzunH8gokgpQBuYiNq1JgQAZCEawOI\";\n  b +=\n    \"bBCArIvmvnAD+vfwKOLRSaDjH9ailSX3gRsh6x4SHH5r587J9APgFZpCBJfwOAqbfH2GjC8ijrK\";\n  b +=\n    \"ChhghfEFx+HSjgIZAhPweEeBdQish0M8CkwisAH+8ihwGwIb4U6PAlMI3A5vexTYhMA0ZHxPFpt\";\n  b +=\n    \"rTnHUD1qrPP17r3zf087BUaf84q9+5BeMhrt5r/ylP//Yz8UaJo4o/8VPfe7zoYaJO8qf+PP/+r\";\n  b +=\n    \"02njil/JE/+5d/ZMPENeUXvvgT/yHSMHFQef1Dn/7u79QwcVP56at/8qP294izymM/+qN/2dRwk\";\n  b +=\n    \"G8ur/3kv3/tn3P4SW1vhjytg2GnQ10h4ag8MbKjBJA1qHVuHcd1RXnGpwZD+TeHJIojMwkUacXh\";\n  b +=\n    \"dg9zqkOPre+UBgtOtOwDYT8eGRnyJmmFR0tSN3gbHDuMEu4zLiyKCxZOLpsiYofvTpjFAuRnlRz\";\n  b +=\n    \"vzmOJUMn5UY1IXYSKzZ/TiK6LUJn5MY3IXIQKzJ/XiEkXodLyFzRiykWoqPxFjdjsIlROfkIjch\";\n  b +=\n    \"ehQvKXNWLGRaiE/KRGzLqIWYl4RSO2uYhtCjwn9DlH19sjxjGPBb4q4EjxjcwXSByZjop8WCO7o\";\n  b +=\n    \"yJ37JTIbFQkbpI4dnJU7CkbOzUq9rSN3Twq9oyNzUfFnrWxM6Niz9nY2VGx5zmWOW6bqFqC4WJx\";\n  b +=\n    \"Is2Ym8ye2YIF+8wWdsPMPeFjCrD9hobKwMAS/y3HOqZ54O89fElYjsM3onmEtyzq8AxIMWhnxjK\";\n  b +=\n    \"qRI+J3sXFgmsa1+PSm8Rh9zwqT/WDZhFRm4JBNlSUBFvQiNak8JEiGigPG3/Eudg5D5Rn1TgpTy\";\n  b +=\n    \"wZx7Xd2GB5iFlgnFZGj7BmsRaLaxrJ10nNXXn9V2tx6U3iurtG5zmiRHRUX72F4r/5FlqJpYWSr\";\n  b +=\n    \"5sWOpNIiRpfNyW60JASNb9uSnSlKX7HtSgMZiF3DbClfqTw8m0MjvtaXHqTOPYZyOOe2XNkeWQT\";\n  b +=\n    \"pHcfACyxWHmdU+0wPhBZbygGd8y5OMIqQvkqzroyvat/LB95SFD5oeDdyJN9XLtYXMI0xWS88a6\";\n  b +=\n    \"XsITAJUxi3YNb7zSGvdMYcUKk2SErJDz6oviWKRrv6uH+5H0MW5w32HvOfMDn6ZGl8D5tcpGelo\";\n  b +=\n    \"I0qSANLgj7kqkXpqN7wLiqoZaN3YypB4EF/qZvrKsxOSHh5+SzWrH4Dtkrl83jyyuY25vil/hH6\";\n  b +=\n    \"pWXPAf6IJCfeT19UJXxy+uEwXJ8Rb3ADka6fuGsrzcpmF/MBlwX+SUL1tBAVelu3Ua3qKfzp7Tm\";\n  b +=\n    \"HsWVlrooYiAvL38MnqHxFK6xL89VTDsrds9VR1762Zt05K3K8fr6clSzqcenL7tqX202deV4nWy\";\n  b +=\n    \"qnkW0G61XkT/pMNw7LUNOSB/bq96OXvWO+R5GYCzYoWO9CtpxI9kVQs2xY9cqkTA+PfKUT2teKi\";\n  b +=\n    \"zyUaJ0FjVdcNA2E9Z5haPbv/UvliL7G6EtFi4t4DfjSmzPyEIXgEh80KtdKFiK1AnQ8BXRlbjF/\";\n  b +=\n    \"5xyjMvuQjDkfaPmlMBpvNDaXOVQYaTG7tSf5tY5i18wT+MHlzrqRkXaQi6u21L0QJ3QxriScVKs\";\n  b +=\n    \"HzfeDYrgXtlrl3rOMe4cKZ3G69WtXs0YsQNp1m5mBBknYTRM+Vq+8py4OHzNxCKMyiXPuGbLYKd\";\n  b +=\n    \"e3Bzuo0dFZXXdJvxtu6KLcleDUTe1uOItO7M80eBrdZu+gthUCXw7H/cVhEbFGB4UwDaSbuFqc7\";\n  b +=\n    \"eGjJEkjXaCr0lDrwkbtgihvI5ovcYqrSeFYW63zdD1i+k8XCCm5TN502oyydih6kzYnmOKz32us\";\n  b +=\n    \"mA+rWwwxJuBSM1SFYMasY1ZAde9xrsM3zjmFFN845jTTPGNY84wxTeOOcsU3zjmHFN845jzTPGN\";\n  b +=\n    \"Yy6Icp9HucgU3zjmElN845jLTPGNY1hrxoWucrxvGHONKb5hzHWm+IYxS4w75RvGHGSKbxhzmCm\";\n  b +=\n    \"+YcwzTPENY5aZ4hvGPMsU3zDmKFN8w5jnmFIZxsQ4XdAk/wttCDRwoGf3HAFfQGCb7bbc9i11b1\";\n  b +=\n    \"33lrm3Sfc25d42uzdrstWAyVZDkab4TPG1liJ4RdFj+9dYjFArkD0lf23lCLUi8aH0ayxIqBVoq\";\n  b +=\n    \"fX1IEmo81Hn60GUUOek3teDLKHOSeNfe2GCYt4pOCq7NmVxgkU+DQeRT0Ho/FBH4E6Xxd9quEMw\";\n  b +=\n    \"tWGGCSfM0Ct8MHxP+SZGWo7tqT7xMKoM+++hcjvc4sSDqQpHxD6NiVPjIz++Ebv89wGjX9PEfhp\";\n  b +=\n    \"BrWL/XA5tGSBaiT1FFKZWvMD/2NTKZgajnh5dbKPlGS6wQmglLA5grXmHsvyeEXDEpenHX2+QxM\";\n  b +=\n    \"ahQZs6cvLfHhRo6+LRq1IdZTkevEDXTXftrjR7LgSscUjMFXZydeNr3DXf/UXsbvYeAvi3XuY9D\";\n  b +=\n    \"E7Q+7sdAFbTK7tvK5rulu5tReou5t5etNxd3BOAHdHrt3cVHXfj9u6i6y7Z3lP03L3ak+Kfg97+\";\n  b +=\n    \"D3HYQW//VDx40Nt7xaUHvT0lPj7obY84/aC394kXEHrbJ25BoNppxFEIvR404jqEXg8bcSYCZVi\";\n  b +=\n    \"DwR+UEW38cf5twyE2n44Y7TaPvavzaR6VMLU0iyLjyP53gYgG10eA5mf3L8DmR1ix+SOLzW8Um9\";\n  b +=\n    \"8oNr9RbH6j2PyGx7KqmFDfQUnYYfNzjoPo/PDcFv9tueFSmSWEE53v6Zn4QG7eajE88bvW61bgv\";\n  b +=\n    \"G4FzutW4LxuBc7rVuC8bgWV162g8roVVF63gsrrVlB53Qoqr1tB5XUrqLxuBep1i97U61Yg6hnq\";\n  b +=\n    \"GysQNQ71jxWIuof6yAoqr1tylzfe8TwBvGxc3Mnq9ZXqdaV6fa16PVW9nq5ez1SvZ6vXc9Xr+er\";\n  b +=\n    \"1QvV6sXq9VL1erl5PGEGQAbwCr9fqlg9Lh8G+gmV1HjEcRYwGieJRwPpKzK39Hi7uy1+6fO7ncJ\";\n  b +=\n    \"1+wgjp5Yr0spJOVqSTSnqlIr2ipJWKtKKk1yrSa0o6VZFOKel0RTqtpDMV6YySzlaks0o6V5HOK\";\n  b +=\n    \"el8RTqvpAsV6YKSLlaki0q6VJEuKelyRbps3KCZF/70kWLBez5SLDjTR4oF3/pIsdzVX4djb3D8\";\n  b +=\n    \"iA5XkO2S4UgVfUoGI0KpVGPJcCiT0GEJTenAZQb73Nmf+f1GncEsyWMwS/IYzJI8BrMkj8EsyWM\";\n  b +=\n    \"wS/IYzJI8BrMkj8EsyWMwS/IYzJI8BrMkj8EsyWMwS/IYzJKYweCeymcr657KZy3rnspnr2CAvZ\";\n  b +=\n    \"Z1Tw4UAYAA38IdijxX9PmaPk/p87Q+z+jzrD7P6fO8Pi/o86I+L+mTaxZ9i/mvrCJv/kFwxnQ+1\";\n  b +=\n    \"ArbjNLG7mPLcbhKLVo7C9oK7AQeNPZMwThWry3fAVWu3UBMgC9OQ+t7uENcvPU4VT/EBoF24Iv9\";\n  b +=\n    \"cYRo8oTxER2YxjAFjvEerrn7pbzx0r5i4s2sdzfGPmnFDMxGT7DPck6A12Ld8T4u8UJgDHVg99z\";\n  b +=\n    \"Jx3neREQndr+ixmKDv4IiRYv9Tt7cWYy91M+gvkoF75XRY/GO+aC/rir5vsV+11L05kLzbrJmKt\";\n  b +=\n    \"vV78/X7SvWSfGh3lqL4aK7yPRmkd1dzkC8HonX/jo2lWN/eYA8z7ty/0HVdYXiY+BAkUJsv0KbR\";\n  b +=\n    \"aMUWa98Cy1j6sRYuzBGFxq0xGDvpVp/CE9atv4Wnz2PqW2NtS9viYavkSXSRrOldbEeCdajB7Pj\";\n  b +=\n    \"fWN7sFGyRW7KPYgI9GDL9WDoZYNfWc89OHG835VubLK+3ohunKh1Y8dStBv1ByK/PyaUyVosRaj\";\n  b +=\n    \"FVBzYYjHCTSLRjXRoHI7Ea39ioBu1K5rcja2hbrRF0m7ULLQbmxav1yxqr1El0Q7G9VxiKdp7Ck\";\n  b +=\n    \"XA7dpaeEDMkPI23vZVCAHoQS+JJvDs5eWdLdRD3PBpH4pP4ni//RnmAvszpv4zyCDJs85xGrV5l\";\n  b +=\n    \"/gwH1vcSf2arz+OQLy4c2Ghs9wKe9VkVHTK9ey5uQ+BfQdGgAntm0PKtT9pm4Eej8Q7XAO0oehv\";\n  b +=\n    \"pTQ8q6A0k/vz9cqPqUhoBiLr/NpfjxwWWObLt2htqegtspZPO6zATt+uP56UQUfMKzAlcokZcn/\";\n  b +=\n    \"/AnMzTZwdxEzQrEYx7KgzeKl/G/DyUI0HWHM4zpvvfamY3L9PCpayYzRqnsd6AbQliDfot7rMT1\";\n  b +=\n    \"q6Fhy77FsQNJJIO4TLqQVtiwSUalZrADYKQZeNagnt8gnlwXwde2Rz7VE08YuCduG3TD2vpMP83\";\n  b +=\n    \"kBaxrtYn2+oJdmAHqUxDa/IAKBM3trDmVya4mlOSPVtcGJGwmgpC9DJk9og5/a0DrrkhkA4O1XO\";\n  b +=\n    \"jvjZAgLH+jdXFskj0qx32BuuePKL3BT9hkJw5LFOzCU7qbM/ykNBMjRDP1rl1ZEabjhOqy2dkA/\";\n  b +=\n    \"s7ofCJnHe6WEQN7tRB1WUwb6enaVR+1Ar8igADanov5auDVWXtIUDzIj+cKNgVCIZ9quPhnGpcY\";\n  b +=\n    \"bqegwgvW9W7X03MMa42/1eZ3GfTGBam0ZN8kvzrBoj0brFxknh4i5PAHyzJHX+VTfqsXSVzT/wP\";\n  b +=\n    \"w6qjzud51ph50CIGSmqtke0AqW0DPWb6kEeJ0LMRREPaVlNVVhCVeoq4F8qgH8t9mAjtkA0Eswe\";\n  b +=\n    \"LmWKAbkLkTaqBeiZhoWeiVGLmBJt2dvHDSjbiXeraYmz1pOmGGHga/0U33RqJbWFpP8SV9CepYC\";\n  b +=\n    \"b1Oke5dqG6LxdWxkSsPL4m8UIRwELEzd+En6Ou/HDCcctzydVXZiberYSTVeJ2GUVD/xclYvWh9\";\n  b +=\n    \"piJ7UiDZxksG5D9arVqRjjWrFh1mI+Jog7wjBSpZsluVUNoHihDNVQbpQvh3uBRvB4rbRtS9FRo\";\n  b +=\n    \"H3LLdyUluUbQllbx2U0J64TmjrnVJ1gU+EdNqNSdh0P7WEWir2fif2fkQz8Kux3jT0fuAq0tPBN\";\n  b +=\n    \"Nw3HumY2XL/KHNEcBEJq4srfpmkuDMFYeRBITVsRnYZbvJ9svtTpZ7Hvr87OwhmfDVCboZy0RuP\";\n  b +=\n    \"HcULQSXg1Xkq8ntEfiRgDuZo/OiPnp1WT1PtD5ieZneJbzk6f7Zj0gKgxWPd6s6HKsektFSk2vX\";\n  b +=\n    \"VFhk1vmUiw6W1S5Nf0pt6e6W2zyK4BYSuSa3qbEbk1vc2K1BqobA86SDERxZvFCkuD7RQMi7OfF\";\n  b +=\n    \"EmGgzNSgRtTLnmUy0y57FGuMOWKR7nKlKse5RpTrnmU60y57lGWWLthydNuOMiUgz4IKlMO+yCo\";\n  b +=\n    \"THnGB0FlyjID9lRV/LunPMKu2K541eS7I4FEOACA3AvBe2ltCsqV5VcDtvt0dvrqpzKBr5kffFW\";\n  b +=\n    \"0Sd/LUB816Ac/zI14LGTHREH5PGt+PO/pgrzAlBc8yotMedGjnGDKCY/yMlNe9ignmXLSo7zClF\";\n  b +=\n    \"c8ygpTVnw4WKa85sPBMuWUDwfLlNM+HCxTzoReEy4xkKTBs2JDRr88GNWxeA3+1rB4Df7WsHgN/\";\n  b +=\n    \"taweA3+1rB4Df7WsHgN/taweA3+1rB4Df7WsHgN/taweA3+1rB42WTD4xe54cazYkdOdtGjXGLK\";\n  b +=\n    \"JY9ymSmXPcoVplzxKFeZctWjXGPKNY9ynSnXPcoSO8Ncir3GZ8pBj3KYKYc9yjNMecajLLMygWG\";\n  b +=\n    \"9xIaDt8irITDI3qxo5rM7Q1jIzvPY92GItHh6t9ge8Elfy8yFOn/YNuOMcdSw6NeiKso4FIkPgc\";\n  b +=\n    \"0oqfAVqb4AGQWICa4cbf4Xey4o1Vsm62lWXkNFixYTQE99zI7lFc42kML0R06wYIUJtcqneez5e\";\n  b +=\n    \"6y8Gvo/IjBIK6xNKaq6mX4FpT2YYuuPAJGlK4QBLd3Y8wYqYCmi9efVxNj62SIxEoSj/LgiheMc\";\n  b +=\n    \"YYkDKrM+wLhkJzqc9R8JbTOKu1MW3CQDP7rC06tAkVch1od0wQEfr1WDaCYjaqex/OOqXNm2VfN\";\n  b +=\n    \"TcAfYFK1RKbj1nJ6tX3TRXO5m71Ivk0A9smHxKYl0TdtYNcqPGwtl4miuDh3+Z5uk8k4Ze0tFpJ\";\n  b +=\n    \"5aY2tZDEXehIPGtWTs1HyheK3tanLjR0+wGmlcqcM2iXXHJSPusoQY2TKhONpMvBo17eBK5HXA0\";\n  b +=\n    \"y8SNlepRJNjlmwXJcoaqtwsLOxiurbNKlB76vbsoAE72lej67NUz9haLbNf8AZV1GXn8St7U018\";\n  b +=\n    \"VsA/xwooeWDB8rkGEmIVXX4d0P7lHlm13wKfK2XCjEU7l32BWGrH/rxzDluGUkdgn+irQ3uuvtM\";\n  b +=\n    \"GDCyHBnaqif2NSdW8vvPYmaBzvh2OC3gzHAsILkMqQJuwMVD3FeG2IKWzQfC/4HAx//6lpaW57R\";\n  b +=\n    \"HOPBxrWPtBPFyUWxbh2I6VaEqYJ73IhgpHjR+6gNudmKfvdIG2kLGkF+Sj7HpYTBwvROEhfrQXy\";\n  b +=\n    \"+ejIyusqKOmMosQ31JIfoItka+FkJExIFcojsKfg28AXCSy65mTfPgIsfwXTUelvRAj5b2IFd25\";\n  b +=\n    \"ZpVZMmRfKG1LBUoZhbv87Qtien8Y5gvsY+IUggdxChL4U8G1GxfUU1v+S8HNy/8ou0S5QDEdxuz\";\n  b +=\n    \"V390KL4UT26Nz2EFOUcfJWp0t5BNyRdddKCeEli6Uv/pjr6pyA/owRx9GHe62t6DbPPOzC4E0WK\";\n  b +=\n    \"rmZ2ahDxUV8W/IX0M9Qj7HvsHrXSp9CXbU4DniZJgBOdsjhtZCohXn8aLScDDq0yhUxxWyQxyq7\";\n  b +=\n    \"qk1Vfejw9U1nDUbxlT9f44nvarnL/CkWPU5Wp2xO2IJX2GzBAnk0umnMBrR3doZIRUISE5wgMLX\";\n  b +=\n    \"INj6xCwMsVWhSjBIVMjuaFosH5T8DzPnNZxrpCXmz8iG8e0LIQNIhfmYDqVMx9EZDHL/V45SylO\";\n  b +=\n    \"IOR+rEyJBEYzVWZFACFKoKhsV/UosX18z28Oz+PoauHQrVUmLlEiTSIGfw7rgQs9CFOOyfoZCHR\";\n  b +=\n    \"vialOWBxk002d14rF8sQwezT6JS7nwvuBkXIaPWB2huDT9SByyOPY5xewD/ZGIZUuh4NHjtjaP/\";\n  b +=\n    \"kFwjTth/qHDDwc35HX28LcGfyWv6eE3B/8jLD9wjPjyjZrfCQROE8tk/zEOvqJMzttM/mPbtBnz\";\n  b +=\n    \"pqXb1nlqhm3lpeUVCDL6jfBAuGPUvzxg91MXkoV+mxaPfpM9Z7bhFgnOo1g2Ul678AmjMMuc73V\";\n  b +=\n    \"sAxoPhteMSjHZ32befIRmScjjymP/+ROsbNZv4a6FkiePxAfUwVKS/R5j2i6FtDR28AZqi3V2hI\";\n  b +=\n    \"5bieTBcEmKULRYAiiWhe2aIxG23yO+ic4l4jwErlGSheyj4oFKaOyHCmRxpgWXW9lZxoM4xxcaE\";\n  b +=\n    \"fu7ytvWLQ57DxEfWI7CX8O7Z1eis9+KaKmcgzepZvmEOJfCT324SSNP3X1yS53WlqJBa1jC5Vqr\";\n  b +=\n    \"PBo/0mOrnA+9Jm0VoEynXVud8trqjLFtBWrg2uqM0bYCLBteWVEvN1oCdGvNoww32CnbYOdMrcG\";\n  b +=\n    \"m1LNMrcGm8Gdz9omBBmNAZuCDehmH5xOeiAZYBE7U6hU/skJTPkzmTv3Qd3lVXwubBKuziVQ99K\";\n  b +=\n    \"rOJ741cks2ilsy/JnM/sCrfKL8Aa82Nea4ZJRFhEG+QIP6vkC+abCHNddeRb3FHipp2Xhrr7NJG\";\n  b +=\n    \"ygSR00PWQdqXdx9vYPba+kwWg4HgVMf+vWAi5hWGm/cCqZigG67U7bp38XDlXMo+uI8HA2G5Ud+\";\n  b +=\n    \"YAVzCZe2PIPA1e9f0QmJx/CFqDx4ZG1fHlzWL4mp8f+LH1zbd8/a75DuvuBTyT8IHqqS0QC8gvf\";\n  b +=\n    \"nq9ypPPLn4iH7C5CAvLysIW4h+fOyS0El2NGRFv0wOvdUoi8yYqXvsj/TESGU2YXst6EKe4yxKT\";\n  b +=\n    \"/esgACUO/n6dUCCES5ybri/U6QBHTzEVmZbRFyPJvl1sAFImuqy27MYZ3b2FeZW+8rUix/DbbTT\";\n  b +=\n    \"WE4vI+vQlc3GY58k/Ga2a9nMkz5WZPhxmA5QnFj1/S/TblQT0tRUrZebliT4caQNXTD3UQgOxaY\";\n  b +=\n    \"1OoWrq1iq5l5N3wz71G1EjPv0CsJWrMqxOurGKyN0EZZV/QJWUcajti8TewTvvl+w0JEoJCmVsj\";\n  b +=\n    \"AM0Vv+KborvGFCTzr/Vs11y1zxL34l1dlr554/m2paFTha3w5dcV3NC77wSAcg5dfwzHhiJoOcr\";\n  b +=\n    \"7a3r+eKq6a1eurWySq8J2jrTA80N4/jInIdZuHrc3/vb+I+fDyVHY6lpNJHs9/6d/8jxsfW/rsf\";\n  b +=\n    \"/r9QKhnmHroxHf/1tL7v/DcNwuR5T3zp774F6d//nOf/cLnNekJBnCPLhiIcrdG6T6GtbjGdch5\";\n  b +=\n    \"LrhiinhfHlPZ961SiGOjCxEMF2JEAZalAMcMxLJbozMGfm63Rtm+oinIBzgLS3EStOM+KkZXSnl\";\n  b +=\n    \"SyPTVCQNY7ZuXcmlkKa+MKKVIhoZKSpsD+qklw3Ds0YqhIyMVdIr4hTacTS7oOSlRM29JQZtI+c\";\n  b +=\n    \"Q+oKpqVV6wVWlLirZU5airyvIaqjI3qib5iIpkI+qBH5krurha5hKdkp9O8w7/YsfO/zB/kUrxs\";\n  b +=\n    \"IBuo1epp/xKHbaV6tUqJZ53kXqHX6eYIY/hJRNn4R7jFUpR0uGSPInBaUtybVRJ8n1s0igleUgL\";\n  b +=\n    \"0pUELUZZDmXsiVBF+Fp+gfk7Q2FbXIIeFHg0a8ZpDgUHxLoSFWyQfftwTC+nBrFA2E7cYYGc/Oj\";\n  b +=\n    \"NkE4wEtCz4/Tj3BwJGqcfl6kChEhmFvuknmEeP/ESNSPmlnlYdqFu/P2+p1kDgKeW3CGEiDPVQA\";\n  b +=\n    \"QkIfZ1KjhgOQlLGxyBD9OHHcGi5/1kyzQPsGTvRusd7G052dtP7NmUJSFOzQCamgEbOXGgIW7oo\";\n  b +=\n    \"vLex+Vk0WM32lCRm31nLxTvEmpjvm+BVZv3LbDKAX91QKpB9XmsF1uzJggY39kz3bhDB7vZ8vr7\";\n  b +=\n    \"f103kYEzdk9YLdA8Pk07nBDn5MBzWBoJofJbGguhcl+aCKHyYtoQQuXMtCmEvPKMKoQZR2gJYdY\";\n  b +=\n    \"R2kLY5ggdIcxVPlWFcL8j9ITwkCOMCeFhRxgXgjXBoDEvBGeJEZYTQjlVUdYJ5XRFWS+UMxVlUi\";\n  b +=\n    \"hnK8oGoZyrKLcJ5XxF2SiUCxVlSigXK8rtQrlUUTYJ5XJFmRbKlYqyWShXK8odQrlWUe4UyvWKs\";\n  b +=\n    \"kUoS6byQiuUgxWlL5TDFaUQyjMV5S6hLFeUGaE8W1HuFsrRinKPUJ6rKPcK5VhFmSUKMbHPxpEf\";\n  b +=\n    \"Kn/6u349KO8QwmeYy1mDStSotywWTbacy0OWbI5DPzLUEYehGvZj9USzUMaqZUeblp2F2VtEb2W\";\n  b +=\n    \"ZLqcLRPu6xK3hg1bnOhbR66plE3VTFos/xtPClkVRbd+TUxfQOI54Mtu/IGMd1l7YWO0RDz+0DR\";\n  b +=\n    \"J1voiTMnwvlCoe05kr0QKpXzr6Tt3OaU3LA35ZXmqZBLK1K8HOIpnBXM2mqgkaJtWpypTvD98Z7\";\n  b +=\n    \"6DZtd/Mg23BUlh+/MDbaSahapp+gx7lDSNRNwxFwaryS0r4kiX8lYGSFO3YUeUmfWX4Y9rmNh9h\";\n  b +=\n    \"TSX4wcMN33tgbJGzzWUCKQu0tJMSy495rGhMQ7koKV/7/KvEep99lchEmVKJ3wG5ZsnN4xD00mM\";\n  b +=\n    \"XdTJTonfEegcDtShK8c6YD1CPSC2ItLAtoPngbT0oafXDjrRAjjSUuJds4q5lLghhnM4O0WiejB\";\n  b +=\n    \"6DzCiniQ4M08AtF66xd/YbnGnRstmyyWm/idk34WH9eZ1xz3vvmDaa8oqZiLssmY+3h/cT5YWrr\";\n  b +=\n    \"7JFaYIkb2e3ozQ5PcjazglNutCUwlu2AItRvHUXYEmKN1wQva3bZHksxlKLWQZlo96JgcO+f4H1\";\n  b +=\n    \"hHEXJgn2DyR4ejDB0wMJ9tUTNMrvBEGakqFIoPklFYtGV13f5yOp8OXP36rC73YVlmrOcjUhUqO\";\n  b +=\n    \"fX/mLV4PsgyKpaS50ClE5tF0fua6PFqQWxNEYmhwVSD8SA8Ox4w22Uzqgg+HA2zHw7wtw3cPIDj\";\n  b +=\n    \"R8Ud0/No/zxNDYkzd39UOpOTHwTCk/dF8Q0he09jb27OLDDG7frvB4wPrd3bNLbE9oodlTLi1dC\";\n  b +=\n    \"RbxDYygKXP6ZhctyktLrwXUuMqelDNv0VmNn52YZ/xKMwYCS/Fj0x3eP0Xc9HxahtKddEIiDX/Z\";\n  b +=\n    \"64RBvvyC1zn/n3ZOIp1z/Zbc+E9d5zzpOkc6bMZ1WM4dRhPIf/osi/9jnav5Mt7Y2YC37tlSI+h\";\n  b +=\n    \"8sGXuZJC2SGRVzqFi2ynfOb08p7LntPmcop/TAXTqgU5z0CkVOn1DVkPUe+4B14m+/sQJcZTOyV\";\n  b +=\n    \"oDF/py+PCgBLTUGxxOQf82B2HQ3+jQDfpTDvigf7vDROhvcnAJ/WmHpNDf7EAW+nc4/IX+nQ6lo\";\n  b +=\n    \"b+F8QH6ucq4Q4VPa9bUQNjNF8ePoosGY60yogSwbDylg8RTNTGam5+XqGAMa/HULt9thiwd8OMk\";\n  b +=\n    \"bybaP7HvqVCT1sle+etqL+IczSqtDHx0JhRXR4M0/evp/OjfxqokdsbIBBdMBjR0vFYcCOKoJfo\";\n  b +=\n    \"wyUB5BlQwJHjFLIxU2cAXFRjDal4pfD8dcd2PDFdAeIYBpuKaC5mmjYfOloELDy8+vUU8O49ZNX\";\n  b +=\n    \"/1zCFguG0plwD7JKqjLW1r1NdfXIHiGPUWqL2xwJrj9QQ4+q2aQwJvgYn+NCuh0NHu+1rmQcxDK\";\n  b +=\n    \"7GInCzWGHtzFSCyfsuhlPHsJBBm7NhV8M3YsauAn7FjV0FGY8eucrHDjl0FU43N5gRwjR27Chob\";\n  b +=\n    \"HLuKvi0C650ibn/SaenSFGNVeGmKsfq9NMVY5V+aYqxmME0xVm2YphirU0xTjFU4pinGaiPTFGN\";\n  b +=\n    \"VlWmKCWz1twgaG15zgWrDa19w3PBaCMgbXu8SBDi8zgg8nLh9Cmz17xFgObzeK6hzeJ0VSDq8bl\";\n  b +=\n    \"V1YzhZ7r9BtJHx+kZRVcbrNtFjxut9ouSM128QDWi8vknUo/E6J7rTeP1GUazG6zeJ1jVev1nUK\";\n  b +=\n    \"/B6v+hr4/UBUeLuPyhG7f3tKjYMVC0sqfxDirKZ51qxIYQBRT114hc5Lyw1X2viwlf0pNUFXp5U\";\n  b +=\n    \"jv5ORKIuGK+S7dJNsg00vlImVdeQvus4VsEQTanEd/IX4FLSqFaer4Baz1Ps5bw81dQ0iET1CfY\";\n  b +=\n    \"KmA1igeuRhUCch1q7XvVPIsRgF1eE5p/Ai+T33RKVjoza1de5ocJqXomBrSI+d2BNNcqb7SrefB\";\n  b +=\n    \"5czYOPQW6GfQLVPP7k9+T35rP51vwN+Rvzbfl9+Tfkb8rn8m/Mvyn/5vz+/IF8+61z3L1LPOnu7\";\n  b +=\n    \"fwabvFYAe1CrDDguKm+H/OAqEnQXm1YO4KvyC6xpIee362X9TEY+n46HAFghk0zcF9NtIdoJ9PB\";\n  b +=\n    \"C5ZJXMvyEfMhHIxCoNtEeIvpTBpYi0aaLliT+iF7UW0g/Z3bHq3A/fiOnWDkiK+pDe6XQcLVMFP\";\n  b +=\n    \"ZWoQNRbL/EGPnTaOLfuFRPjKf4zvH09ijezmHr0XboyeUCQ3kMtlvJLLH0+DnVLFRiNnPJLkSHg\";\n  b +=\n    \"yXI/u7UEvLPhXZX+RrIcjNRWjn/xrkkCeMVBMOTRQKTOunI1UrCAWHIhAzeZaA5jqOucbwA0JD5\";\n  b +=\n    \"R2sjJfjYj0sz3wPm4Swb2wHCCNtHFZtHElz+A38hBbgjCvAh5oy+Qsx+6VULTSYmH2m4apORKsb\";\n  b +=\n    \"YtRSAN//D6y4GJ5TULD7SCJdv/nB8GAkr1Nol6WI11P6TK+KiX0eDA9HXN1sQawXtLqTNFtQdeF\";\n  b +=\n    \"75IqtZzZQz1CHpi0cbipf9foFfXsuVk4Y1TdnYmXBgZ6pKiY9czSq9UxqmUCK2oW2I9QUQtZsAX\";\n  b +=\n    \"ICa7awfdRAkSPumsiyPzL5cFMr/mHtBFzISz+csi8/11Be+LA6+Mg+3dAKc2IaF/J1LMpZ3Oav0\";\n  b +=\n    \"bnuirFaBdJ3rHxw9kNW+eDm6S7adDQJ4P8HnXIDFE+ufsiqHuT071kX5/Jcjqo80eei+PDMitP9\";\n  b +=\n    \"olX9mSrHqHzehlSZ4qzN8yNpaA5s3Z8HuCKi7Qs9jxraFdHzKdrC0ONttH2hR077I3qcNLQ5CnD\";\n  b +=\n    \"vgy3H1uif0gaJHjtoc0SPKdqGBbjfwiZka3TY0H6Hnk9iI7I1eoh2ZvTIIOLbGr1gaBcV4IYKe5\";\n  b +=\n    \"Ot0btpQ0SPOdqz0SPFZIZ7Ntpd0fN9tEWixxPYu2yNZmkzF+A2pluu7OcbCFotDuV3HcpvP5SvP\";\n  b +=\n    \"1RQG+atQ3n/UL7xUJ4fKpJ5c+QQLmYO0SKS5hOH8uxQvuVQPn4IdzIcGR6iDVAjX3doPjxSbKIV\";\n  b +=\n    \"Zyy/7VC+4VDeo28OFROUKE8op0Pz248U01jjkdvUobw4RB8V6/ImZxMfmn/zkeKe+QOHPnCIWnM\";\n  b +=\n    \"aSxdHNKlo81uPFPdSd2w4NH/vkWKzJFpHvzp1aL59pLiDVvXxQ/MPHSlmKf+Nh+bHjxTjkmgjNC\";\n  b +=\n    \"UPzU8fKbbSotfMO4fmZ44Ub5DI24mw/tD8uiOw76B6zzeOFOshiDlEv1zcKYk2QL/z0Hx6pOjRz\";\n  b +=\n    \"2SH5m8/UmSIok/hTJSaaf5bj0A1mOo9P3mE0VbTQ/ObjxSp5HAbFbQ4NH/fkaKNJVqIE/Tbdx2a\";\n  b +=\n    \"j44UHazaQuTlm/OODvWRGHprHAPxyZZD8xuOsNP6Lvrk7vmxI0Uo0bgY6x+af+ORoguuFWI8v+0\";\n  b +=\n    \"ITih5V8KYRa78iFwuAYqaqVRZ2tVn+Xr+2TupvYlTNufTHLznUDFNbPQG2kvcwamLO4jlMiBmS3\";\n  b +=\n    \"CG+HNTfi8n3nyo2Ezce2c+xsHeoeJOYvGt+SwHiWPuJsa/lzYRm+TbTcCGyBscG1KFaJjM0k9tl\";\n  b +=\n    \"diQDxg45ohWwPR2Yml63r49gtJ9E4tmkHe2RzDN7PKlVr5uO40Net6xPYJvpHxqewTEv/b2CPiC\";\n  b +=\n    \"tM7CLHQzL39BvnF7BIdJ+cz26El6tLZHAByMt0ewE920PWIYqLu3R4Ayyu/cHgGLamI7H+DS7RE\";\n  b +=\n    \"MRyfZvSpNottp5NNzw/boKXrctj0CJGFje5R3vj816YFq+0LnsnLfItycwL2XeRybwMd39Vh2BH\";\n  b +=\n    \"vu+DHYdjPeiyh5WKNjoqQsFYZjxQXGfskF96Vkqfrizn6S61KQWxEnG6gueIHQD0QuwJJ8RmsRe\";\n  b +=\n    \"DZeB1L64XpunIzxWVKIYlMV3kcLtCttvhW3HTnjnzoRK9zWQX9dpO4WUcmgMqGIJaUmUgvDtcCU\";\n  b +=\n    \"lEAKr+UM/BoEfg0Cvwb0CWpgt8fi2oPKVM+Nkxkkk/sHaOWF7B9jW2AkBYocQpjKxFCJHUgT9vZ\";\n  b +=\n    \"Zvrcgp3hqDb5VgRiG/zw2XcSoWoMvRxkkIaaz4GLBDlgDD2wIqiRsLk6bEz1D8C4NbjjL5l7IY/\";\n  b +=\n    \"fuKt//XQfTxQWu100i05tFdleN7Mu1KO1nWrrs5020SwR8B6hnp3vLG++/3oSDUH4ulO9fit9bZ\";\n  b +=\n    \"ntxH0Wjlu0BDDuXxXcQtgBMls5Ce3m3h5aIuJO7j7maCzARmuXGjRtN7e2vWeXr3BKhlDQKb1Um\";\n  b +=\n    \"/lhZje/tzTvzqK8cd9NmI95POs/q5ZUFJgaqDUMTJwAYZXCZBFY1fGJgSNHEQooa1uqmFt7FwKF\";\n  b +=\n    \"4NfKqOIsMI8quQ6JddCB90yNv5VxijNxIkyS7WJ2+w7fmg8iiZtPfFljRUgw68kRQnKmV9AaSpa\";\n  b +=\n    \"EKk2xGoTjHFinZjEJxjisUZ7MainMMRo9tmhqKszR2VxQ/bo2bfABTvOAgfz1hJwcDQMMqDKo7P\";\n  b +=\n    \"S08OGJPKCMI3YOk8szFlYCFORTIvshrwX7B7xJE4gqPuEIjrrCIKyTiCoe4QiGuMIgrBOIKf7hC\";\n  b +=\n    \"H66wh7/GyMOimhxVTpoZJfixniyDOxl0gz2AJAA6xzDfu9t6T2PUYjgnZdel7NiU3Z6yU1R2mco\";\n  b +=\n    \"OVdndKjtjZVet7MiV5zQf2dhh83Y+3RS49GP37CyaM7jUNtknab9AvZg8VZg95Vto0g8P4Ny+kz\";\n  b +=\n    \"WAQlH2oZlmL08rosajIYwHKnVzcS8PUlDMHpr8FksoQ1htSobEimS6iZwXi8gp9kROjydyCjyR0\";\n  b +=\n    \"9yJnMpO5HR1IqekY+DFwlgwe7MX951d4DM8vdAfKw2KoBjNojEBXwaNfIwdTLx3QXzN456/+0gx\";\n  b +=\n    \"6OICKGOMGEZb9UEXF6vGibeEFoMF0W7fxaHe1AaKcc8Liikn6oD3pY4/UwHdY14CEDUR0BnNcvn\";\n  b +=\n    \"uBanfzII6CQky3tyu+qDOjMvvpM2eduY/r3VmfKvOZG/ohveeb1ksIESjVi7inUxJ9hbRTtqwIl\";\n  b +=\n    \"JcUTTLpZmFv8Euh67cYk490kbPj9d6nPs7liIN9HosvT7u9Xosjtw1dY8B+fJe7sWnt4iHXNjGi\";\n  b +=\n    \"y0HDLTXwAEwvm/LHGCdHTD2Aiz/jcAwJKzPE0j22RytguJCwNHKILsTpTt2D4b5ByvDidj6RQjC\";\n  b +=\n    \"/XI64aaZe1Q0DRa4V/oROx7E/t13SyApWQKbx7WUvAma/+nP3/jvL3z/D6zQCegF2kvO/+If/OY\";\n  b +=\n    \"HP/Vvf+VPfvAAneFA+NiRQ3/6Q+evft8/oYMTwkf+8sSff+DD3/sZCi8jfOPG7/+XL974+CfpkH\";\n  b +=\n    \"cY4Y9+Esvof/v4t9O5LlIJP4RT/ynyHHCrCS3ET++wjteyf+I73K4S8QVUefhnXw3Y06RLwenPh\";\n  b +=\n    \"NaolXfCsD8/WZmx2tQgz2UfS3uGry3kdZ5NWEXhsJxlO1jR2HOBhxbmRQMTD4Ayw6ySla9QWtkN\";\n  b +=\n    \"aJXsL7CBtV4Gc5gXCi7bici3v12qGdw693MRTyO+3YdcbqyuA48eLSJn1xIpc3iu8CJVUI0G7Fo\";\n  b +=\n    \"iqL9Gg3Yt0ciyRGs1//CLI1k+tEqWX1b1LgTWvMVWcHZUBesmLgMVlI7pG6+iGD2+ocDrqSTx/G\";\n  b +=\n    \"995sanf/fHfnKpR2OAzqLzf/biD3/vz//l1U/cTWMA4T/+we/57eMnP/ujP0+D6hoGyQ9+4T//0\";\n  b +=\n    \"Xd/9EdO/wIRrsgoOv7v/+LGjY+Ob48uIfzJj2IU/fGN92yPLkTuVk2HT300gZPsYLEjQ/R8lmoc\";\n  b +=\n    \"d6Ju4h3quPwnzlxXMpk3Hap1Ry4QaR56pkmHIFqGfi8FKEz2fFqE2e+kshnGlJT9VNpjeGruGgr\";\n  b +=\n    \"faKrTFtE5jrIz9GV5+tInoC74aI+luzhyltGjvbB8jeiqJcnD6lxDTIMX+NCHwQY7ROhUBdlvyo\";\n  b +=\n    \"lcT4uxO1QmYIUEGohdqDjTXhTn15c//QnDfyhJuR9ymb3/bBE2yDjpZv+xKeqV/JOKkRDuKM9IM\";\n  b +=\n    \"XO9BqpKza8s5uci8x++81uwDjpM9hPN8Q7nIOlOId2p4XR0EpTzmuaummIGbUvdusACF1tro7U2\";\n  b +=\n    \"rtZGay1FtLU2t6o1KkslzL2u8Fq/G3WkXlzy0/atU162DfJOaoOlpX1lWqbZR5vlJD+ol+S5s/x\";\n  b +=\n    \"niziO0YlPSbRy72QfQMHj0zQL2pbFq2TRDzQT2pvIJxA4UB9ok+G6ir0NpztpNQ7f0QtsHvTBeX\";\n  b +=\n    \"rrBzwVsOKtYW3Z7P1pbh6H/ho20kUg3pFQ9+ynmUulETd1Qc/+INyJjtWfszV9B5HwWh6g+jOo+\";\n  b +=\n    \"FJI231uvt8Iy6uIuqqf0K5ato095LZpvMPpI9pSldGe8hXqBZpuwgO2P4qQTvLRniJiicFs1WFg\";\n  b +=\n    \"eNa5NR2WW/FBnq/7GBFPHnRoTTu/kobpgeb+2kUrz6e9JzDqemy/gP9t+cc9FnpF5bEDuXmTmaJ\";\n  b +=\n    \"tyZPQPenNL9H/sncVZrpIyqdwyd6bzz9I+yAiSCRgIzT+fRKfDcQvLRlNsE8SpEMJ7C/slwTxUA\";\n  b +=\n    \"L5DYoKXdRbvvs4RKZFsrPM9pTZd5RngveWJ44nC+VvZ/8XVeB3g3ey2Ua8hwK/8imaq99kgn7Tq\";\n  b +=\n    \"U6e+JRO32Nix/GBYpyyhvh7/i2HP0g/AJzv/QUgq/MxBMbybP8+lpBr+t7+YoxxhieUAtSd/Uyx\";\n  b +=\n    \"ee7jGqT7GI95vMTMY8qTWpgFoDO+ZfGlonf4OFV++bcDDOKkXDn4rWCipFz69T9802M08tKyhdC\";\n  b +=\n    \"zf3Y+gtpxP+UYIdCOE4qu0JeEXjRxFL1famq6iwG9uyStx4lkSjjobD82DVXHuITm47HvbWh6Kg\";\n  b +=\n    \"NC+ILYrVGyxshL/yXWaCoZBym+02/ME4N8sD8WMkYv98LSEu39s+9gP6jcKUUL+rjjuDnYV0x8g\";\n  b +=\n    \"LWIbtwQ9Po81p6DTmze2plHj00XUAZmhFmRFze+HfpK0IKFbkojb78X8nBWimrTtlXu/buP9KDD\";\n  b +=\n    \"xZq+gmuSN6iC+PPtfRZolic+TWvZ7eXBP33VauDzyZa1vPPx+fZS3niJKpOPZZ8143a7zmqf0eP\";\n  b +=\n    \"T9IsdnJuoq/rr5k0/o6Jl+brDTziHN3ILmqCU2Xx7fz9DnvuL9blUGcVdn1Mva5Fb+gNqF4ntdk\";\n  b +=\n    \"tKApwmLkL5+bNU4s3lic9oicsVeitnyouWkIPFyyt/8qreYj6D+H551cXjMPnsn75qDWu8n0m4r\";\n  b +=\n    \"uP76pWGAs3zNv2/bIYdPlEIMsW44pZD9o2LCxYStBkNmDrCLMII7AFWAqPkj0FvTFT1eMXNo/e+\";\n  b +=\n    \"VEzk6/YD+JZx11k6OiaA3y0G/KbPHvXhnulUPS7zRaOGwjuxP88sBPt4bi82XBQPPv2mjvReh3z\";\n  b +=\n    \"uWovjHktm5SdhjX+Ln9TMYuB+a3Kmp7TR65QMQhPLOVVaiUFX2xWyPYMTx4wqaylAluV6J4IlLk\";\n  b +=\n    \"DimXj8WlBkbPv7SGV2FeIptJN3BBsX7gA14SiQe6Ar9xNuARqZrQohV37Rgv2P/kXJw6/Qfq4Qi\";\n  b +=\n    \"i0guXEN51pxiRWLugYbznC1cGPxtDgFYLHqrlFpJhxIrvM8wNC2jYFuZHRZyrHTn4hH/eaEB5I7\";\n  b +=\n    \"kJPWKDueNxxIrtdftb7yQaRVyxO4Uj6MbXMkSO6qSbRLtBqxB5Kb3BIk9y+aYfPAJA77czvhn++\";\n  b +=\n    \"BcBu8azwQzvbX4zHTn8QjxwX3A+FmaHM/EE7hwvyBcBJa3A+EGTS4Hwi70N5+IEyhuf1AGENrG4\";\n  b +=\n    \"P4DrmPIEq+me12cFyiIdzZjwmjk9/B2P2w4kWTckpcaE/vz7uOHgsdTtg2+fRU6BnRb/fpXaFPE\";\n  b +=\n    \"n3K0XtvpoRMnyL6xv3YfIA+9mZKyPTNRL9tP6/Pguo8JfSc6Bv2W7hoYuTNQp8h+uR+O0iIJXKh\";\n  b +=\n    \"zxJ9vXq72Ffc+WZKyPRtRKd5606m40o67hsxmErKrk7fMU8W9OfpoiNsHaPp0KJ5xzFy580s/47\";\n  b +=\n    \"RViE3mB8FgXjX7iJCbjc/Glu6nhed1aMhOh/zoifr0ZCnj3vRU/VoCNkzL3qzH30c9x8Qvk94Kf\";\n  b +=\n    \"J6ikSE8jHUxohBQm5mP0FTZPWUYLZIOcFsPUFLL5WQZFvR5iTb/CQ6bIsQxwRoGC/qTS8PDTvsY\";\n  b +=\n    \"gjDZbjEMlxioaZKTYWaCrWr1K5Qu0LNlJoJNRPqpFInhTop1CmlTgl1SqibQaXVFqTNIOSshmjy\";\n  b +=\n    \"Nsid46BvY0IKQgthxqGGbDPMmwjPiN0Jwoy0nnfOpaZ3QJEFYG4SMhYJhBQyLRlZa9X9+DT0sFf\";\n  b +=\n    \"0FBk7IGduDwfizO3gAJy5/g7EiOvtgJu5vg60mevpAJs3c8iCNTMnOKBm7nYH0jzLIQvQvI1DVz\";\n  b +=\n    \"Q0xyHr2ft+Dlmv3qy/4Tx6P8whizckRsvWk/e3cch68X4bh6wH77dzyHrvfoJD1nP3uzhkvXa/m\";\n  b +=\n    \"0PWY/d72KFq8CjfiNN5i5YC7FjorMciqQbtWmk78E7evSTq8T4Z7g52AuhuhsbqmTZ4fWYV7c7/\";\n  b +=\n    \"z977B+l1nWWC9/d3v1/dV1JLaqnb1v0+NEu7UHb6DyNpHG3Q1Ua2heOJoFxbSVVqy1ub3XJ9ck2\";\n  b +=\n    \"lW1rFNSNbnUQBxTFEExtGOxhowCDV4gbBmOCwBtrgBIUYImbEYCA1CNaAGByiYZ2JJnHwnud533\";\n  b +=\n    \"PuuV+3LHtnCDvFluz+zj3n3HPPOffce99zzvM+j2VWAiQytYjt1hg7KvyQYCuUfsI15y8jmVoey\";\n  b +=\n    \"aqJLT4cqRcGE8f8PdbEGROtJcTgXWpimRwPjgYdleoxb8KWrDWcEIN9AjHsguWTUjWteu4IKoWG\";\n  b +=\n    \"O60Ogxo3d5XLShz9KAg7GRzjqc09uta6bfkaN5ustFdCr7CTXEyHMHDkcjECDlfyWY2NTpY9+qm\";\n  b +=\n    \"Cpq6H7WAcopncYuoOoKWw+ojpBd6xiYoMwn35EAw6/l2bx/oG25+5hqZA0khDGRxraLZuQ7M1DU\";\n  b +=\n    \"0lrtGsbN1m1fm6cvdg1XaPECDTFV+dnUH3z1pRKgbFlUBd2WBTTPLDCG8P2BQb+FmFlwdsik38K\";\n  b +=\n    \"MO3AzbFZn7S4dMBm2IrDQL4csCm2EYtqAFWrc1LEN/EbYLBSMvI2BQ5JgXGFN1ubYr2O8yrgDnh\";\n  b +=\n    \"mWNsgbaLv13ieyZ+qx+/V+ILE7/Fj98n8cA3bnbxnXdEWpNpE29sgY7Emw/hOyV+1sQbW6DrbJO\";\n  b +=\n    \"7Jb408Rt92+RdEr8T+EnfNjks8XMmvnC2ycw7zEuG8btM/OQj5YzaFO+hq9dAecUSNStolM+z7x\";\n  b +=\n    \"4e5ueEp5KRt4tllruPYw7Lgkl7xRRrJGFtqG2/3bTIGsk9oDa95KKZXJjkrpc81UyeIgaxTp5uJ\";\n  b +=\n    \"k9zih1DFNjcZJpTMdSCsxWxuWLICLdWxDCb8Mopa2uHRp5Xqgu1XajTsBMk1PMsBlZhfoHeH7AZ\";\n  b +=\n    \"xFwgZZr5zizg15kLjN2rsc5cYOw+jXXmAmP3a6wzFxj7To115gJj79ZYZy4w9l2Ijcr8nNgLJuY\";\n  b +=\n    \"wKKEwF0B8T+0FRGS1ATHHCACSys45sRjo60CLghEl1i+KL4XyhtgJYLOAAVY7llxNXHcSWc0fxs\";\n  b +=\n    \"W91iFSXEvtVkGsm281YbdGc8eseK/1NK0TxAnw8VhJyBXhb16FjDKpLE14oFH2WXAHCAN3FweaZ\";\n  b +=\n    \"uPNy7TnR7+3pmAPR/VVERVKPnge9YUYriUxVxwLc92qWFuVKBW417JkVHwqVpL2VIIap0fCBW7i\";\n  b +=\n    \"vFanegmpYGZZrusKZtZtN9VqZviACL11R6KQh6nmta01Z0Em3qt5Zjt+tbWmGojCDmnonzUMTVN\";\n  b +=\n    \"DqSSKVUZvBEM5x8Zea4FMbzyeMYk273FslPXxk5hSE7lRWdmzedCxjCFdv965vDlC8nqE5DDkdW\";\n  b +=\n    \"wstUdyWa/X2vVtbcOqOVtnNO2TbqBN1BiY0lRN1JuJVTfeQylATtAcptSOvY6pnYzQ3Buh5tHTG\";\n  b +=\n    \"9IGWKy+Ge1G5rZmNm3vjNwdlAqcaWkF7F3FhdjVUd1LSaOXkDuSU9DYT0fuwWmMCDxTJlOOP4Gc\";\n  b +=\n    \"qTfeEol7IzGwD7JfwmoHL4lvtMJbqMsQi++Wc6fManfKVu1OmdfulO3anbJTu1N2a3fKXu1O2a/\";\n  b +=\n    \"dKSdqd8rJ2p2yUHfKWLxMnTvlxtqdclPtTjlVu1Nurt0pt9TulFtrd8rp2p1yW+1Oub12p5yp3S\";\n  b +=\n    \"ln1Y3yFnWgspIwAvEyT8lD6t8FMH7kmPoTOW6oxJgvjKDk1BNLXrM+ui6VY0wNBORgzxFfYB7xC\";\n  b +=\n    \"tcEnsrvmWcbsgoPNS4QKue2j9jjnZeiEu9Q6haZ0KmQyqoalIJESxo2m6sQ+FlYSizBt1qV2neU\";\n  b +=\n    \"Tpi25XVsyDJQlt8PAp+KFTBlU5bFBd72EJICiWjw9gdlfcu0W1WuQ3Nhq1/9PwknigTlwzOUiMH\";\n  b +=\n    \"zAdW76CVEtR8ovUDXnOl8QekJeqNk+IMqgGha8UNLce0PSg/O2fKWxXJmsdy+WG5bLKcXy62L5Z\";\n  b +=\n    \"bFcvNiObVYblosNy6WGxbLYrGcXCwnFsv+YtlbLLuLZWexbC+W+WLZWiwzUwdX4iKcN7/Rss6bq\";\n  b +=\n    \"23LYDg3Kq4na4mt2UdnH/21gI6aqRDYMfeHW0Simo6L7wUNCfmgzUMievEYvSoUT3Jz0vfPj3yG\";\n  b +=\n    \"8zklON+LAi8m9IyLhPxM+HoZS0gssbDF75BV/2IiLpkW7XA1qWnQXhKzxou5xJiX6hjlY7+7jOC\";\n  b +=\n    \"v+qBCcZzP6gOWWpqTXGFXxv6YY1dOiC0tY/iqivxBDGdVwEzN+6BLDKo6qxJE/AF2xe7oA7KimH\";\n  b +=\n    \"BnSx0ppWdCx6jhuuYB7ZrrQaNvyANn4hqdUxBADF5l7Zw7KTlwWj0xFfbEzCBMkaTikwk53ZMD4\";\n  b +=\n    \"Xf3UfQZAj5YHeuNaU8yScWvxHXpqNj5NlIuC74/diz/LybDbE+83IZVIZGZtuRCu25JRTDts+1h\";\n  b +=\n    \"eLDfxjt5/sEhBcFi/rln5ggX4gUkxHqZs9lmeEZyvLVITnewn9OFRSjSCbY2R+oc6XyDtbt7ucK\";\n  b +=\n    \"6XzTTrNPOOZHdIY6ET32iZlBOqic+UTsSvtFZz9izqutnkFa9gIg/a5x4oV2faNqiPpOfeCMqZl\";\n  b +=\n    \"ThZVcFtvJKXL3q6KfZg13tmx/AeHg20QBGCAPmdsOrM1K25sg87vj6f6EVTQqQ8EKoj38po/9+C\";\n  b +=\n    \"Zkav19COZ4Ihnq7zahnqMBgZmhqd3RMQtO7o4ckNLs7OiGhcne0FEpw5+7olAbn0I0S3LU7eox0\";\n  b +=\n    \"V7o2GKkQ4O0SyrEmGKkQ4D4JFbuFb4vXfqeEprEGGKl38LskVGLtL1IhwPskNIc1v0iFAN8H+YN\";\n  b +=\n    \"wRFmPs+Z3UrBg5n3OnV8ygNZYvlDx9L3iTFTdin3Queh8OOBb7+nQWELmdzkccFw/FQ5akD2wmo\";\n  b +=\n    \"smnHOvpQNtcC6Ah2bOemTYXVh5eKibYPBtXKDUrmjHixbn0QXoniNgJlfdhSOcMRqL+2jZXhjGR\";\n  b +=\n    \"xmEUvrCEVl7XqjC4yappPZNiFxlcHQIv6sqOs7dwbLD2NZRY97lVXhsAE1d85PBXfMj5Ua3A/DR\";\n  b +=\n    \"E6zaOTAQfPQc3grhcbKK7DhWbjBz7uOLpvV9LhnyHV+au/Ukbma2OzqLX3MfnyCMZXd0JrQ4NEs\";\n  b +=\n    \"kCxeDwvTmHuuFgLRJOZhA/HZ5dqggcr+EE+wwvF/COizNG6e3h8PShKb2cDCa0OweDkET2rlHxl\";\n  b +=\n    \"3kBttcNG86JDy+IJ5QPbwketU2Ygk3DviWu50EmKazxu5X6t8vY/017ldm+39B+z4b7/vE9Dpik\";\n  b +=\n    \"6PmNr6Z3m6N9bZQbcoX9QKA/1DjPmqq1v3JVpSdLPBA7wfIt+TXK8GXmnrdLfF2KVvEh2d0eMkE\";\n  b +=\n    \"3swsj2CjS7Kk41lSQUyFtlApUXxswGtDByZm5zZE4hcXaXFeeup202bxZ98J/J3Gn70MTuHP7Qw\";\n  b +=\n    \"W+DPPYA9/dp2QfTXzZ+6E7L4lWFLizpz5U54Y2lU+AnG4hEeEzwlB8Ay5UTgsROye3e32u2JUqP\";\n  b +=\n    \"COpuvNtBjVmvCOinrhKkblet5RXq+kxahixzsKHh5urPW5XWjKhTa70BYX2upC0y60Tde9sE+24\";\n  b +=\n    \"dwCuTnM5HrbuYXFYXxHQDHUsjiHVaJpxBlrhFKp5STjtiLO2GkUUi0nGLcFcdkdAWVWyz7jNiOu\";\n  b +=\n    \"dUdAyBmWqEzcFOJyaEUhrsu4TYhr3xEksv/FuI2IgyoQ56nTx+8IdjBUmNCtDOUmdAv3YJA6wxB\";\n  b +=\n    \"StzOE1G3cKUfqVoaQukW8NUxoMxfXkbqJIaRuZAipGwgUQOokQ0idYAipfbgBM7XLEFI7DCG1DY\";\n  b +=\n    \"diprYYQmrGEFJTQhqQKtwTSI2E1cmEKElWW95lulgmi2W8WAV3dX82DyfoPdjy1RAxA/pTwpAoQ\";\n  b +=\n    \"pmprGDqEb5xXwWJHZkjDJ2Cm0iCUamXkxw4v3gpXH6QpbWGFGCtmnYZh7dFL2d76M7wRTl8RQ9f\";\n  b +=\n    \"lsNX9fAVOXxND1+Vw1MtOXwtoojGYy238HrFvEIuAZEUOdWQSKV+Y32N5xLqyVJrpFK/DE3Jkmq\";\n  b +=\n    \"kUr8MUeqXoVLWPiOV+mVoTlZMI5X6jdU5bV5Ct+/m5oI4p+2V0L7d3EAQ57T9Enrnbm4SiHPa3R\";\n  b +=\n    \"J6125uBIhz2mEJ3bebi/3inPYeCb0PloW3vOqY6eSzJ3+vqVChCGsC0prr8SUKLIQidyHUbQ+pE\";\n  b +=\n    \"mvumI4k7gKHgaWWuRDbvFcoKx96co2BEj9Z/pUzieQFb3aMocdAU8XP6lYyIufy7HKKxVZP9u9S\";\n  b +=\n    \"Ksqa3Opqy1LVcNKnk8PCZ1Fr3q2hjbvE5rtrdP3Shd3Qld5p0NRx1qQjGGO8Q+rGhygQatUE7QD\";\n  b +=\n    \"E0HwiaYzyJ5PGKH8qaYzyp5PGKH8maYzy5xJvlNtnuOPkHendo3cigC+RbfRDKsc84bQgRSi0q0\";\n  b +=\n    \"e4N0U9XFow1L+Sh+FJQoDE23h91alxliU6eR2Z2BBGcZJmrbzd6fb6E5PFBmFIeVsQitTfrlEl+\";\n  b +=\n    \"mwHoj0RuByf++Hnue8fVb9BNEDEKSeeKSv5Rz1yM0UvTqe9DcK3ksvMet0Cl12Bg5uXV7yV8i6+\";\n  b +=\n    \"iQpO2gK/LQ7+0foFnnIFfu5NFDghBSYWV7FOgS8/aQv8zTdRYN8WSC26ZoGhFHjJFfj5N1Fgryt\";\n  b +=\n    \"lWEG6H3qegAxX2qqWVp/RvckZT685o3OTM86uOaN9kzNOrTkjv8kZr/zQ+Bmtm5zxxTVnZDc549\";\n  b +=\n    \"KaM9KbnPHCmjOSm5xxYc0Z8c16d80Z0U3OWFpzBgAddhxbl5niJ9iD83jtnGqF+UkspN4Wl2W0c\";\n  b +=\n    \"mKP+bQJlTWJykXQby56YJjUEdHJatXYbUfApHOPiAyMoOsj27FV/G6u2J1Y4CyCjodhvVSD3aTQ\";\n  b +=\n    \"mJWC6fQio/Ui4/FILKLCq4u8mwIXpdfFwjATxrmxy2FlyORXKE6mCgxzmFKywuJTZCpPJHSFJcC\";\n  b +=\n    \"Arp+YxVX/vbamjdZQYwzzba/4VFrTQWTHj4zWi4zHI5ut0ZXCNlqTCKnL+PWazUmsoISZ3hefAM\";\n  b +=\n    \"9hUhM62GFSixnUKga1fEGtW1ALFnhKBZ5EgadN4IkSeGoEngyBpz/gCQ94igPmQ0+WmrJ9pCuUf\";\n  b +=\n    \"pjlYzyRI93ch0MQtEsFNFdlx03zGNq/QI6M6jsWuuwjPVXByrH6Q+OegfeBW1iqOJXF4pfmd2ck\";\n  b +=\n    \"ty9102EbGa0XGY9HNm+f8rPAu20Yye3jUt7cG9xBUd3r/jqeQkABc/NQ7YS5QPISYzVYSQ+uzsO\";\n  b +=\n    \"cFF0vbnGYQRp5br+0K7gOFQnBBheHy6SRVYjjVpsZ7xLX8rEyY2ZFmbFfZiy92ChTuXKM+YPVZB\";\n  b +=\n    \"y17ebtMHJOvsla31/Zg3PRTfdey4mtidzXYQJgAbJt1KqTRXL5vb67JI+uWHI/7+rYu3CJkfPmH\";\n  b +=\n    \"fMXtmJP4mjsorT42Iu6wChjqjq3Xyca7G3S2ijdm45gd8sl5BBog8jf+WcUt4u5s/8pzcSeA6pg\";\n  b +=\n    \"LLNEyR55JIgCHwNho5ZivR72rmNL6ipRdl9brgXcQeQjMmyUXCOQE+yutKlWILVAWcKcgdL1WE7\";\n  b +=\n    \"mpjgaba6dr4nPFZpQwwXMMxJIcWcoahHbHFeykXezl+ojVD3Dn1bd1rxk+1IBKMhGdCCDGxGpqX\";\n  b +=\n    \"oqG/bCqCKZI4sTCGQ6Z2MBG6GTbVBcxFDH1rz5lF5uhZN4iAt5hsNB31LGTA971RB6KdxCmTQT3\";\n  b +=\n    \"+HEhijow6sfDCuOaqoAGFUf9nSwITpZphAJMJ/V7+Q3FVoBHW4u4ZRUZQIw2HYsEMFqMgyT6o/o\";\n  b +=\n    \"EAktgLK7yBMiewJVArpUCYgI1j3EZ79FhYAO+agFHelkAlKVCYhEJqCjMgExPXW68HkoO+BOKv7\";\n  b +=\n    \"3yM1L2urveGQijsIAfYTtmvbbgt6IjKfQvYe4haNNawgnpLVwwv67+wlcduH0BcYHyWU+46n0We\";\n  b +=\n    \"bkFRKQ6eI0FH2kNJ3c25AG/ZBXHVDWOedHvs3lZWkFTYaIa/jGbKQPc4SOi45MmHoneJmjy1tVz\";\n  b +=\n    \"E9IUn1D82g+08A0QRNb3SoxySgCzrSxCX8F4ahbRSb89YCGUwUX0HzGRODqpOQCZ0Q1vwipFXy5\";\n  b +=\n    \"AiTnaEpcYoiYZhvDMuiymt1GNVmFLvs4jIPU1rW7Tl0lW5omQRi1vBolXk1jrwUR+b/K1lil56v\";\n  b +=\n    \"fg3+dVHsSZCKdQzPw9L5x5cHaRt+wTq0k0fGVJDqqJGHu5CDGsNhwBKv1AFwXd8lHCHayaDZk1a\";\n  b +=\n    \"VrzweUbYjFpScWCh5/9MRN2Y3IjYvQHxdBiUcStRz08QgXWGPvTzp1iOqKXumf52HXikLI7rlAG\";\n  b +=\n    \"YgL6Xjs2wrx6Fiq7Et0zmKEgyy0ZMGD2QWm4L54a1m4FVjW82iwJXf9V0rC20wAx3VFehYK2CTR\";\n  b +=\n    \"bvyV3PJe5boPj7m8pKCUrkfrnYDiUppGpDqP1yMBd99DR8wtcA3HKt5jPnkLoxRZ2IpVgCBkCPi\";\n  b +=\n    \"ajlcjx0bOUh0jeTLGRS7AHClq/WqIYoagDllAwjui61RRHZt5sdrZmtL2U6QjNSX3eNI1Tbo18I\";\n  b +=\n    \"5+NBSGqQuxcK3dzt3sZ2JrmHO7N7bGOY6ei62BjqPV2BnpOHwhdoY69+1jZ6xzRzp2BjsOL8XOa\";\n  b +=\n    \"Mfh5dgZ7jh8KXbGOw6/KIdl4DpM1r3o2N/ybk6kt94yIUW28xymR1obiDiX39yzYaO9T4aNBi/L\";\n  b +=\n    \"oW3xU2GjxefDRoufDhstvhA2WvxM2Gjxs2Gjxc+FXouFGc0+X/aOK2u++dAvt8LspPk2Az3ybfI\";\n  b +=\n    \"qJwAeW4fD1gw+o2VrpDNn7Ke9TT/aXXJNhlWyUHNMku2heLeQZhT/k2hXxWoUODrR2DJwms9A6H\";\n  b +=\n    \"OJthEBx9wydHyboc/EGfpMnKHPxJlZxsE25i9tn0vUK43Z6ILtcYlm4KBs4XsUWr3BvNKpSYcN+\";\n  b +=\n    \"aOUsxKPUFUYLMyZ9yS6cJkv9DEJoRzskWGGzzASSryOqvjOGdCEhPgSR3ynu4ITYyFgwldmQkyX\";\n  b +=\n    \"YQcVLuLktoISmNY4EItrIKxqADwaW2zQVo1IsKKBFxROKrmxyfSLVcFZO2R5YumEjUaJdxjeOwB\";\n  b +=\n    \"AOCsDBwOBRwwCMsKeBJuWKJCF212NRFzRXou1MNbWIWXYQy0xZZ2nY5fpCqItwzuC0q9DUHdaZD\";\n  b +=\n    \"/xtuvM98XvOvPBVwYiuUIkXRVpV8VruqolldCWZGNdlcFUXKerrHZUsG7vBNI70nWcd+YCNoOHP\";\n  b +=\n    \"8aVqQHcSAX14crWIQdDkbZeV7qhbfpG6Gknu97lpP5yxe5fZ+YJJX5lkNRDEKwgOkwTId7n6USo\";\n  b +=\n    \"+KfTGkKWu/pcPoODsg7iKRnEpOskgxd+sFcOsmcz3wbzXoUXB8z2BEydAZC4lCIS2/wKzSA82SO\";\n  b +=\n    \"xv3GU1OZ2rOZ2LLY6bPhY7HyY6IuLzvzG4kNXkKlHSPTKzXr1gqfsXQK2UmCk303PQneJRC+R1J\";\n  b +=\n    \"dI1rmE0OKUqbyr2FjzwXu32F0IDhMhr5FjoCo9nTuC3zDA+FGdgXwoPu0zA5OWo/eVgKsnw47z7\";\n  b +=\n    \"0KF88xrkJeLvEtjjQ9zI11jFKraBJcQutqE4nl4JWaIJH4hdi++2H8lxv4rMfZfiUlzSYedmcor\";\n  b +=\n    \"0SuN2biKQ4CEsDC3yuQe7RoQYQD8p09mIE8mHPDWPpnGfBEjNuHzSJ8hhCAzJ9ewT2bSeIkFCtc\";\n  b +=\n    \"ETORgX14syZonM268xAjVsW8sSw9Xpncq3bO9XrMkXqNMD01ykSe2z9yah6b7cQBNpx8R9/VcPM\";\n  b +=\n    \"42iRd7WxzPpsSZvSP+Z5vFp70rbmhbxLW9J95oW8XDvS9OadPi6D4hvmnbxN99UlzUtovbeyGea\";\n  b +=\n    \"jPi/b5BHNZmxQl+o/itAX8QWs/uE8Nbm2CNHeLovRF6K4Is2djAduxwgIxbxO97QzlbblSv8wYm\";\n  b +=\n    \"5BaXc1bcwAtQ5KvfegNLMutyzohH+GS53XqyTzYwKDMu53Z1Di+3WV/4iQZ2ZXsNHBE/8X45bT3\";\n  b +=\n    \"W+g3My7YabCIu471yq/V56zWwMjUYZSv91oA56ZZbrOOcD4IpyxrDssU5knfKzdb7zsfI7Cxr6M\";\n  b +=\n    \"vmc8Agwbu4XU5ZF762l3murBEzU/RAn6OOzibrB5gT5ZN7p+wqpxoQHAujubWG0fjO5iGALGOu5\";\n  b +=\n    \"oK5aTqaC9ym6WYucJumk7nAbZou5iG8wspN5yRGfMbb55yT+JyHqslqr3GB3ojbuIfPScS/zIJ4\";\n  b +=\n    \"PLd1sL2EJ7fxYaSoq+mMR8RFL3tEvPPkt9TfWf2d1t8p/S30t6e/uf4m+mteFo8MW0RZ8TYILOt\";\n  b +=\n    \"No7JOECR1AgSk8rqI5T0RywsiljdDLK+EWN4FsbwEYnn6Y3nsY3neY3nQ8UgPbtU3nIyLTWXrXJ\";\n  b +=\n    \"k8uDI09c7gJZrBhTSDf2kG59MMnqkZKCwy8FtkIL/Iyln8uQV/bn2kbDkKKHDS2LF5QprvwF/aE\";\n  b +=\n    \"Q4apl3igGPaOQ5Wpt1UE0xJhzlImnadA6xpJzo4m3ZnudEds2Pdg6APBiwERer3yDaershGB7lh\";\n  b +=\n    \"/raHSN132lvtsd7qjPVWd6y3emO91R/rrYmx3poc661irLc23LC35J0+yJWdNZWnNH8Hn80N7+A\";\n  b +=\n    \"TWbyDz+HkO/j0Tcjrsy/v2568oJXjoyOfgLZ8M1rmI9Ndzc13MgWA81puzAQyyxs75peHuaNvez\";\n  b +=\n    \"34yGGYhS6m9RHTbmVOy0+Z+PB7DvyNJJlXXX7gdvNue30Sk0/Tn+FHBphV5vaE66a4YYfcVh0v7\";\n  b +=\n    \"ruNDWDuf9k7DOIwM234rQ8aO/cAEM5d86Y8ajrA5i7N/Qq/x/yxVfgusIe1D0QHzJTAzHerz3+w\";\n  b +=\n    \"evGDJshpoZzeFRjs28OrMO07e+Ir5hccqi/huL0nvoTf9I7g3+dY5q4imiGDjMLLMDXyA3tPH1g\";\n  b +=\n    \"yjcllMzo/0Dp9TtOrj0CdOT9MUrPQRJ7yI7uDaAwno0DVWJn040Mz/JW1U9AjJlANPpuDXOIvsI\";\n  b +=\n    \"X+BILR28MzqKT5ML3A+cnuaDWnK9UZgDEuGjN2QKRAffbH3urZSbc6VoEqQtjV0iq4e6ZMHzSBX\";\n  b +=\n    \"/1GAMlfZgeNB/8WwPAmx6vN2PqCCIIx78DzuLQUHZoZpsX/CugkSqKpbMy4MySlTarVZiGtMi1a\";\n  b +=\n    \"YnZeZNzZ3DqlkBD1TL4nXs1N8n8bXsQeTPqdLAVZ59iMOTSqRc8F+Iz8WLReS4n6u8jcPWlrxG1\";\n  b +=\n    \"16Rou4YaMCLX7Trvuu3G39bgsT9dMwTUHbw+fZIdrIUtvppB4vC7s6v/cUo1J/wmMxH9QPfMXlu\";\n  b +=\n    \"btrbcQ7XvR1CS1ZC+rcBpF/a5xo+lrWbjtpJI7RDuDap7Ii3nB/c17nCQPlNbIz4TgjVjtOdEdP\";\n  b +=\n    \"Xac29FMemRtUqhJD6uCwhx7hUncC8dUIRF3gNC7IiuDRUK9cHTjC0c3vnD0Zi6cycJxo7lYgBzE\";\n  b +=\n    \"qIRcXXwcE4eMJxdIXYVUqjCeFGrSm2o7dpYbVTgTNqogVw9sOcGaDhhPetMdEFm6+S/BHSUjN4D\";\n  b +=\n    \"4qQTi3ZCIBxu47CI+glx7GtC5agrvVS6HEWsrfi2YjgFla+ZhgNiK88suOs7crg69gNma6VYkqo\";\n  b +=\n    \"tmqhVV+9SRN6r2HxE/3giL0+LHS88kK0f9YuDkqC8FTo76cuDkqF+q5ai/WMtRk+0A9rSZzYCAr\";\n  b +=\n    \"AMSmVIIJE1f+PqVnK3Gqlw5jIyhb+ZU28wcaKuZsGw2U4tNcMWA4uYNz6LGCvGeM4uVsadLEd8z\";\n  b +=\n    \"n4uFxe6/z6LsZH5D9wsVJFFnidabdb9o/W25X8S4tTkpKsyNBn8F7EAZBGC+AJ01BkhEzgwuUMK\";\n  b +=\n    \"9go4WD7uJbcXYfc6VY6/z5LjdOXLMOz+OXc6NY855cewUJ44NN6X4kFDfhSZcaLKmEHRzuQTVDh\";\n  b +=\n    \"ZWjFm3j+4HxYHp0/sI1i8OFCYUMZSbkCyAJAsrta0pc+1hZx+9GTo8tcUQTs0YwqkpuTZxqjNLS\";\n  b +=\n    \"53n7KNzRJenco2Sp3YYwqlwL4DCwUptwZY6OdpHX4seT51kCKdOMIRT+zy1ZU51xm6pM6p9dN3o\";\n  b +=\n    \"89RNDOHUjQzh1A08NTWnOru41GnYPnqCTPDUrQzh1C0M4dTNPLVtTnUmdKlzt310LJnkqTMM4dT\";\n  b +=\n    \"tDOHUbQyVp8sNJ85hL2xhBKeQWedCscO5UNzqXChu4QZpcarsnip7p8r+qXLiVDl56hx9KH6gFR\";\n  b +=\n    \"b4zl1LrA8FsTz2vddwitDN0lyZTnzHCIERYfOxr/4WE77bBHfl+jV0n44X5C3RTdANkmbeNhNOH\";\n  b +=\n    \"n6oPoSAQDLTRk+VXimfvIusOvKnWHFKP6rS9UNFz8cOPd/MvRyNxiTeLVLfspzU4H//TKcV/2pI\";\n  b +=\n    \"SPsLiTpuyOGLenhK3Dou6+FjcvhFPXxCHUb08Elx+nglcU4fqwm0P7XB1rWhI3vjucLdY1GQNiF\";\n  b +=\n    \"x+qOKokPND1trukt8Aq7YbpI9RHEigDNA2/cccJ2J9KLZMei6nnaMI8woXe890eyYJ5sd81TY6J\";\n  b +=\n    \"inw0bHPBM2Oga7h2s75oytJLFvurvd8SoU6rCDEs0G11cT2lfdcmPtPDCM1nSTeFl43UQuFKwnr\";\n  b +=\n    \"euFgX89P2VJ3UiQUMiV6vHrXEzmMZSsP9E1agK8mglY8VJ0ZJiCwgBboUoq4gTqnTy9E6d30vRO\";\n  b +=\n    \"mN7J0jtReidJ7wTpnRy9PIwSeMUGrtrAyzZwxQa+aAMv2cBlG7hkAy/awEUNgBsETBxKF3IDkey\";\n  b +=\n    \"DhA0BhFkF4vUWQd+tPoj8g9g/SPyD1D/I/IOWPQDKchhZAYzVUDaFv/F69yidjZXwScCZqpcjO5\";\n  b +=\n    \"7VMyQZ5Jxt2BaB8rItZBaYbLQkmC1itwKbHaqIrkwYi4vc5AAwsJrmelFC5UDz0kXB0luAfa+Gk\";\n  b +=\n    \"p+6GNg6oWTdPBUqOfYozhAWnzSP6CDs3nCCkioe5uRaozfwkh9Zmxx6yQ+jszQ5GjOZQZGnGccm\";\n  b +=\n    \"LJE/YfkmVWRs3jAYcP+WBMrHqnJhsVo6udglbhzvfPPU/btW1BYej0tz1pHf3PyEEFuSBX3aino\";\n  b +=\n    \"wcMUG6HdYfD9RjLfFq8mB8LuSR+A8YFkapBByQPQFU9o4NPmK70vqE/rNE6qo+HK6TuaNazKbqO\";\n  b +=\n    \"I/YE52cctIDl3agaWlUxAFWPruPfHFHUjcOXIZL+4YFf/WO2+nV+bVadAvsZ0Xt42GsQTPbzd3R\";\n  b +=\n    \"4KnZ7Qg/1ofNtdaXvqLoHExzWkvJoeNi52/BTRfUuytgMwyePVWMJJJFXasafTVAXCukjo0T6JW\";\n  b +=\n    \"8FvADiaxro2m39gUNiLxU01dtFfXa03dc3PjjZm7UWPYDDagUXWT72YlaxttyXpeXTIby2aygWt\";\n  b +=\n    \"btEObcKP2VrEMKNTFjq11e2HHf/le0Bwbmxfq6+FNq8E6h+vUWTV26ht3IEzLbldpa+bwfP8ySM\";\n  b +=\n    \"D5fJ/J9fkGac3suMcfccDXAJGsVluyxlB1qPBF3AG4/a9f+WyoXwFhvJmDEtCVAFJA4iIDcXtEU\";\n  b +=\n    \"z4MFPHP/v5nwwaZihVdQq1jYQGqQeBXCVQ38cXHYrxUrqZYdv5uVg25M3UEMJbe4YOknDkd6hma\";\n  b +=\n    \"4ooFtYqLknKnYZBL8b8dCwEvl9CWT5oZN4iirPCS6Z6n43FSn/OxsvoQllGdTcDpY07++AvC6UP\";\n  b +=\n    \"o3dOxJfU5H9ekPhdiy+qD2MDR+lyIldfnguzPD7kZX4bW+egaq21MeJ/W53y8x/QLqFrYTtM0j9\";\n  b +=\n    \"fHxAmvD1vseH0+y+WaqyngEbGly3g19cuNXknBWm77ak46rPi5GIJ/cmbiOtdUbLxz0atfS7TTh\";\n  b +=\n    \"FHuJ1JpZk8pWiKq55C6JZDzfL8N2LW0NoRbSJh6EpBzkamnugr+KK5BjdHzeCMKJ5KjxjyZf6l9\";\n  b +=\n    \"JBGmKb+VCA/RzmCyW3XMv5ctD07Nq8M6kVfn+2saHxO32qpeON2g8nkl3R1djOszMQTJyPOyOzN\";\n  b +=\n    \"C1/1Fekcwnu8aDl79fsfcg9FUvfw9NWtPUJ2yrD3XszCxHjxg2QuVZGv/uCcv3WgcyRYMuHIkuT\";\n  b +=\n    \"/cIocN4JL3ilBWCT+fWOxAzAGUZCskd1NEW0qHBnXVhGQrBIQ0tERSIR6nUEm2GEsaHTLogGQrr\";\n  b +=\n    \"Em2LItaTbIVEhgaeiRbIYGkoUeyFWKwk2QrtCRbqJlHshUktaCjkGxhKueRbIUg2YrwPIYk2Yrw\";\n  b +=\n    \"PIYk2YIyVk2yxU4hyVYEXiLH+hRYTzjpGc4VgkbXPKBdcz1o9E0xkrhG5xSkHALJVliTbIV8hQV\";\n  b +=\n    \"KsqWNxDj+0/hgv21PJghX4n9N+/ZgH9c9m4+kcoCP1dW6mOyJz+RYbDzY57sZ8l6YMeVSJXBgxR\";\n  b +=\n    \"gOJCY/LQRlZnB+HM9YSFSCc1DjMyaia6TAAgwSeZpkVmFNZnX50foJSKoXHrXj+o3PevnRN2Cys\";\n  b +=\n    \"rRYrz5a02LF1amP22Q0Qf4848ivzMXO5l32J5r9A4RvKr9VaPmtQstvFSq/VShON2aAPJoJv+Vq\";\n  b +=\n    \"KIq4Idz2ZVr3rA08YwMXbOBpGzhvA0/ZwLINPGkDZ23gCRs4YwOP2cBpGzhlA0s28Fpsp7Q28Ko\";\n  b +=\n    \"NXLOBV2zgqg28bANXYp2aRcIIIqtfqV0tEaIJWVqBK9NDShYOwF3KlRJhsOTxGFCeubUIOSv16B\";\n  b +=\n    \"VbSqaYyvqCKWUHPQMu1XFYwUngYWwjRPSWrBY7JI5MmaWtLmVE5EpCNRkr/B+HN5hvw/+JUzIsz\";\n  b +=\n    \"/9v9G5J9QMvakZDcqlkgi+GryXnttFCmR118i0mB/0ckCnnCr3NlLtM0HV8w5ISzIgTkX6UOzMI\";\n  b +=\n    \"agkZQt0TsuRhjYhrlGVoizhqBQCT5lViSz7p1RevgaHIB0txoZcpPiqCMyDNUDZJsuMbI/Kjjux\";\n  b +=\n    \"xKfGMyJ2+gVTW0nFcx0iqqxHecOb3e9VGojW005pIZW0hzVkDqVTyR35j59Q8mhPrKMUrvXbNvh\";\n  b +=\n    \"4J7eFcwzwq98TXImviXIt8Qsh5tY2uRT4h5G8k4kt3LbKUkEJw+FoknLJCqE4T6dUIzIQqj6jEh\";\n  b +=\n    \"LyYEETiah9vOU8YRAbFlxPLW7Y7Wo3s1atVk/f3Y3tdwCjFlo2Vr6xxRTDgobll2LysMsFoI83r\";\n  b +=\n    \"LhyG7puoFuEZZ0tNCeshvpHlnX0sqzz7iRdCNRNvyHjYddR1pj3Fp3LhDdPIoPih1DXJRNesj6u\";\n  b +=\n    \"RrdrvZLVROO/bhK9Gnk14LRKHTfrDShHzu6PrkVqEKKhhEaL6L9nqr7UI59UgxHm0/0xtxSI8Y0\";\n  b +=\n    \"3EK5bXEO26mGrg5zIZKMyylNBYlGq+akyDCx534wXH3fiYZ/C9Qb4XbD7zXOC/U9/j0zRefsx+y\";\n  b +=\n    \"0rz79WGMfiyTXs8i6bNY0hFF1AQDmjOEAeLzdWMtt2A33fszoWExdPqADgWu3P8LPYAh8XuXJ9k\";\n  b +=\n    \"iQDAcg+Wb5zJKjw2LFYUvjor8NUJE2lSdhxfHG5YEeDqrA9HxbSljzwTzLNxRSCrs+OQ1R7y9Jl\";\n  b +=\n    \"n08o4WHVWoE1d5Okxz9SKwFQbebBF1UGeLvNsXhGAaiOPqNCYPB3m2bIi0NRGnmnhNzhmMiLP1h\";\n  b +=\n    \"UBpXp5zg2nBQfZQrac2fIVgaM2sm0T/CRYEE1eZGutCBC1kW27AlGRLWO2bEUgqI1sM4LXhBzbj\";\n  b +=\n    \"uPw7zlmTkHudEXQp17uGn2q0NNEoafDSQs+3aDY08RETlj06UYFnyKyb+GnmxR9isiexZ9OKfwU\";\n  b +=\n    \"kV0LQN2s+FNEdiwCNV0oZ88xKrUQVFAVljNgdrMY1BZiti8sWlQupY2SctsCN6sFhboVMdPgiLM\";\n  b +=\n    \"w1C2KQkXhiVDZQJ+BHAffS6+p/epq36ZPgjH1vycy6SEA6DCq34TIbNgUmaXL4D0zJCauChGr1+\";\n  b +=\n    \"R/NoLYo4jLpiJiHIrQbgYR42RsaSVU8eKsTN9NNNAlq9CLj6OT6wVF/h+2sKiAklolzYr0kIkwP\";\n  b +=\n    \"0eoaAfNWHMjId6birTvALv1iM64b5+M3l1xi/ZI9aGl/NBMP7WybAmlj8FCvGME11jU3UzXh+nB\";\n  b +=\n    \"fkYhwyHVAY8Mg+oDnAYldJj4Ql61JBxUx0Y4hDZUdRl6tZdVxDcpW0dEsra6hvhrqrQrGkLRPTN\";\n  b +=\n    \"IeQkpL7kU0sUyBcw+pgZHjPkj3YsmmsGEnswYOJ9x11F/XgiB97ICyBnZWu6tT0nsKYmUmoouMk\";\n  b +=\n    \"8g8EmklBNPnbguRzzHm7URx3BTouViFeobXAzdimu2/Gr+GH1xIUb9yIK5cFcknjMr8SxXjgDFE\";\n  b +=\n    \"se1NrdSaGjQgQh+SD3sjK0vvdyqpZczraI4t6xpvf15IZQa5ybC/PZjuNtuxY0PKS4UcyBVD1Un\";\n  b +=\n    \"OFJnZLPPDHAIHgTF/yIUWPSysdHbEW+i4SxlTtlu/v5O3r2s+3dXMu7fYeS/LVgN+w3akeQtkY7\";\n  b +=\n    \"E46Qj8RrSkdTSf3iEIGGDEETJPRzDfJMWJHGJ5OuwHrWWgyMQSxJ4MBcj9t2qH+VI+ZSog4RKsm\";\n  b +=\n    \"XTuCKiAqHEELkT8XuVGKGcaBB7LMXCynElHhdl50YM2TSwea3EGhpnaTZuRBRyJVYilHQNDweil\";\n  b +=\n    \"Dlfq5liL10mYJnjEyEPhlwF7CDBOFmIXCGQzGNEHquJVbIgQWDLMmEowUco3B7D9pr4tlyeu/By\";\n  b +=\n    \"15K6IloVq1AjvZypTIejFonr62eiD5JIF/n8HXmtVzLG3ZHU1B9Kz2KC9DezY86NP9enKVpjvi3\";\n  b +=\n    \"zWCbH29ocXf3p5wM1dBONktw1+0cKJhIz9frejLy8gpSHL9NwU6lC5pDa7Ch2Hn5Nw6myoxB6OD\";\n  b +=\n    \"YNN+thQc+m4RY97NG1abhVD0Vlcjith6JHOdyGw2QFzqHA8Xedkqd1+VEfIXUqUi8kdVtSP6fy9\";\n  b +=\n    \"KADd0vzAHfKTWXvnK1xh3JacJTowFGiA0eJDhwlOnCU6JTdR2pY0zfDqcFWVtWWq1wFO527UtcK\";\n  b +=\n    \"XAZj+ppJU54yEfvKl9jM10hg5mMqm71mjkwsr+JGKp70USrGhDanmjlysck23kjLk0Ka0+Sl7qx\";\n  b +=\n    \"R8mxIaNJnSAQ0u+esX9DGcyJc2bZalhs0Irf+SIVGtKzT0qRGZNazaUIjUuv+1NeIxPpI9c558p\";\n  b +=\n    \"hB93f187LkCDME60JQUOoRZlAhRfkSBAnFiPUoJTyajMgnynCoL0FsWU4CLFDlltYhUg4CRqxDF\";\n  b +=\n    \"GGLldN8Fo5L9rvgci43YiwXRquOW4/pw5W0PFZ+zcRRc16kXhNucu1kncuuadZNLz3GbZHZdnk5\";\n  b +=\n    \"1jBlrE8l4l/boygxV7xP0WsI2RoJSG2cCsXxRog2jY1rsHekjlFjvbYFjmvDkXQklnTjhimEWGW\";\n  b +=\n    \"KErREKoFy6FpcFeLQjrymVAG2w8SfItLLBh0LhgrteEwYgd5hxWPZHrL6oaHt64Crr9rXFIrp/l\";\n  b +=\n    \"IrjPFYXYgJhhQC4+IwJlcU5KMQHwX4KDgnOnSUqKN6HYXtqHlHOTwq5UFED38o4kfxvp34UxI1L\";\n  b +=\n    \"LJ2VLyjGB518iihR3W9+A3hUbI/Aqdjy/wnUrWVaNRWIk5biSptJXK0VaCvOr67KlGerURy1nIa\";\n  b +=\n    \"ishsJeqylcjKVqInW4mQbCUKspVIx1aiGVuJWGwlKrGVyMNWogtbURCWP/fLz/vl5wH5eVB+PiA\";\n  b +=\n    \"/x+TnIfk5IT9L2s5T+ntafx9TuNbpcHTg8c995PKvvvQvvr4Ze2ZxtWSivvTSH37ya//6sx/5Yi\";\n  b +=\n    \"Bx14PRgc/8zOc+/IuP/uCff1Xjrpm4X/q5H/6Rrzz6U0/9kcZdNXEfXrqw/NyHlr52hFEHvvH6x\";\n  b +=\n    \"wF/OPUfTZb7najeV0MloxYxsa8qtnSIYRtawaunQkEsmvouY4sgvi1K9kRPabC3J3pag1N7omc0\";\n  b +=\n    \"OLsnek6DO/dEL2hw157oRQ3evie6HKnI4u7oixIb798TX9Hg3Xviqxo8zFVSBt+zJ76u0EQSFxE\";\n  b +=\n    \"i9aerlBZtvOIa6lT6AiBBG9jUQIDFqZQORGDqRVBZ8HF2xd161ySkdcT+sReZrxcJ6ajG6VzMD6\";\n  b +=\n    \"udd9UciKbfvw1X7Qqql1tUZ0BHoTOuiM8u+WKSqlw4KCRwwl3K+skbbWSX/GXbAXWsE9I6Ib9RA\";\n  b +=\n    \"mWu1halIlRnQltlM4FeSGQBBMyVxoQAN0EibMWXjAn+b0KdnKy+tMptxuLt5KHV5E+G7gW+/G9X\";\n  b +=\n    \"AyaHXdsaTRw1dkO057yaJ3XNw0aTGgmmSeHNmqTEi3hh2zEeYozLHAb7MlwCCmWm0Yy4NB4BkvN\";\n  b +=\n    \"GxIXxiGX3BQqqYlQ80Ygr+qo+lqgCWeJ3CSX4pF9SaVxL4YIowOIz7U2lBFkq3RZ4+az8WCodt0\";\n  b +=\n    \"7SIpVogfDUzSJ+UbiDFlL7hDcqQ/qUwhkL/e3pby7+WWDFWJQo7kzK6550rOgX8wK7y3LaqK6Zy\";\n  b +=\n    \"YNdO3jVDMh2zLlSGXc/nQmr2lJWYxnXWx2AxbguaWi0ZoWASTeYyoeYKcpUPrEaoowR4VLLLaoz\";\n  b +=\n    \"x3mlpvQME5t0zZtdiz5jorNrJfzy1gM+Zbk1Yy8LNTFl5lpTk3q0pJGV44wU7B7LgSwINBYWMD+\";\n  b +=\n    \"+V5cCxHKJm8Sh94qJkTjBUK01GTQTO4dvxmDP+PHY0b+JXd1jrSGJWXNidtWw7vgTd41XGdLUX9\";\n  b +=\n    \"XAIEdkT6bzqbZUF3UcaecbHaX1veiVmX+HGv2iz1/qSGS92+Rwslf8BRsU1S71nstd0MWHtrw4N\";\n  b +=\n    \"CVgUR1dw2keOc5ZntWxiqG250OtUOhpeoYNPc9wrZ5n6NO3hngdYaGhJd6fF1TPM5SPSSSgEmwh\";\n  b +=\n    \"YAKcSDjHVDeXcA+T2p6EC0xfCwlPYaI6JeFpTEmnJTyLyeeshEtsH5QS3on9hZ0SnsMGxJyEd2G\";\n  b +=\n    \"HYpeE57GFMS/h27HHcbuE9w4LWGsM7xtugMnG8P7hRthtDL9zuAnGG8N3D6dgwTH8ruFmmHEMHx\";\n  b +=\n    \"5ugS3H8H3DrTDoGH4PtoLeI+H3Yb/nfabfvvG6MLGt4wdYlJNrvAozTgzMzbshHGEGtmJINuulp\";\n  b +=\n    \"acutJQ0ZEY+U8Y+q2CfnVDeEI1+xUR/fOnSHz2i1CEabSy8ChZequwhGv2qif69Cz/+tVQJRDTa\";\n  b +=\n    \"2IgVbMSWsn1o9Gsm+t9c+PSvMHrWRRsrs4KV+U95C130KRP9L37hySsse6eLBsTHmKn38b662Md\";\n  b +=\n    \"M7K//8u//rNxiFy1v1a+GTpVELUx5EcHi169vgA9lqLpvyxFxT2phMigWJoNiYTIoFiaDYmEyKB\";\n  b +=\n    \"Ymg2JhslyxMImnEguTQbEwGRQLk0GxMEVYxznvwsLEqmK9rBCV/rG2Vi1MUWAxD+JnMlHfXo5I4\";\n  b +=\n    \"0DeUC7B9I6ZuAfNBYC9eI9AMA7Lj0pR7pefvfIzb37q+QH5/L25AW6cPy/AbffnBBg03nwAI86f\";\n  b +=\n    \"D0TmTpQ9qL7x9QTCPnrel9EgFfK8k6MB+WWrKw8DaNsd5rRG+c4i7sb8rT0VJsp0aLOGUqLPDJi\";\n  b +=\n    \"CN1a4zWPLh65vN/hgY3OM8w7PnA+rwzLB9iIdX/hItWITOSo+HHFhJRmT2h07rrAnhpkNWQvgkN\";\n  b +=\n    \"2B+wr+v2eGG+iopwCkYQTlMjdIxZFW7cocG3Uwqbj14UXm60X2xiN1bmAhDmYImR7LubkCcuiJs\";\n  b +=\n    \"sdubrFjsK6gXdO2SCkuPyCa3dNGJ+h6CI5+FI6TDLqGd/hPMkr/UX2IJ7X9+RNTs9JeKdPvV8vF\";\n  b +=\n    \"BObTn2KnkTltbF5/bbH/5RR+pWmybxSUGRhAgGowPTxR0dtyUkZCv6IPphsXy3Rs+cU0nLGPEbw\";\n  b +=\n    \"8CSktNjudaqdS7TSqnUK106d26tROm9opUztdaqdK7TSpLQWtBF+xcVdt4GUbuGIDX7SBl2zgsg\";\n  b +=\n    \"1csoEXbeCiDbygAXiX8cViJ+EyPfFmsrxffCQa2suyECUueFysS63ulE3zyuAGEBcFmyngn9N5i\";\n  b +=\n    \"xajwyAcc1xFDD0k590snFwLzTXGUKSctaTVxqUC2Ye07q/MJy8BHV607Bu5bvCtJZemKDdkCrFL\";\n  b +=\n    \"q6U/0Lkk9kVnHKpMppTUxZCHGNu75iIzNjl/42RMLynJJVPLMq2ThQ5Q50+xDtyfTsPpk0IE0CH\";\n  b +=\n    \"UJ1Cdc2B1NvDjD3Vz4Hg2CRflFD/mUDQH4meL0GJujYXJEKCfrYN+ucU8S5vN8zNlnqNNg1650b\";\n  b +=\n    \"wqNgh8ekBtLJmumS8f2R2njwG4CGrH11oLi9Taq5b+Jl6gEh+oDaT+F/5EvfZaph3bP2hiNn/QT\";\n  b +=\n    \"C+rlvmLTaVsYVT2TYcOt+GLcHRhBN8Q01ddc4lbP2gK22QyxlUHf42dNDGcPLpgficXjo7M58O8\";\n  b +=\n    \"OnojiliSUDY1zchBSWmaMWma0B5MCDTQTC31dXgSohyF+K+YXGjW5ALYqBTzyJj2SCNtBN4mdZS\";\n  b +=\n    \"p2jZUbYJVi4+bqjDXxKiRZxJ5+lJ9k2eoBC/RMb9TUnRKyk5J2SmZeVOlplO2jcrpYY/ym2/cKX\";\n  b +=\n    \"nZHm43nWJ+XadMolN6A9Ong2nTK+aVO5g0PYP+g9aM3b4qt45gw86Srm/LCLbtNDXYN49g805xN\";\n  b +=\n    \"XhqBFsYezSbyu0j2Mg9EuBtHMF2pjhyuWEEmzohP18xgq0dlIK++Voapeo+GNl9GULNubspoJxd\";\n  b +=\n    \"QQ50zT/GUD7wIWNAzO+JA6EoNmZdsECrAUKlCyIqtrfeLiUM8KnICVUtR1bsG3bha9Gwdc70GTi\";\n  b +=\n    \"Xkrv69bxtbw0jfNZqbxQXCJJ8NiT/qoM1ykvUw1w+Fw5be+KzWGudVshlQGqjPQz1RlVvt2oeVT\";\n  b +=\n    \"/yY8/LIh6bVaJZkbC3fAfaQr5eYbqdF4wnumak3LhvC4QIU05eDfRsXMy0f47tx1UOcH2W0jrXf\";\n  b +=\n    \"tztG7sVcEwLIJIpZKbXAlHHMF8UCoIFouXMNbuXvbilUDZCXnErZ5G+4SP95GiH4EvEsyiWi4/P\";\n  b +=\n    \"bXGgPWRspj3xaVHmXQ3Fc4N36IK5C5kPyz0d7onPI+U5uv7HsB/R+fDkdUcvAv/dlDCH4e7dQ3i\";\n  b +=\n    \"1LFTp8eKHQ7qHR28Lzkak+NKtgEr4jsUtzpxmekf8KrqEzETi9EpIS3xH8CybcGDv6X3Br0pw7v\";\n  b +=\n    \"R/F/yyBPPT7wg+HVZf/4nnBciJ0s4/ZQ6eNjedQM4/S8P2SRni8pZOhOZYiaHzQSdGYkduNGy0V\";\n  b +=\n    \"8zpCb4PYDY1caRTJS5agDHMH1KowMHHkioHwierzJT9xAIhWkK99ZDgYwKSCvPbmBgjNHAErGR2\";\n  b +=\n    \"gQ+fZegTDzcuzh7si69WpllYkLAXi/93BuLeDlFppn9NZCSRkY2MERlLZGwjE0QmEpnYyBSRqUS\";\n  b +=\n    \"mNjJDZCaRWdW5q5+JwAKaNYyh1sSldeBA8Hh2zWuy7FaPPnH+UnC0ev0bX//gaIH84oRQIbHdTF\";\n  b +=\n    \"yslj704VMP8d2C4SCwYeHeS+4VfafqzH8wd/KUaKODcxjdeGSgfgcjuEKO9eVdJDxmXyaqIkENi\";\n  b +=\n    \"EFMvnVzEoSh8WQFh2DyH1rklUI9Gzd8EFDRDZA++i+8G5VC73cxc8JqAYDMVChP7+WLMb2rj11m\";\n  b +=\n    \"7Cy6kRNi5HCkDAOrSBE3M4EEDay6npAJR1bIiwt4UviuzeAG7v/lV1QDgzngIagRT6biCbOsb/h\";\n  b +=\n    \"vFimDWNB/i7QM1oImP4P4vQtziqIJvI1ta0HHjdl8pHbzQ1bRCfPISC1bTfQKOaNCFeMpKVC+pp\";\n  b +=\n    \"inQqcMJbqv4yCF1EMHJHXcetv0rqTVsLmNHVqog3J9eCoh1oRWTxqX70ZGNN4aoJQKVBJEvVXEk\";\n  b +=\n    \"G7xS1dCPXjGUQBy8ppjSihr/5n+xjM2nQ4qFBoXLojMS2/4pkRqLj+hrHXXrGeKfChUy7jtK6lg\";\n  b +=\n    \"nV5ZZFrib+QrkQx7HuwDx/1aimI4oUvWk7JMMyxq5YbhBh04G1V+2YIVsNC+SYfylDh3DR3wBEq\";\n  b +=\n    \"5PgyFAyPzcSt02l0VVxM8F8PNME+EVybCozPcgogXNcI8XcOtiLisEeYBNAZ4ZNllIjyjxgyPLL\";\n  b +=\n    \"9MhMd4uJ3erOrQEroxR9a/lo/5GAKI3G6Iu0yWXdVE2Vj2FasxVRYN9IXsgDzMwtvmN5AYIhJUr\";\n  b +=\n    \"tjhcahS7AAu1Cd2AjKBqKtZlIYoEGv97E2PPJSHLGPEtTtZG1sEPmiiU0443RTegW65wT5hMoPv\";\n  b +=\n    \"GZPYAXJwx1InAuMpxbi75N0f785498S7G9598O5AQOvc4Tj0EgCOaNM6dau6Zde2p2f+OYkYIdP\";\n  b +=\n    \"541QWEdfqhD/sqKuWo5Hdyx2miMcllQNL+ajGdaRj7/UQOqqfWNdqmzrSdvbudhws249Fv3g60i\";\n  b +=\n    \"JjHTpKJytjrY5cTRnrzEGElhyfkEhZW5+oppR1Xr9DXbxsgtl3pK2GwHEelt/11KwbEtLY6O2Oq\";\n  b +=\n    \"1k39K6x0dv35a2x0TtREyetq2ad+teQ9o5pWrf8a6CFoX+NM4lTxBZl61DlokMNkarpm6hsHdac\";\n  b +=\n    \"Tx2nXI0b2F2jbN1z9x83rO/Ux69R9brVULY2ZknrpDjC47N2pIwErB9BWwYLpgNB6U7e24+2U9Y\";\n  b +=\n    \"Gm9PUvhm2jhgbvaXZsWiQONUDyltQJ5bxuC2HFGkeQRoFpJ7D6Ag+fqX5ifgNGxpbeIHegye/s4\";\n  b +=\n    \"81pdh8CKvpBawEm6oh1C5BuQh2H9hgCaUXsGBsjvnubx+zuN78+KIs9DKnuf49IngmpVMkacS0+\";\n  b +=\n    \"vTQLQ43zuEcGz0AK1hFd+EVfoTCtmhdJillqKK6qZWVxRTVTRySQ6r/EWH+AQaiYWsEiRh+oG3j\";\n  b +=\n    \"W1V4N8Rcbtz4VNdx0HjlojStlXanpgcW7QI3eojYAul8kQ40pWMZOOSJobccPpZbRT0ikRMSdZq\";\n  b +=\n    \"71X2A7gQxPBPYTFWp0WZGh7SjW+gfKtOAIBMcVKYdXXQXxkRYj5W6nJOsha1A0P1SKtic1YTu49\";\n  b +=\n    \"z4SBURESsiIlZERKyIiFgREWGNiOCalTKR0tkngwXExX9R+QAegt+g9+HPe/DnPvw5jD/vwp+78\";\n  b +=\n    \"eed+ENH1334sxd/bifpKqlY6W4r3rkRt/S43adOslOOSoT0reR35SVvhNQbxoRnsJMWdOFHdpAz\";\n  b +=\n    \"81w/OKquZfLEqcmo4rnOSoyx4qr6zF5kvl5kb3HsdIwx20V4c2zEuMjM++ZBfmAcewMaoW5O5JP\";\n  b +=\n    \"OJdSTvWy0WHXRTQfIPjb6Q1WwTffIHjZ6S3aw0Xmyf42+lN1rdK3sXaOnZecaHS/71rgPsmsdcb\";\n  b +=\n    \"dxn4T2y441bprsV+Meym41bqnsVeMOy041brjsU+P+yy41hgPhhxSvAqIdLtcB+x0bdZTJKvnM8\";\n  b +=\n    \"pufF2/nupMosBVP6CpKMapTubBRlYRiV4F543Th3QQPcdobL6ZRLOzzS6EASZV9PlvDPp957PMd\";\n  b +=\n    \"j30+a7LPZ459PpkZtsA+34ZzVoN9Pj8sDO5r2ec7wj6fkH0+ORCa1317Dft8C+zzLY99Pp0ZtMg\";\n  b +=\n    \"+bwK5ss+nM2WCN2Xbss+b1+HbQ2xS5HviD5QxuOcfMEctQiThvv5Pa+J50HIDpsUdUUs8n4kAUU\";\n  b +=\n    \"04nx2ewbsFRPRw+TrVTKhCsFjEIC6uSV9uTj0fV3Sdj5V5fifwWG8PS2wmY7jE8DA7zC2UcmRGT\";\n  b +=\n    \"UWFS3fSx97sSQQklo6ctJocFQoJLg9yteRS0EhMBLv6Eo+d7z5hmuWe+HBX0J2HFXH8D8P38JNd\";\n  b +=\n    \"kgp+TS14NtHJWqxUFqzoaMRp24gb1b5rzRQ6t4cCoDWj+TfWrHg8FqqMGfEMssZHxAOCbcFEINg\";\n  b +=\n    \"R1ASCXcFVINgT5AWCfUciA79roDeE/5r4DtnoIQJESLADe+GN2IqU4CZsRoZKgx3YC2Nj8zVLgx\";\n  b +=\n    \"3YC2/FpqSlwQ7shbdhW9LSYAf2wjMipI7gLD6v90PaCD+3qp1saTmStcsjzrlOCVWbHgHBmmWIq\";\n  b +=\n    \"AxvsD6SiaHYLGReyHfmm04JGRdZxtc3gvGCyX0tQMlI9uNjQdwKpJE72kqCUcZeZOzwkZF8kQIv\";\n  b +=\n    \"0eIjI/kurZMEfKTu1TcWLCyEUabTnRI6sn1j3E6aifOG8hb/M0rEY8hP6UYzFZ0yM8wtZj45bWa\";\n  b +=\n    \"P28uZcra8df3cRxeVcrz7A5Y+SgYyuyBZ+8nVBqYNrK82bW3kmk+uwkAtJOFspHsWEVYDbfB0HV\";\n  b +=\n    \"yqg9dDF7xWB6+OI9sjrPSNIdsjrPWNIdu5eTGGbOemRRPZ3kCyxKskJDNT4//BW50Ii3+MWUgyc\";\n  b +=\n    \"ilUOdfwUtvPtdytU1b73hmT3hkbG2dMeWds8c6Y9s6YqcPLt3j5d3j5B17+nV7+/8bLP0fbVq5d\";\n  b +=\n    \"lTrVwXw71jxUEkjEXrry14Ff0aWvBF6pX/UOVv+Td3Dl697B0t/45yyF3jkf9g6unPIOlr7XO1j\";\n  b +=\n    \"+mH/Ox/1zvs8/54x/zif9c57wz/lBd2DXDD+PnRvzWJQilIP++Flqm8c0VcVf5jdD2Y77/z1NzA\";\n  b +=\n    \"PLzqnMvDM+biyj10OdvvGRaFEiIF3gpBkW56IgniCkkB8iNoIbICbPDPK0gLnAm56Jg1Z1kknUm\";\n  b +=\n    \"iQTnUjMzIIeIwF2tMXfKZBvQEEQRBiQfhm2+ZsPO/xNht0VoUnqrRw4eUIcGh/m5mrhjj588Xu8\";\n  b +=\n    \"o7/5xY/9yXZ39PUvXP/5He7o+hfO/tmsO3r2o4/+q1vc0crPfe7K9AkKgJnX92LZWSzbi2W6WOa\";\n  b +=\n    \"LZWuxzEAzv6BDKSlmrQsHRtUyrVJ9bXJMJTKmEhlTiYypRMZUImOKP+sUU2Iwv5CGkxjM85an7J\";\n  b +=\n    \"tHmR3ZTROPO0zdFCNLzuWRflk+Llmh9fi9PC4vt4/Bz/0Ye9d6jF01T1byhsRW+pm6GaUXia2TN\";\n  b +=\n    \"0+RRajotXAYkD0bmYKjJK9nwqtIIJbXJb2qSdeRRDyvS7quSa8hiZhel/SaJi1FJom4Xpe0pHjV\";\n  b +=\n    \"U0gittclndKk00givtclndakx5BEjK9LekyTziCJOF+XdEaTnkASsb4u6QlNOosk4H1dyllNeRI\";\n  b +=\n    \"pxPy6pCcj0siZUXw5Fc+NS6mgXhNLKjBUq0r2IJrkDbJun7tI89F6b8PLo+1RP3CTxWL3y3YT2J\";\n  b +=\n    \"/WnhzWS6FXe0i0mgwK6mYhC8IK9nN+Hwryf6/vNWJ9GSj/sI4LSNx0AbniiCDmvSrGNucV68khe\";\n  b +=\n    \"yuPx1aRSH06lpruHxS2lxQsHqel17BgnYZhjfvx2vfENmbJejSkZezzVaB5jyO22zgrVFcNr0lj\";\n  b +=\n    \"Lint2h0lURT0jerVknoFdaYrjbo5b4vE1q3hN5GUXcdc4Zg76lGUCR2E+Hb4pcvFQKLyeGw3mWz\";\n  b +=\n    \"FWpLNHubj3iKXUjpVYFkkxrLIFUVzJx48igfFpMYV7Vi10HiXUuJsyuzEkEIeP/58AIDNiWEOAz\";\n  b +=\n    \"YrW/etmItm962cIEV+7mjPqjkszNLGe+iuxJWI0rhp8RNS0LB1H8mdH6Iscdl6D3AIBwKHeVhTE\";\n  b +=\n    \"e/UnLV6WCqSm4q0WJED4XetjFUGH6m9I2nnq1gvTm6L9wqlc1BFdwT3i6vgJeKJ9x/BadoxS3S+\";\n  b +=\n    \"nFdWVNsiwqg0ccQrDWKlggEsORixknJaozHXgmZrbBlvrTl6mlxpXqioE6Kd2IZiqFditmKIWwE\";\n  b +=\n    \"8cjhybTTxVHCXm1OFerq9P7ai9gZtH79DFWZYR2dcN10L6tEUaMWEiCQwvUuUPC3eT6VRBOq48L\";\n  b +=\n    \"a4BMKlmqOjwlz0wBDMn6GQ5909qu68V3ZFqrD4BDbRabeG1a5Rpcvt8y50uwvtdaF9LrT/iA29E\";\n  b +=\n    \"LjIi3XwxTp4qQ5eroMv1cEv1sErdfBlDWKh5c/Q6wfS0/u4GP+nPOrr0cs82qxH/xePbtGjP+HR\";\n  b +=\n    \"P9CjP+bR2/SIKwMHvl2P/hxH56r4mDAGawcFsnkRAS8beXjZyOFlI+Jld1OBA3R7byZvInnzN5M\";\n  b +=\n    \"3l7y9N5O3J3mLN5O3kLxTbybvlOSdfjN5pyXvrLEFpjEZqfMGLm+geWe7j6ehGbWewvbDw0Q4CR\";\n  b +=\n    \"1XjblHlrskESpCx2rTTMolSfhvmkk9SRKmnGZSIUnCqdNMmpIkYd9pJk1LklD2NJNmJamkTnkzq\";\n  b +=\n    \"ZSknRQ0bybtlKQ5Kp83k+YkaRcl0ptJoOELTK+BFc5TqrbqZtqVZF4IF1aQVbrzxAnbl6Rm0LTc\";\n  b +=\n    \"S8slrWfTel5aT9IKm1Z4aYWkTdm0KS9tStKmbdq0lzYtabM2bdZLm5W00qaVXlopaTtt2k4vbae\";\n  b +=\n    \"kzdm0OS9tTrY8pD/PjYTPIlwYmfl792O6fLAcHhlm2OoQV8kUjjdVwA3pCJucvSo8Dt8kkOANc2\";\n  b +=\n    \"BAU8BC2/pVCoW31NiQcdlmqAska67bkXcpFVqn7B4huLdsHekO44P4KnDmHVfBdw5J455hBR7re\";\n  b +=\n    \"iruCUS7bF1buHoq25Lqx2mSBc4dV8kx2Y/EC+0YyfJkX1KQz/z4kYAdqyTJQZnTgsKOLl68KsiB\";\n  b +=\n    \"LJhe9QRZk1Brcmcf64515ratU/i2wPTQwsE+tqQ0/ZG6MMA/pDhj9odHjZlvofdYi5Bz+9zhhm8\";\n  b +=\n    \"lOxDdF8o+N7zHAPsnKSvmcS05rN06+OVIJR67OUx328rSkaneRpIWcUrYI68f5umxwHJZbfJHah\";\n  b +=\n    \"+EXh/EwjOInlbev0aJnBbZEhvFR0PTc/fITSO3Ox0+JLFi3y9zp+JzaZjqShZhPrhVPazY/NTzQ\";\n  b +=\n    \"svMbc27EoUWc977tuD+vqxNs5dNT8rIhF2EAUovQ9FzNO28kys/UOgtfk81HpOuvBaSqvcgjHdS\";\n  b +=\n    \"RFJ4Vu3b1AmWFXTP2B0VXcX2mcpIq2hIKMw/qBnRxGsZuiIxk+JqletpcfXsU9jNmeZq3fSoeJY\";\n  b +=\n    \"bX+h2M8CUtjtEFHbFqUReBXdRbaqRWZ4q3USL+S1M9otYJT7qvQeJEODCfUtXCWRXHgSELUqQjG\";\n  b +=\n    \"SlgHS7QfEXsKZ6xNVWx5SUtEwP9iMtXUNri89kjHvFZ6LzJMWnNywecsCnfwqw9Gr5J60csEZcs\";\n  b +=\n    \"BFlAFGkNY03lbtpu1OBoXgVS8WrTldI3qDdgfWED6xiVGAVozCGik9n3HyjBofWeNXW+F86V5Jr\";\n  b +=\n    \"WcOVZIyC4FLiZgaSA/4ew8RSKYA85PHYnsstKc4Rc/XQv5Q0ZqKXlO2A5ei5pPlL3aT+qu5gWsE\";\n  b +=\n    \"TpYu4ROqEq0E9maTIRHXWTuQzvzZrL1tKveSkS5aUMJGZ6kUsldXZL4b1NcdKESrEi6FXCrdVbE\";\n  b +=\n    \"nno0btz0daa552Om5c5jTnvbjYe13W03a14SXZMYCoyjCtG8V8rgvO+wsVrvGnm7P/00rjufYqs\";\n  b +=\n    \"V2puBprycXPh6IwdjW2CmNy1WvAvdVlXkjdJbCokLkjDlA5Ra8ojQ9dSwN381XVBipKLVVRupap\";\n  b +=\n    \"Tx730UB/LzIspcqwrCu9Qm2U0kqvzHrSK9M3kl6Bk07EeZmvL1ICYqAYTDO189RF5lVc5Frgi4u\";\n  b +=\n    \"I8soHrPCKyKycCcdlVk57MSItshSOC6/sF+GV948Lr9zfEF4R8RC8ZSke4oRX3m+FV654wisPWO\";\n  b +=\n    \"GV+33hlQdUeOWBdYVXznPoXG3Krty/J16ObePNTBNgVjOAPhNJQDuLekR00LR6RPK93R09EUuQ3\";\n  b +=\n    \"PNnhDNj2afEgB7R2Vi91c/EVjUF7PPRvVRCEj0ikgc3tVKsqqKeSE2R/UdEY2Rejy2zPCtxbHe0\";\n  b +=\n    \"HNeKKMtWSejyxxo6Kh9bK3bywkdrTaKgetnm+IMk6p/sPkKTFZ9xY9gONpCPfLCR7OWDTeQ6H0y\";\n  b +=\n    \"RFn2wmQzqgy0kWx9sJS/7YJoU7oNtZHsHTICM8ApRXHl4OHOu4tGuIb+Dc0NVGSLtfDlsy8DvyL\";\n  b +=\n    \"SwKzPJnkw++zJfnZA7MCkdWzT0ts2nu4wWhqB6XOCeP9B25IEsAZguVsoZN83Zfg6rySHZ4yx35\";\n  b +=\n    \"LZycqXc7rJss1lyyYLJy3Q5sVJuc1mmbZaeZMEcZmvZXymnXZatNkshWTCV2VL2VsqtLssWm2VK\";\n  b +=\n    \"smBGs7nsrpRbXJbNNsu0ZMHEZqrsrJSbXZYpm2VWsszSObO9Uk65LJtsllKyYJqzscxXyk0uy0a\";\n  b +=\n    \"bZadkwWxnQ9laKTfWitc2y5xkmaPdkZVWCXt0RNN3Sfqu7p8mUedk5CQI3P7LCl2ImtrZE97sEi\";\n  b +=\n    \"rXnLErZeyEN7vUtNxLc7NLTet5aW52qWmFl+Zml5o25dJIrOommJo87SW3dtdzTE2e9ZKVi57TT\";\n  b +=\n    \"E0uveT27nqmqck7veTO7nqyqclzXnJ3t/Ak7gJSyEziB5N2qhZWO44J9C48TmL9QFLyYR8pIaJl\";\n  b +=\n    \"yJOJh9n7EkkFcRx35HgnhRN2QE2AxyW1CHZA2YDHsxRE2AEJAx5PU/lgB7QKeExRhbIHCW+v6gl\";\n  b +=\n    \"ydCXHHLlvMXR2QFaBcbsIQpRGFEONLLhWWdff3FJ+ph2p/yu6G3Ql0E1Ny4HSPWY+Z5h0NJlNkj\";\n  b +=\n    \"Fmk2SM2SQZYzZJmswmSZPZJCIQoArL7rFhCmQvSNrnBTucVNcegdHbHmbk2YBJeRhTwMM1mYnQh\";\n  b +=\n    \"Qxt1ojnEjs8zOSzZj6SeUUfmlhBM4e5Lwn/sZjM7BX2Q8EqMiEcg44uMFTcqqwQqnaD4lZldU9V\";\n  b +=\n    \"GhS3KitzcjtDxa0yVKreguJWGZpTnQbFrTJE3CpDxK0yRNxqoCw5+yRE3CpDxK0yRNwqQ8StMkT\";\n  b +=\n    \"cKkPErTJE3CpD7xNuJXCr5LLpNzDjddAvu+zuDB2VkjOOW86destZYGNp2fHJciWy47nahcp/Us\";\n  b +=\n    \"e1gbkfyk6kFx2oPwu2iFpefKSVS6Ry9L9PoP9obrVSkUyI9dI2sbA/exWdiWLnfmts8w8TZm5KM\";\n  b +=\n    \"Nbl/52ohIVSbgF9nmC5SIDx5hC+wjCMkjLFekmXB3hBSKakryMjqLDSSpGMIKrZFyfiKAhjeqZz\";\n  b +=\n    \"MWSB5IzCtDgUrSxYv0HxDsFzFrgIn9EC31y19iR7IsR+kQrPYZWmxmNDiRokEqn47dnIfL3I3uI\";\n  b +=\n    \"wahDjKOGiY728aW1vFXQKahv8XdX2osqGsvPLBWhb0ESSGhdCRxIKiaOqkZhXma1wqRWm5hhypw\";\n  b +=\n    \"LPY30Lujo5XLtUt0XuHj8yXy/SVjcbw+hZNsu4+891EbMQtYaTsjyUDCNxmZ4VIkmhFGkBlqxEb\";\n  b +=\n    \"i01em0erGPA37gfbu9WpNMUMcKDwHrLJgZoEx7EI5NiwaAd19oo0T8MA2CWoygk7CeSb97zAdfW\";\n  b +=\n    \"QHESxHgRt6pXv/x8UK2aXsOlIDlR7cf8bzVQR5cyPNiPhVLiO7iFxTNG1vuZDiSIwfKc9aI2841\";\n  b +=\n    \"e2rVFs/LPXFMn6JbzcsjrE0JBSZta42FvV+oqg2U2eHZH6zQsCCM5YRhUV6HVUSUVSI3O/HZwaG\";\n  b +=\n    \"YQQ4QE/vZB1TnUjyrwPgOFy6SoW0UDNe4d60gGJ6cYyjbMYYZhWr1sGlB8NKUOOXdtwSaA2RTd3\";\n  b +=\n    \"+Fyzl3Wk4K5CavOPzGV6Tx4pJpfNA1AGVik5eornVsA0Hn9dbyEkLVTdT4gOekuQyvCnWxOejn4\";\n  b +=\n    \"JwMumJpr32myoJCDHGQtrU/dgYEgxjFF75lvvbixoNoF3oM/7n31M6z/8JWvr8FYGLfKeAZ+4fd\";\n  b +=\n    \"btM7LOjNMeGTniTmPXtGjnt0a5ZEYH6/qkUhFXdejaR69pkezPFpSOoySR6f0aCePTuvRHI8e06\";\n  b +=\n    \"NddO0L7sJdgwD7wHTwgMyUPf45NGM6NXq3kvPSGzle28iGkrsykHmltgYxvbTMK6Ojz3QZw37A/\";\n  b +=\n    \"QFbHF1eBrkZCT0SRggvGz3E8BbqI4YVOEwCNUzmHU+Y4KvxPWxZ+i5H9jQ/akS1REoZexguLucH\";\n  b +=\n    \"et6nB8v5JcafrI6NTpZdUiJhkbkLVzYc9ih/YWynLpnNoM+cs7n6de2Ja88g78pFYlv1YLyePtu\";\n  b +=\n    \"eq1Owbp38jB3pOrzkOsqUQA8ijNFT6td1Jjwy7OwEoUNOHzvczgpeARF5pXLsWaDeWRXfQwt6kI\";\n  b +=\n    \"mi4iOAE50cVbA34ntmzN8udodoHFbbwHxhLI4yO1ZFx3mfsFvUIqFuW9zHKn3J00esPsj9g55/U\";\n  b +=\n    \"PgHU/7BtH8waw/agFW0TcVykhLZ9fq/1zhYYwPkHxjCm2pgbEEBYdJ9LRDZrHZykjInLqFsU2Hm\";\n  b +=\n    \"9oofUT6Uxrwqc32lBcVTkThnZWUuPQwhqbYZOCgNQyU3N6WLIrzTO3g7wN0qiXJMw+27cYVeMph\";\n  b +=\n    \"+k+SI0++uTL8jWRjR6XdXJm5dmX5HsiKi0+86LZe0nk3reWk9SStsWuGlFZI2ZdOmXBq1UaYked\";\n  b +=\n    \"omT3vJqbx8I1n00Ol3nZzJ2ziSBQ+dftfJqh0n8qJ2+l0n5/K+jmShQ6ffdTLV6eCrh9XCb+csf\";\n  b +=\n    \"L3ptzf57txw8t2pJ9/+5Hrn2OS6HJtcz9ppclpPvlNvGs2uY917XsUjbzqPT1DXTr6jevKduMl3\";\n  b +=\n    \"VE++I3/y3f3DJGpBYwhYBbgt4WcjQQ2yHjE92ET0A5yX8EMsRAH/JfxsJp4CLkz42ULgBbyY8LO\";\n  b +=\n    \"VCI3BBg6+wbQP5Dgx3GblaURrcvu5oZIgbICLixUTqvMk3oreNEdMQp3EreUGK0BUZ84bC3cYP9\";\n  b +=\n    \"TdKbeUhRUtqjP3Gkt4GE2UqCk3l5NW6KjOXDQW8zC2ChKsubWmvpd5qrGsh5E2RWa2TWXfCirVm\";\n  b +=\n    \"acbC3xYNJom5drGUmWXugI5906Z9Rf8PIRH95wKQkblRqfbY2aikPMpO3bd0UxYzzkhH1FxnDjn\";\n  b +=\n    \"hHxE63HynBPyEUXI4pwT8hHdyA3nnJCPqEtuO+eEfILuM25br3TE0mYuUvx5YvUR+XjJhkUuOsE\";\n  b +=\n    \"2HmCpeUSRIg40Z/NW8bev4DTsQj79Bd2bEIVjGsZwkTTm5gVVzqO/KeaJxWvmOyxl0TMcJjzVFG\";\n  b +=\n    \"UTaFZUf4V0ZcrM3m7jLAgSwvYDeOpT9dWgxUtPbLx+9Szumg74Hk7A8YRdlEREg+FPHKOnaf7G5\";\n  b +=\n    \"ADABFU9ksUdHESCs5J/2s3hMZUIuRdQ7RJipEFg/QhMX1TPfIEC6Y/9lgqkV+d/00TMVa+9aBXT\";\n  b +=\n    \"g0pAfgNZEOI2uGxAJOLUrL1/RzBb/dEXdDPCtPqxSyb8yot2LwJxxY+nMGrfUh/LHPi30mGgLMA\";\n  b +=\n    \"0EljaJzPZJQgU6mBMIenpkHgOZPkZ3iEtwG5ic4UE/XnTcu4i3sGWU6ykuplz0CTGxw4u6lILRA\";\n  b +=\n    \"1Dcar4T0mUyag100xqa4z/03FLf9ucN6YcFX+cmj5Pis+2gNNJsGiJPTx8ZMUPRVgyStmzVuK72\";\n  b +=\n    \"MpTu2MqN8+NHDFeLlDXYVr8pcxIMSLfFvQGLXWCxbrqSGb5Zq6bysoJkBgVfEU+RK2IkkrbAQzV\";\n  b +=\n    \"kxybaZl0yQMcLhSfjIU+cLwJ6X+pJkyPNWFamjB7gyYkol/NVuw/YtpwNanbULg2TDXb0F23LBL\";\n  b +=\n    \"m76ZYeURX/dvEe1cbhu9qvicupfV/lcrvlwVEhOvP1s4gWmyMYqWPbVKoSSGTFPADOzmSl8L+I8\";\n  b +=\n    \"Q8oGfPm9ES1MHqsYt8Up/6nD6pX0vCjvrzCHPPTgfGiu8IjAEjDuvJnjjHBAdNisXk5k9hVyBop\";\n  b +=\n    \"8iLc0oERklogVeH8BvwDRIfqx6CVxe5tRVEo8AgwYeUst5D6M9OXepJlPieuKBA8m8w7+SYe+kD\";\n  b +=\n    \"fQ2HtWOhjK56ZcjkS48Nu9X9oyo9Lka1VMy7ftC4fuBfn3c6KTtww5mVl9YcsAPmTHNzD5QfQ9+\";\n  b +=\n    \"kZtDJGhYbm+tcKnAO9OwVWaSJCKmKj4HKpYeb/tcBSEJNkHyOGRZpqMbNTST2esFVC76IXYm9Zo\";\n  b +=\n    \"mBlpjVJWZaYoAS210pahaTZ9zAnDAsc5b58NT9a85G50a2V8Xzayhb5Pz2yGLVIaEsiZXAAwamK\";\n  b +=\n    \"QnLWjPEtekeqetGLiRLu+iDUwbdi0nNWqK0UVTnKb4/VDEhZTERtq16U55rk2MiRrI2uTbSrk2u\";\n  b +=\n    \"S9nRVXhBKvxRdN1O/OvSDV/0bTIpzJKm5OKn1bLLnkfLZJEgnMR6e1tfLonOF4fq6iarrEeVYiW\";\n  b +=\n    \"pvbvME2LeNFb46pPK2GTq1i3+GVZ2QJcUKXfLWRt4wgbO2MBjNnDaBk7ZwJINqLddbL3tYuttF1\";\n  b +=\n    \"tvu9gyIcaWCTG2TIixZUKMLRNibJkQY8uEGFsmxNgyIcaWCTG2TIgxmBBvqE9RO99tOw7iXvKI4\";\n  b +=\n    \"Hk9VpULi3YtUQhBPpcIMBEjSfy58CmSYVTjX91QSsaGUtrUaJK7tTbSDqVx0abGUIqFq55DKfWv\";\n  b +=\n    \"+1aGUuqGUqp50psMpdRWxg6l1AylRAmvPhlKEB8wHUqJHUqJHUqJHUqJHUqJHUqJHUqJHUqJHUq\";\n  b +=\n    \"JHUqJHUqJHUqJHUqJHUqJHUqJHUqJHUqJHUqJHUqJHUqJHUqJHUqJHUqJHUrJf/ZQSnQo/UISJb\";\n  b +=\n    \"UTlbyWxImKrAOE7BBduMH87K39YXBQbOASJyij1zpVweK/sVMV7C7MP9SpKlKg10NCArtXz+XIO\";\n  b +=\n    \"fu071QVwWUnGneqitariHfqG3sh+ZXpiliftG8fLOHb4gfUqYoMCtZpeyRKf647lkO/c8QhaV4g\";\n  b +=\n    \"cpLIk4oenxCGUG9tN12vwjGxbj7wF6IRm+GXPEgazYaPU6Pd5ol9a41mnS5Ezu0qEKt4uRavDsD\";\n  b +=\n    \"EwwqJy9MvJU0nf26JfELc/PuhcxvGLpJjEqvcJNKGei5UuNCUC0270KwLlXZNtWrjQyIbhLJVs4\";\n  b +=\n    \"4ffUY/+pZsLeIZyNSPvgU/evrXA5GTHwJxWKp+9Bn96IldJy8nEgcp/eizmQHs4YYffXoDP/rs/\";\n  b +=\n    \"5t+9Jn1o0+bfvSbfQf4//n/vRt95JXiF/n50PnU/0ES7rSr/CE5W5SHJ6l5eNKahyereXhaNQ9P\";\n  b +=\n    \"XvPwtGsenk7Nw9OteXh6NQ9Pv+bhmRACnsnSkpi6rY6mTE08JlsTjsnWgP3iVKhoTKHIqUWIakb\";\n  b +=\n    \"PG8WHlMoJZfNkXra0vZyooiBFBpFgP4EVIbQTK39z0d7BRvw8OKB0+b7BFEGqg81EjQy2EAQ52E\";\n  b +=\n    \"rkyGAaPw8NthE9MuAO8onBDBEkQku0FA5uIYxkcCu93sPBDmJJBpwonA4HAwJKBkN6t4eDbyGqZ\";\n  b +=\n    \"LBTQCU7wehTRuazvaHcaP5uKqfM383lFvN3azlt/m4rt5u/M+Ws+XtLeav5u6Mszd9BOTR/v6Xc\";\n  b +=\n    \"eXRxGKgU4dEFLvVna8l8/I9dnXsRnDyPJ9EGuGIqhG52ICDJgYAkB1ybKAZcy8AMH1voA6Iqk0F\";\n  b +=\n    \"bMHdWdjQ8Zh5RXT3dfA4yaQGXnUOs7e44vjicWJF1083+guWkLNPlyNZmtvaKrJg2shWyvNdCtp\";\n  b +=\n    \"zZ8hVZK21k2yDLghmytZittSKrpI1sG2U5MUW2jNmylfH1UZNtkyxDdpEtZbZ0RVZGG9mmZPmyg\";\n  b +=\n    \"2xdZgsBbTtehiuyKOrlrhdFdUXUdMe5hUWsrsqaaIqbOGViunZRNEPMpgXi7WRVtIWYjSYms8ui\";\n  b +=\n    \"OWI2mJiWXRdtI6YwMRaUVU4gZtLEtO3KaA8xfRMjehM14O0PEofG0I+V8JrCHScUfYOevmqgn+l\";\n  b +=\n    \"gFmnNm61qfbnSbOtKYqL+GnJFY2WVeBlhMHWEBjBfMN/1DvjxsBajL8fifDiI6LhEdzxupBLtYb\";\n  b +=\n    \"EeZt7YkiXFsprnm27evYTxI9Rr/FaVUJbG1PmeGVgEXRCA0j2n9yCmAZbTrokFgamN6wntKRsna\";\n  b +=\n    \"wjRyGQzn9UaS5EKlkIgKilwFMF2AilSAim63HnvwSJT/vsY/ioxVxHRx+ZJu0elpU3QjBN4m7NG\";\n  b +=\n    \"oAHlCl8QBpEgd0LVAMaGbkQ8BELUIA1xCQucCRU4Q9MJd/kg3Yf4HBdmNg+AhCoemL6WrxBCBHZ\";\n  b +=\n    \"EcCPEJ8mYXNttyWMns9gyPgRuQPPMm/uAB2I3ifDMzSE9TCEywT+fRKnYz5cC61hT8DuAZQSi4r\";\n  b +=\n    \"Hk9esp16m4/qUaHyTPCkZ2zV3G7F5hjZ62DgOU6ij2xPNl65wwbL7zULL/gOxaSx/t5hY5vBiK3\";\n  b +=\n    \"20RxsZAKLx/MANbJwAsoi3eRqEtWoNtWOQnZHFovy1bGV6xMlKmxUUm9mRJKx/Q7eQHV80n1vxh\";\n  b +=\n    \"ouAAZOGLyyTFs7As99Wr9HsHXJK8XcqYh/YGZ4nZnVi5uHORIBroUoSWCQEaFaz3fXJXaefbXk2\";\n  b +=\n    \"9CryFPo1v0qfv7gdv0KeUvJI+NfdV+pTVbbNrH5Y+bXN+07IW9rr9eokwh79vY+bZHzK37KUf+r\";\n  b +=\n    \"sbM3UF/qsdM09jG3lszOQjHSrDluv2WLodK0I6njLX69wzWa/XE+n1VHo9ll7PhRakzO+EHXbnI\";\n  b +=\n    \"lY/XUe3RUwG+kLDzn190KN33iNvTvZ59gZ93r5xn6fr93n7nEAvtM/b7PPY7/MYXU2nbDugpWpl\";\n  b +=\n    \"+wT0mDmO6XRm6mn6vIueP2E+1uzvuNHfUn9y9b6Fmoc3qbk8gTequWjQs+Y6WjryIHbZgIel5l1\";\n  b +=\n    \"T8w5rztGybu3/fr5hln7EDLblH/m7e8PUFfiv9g1zWt0wr2TCMY1nPypugw1tl5pgIpJkXfd37C\";\n  b +=\n    \"6N3Z0hJJVL3TXJetokWY9Asq7LTsp6II6E/YgTr+hvc9UowqpRZFeNuJDn+FTjmk81rvlU45pPN\";\n  b +=\n    \"a75VOOaTzVey6car8OnGq/Dpxqvw6car+VTjcf5VEX4IS5+IXabJ9dDlbPAAqmKOIuYLmnJMGmw\";\n  b +=\n    \"6rpyMl3J/0d0fmyMboAV9EZYvLxA5cMGFW1g5TqpxuVF5utFUppzHSbbes1O3nrfCuOfK3hXMrG\";\n  b +=\n    \"pX/PxAbIkPTdS93lCW+jrJbCWWDAsg0RcvIjivSP4VogHzItX8M6+eN3Cw3m/7J6niMgtJoQ87M\";\n  b +=\n    \"FdJulbR8VfRqC/mDKTWimyGCgN9/So+Az3o6dl3aDgNndMp59C1hPghRoK20QOfBh3NOfIvxEJ0\";\n  b +=\n    \"8Mc4B0Y9jdGdoSK7AgF2dEq/s9U2o+m24b3Q9mN3wVQZ2w74Y5gn0WXYPla0CXPfF7RJRa18tTn\";\n  b +=\n    \"LWolxqW+dU0X8sF4k6W//HmHXTE9LeAiAXCY/sdElLNZznZTbIna3YWpUbGS4EsAYU3T4d+qN6H\";\n  b +=\n    \"4voh73mVbFCGJIMI01d5AvixwAjdYX/08jIygenEciWOGkenFt9LTqBqABN2f1m3aa26b1ty1X0\";\n  b +=\n    \"nlwzW3Jy4kNL8nVgRR1RNIR0JCOFko9eAcwBqVNk8q/mchxDhTP1MqhPBcdy9Gxc9waBGEIktUi\";\n  b +=\n    \"awaZwqFMHP9u8kdkTZjiZ3gI3CfULXvF4L2fXK0V6pzu1xw3kR+GwdqdfZfrhI8zJH7Lsl8Nz4w\";\n  b +=\n    \"AAjHICE5LB3xCiu2cwBfDTaKMIueg14wF7f9zItGHL7fFuQ6+EtzkxIOLjxOV4QryWIRkuhklTI\";\n  b +=\n    \"3vFuqAJ4ccs3P5DPdAdAUWKohjkhWXcbATABzFD+YkT+lvAHgiWz3zIMavJLK75dj6fW/SuWXx9\";\n  b +=\n    \"R6KpPJbnVmVUf9VfM5eg4H135Vh/2/1sFyIbMMhHSbL34XS0kvxZbOTpQysSvJKJNQ/MeQiwgSV\";\n  b +=\n    \"1wGa970iFsH3EcozqbiAkFF7/nRbQG/D4mKiybA/9io62TFg6lvo4z1G0zviT9QPfdTpqK/nw5a\";\n  b +=\n    \"1aqG6FsXQ6BpPPdL2Mu9FtkK/isgpkO1ThJuLmmevV6WBCQCrOP1aOQyG+P7WkQeAdsLaOQPiiD\";\n  b +=\n    \"G/iN+vr2a7aqfLcEwfBpWoxl5580vcH7Mdr2Rra6uI+1Dvb6BpKek96ORxwep6b/X4t4MQTRCKY\";\n  b +=\n    \"gSliLNt1cvUd1el6k30ubBg/ESbsMXsW+O16HmxcN2Fjf/yUxgGG4X5XzGZsTLSMV92R2dyfihR\";\n  b +=\n    \"ZUeQ+MukA/jGrZk+flbTi0jhrF+nn301+wuYFhd4G5jPipOx7VuBV67t8UXQtmuDOVNC2nVM6Gc\";\n  b +=\n    \"hl58MvQJJyDFq64yN2KbMCco3cTZsKabWA4t3wRia8KJ5VAZJ5bD9Sgn0AHnUYPTpBRZDhvUE2f\";\n  b +=\n    \"DPfFS6jUPHBUMLqWj4iuhBCS9WKVbz1IK/yqkXCd9y2Op4JtsmdGpdJjuia8lek1LQKUXOpPa0v\";\n  b +=\n    \"+PWDgXzqYAUWXb1eYNJZPjqIgtR8XZj6G7YOxffBzM6+uwVcRcPhTP1LRbs1CAMgPhJx51H0/ut\";\n  b +=\n    \"phX8pm0zmYuK2QVT9l8N6CniKtnHrUEFqiW/LnscrBVXW0IOTKuJBpYJpPqsvrdlEeGwTgcs7p+\";\n  b +=\n    \"lV9P2IcIViex9PyaRNKhkQdmYLwe4b6zRtEa2F4oJ2thmsKFWwikArQ45GbancNwhqBTAddNj8B\";\n  b +=\n    \"klpD4xXw0hVYtXAAzmxmpIrQ79n1P9pvPexUexcIxBaxwn7m520/tlwPmcCKymAf7eCNGd/WFco\";\n  b +=\n    \"r8nWrDJrLcbtJa+I7exJJI4VglloTrgJPaAfz2RMWn0y5n4IQrXvi154OqEK3rVz8DL8kXVPvY3\";\n  b +=\n    \"MYXVk3EvzNxz8P7MKdhM+tQ0maOgwyijh3uoZfQ+d96Xt2GSPFrXg3fL+K7pquwh5LCj/LUZym4\";\n  b +=\n    \"zGteQPip39ZrNsqXwqfrwl/8bVu4OfEyzlnK3kSdTn1hvE6fSG92qede9C51/UW91OvunYhd48Q\";\n  b +=\n    \"fpDVW2Bh8sewyO3Artp4/TttpJxYhjGEgxmjCGYXgeJnpdyKk7pJMc5wTWfDoKQsebV4zsbPgKj\";\n  b +=\n    \"ETkeJT2TDDH2xZVatwnlV7LxEn1sPG3lsy77e7sacJqyrFtw1bNZf5BYJD4i6+plO8ph8LJd9p/\";\n  b +=\n    \"T0VyglLMB+fMO90dY/9AQJNvn1UfZueKzZlHKxrG6ZiZVgAsymr+BBbPM3NoTiiA31qO+VL7JRE\";\n  b +=\n    \"OsW8D4HlFw66Zt/2JEcu+zeMmoWjGA2csbzCjQYTRwy6yBh01Tc+R4T9E7anpT8AOoc7quUZjPR\";\n  b +=\n    \"5iuR5kjw/k+r8McEQfz9muri0AyInYDTiPl4OESk56a9SDXyZnsByu9SADcpIlYvk8RensJ9KZH\";\n  b +=\n    \"Vk3qpaYOObm+HcIOemOTfSubfO7XbuwHNTnvv0buN+XkhfyAxDBplQgbizwlxDhhtLO9UTZh2iS\";\n  b +=\n    \"8Mbq8IdVNe3SAcGO2nRO4j8g9g/SPyD1D/I/IOWPVDgkBIxwbkbczTe99C51BYPVAAsWInvRDbq\";\n  b +=\n    \"0urEgq4TxceO02OCSY+sTQo16eERJRFVAohJ+OBBFrzE7i4vI4IG3sUJpWheO7ClBGuuPZ70Zq+\";\n  b +=\n    \"tYk3Fl0JSVZNq/1GFZs7T878GRHLVa0qLKvS3p79rlAmj5qJZXGU1TTYoUe2y2d/JPTePC/ZB0f\";\n  b +=\n    \"Hp2o7XXk+l1xPbf0nd66n0+nhSqEk37fV0nXFW3+6/xQuHDa/xYoCVVx9ZWS2dXOzKa3legU5QB\";\n  b +=\n    \"jTTwS/kgPoJC0nxk3lfJqcU+QyK11tcbga1AFHPxSUQdb4oltJd4lYAopHKWJJR9QKMrVAX2czb\";\n  b +=\n    \"86WMXGdmtlKMBoGFwr2bU+XPR6I1KHCGhN9UAhuwcpbCvunJazPHDX3GGDf8g2/aI2j58Q8uiEF\";\n  b +=\n    \"X/GHLiveYC9IDrLokFSQBqumvur4M0tBmZfmH43s0tPUufqxlLKBLLt9F5Lu4Nh+pXFFvr3SWyb\";\n  b +=\n    \"NetKFJVPGpHOoSosFouyDSLohcF0QWzMFa2y6IbtoFUum1NRGqW9wC2+sm4+ciRsTHQTdzrHrOF\";\n  b +=\n    \"Ih6nbRFw9mlBEp6QWBK7tr4TopOa5eQClpCUak0C6H8oLLdryRhy7xnhkIGuVTwz6EZEDiR1YmA\";\n  b +=\n    \"ir/vfuXCceF1D0SKiQoF2axwXcmEIFcZxXzGuShyOVSmAFyEE/RPrGxQsjhMGCRJ0YiE5PIwwZC\";\n  b +=\n    \"6MDwrIbJBiXcIOlSWcdGniS6z7pIQ2aAYIhsUQ2SDYohsUAyRDYohskExRDYohsgGxRDZoBgiGx\";\n  b +=\n    \"RDZINiSNigyrymvVCf+VQx9S1jHs4AI6s8DeaV9ok0DE/+vaPMov6QihF8kw0/8YS7IdR/Rp4bq\";\n  b +=\n    \"DVQCUkMxWhGHnvw51IFScvS6FdMNBWQ5Do2GutbVD+SOtjoV000lY+kfjb6uomm6pEyr2r0ayaa\";\n  b +=\n    \"ikfSLhu9ZGYsVDuSNtvoUyaaSkfSHzb6tImGypF0lY19zMRS4Ui6kdHdr8aydAERRqEMafuUIW2\";\n  b +=\n    \"lDGkPQQlHqewGZUgOypBcKENyUobkpAxpC2XINClDlmKPMqQFIhJShrS+SZQh4AoZtEzFcnDada\";\n  b +=\n    \"1nWovGnzCvZ5Izc/ulmdsvzdx+aeb2SzO3X5q5/dLMTcozt1/awn5pS3fsIKOuLB35eiwdrTUsH\";\n  b +=\n    \"aCOz4t/1GDpuLVsO5aO0+6N07acbjm2rMHS0cIV22TpMEV4p3dUZvDpJMytD1RKFDnckGLlDDZm\";\n  b +=\n    \"6V1qVKlnH10qhPSfqlLc6hSXyHnQcNP7wssqqvRWJyss7rU4bmLFM5/OdsREJ9NaJ62GkoRN2qC\";\n  b +=\n    \"OXo40J+iYQ+piRbVIE9PdaSGJpsUfp4WwPV1FoCIV1EpcWvEp7Nt/CkcNsSoeSjz2hHMvCy77/7\";\n  b +=\n    \"D3/lF2HNW5aFd19zk9c85ILXvAY0uJ+5w4L+N77Yt4z0h6xo+oZyHbQoCde1ksk5Ws5T+SFdYZV\";\n  b +=\n    \"h4zUhSvF1sasAIC20EYQwQxWGAFKywJlMSAABNGtrAF2DA2JojESSaOCEowiZIYIoMTv/q+vau6\";\n  b +=\n    \"z5kZWeZH4N4bC+Z0V/+qru6uqr33t78vEyEoo2pSM32MvTEq5L6C/DVuevqxWFqQC7JVWynSGuy\";\n  b +=\n    \"OBcsei3BUrVhLGlLiRcjcu8BDIOEVqcqU1vc1eqvuWonUeOk1WzVLRIZueOQkzelUHPJV0gsEMK\";\n  b +=\n    \"DiwswrsFVm7LCbsdGtKfPG62AUSAZvVjanOg1nfdlyHYjCQNzmPpHL+Cq5z/PUM+D1mmT8XKAn7\";\n  b +=\n    \"mj5fb3+vlZ/r9Xfa/T3av29UtATPf2P2Jb1k7BwqZwnAKuX9lpFA3Rf7lN12+DipN67HMpjyH5p\";\n  b +=\n    \"ryoyPbSTSF4/LZAhakfTV+PWhpEx3BSaw7jMNyLBOi4IJYg3ovcTM8WK1Dz9vaaTtBOichn2ZOY\";\n  b +=\n    \"z2dbyZ+iQduWMCpoO/bOtMPPUvO0ikT6Os9JUCL1zJBfTbSUU3FlYpytHco5d77b34cMCM8k/gm\";\n  b +=\n    \"THQ3OHo/L/YkF5m9tU7njYOzRTyTaZj8Vxs2uYnhtmBKXSc1NNIsz2GsoAaCqyv4T9+CKF7emBw\";\n  b +=\n    \"zWx9QIVstrFIJ0BDxEzEbvw3iX5LyPGQ5HEVDYBiwEnHDbMIRQhxVDDdZ8Ii0+Cf9AVl7RFp7aA\";\n  b +=\n    \"MpVhI4vc2eunuiYRfBD9K/FW5jlZsjrrWpltmXYVbE5t5SuNErPFvUJTArDOX67Zx0qctOhPQlV\";\n  b +=\n    \"eXBMcZ1QJwTV/q++a5tmuWZ4PpYRkK4lfPcC7a6YQeZkEyfHk1LSrjgjFRnJR1wgxMQmtqgx0TW\";\n  b +=\n    \"zmYTzhv9YnvGf0P+AJ+7GQTxWPeKeR56iPeLU8Pj5ibkK74RFjA7SM/REj8oi5/3I84p3mR/eIr\";\n  b +=\n    \"6o94p1m8Z+EMsr/IY/4qvojPqvnGmHgEZ9FBlI28yge8dt0sN9jg/v1P1CJ1fiEXuMTeo1P6DU+\";\n  b +=\n    \"odf4hF7jE3qNT+g1PqHX+IRe4xN6jSb0ilkxa7rx0v7dH4O/b9YM+nitF1yNKck63dEx2BnWltV\";\n  b +=\n    \"LPUawlv+dyZc3JP7dYsjnfzd8Kri7aw5bmAiFjO4YGd3uC0E2t/vQWvlvnaffnXshPgyImKWeiQ\";\n  b +=\n    \"Jc6QJsIrmDKEMo5IkAjhV5HsvsZYT+Cc9MenZbPZozYwVIexlf3G4Drpy4SK/C2MZYEY4k28VF3\";\n  b +=\n    \"fiqESt8Zw3Mvl8kkQY36lmiPvUqzqDZMMJzFi8Cb8abimwHyZDgEO4h2WnGCnkL92ew3F1bXHOW\";\n  b +=\n    \"qaUbRxLq1jy4f1Y4SPM3NOiHtLzU6upSl8ClxMC0MzMvFF0kZGHv3+8Dw24MLu/ZH4LGZIpD7d3\";\n  b +=\n    \"OLYGRZKozz0ky+6Jw3UJoVkREiLCNcfJk4b/zb1wbjwsSNik8EH1UALZ5R8RiyqMHZp3JeMADdE\";\n  b +=\n    \"E7UygBLLC8BOgiC5HtdaXQirxUzrFe5bBTkae8DuJbbgbJNUG91mDpv0iNr6FXj2B2Q3DrSYJb/\";\n  b +=\n    \"yo2MTVGjAd1sd33N71U0SrCt+C/6aaCU8P8/IGGZn37lOgTkQe5gFFYUsBDAXl4TvkCwZcSS5Ju\";\n  b +=\n    \"KdKem/R1kwrvGxORj3mPXx8XLU+/zrsDdw7PWYcK86ps8VAgQje1g0Vn5FqC2vRmTqYqPgYwg0D\";\n  b +=\n    \"NEI4zAmMcdbXs4emII4ziAXB25R8kBu21He71Kx0KLl0rM04OCOmWSS4lk2W6lQPEJjiNzMouQY\";\n  b +=\n    \"8RwHJFrYHWDbTg6mqdTTyu66kwIeEG8p/1rEiuDW3+SeRxGXnAMVwL7gHfJv7QilwlmG5xzWwLc\";\n  b +=\n    \"jwx1YxjVVB5jfChUNRW0+zn6+I9siqCyLSSYirrZqpP3JCiWSb5z9NoCWuqTyw2Go4zEE5m0QxV\";\n  b +=\n    \"VivBXDlGtZa4uXZekU4ioW0ixd6K7Kth32pT7LpGtX9VvUr0mPanaiOFvcQ2bYiOcNxvSMYqV8w\";\n  b +=\n    \"tB2PJfVitlV2kGqlUIwgM+zv3VeEazVdfCd0ubWeKIbHopK301KnsVikGx3UBYU+U8o9xRbljOT\";\n  b +=\n    \"W0Eo4DHqEiNsH8VoDNUYVhpuW0WGF7euBwpSIR+m9RMu4ScajMucBde/lreP61AHjtvoKDgwXzg\";\n  b +=\n    \"wW7kv4CqnLfxoV8hFiYiDaX4Z0Swi3J7g0ZieHQaGO6KyzjTRl+G/4ONxdmmk6PBNjtPsoVFrvm\";\n  b +=\n    \"iCRQWjGxGI/rHtO7B3E/3OwRZwM++Jlo8DPR4Geiwc9Eg59pFfykIauBbnL/Mfh5KtLz88kWkUw\";\n  b +=\n    \"vkfztKo387ynkf9+uYfp5eeACRJ4VMJFwBboHccfhKKRhzKozRZWu8j4tLelm99Slp2dspaxnMb\";\n  b +=\n    \"Gr1PUoee1Oe8g9jYmZmTfOzMzsmfk715UdxGB90Pbyz4hYnGuTKxR0R0k9N+WGnh6gC1Nkdpdqo\";\n  b +=\n    \"Tb5TZLlIpMT6gUCSnEs1dyXlngaYsoKynGqsxXyjDLAPAZO696ayR/CeVucag3cmSaVLLiDpHal\";\n  b +=\n    \"JFwp0Ssli11JEJshHkhAoEQdrJLfESHeliinIdBJnnJUe8p8Kdkd7Eo0epG/oJA45G1i/ryg+rt\";\n  b +=\n    \"o4bNuOpO/P+DhPzl/f+Q3oi4T43tQg84uUkepM3oKLQgZL77g4GDB/GABelD2zSxo/UlizvWs+J\";\n  b +=\n    \"aOwZuNUoCmouVGKUmkfCBY0c3Ua0gY9rDwjBgEPcBsB3oREZtbhpXlMCXdSo6VFaKb1j0LK2fDp\";\n  b +=\n    \"HQro1h5nkiwdZ+PlXNEUrs7hpVzhf7jPJ3qc0B8oy106m898qIbV7Iq4n2v5FT8zrVd5Fyre307\";\n  b +=\n    \"hgjXtfTbDxWtYqRYXqwozi6eV5wD3o562MksCDuNcbBYEHZ6fr24CjuN1oursNNZ9eIq7JTXi6u\";\n  b +=\n    \"w07J6cRV2ateLq7DTcL24Cjtl9eIQdmrUS6uwU1IVW2Ws/5b3PVlCZ4nuVO1ChhaCcqGV6W+kyo\";\n  b +=\n    \"URLA43t4FyodBA9JCxIioQXaPKhRH1LvHajleZVRGn07uMPEmZVX0oltl0pNKFIq8DYmr8oXSh+\";\n  b +=\n    \"91lJGcqonZhBBR1mHrPsWRfreQoS/ZUJZoMsN6fHRPz44nMrLUeT3HyIdjN1RAFFPbuNVb6CwqW\";\n  b +=\n    \"rHH1oOzGfGDPIsHFbmFekRPtbwpHuEUTwcdwiJKAkeBDFGStbaWwKB73zqbU6+sNaQuu02WwXBW\";\n  b +=\n    \"abwM80IOspRICsn5LBcaOy9veEsDT7lnf7ddOxtaK22Em7WNLC/POjJESFnJyixnCrjtq/F2YQI\";\n  b +=\n    \"QCYrto9cz5uTEMRlkSGjJ3wl/ppyEr3YsyK1laUEEUc5CSFnqJk7EASqtV0YgVcddZt9pVijI3v\";\n  b +=\n    \"idurRzvBLlNMiIrDxsOEC6x1HOaCS3bLzIZ/CTEUADiTuDX8Off1Xd+XJznj8/kvK8aSbyJ7yaE\";\n  b +=\n    \"kmMbrjMSI+pQ3xzVt2qeXljV5qGgMjnSak0yZ2oPTTMxZRKI+cSsULwRGn8kXYSe+Af9J+QwZnL\";\n  b +=\n    \"ZuLFxkjaa2dBwqz2ybHm+4qyzR5/3/HPGzj1v5aqf+unzi073Zy742f/j58bp9bnpC+61yfI7m0\";\n  b +=\n    \"QXfe/zwI/7tb/H2gq/9udYW+7XHuxb+yTWzvJrf9B33Hux1vZrt2FtyK/t6LveU59zay2/9o9YG\";\n  b +=\n    \"/Zrj2NtxK8d69v2hb5tn/lc/Xof/ly9Lrd/rl7P38HaMr926qhbe75fe+Jo/Sx/fbRes68drbfZ\";\n  b +=\n    \"3NH6HX22b89P9q3dibVz/Nrv9l3hpr61px6o1/OfHqhf728eqNf6qw/Ujzv6QP2pfBRrZ/u1Dz1\";\n  b +=\n    \"Qr8vs/fW19z5Qb8Fb+/a8BWupX5vxe7Z2qlk0G9xfIr8mVGjep4vhX9y6QRVWxnEWCJmajOAsEK\";\n  b +=\n    \"I1GbtZICRsMmqzQAjaZLxmgZC3yUjNAiF2kzGaBUL6JqMzC4QQjuMy14UrTkbkzdP00pr8ywYRh\";\n  b +=\n    \"NZiAGRxVMkNLwFCrjYvCkSuNi+KEE1K7XEUjOzbdhFA8oK6LAQl99VlITD5zOsiO3qAsjhPkOWf\";\n  b +=\n    \"mJH6mxAx3iONSl3ynSEgoc+CMurynCjYLs8Q3A36fME7oM8e0rT6XkCeVt8ZSNTq+wSZWn3rRKr\";\n  b +=\n    \"22u6y/jAHLbhoXH4K+RmTn1x+MvmJyjAIugYZ8S/xMn2D2+HVbYV3dji8rEPhLc3C69kM72UjvJ\";\n  b +=\n    \"BpeBOtfwWTn8x3b+CN6y0JTvZvwmxMYUSJ3GEOhSU385wWVwvDMR0rqm9mCwjrxX+WQPct/2haL\";\n  b +=\n    \"t9Eh7w4NjkHi91gK1CKjcyKsludbdKcImbKSLyyycCKYiVESxA7VkCqqA6kiupAqqgOpIrqQKqo\";\n  b +=\n    \"DqSK6kCqqA6kUorvlFz5UuVW0ZT7klqEHYHX9SqiTdkxEepseLVck5J+nVJwaL8uhb7oAyFHmrv\";\n  b +=\n    \"DO9zNYjUVVtI/cHun8rpu7JW5+/mM7tAALBVwBbcCYuPEtRi/A8rTlE8z1awHlHYUmNAI52jd6K\";\n  b +=\n    \"OiTZ98LFmVWRXIFuzETMoXiW4VV0uowqfMpLRFmn/aIlHoRAISFCzts2olIO1oFgiA9EK73671C\";\n  b +=\n    \"OKIgHJ3gru9fKJoih2nPxRJAfC2CNVKWh5LlLkzxRxMmDvT8rFEidxSOU93uNxrZT7s+oT5se4Q\";\n  b +=\n    \"83uSXqfFT8i8wOw6d409BSzu0Br7ZCIcrr019iQmjLiVlvcaJby/BPnbRaYbATu6j8lMC+8uWez\";\n  b +=\n    \"uktrdIV1s3B5POjzBvKZDHUs6zCI+aJFSPW4fS+AKLfRGzvP3ofpePKVuCZcu74GPTK55CH53Wb\";\n  b +=\n    \"zbejcXp63N4PvKNJGdb0LqHjs+Y/8SnIz9S3DCLvoSzFvtTeQlQNpuCjZfvgR/wpfgqPUvwW5Ta\";\n  b +=\n    \"6aDRl6C283Cl2Cv6XsJjtjwEsza8BIcsuElkIxfvgT32NpLsBf+lPI2E16Cg+1FXoJ5Z0oes/IS\";\n  b +=\n    \"PGrDSzBH0IzFS6CpzgnvL4HLiC8BNuIlOMJnuPDuksXuLqndnbwER6y8BLNWXoJDVl6CPUZegnu\";\n  b +=\n    \"svgS3Gf8S4D7qL4FuCZcu95vwEiDXWV+CvSa8BCCPXvIlcOaOewl+yhgf3SSj7kSUfymWYdttfV\";\n  b +=\n    \"rBb3NpJRK0GKyxAjRquCzx8LvFgI2E3yGspUjCRUCOCkqcI5GywPvSCsMo8TRGp5oaSbP9AMiZu\";\n  b +=\n    \"iErqw1WaQmMIusBD9+QggNdF1BDarpVd9o+yCLlNPaw15wPJAKRohcFsMjtqFckQMlYwJgakeNZ\";\n  b +=\n    \"F5wLZf5cvOO07zRsv3egNJMwm6lCWwFE+Q4AGpv+iPlYS4Z8VQiSjD2+Evfm4aCyaIAoQ+aihr4\";\n  b +=\n    \"LmfA5czDq+YzKhJCLoGccFJGggXKd5PVErxxxV/+km1acVz79SZ+faWQXcoXgSpFnSKU/wIhaSs\";\n  b +=\n    \"bIWLnvE7PiJynncPxb5Xg5BGlRoEcQbCGZwwGo97KzkjPCNHHSmGTFwlTQK0bk7EHHSIiSc6aWG\";\n  b +=\n    \"1WqeRllUaIXm6gtUxShW2UuKpV7QCKAb3TGyj7eh3MLmXAyXMYGchmkM8cX2vZadgzl04fYOrs/\";\n  b +=\n    \"URHrSOJO7dZv/pTbeBOAGLd/ilnFRz5V7U2g4pc1Vhk4jwqSQ0+X8VSyvSw4mWRhIth0NxckPu1\";\n  b +=\n    \"iJpxlW1TBXnfxeW6U5RjYJaEybMf4k8oZOfkMTOmGu4s0Tv10Vk9X257I1M/y0kDqlDN/Oot3a/\";\n  b +=\n    \"4rs0yCd/bw/8Dz4+eiaxLaL0jUtqDMleRvNkzfwPrlgsy4TBiK1gkE4RIBJKzupEJb1BCeV2bbR\";\n  b +=\n    \"F7SZo0wBiCRJMpk6aJuYw0T4nGwaw9YFTyfu5loVJbXuTcZRgev2k3WRKuEVKYjZxVWnvFOppRB\";\n  b +=\n    \"AoQQKnlA8tWYKaMrWt+MbSx566slILldfGyLi11ZE8UijARiOgBPxpTmUQTUxnr5PUHKDMFeEZJ\";\n  b +=\n    \"0M1AQGa9sZ89y8Des7iufdl4R4rVxrNs2xBe93dATxX0nioXXzp1ohp8hvwo5HG8HorQMr29cqS\";\n  b +=\n    \"FORAonN4w0fCb9oz6/u22XuICv6anqAvbZL5D6CxwPFzAhff9ISCrnmXL2UQJBZpJ4KmpVoqUFY\";\n  b +=\n    \"hBI8jyRuj/UqWoFHBNaCXjolqRpatKT9ELM99ydmDEfTKJtzXzJVRJD6FolnWdQKZEAEUMRXeTp\";\n  b +=\n    \"d3IJV0i4aYWENLpNrJwlYQ+JPZ0toZHuEFZGJXwigajnSYiFKr+d50sYRqJS50iopjuClTGhvT9\";\n  b +=\n    \"XAEgc5/NUWb74R0NutZgSmQbDeux3Nn0xpe55xXl9+0lICRcDZ3uRgxQelPAghAcdfHFuH487Q0\";\n  b +=\n    \"pqxRcjdHow0qJ2vMR1pEgNepE3liK17CXMI0Vq4hdDVZHa+hL1kSI1+oGA90Vq/UsUSIrUDSBkh\";\n  b +=\n    \"lKUSKgoqUqsholsVRRrmOje0A3MBPqK7bWv373OOY0+192BMhx0jgxRfsxiLMJqx1lspqMMUGI4\";\n  b +=\n    \"CyhURytnTa4uv+qqele5fMqNj8MbVxa2x2zkieXXMG6wHQnCkPdCdx7r7hPJzgVHRNAZx7YZ+yr\";\n  b +=\n    \"3N9vZSTfokLxIVTTYFapjQ3XWLqwNzIu++phafdY+h+oQLVy+wVw1IpTh5fFvHY5KGnTuFXZNOJ\";\n  b +=\n    \"lvJQm4WykfddvyHcI9gkPskoe05K4kXtR36FdiO6JKOYFTdf0kIIIAiFKq5ig+Wc/niW8iE3bN7\";\n  b +=\n    \"lAoXOe+VvdzDB+qL5yIRCJvjAGuNoJfQiEKNGIiOMlVhOf9ftPLz7202xYqz+QKmcJcSc0M6dJH\";\n  b +=\n    \"4vUK83Czz38TJOYG6UhHFZHJTwxSofuFTbW7rIgRaWupbjEuB3klH/0bInZQVwQ+GIhLY40LCrA\";\n  b +=\n    \"2/xlKp3dE7E8a6eNGCMpiYjfb4lBp4FVaXmT4yYth/KwQ0jaVD4yFz7NYIUvufnJZctVfriFJd1\";\n  b +=\n    \"ZvGinlm+cWkk9veav88js5PbsZnOGk0omLZeXt79KQ3hE37dpW1869oZuIuDM1nSGxWyRB8SARb\";\n  b +=\n    \"WdKOkOLt39TJpvaFO3t39SWTTnVfWubGiLsTD1nyAAXjbCp+RJJl4VCA/SCi2bYlL3Eqt7vKgoL\";\n  b +=\n    \"F1nYNPQSJtRGL6JAwFBNtjZW7er0JV7yz83Hpg5g18R9VhTBTeX+iP7UbVltm86h2tyWeKlc3a5\";\n  b +=\n    \"3GTOB1W1v+O1J2K5zrVFuby7crvOvMW7PFm7HTWOtGLr+LqJ23Y7uaa8CvpeT5/nYBzgIWQRg6y\";\n  b +=\n    \"84F4VPdFkNNSkfLDGhRbVVTN1Zuv3q5UTEKqQTdqoz+vPrQgn+ouQOI8JysA1+Za0XnsPa69Z6Y\";\n  b +=\n    \"TqsbVnrheuwdv1aL2yHtR1GVm+3xODerDNwYG7X2JNG6+Lm/VoDH2uQ/EEppKyRbFacCKCDulUs\";\n  b +=\n    \"e3+iONykKZRDVm5ErXUi+CRlicWyl9j2d9BzowDS1B82S8RCRvhh/cxyzHVq6JvCaB2j0Ixy7es\";\n  b +=\n    \"E19AMdzhPD8c/YQRl5B2RCwH809uwP+vgBEKHDKwfKDdSPluQCVCe9FrNoMy7Xg5Dnn3+iO2md3\";\n  b +=\n    \"Uj+mEVmmby7uKbycSh707ibXUE1iNV8wH+oBvAEasl7i0ZptcJ7IL7adxb9jM+7p2Sb5rOMMS93\";\n  b +=\n    \"Zje0gOS6qT1M4Kq77RnTPrOKHNuV9lLI8Iv0ol1Oy+LflcWx3f+P9E7ZTHb+ZLo7aa8cQ+Jwvja\";\n  b +=\n    \"lAex8sT7fGLdD3CSp8NJYpC4RmWhwoZY9gEKqwGK98d2yD1yr+Ujvnc3DThQUuvG9WlJ6NNG7oL\";\n  b +=\n    \"CTOjWEtGhT7wQ+EhQNGfPppuz2mbVMGfnppvbtc0qRMO+TTfntc2qU86uTTeP1jarMjl7Nt08Vt\";\n  b +=\n    \"tMLXL0ZqIIvwpWAiR3gvz86IDgfT4geN8eELzPBgTvEy9438K6OAFgtbZdXZbVKmKwz7Acg652x\";\n  b +=\n    \"Eveq5q9G1hgW1bKOvf5bjetaxIA4MTpR5XfsRtf5CnFigfqUgv3JWnQi6oIRKAk/kt8kZsNRG7k\";\n  b +=\n    \"n48DnWka6EwbMqdqFoN7Q8x8LpbuD0SlzcBl6ics2OOErfYg0pcVPBb3sbLPxWtj+NakI93tmUw\";\n  b +=\n    \"tyEXr+52wuh/NZN3PwtG7l33yGlCYEobMveai2umqqgQs8bwwmdrydt7GicBkanWjpP7Q3JeqzV\";\n  b +=\n    \"csphaWKYHHd1u9jFKUytQ0Rw3m6SC8MTbp9gGXhLORXp3w5wZw3UOEq3FD0Xh1iclfY8K8yRW7v\";\n  b +=\n    \"7+4ErK7fl+34CY0N6C7iVvtRouooMJuct1ZWNKU/M6wqksMIY9nSLgZ4mK4514/93aNdPCDTuH/\";\n  b +=\n    \"vpzepWKEgxFhMz1hcxqaLDFsXDUSc75Zri5A2gBgtpv22+3lCyliDr/vCy9FhBO+gsulgHvHune\";\n  b +=\n    \"5mnI+W5zp6cyA/De6yB51q/lvwLdpr5oesRI2ha1D4waN+o3DmhmFtSP1tVck6/1ej4byyPMU9T\";\n  b +=\n    \"sO6NFPXmyi1nvVS3sy2Bb1BCWmg8Uy0XcmwYhR2v7BBCUaFvX0Go5j9QQlW6UwST7fuh4n+zCBr\";\n  b +=\n    \"u2b8StuNK/Wx3uLzfsLrcpjxkPLab9k/PwlvcjW0ou8ZaMdwwebYryIioXoMazXwLlhzSa5JNlF\";\n  b +=\n    \"sWQXuQ0ru6LcFSwFvbt1A7ffn11ka9lFap2g6j+reXtoASPpRXF//tgheTzdBmRRIADnWmuq2yz\";\n  b +=\n    \"nf37TCDXMpDIGaXae/yL/P4uMdiQ0I5f3yte7EatxAbVFBnaLkM7GZIUNjJtv7/EizaluCqdAg7\";\n  b +=\n    \"n6ZHRq+BxQhUDic+hEPiyMIzvKuxsLjU+LEff+YxjoB7qASxZAAi7Fl0axLCVCteqW0kujVJYal\";\n  b +=\n    \"0YNWWpeGjW9GLnolapYRgiog5Zka0fltijiy0wU5RdhgkltJauvtOsreX1ltL4yVl8JEX7JWy2Y\";\n  b +=\n    \"iOOq4pq/9dXYLNuuQijCpSw4WY0JZb3AuDOafy4Rgtg2xvuXynIGobf1lJNgludYj/jv1T1PFju\";\n  b +=\n    \"ugpUgpRG5wQtEbrDotEWDsCEahBbz08vK6IrOSNXTxgQQZBvYjzZwOTFgMYS3kX0aIQnVFuhC7B\";\n  b +=\n    \"YVrjTKrFUkVxEc674oN4wDU+aGlOGiJnIOEG1+Y6KiZu7xi5s3GxEBOuSW3uORrlQcDmtx/oWEx\";\n  b +=\n    \"MTlJSTlKJr5YWXPtRtkRja2BDHnEBnWcetL7JBxhyh/TGNH/EroD6bLFPdG7rOXl0+7+pSZ3Fk5\";\n  b +=\n    \"+2m3whpiCnnKMpkDHn0LeUILwUK3Os7Vac6yLgqlF9RKx0NpUSu9IJSuqpUWoXSsVroqlI7WSsd\";\n  b +=\n    \"CaV4rHQ2l7VppHkqzWmk7lCa10iyUgs/el2L6b7ZwMbrBm/8/gl+6D0o7hctNTZd2c+vhWDgud8\";\n  b +=\n    \"U+aQIZ4EntlY6Ffgfa9BwyOnGNfodRY6aIxbLr5QzvpX27ShLRbuOzrei2QmJBLd0q0aLV+UcyU\";\n  b +=\n    \"oCfpB2pq5FH+HajSm41YH4F50sVEponPqcrWJVyVP1yjP4J5ozXdZbZH9FT9VqRFpExj/kMIV1s\";\n  b +=\n    \"zkhebl9J/grJmqqnmlHEmRtfo2fvq291prDd7x3J0X33Ku0ycK9uCDkG4Pl/LWfdj4ZEAJF2veQ\";\n  b +=\n    \"XYkmf3WU0b04c0xdw0iHQrTX8QjjA/4O4FLsxY6Y+42rm3UoqLzML0Vu1Eu4oD/7ebBQmEoxzlP\";\n  b +=\n    \"vqRQhwNMs99aLdfuX1qp8EYy/flYXEPFeWHzLe09qs+1ib9C7K6vpJeC/qE/XXr43HOZzy0WyXO\";\n  b +=\n    \"6V8B/ttkiomm1Z26Csnvs1Zmgw6AUHjtuSnJB4kGerMoqM2iCp5FJJf3gjp2a7VmmEFII5QOchx\";\n  b +=\n    \"SZSaMalV4rAY0zt2o4s+/jF/w7damcqkISHEXXpsrYDDhKv4uT3Mb/3nw/yxPcx3PPvDvBVekOY\";\n  b +=\n    \"28Q+k1OvtjFDd100EoAXcWU7l4E5OneHOCqoSI2hI8WLluz9wQ/fsu0TgYFVX5iNdUvSNdkX5tD\";\n  b +=\n    \"skE59hmfPIcNxtexJiBLMLO9VFjz9FHJmz0uKpaan0WUX7QHF2cEGfdZfbVZgIuQumkiuK1oHir\";\n  b +=\n    \"LDLCr9LJrtgupMXwweKFWGX3O/Sll3g5FheDB0o8rDLcr9LLrvAL7KsyA4Uy8Muy/wuo7ILXCkj\";\n  b +=\n    \"RfNAsSzsMuJ3GZNd4PlALH9EB7/epG5fJdtXtW6LbRueKSNyZR0qmRGs5ga2EeZdd5aBdRDrDTp\";\n  b +=\n    \"vsBtoAyEE3HDTxIz8rq3LET8HxC2D36VHeXnawkaEyyl6tdzN6ducwjXLcfzfvc25a/LOWRMImS\";\n  b +=\n    \"wDax6m/QDv+cyzIr+c/soVjGlcXzTwLpy17fruCnj/0cruSF7ZypWHPeoVJIKuHhni7Rm5jlzhi\";\n  b +=\n    \"ru6mmEDw7wcL59+w706UUyKJrKwfu4VSUDRCp5tRKSkTN/ehnvTcWwAfC3czbUpeeD1NlqsuBo0\";\n  b +=\n    \"46oC1406tI3oe6ofHunhRdp6JDbZ9v/tOW/dLGgbXiA3fZzquCdLf/EQ3dOv60EjukYc2aU2nLM\";\n  b +=\n    \"qe7Sxhy/vJitDTxQLJQIjIQ2iKOvbstNsa0/jxKmcOK22NfEgm0qSpsl7KzR5bzXDd2An2uo+OU\";\n  b +=\n    \"lb2GsQ12mqdHcK9ExppO9qlD9Hk4wwrrzbXGEjuHZSiQC+webvthQlROpl7GUJkTZGxClHxBQdX\";\n  b +=\n    \"FbOzByJJBvfdKLyMUjgGdlDMrUIzDFx1Gxpuj6plcvYWbf/FlWs3tgtTZPI2KFWad0O34NeQtIq\";\n  b +=\n    \"v40zxqTHKxNXjiu0KXhtChFMKC3VSDoakaccyZatCIJHDIJHRHzjs4uwWwKHgi2aolXtThW1Fqk\";\n  b +=\n    \"8zMXJZdZEyenqHWqeAHvUrNUwrtXc1u6oXl00nVbWPbLV06epZqtVsjPAc0NRizx/bnj7Y7UlgE\";\n  b +=\n    \"0V+DIm0flncCpkEn4PaknzRgWurFeOAskWtSy6aShiHqE7a7dR15fK1sZHjeh98Izu71E3b35Po\";\n  b +=\n    \"quq1XU07XUVB8STzaaYd1QnP8S3ffDMB1M5XTj1wbR2am4KiGRnUd+GKx2qdle2iyT/ExPOM14d\";\n  b +=\n    \"UZ1EDsv/0NYvlz/aKKoqV5VdtJoSHPJHo5rvIhNjuJ572Q7xcrOmyjV2hx8ya+1BN4dCKm2ikNL\";\n  b +=\n    \"9sU0EChGmmDScYEJ1Y/eVzkbwdVwrpBOrBXEVh6i8xNiUe+cR220siLGtxkSKCbLwIUWCL4GhSL\";\n  b +=\n    \"Oup84nNRTVUtpzp7fUJiL2c1RfEDRzr6uCwE0eL7RRjeu7DaqkNqg868Zlr5LaUDyBphYbvQJPL\";\n  b +=\n    \"ok2RepuwfibKcdDHa8TMSpAqyQQF6rAy0MqOUJYDldtSgarxMEIhHGLLTehnpYw2C7FoTDgthqR\";\n  b +=\n    \"BMbb1nIJ4bYXcQnRtheW37tTg22re+W+vW75nvdrrO1bgpRQNkc4j/KXLGR5XKr8zDaf+c8P7UQ\";\n  b +=\n    \"/8T8/njsNj1uYHVmJn17I+LhU+ZltPvOfH9qJfuJ/fjx32tqtMyTINnuKKyNzO0zGKuKqeDGKq3\";\n  b +=\n    \"gxiiudwdUP5xxcqRbUcacSwRg3ldvJeD1d5XbSJCS6mZXbiRN6JblECk3ZUNJBnjaR2L8k2XkFY\";\n  b +=\n    \"mGuarDbx5/YTydTqRX4cYXJCrNaIVBe6be7XtwEGlceX21H8mSNtwrJIhaiyiTwcounPEnXQi6v\";\n  b +=\n    \"SlRZC3iwiCpjZKOO46fjCg4sIT0SNjYq+hbNGe32EbaEjVWpEWUysOFLctQFEm8oJLSwShSJxzo\";\n  b +=\n    \"05UfFeswlFtGWWEQmsQhRu5Ao20WdZSSx7CwnV6WzKEFVCasQZzyLocbO2eL6GRUQ9PPET/J8oW\";\n  b +=\n    \"46h9FnOvg75xbEoq9WJwa1GRJZWifWvaU2Q1uW1outbqnNMCpLV4rlbanNsEqWrhZNCEtthgtk6\";\n  b +=\n    \"RrRhLDUZrjI4/w2u4d8LtJ+i3OQ8ls8H+m+xfOQ6luMIs23OBspvsVZSO8tVpDQLEc2b7Hc/Y2L\";\n  b +=\n    \"ZZunqRULWOpmUon9sUZk8fiyCzCtMmVjS3d4sjt0AfCQw/xSXEVWkuwelrsb1Fci6icmaCYmaCY\";\n  b +=\n    \"maCYmaCYmaCYmaCYmaCYmaCYmaCYmaCYmaCYmaCYmaCYmaCYmaCYmaCYmaCYmaCYmaCYmaCYmaC\";\n  b +=\n    \"YmaCYmaCYmKDmByRg3i5S9ISolZLSxmevRQKJHwkQPTt4yZin7TXAk9m26IWyyg5uud1N3bol1S\";\n  b +=\n    \"+LlCgDgEL7XTGXL9a3/NeGC+d4sPpw60LwDd8r6SUbhtvugY6ZA6zlnx8jMtAqkJzL/ND5AiEln\";\n  b +=\n    \"7IFgkmQA7/2FcU6ClTJS9/mu9zsb9MsJ+Wy8IJE7lVCfM0zeiTWK7E7Ir0e0SOE+lFOZMzkVQ9T\";\n  b +=\n    \"s+9ZVp1qHU9G/uV5OZc/kVEc5zaSndi4KN7qdn1K4zWvcHHfEWXb9J1Q376tai505qlQeJUOC0f\";\n  b +=\n    \"WkYu2UpaIPcCARRkv+n0TPKbLvlhovocy0Qv+QhNRGH3n/J2uWI/K+DKY/Hni2BeCREvht9wpMA\";\n  b +=\n    \"pw0tGllNy/iTULaHxdulxVu81f+S2HASNre5MzRYhgekM5Zsea4FWYL3BMriniym24i6W5j0u0P\";\n  b +=\n    \"PvuE+Kn56HW9TlNq59eoJ+4elsTj20VTxypB/XdH3KuJ2f7Iyu5Q/h7AMM8iELoY8SI7tmjD8dH\";\n  b +=\n    \"2irgEJhVJ/kHkjWaokvsi3MA42Y2L/CruIsDU17mtVHYid7bcTDZ4/USvn4TrZ3L9pLp+C9dv+f\";\n  b +=\n    \"R3f2usRuyq8YM1+YeeJ03e0ibfY59Tk8+aepPL2hk0OfCjbPI/ei5Nfsvpm3wmHmxy3MyiTU7e1\";\n  b +=\n    \"nD9M2ly3Jo2+S1o8o/EksG7q6m9Fj499Jx2DYPCc/RUvCf1ndZcrJqy4/ZR4U5XxB2VrHd5OksB\";\n  b +=\n    \"wGW9/NOJ7wdw5BX+SNd7WvfUHtszG5VP31HvBx6NF3YEBJAaSjvbCiVn9xpfq3aNqb6qN/rY/PY\";\n  b +=\n    \"0XFwU7VhteJb6ru5v5aDx9xK4IOVe8trd7WyiZJ+pZq6ud9sDDemmUD7KifwpFAHkzlPOxj4y6v\";\n  b +=\n    \"uk+o1iJkcuMeWVrLYwLNMUcGpfVq0nVraeTzpXvXkgnxLJLQVeKl9rA9HxWC1zPs4/S5B3wgSJm\";\n  b +=\n    \"LQraEEhxf1cjAEz91EGOo48pgIqG5IGa0S8/sOkmYBbiGFpTqtTrGc+5S//s0R3dlX+SwO3Q+5P\";\n  b +=\n    \"MKY5+ZGqmiWhATz7JporzT+F+D19i6e58cbUs927YGxy3krePt2eLUg1C0BXEz04X9NseEkCbks\";\n  b +=\n    \"SsCbUntJvanWIgi7g34qNjQXRXCqbb5uv7yloM9v8a421cS4v3XdRklBIsJy573CUvxefwPil0f\";\n  b +=\n    \"nl/X7T+b3ywXu5qRwVbZSIHRuO3/+Fw9F4FDE1FXHKvW4diFWu316t2InbZmZmZu1aBGiBgSnKx\";\n  b +=\n    \"3D+Jmca5S65dP44oDJ1ivmuwZLJfxWjrsUNmkuj3OPanmQV8/c2POot16p+3ubvTDr6CQgph8g8\";\n  b +=\n    \"HL6XTFJogUIurbfJ2vvb1KpF5fF7q3rJV1M/2TwIrBr+ZDzFGpv3nZZVmrufZzlP7lx3+AIOTmW\";\n  b +=\n    \"H+S/5HcCjiIu1NPmyQKbPqCrPPKyYr2B5VYbWyXeQg+tcUmPGYa6JhznzOJO1gykmHJmmKpJO7p\";\n  b +=\n    \"eEM/caIbR9VZcd29VdIbDvCpyxm0mO1pDkaA2LsgA71nWSuHWJG7hgMPXRH3WXwwJZDgvkR09ol\";\n  b +=\n    \"HhCo9gTGnUR1UVod/PUdLn95QKvrCLTQejPBqE/G4T+bBD6s0HozwahPxuE/mwQ+rNB6M8GoT8r\";\n  b +=\n    \"Qn/SEZg8bQWizbuXNKaXtqT7GE7/04b+MdjQH1R6VH1qIsgIRoMNGiwmU0DczxTALoosGLeRS4/\";\n  b +=\n    \"torQAbvXXQkay7C6uNxAGYIZY0Dcl4jhKaWCU0iCpLE/rc05lezy4PR6RdPGl62fr9bP99eOLF+\";\n  b +=\n    \"pnZULk6leoWK5+VVH4qqLwVUXhq4rCVxWFryoKX1UUvipwE1iPfo1k9qLsEzKcldqV0uFgxeHAn\";\n  b +=\n    \"1XV1/WUtUPbzbaCsGRAPYgTSTXWKjiRpuBEMsGJDAlOZFhwIiqOWQOLCFRkws1eDtzQbd+1EDOC\";\n  b +=\n    \"WfH2zQeKtuAwZKd+zIid+PePP/XMcsBC2gGtobvVcCMKEZl449HvvDcFQKS+c2EVOzLx2wff/FA\";\n  b +=\n    \"EcMjA5n78yMTOg994dwyAyCK7VRiSiaPf/faDtmgsuluFIym//MWP3dF0n0l7SSzJb2MiWVFBlE\";\n  b +=\n    \"MQrszdm/Mh1+CbBHMR5edIGFbKO6DYmLm+zLjmRj389HRjb7L8zSmwxTn7Q4ucFTIJJC5gUM58K\";\n  b +=\n    \"6JXEGWec5T2+/yW++Y2reRyN5T2yut7+TldS+hF/kjWEeml7UzakY9YZ+wQoIbE0xT2sr6iMfyj\";\n  b +=\n    \"fBVJTB1NOotxJRmNXYUmuTmoX+f7CC/3P0d43kgmEUayJvgF9TgZNO7AEZJ4Az+r7ZX0XsEMkwS\";\n  b +=\n    \"C2xEX5Gww7nQ50TPHgBznD2c803mA9DTFcTQn/j70VZhD218YiaheMS5iIkiCyD/cxDQVTp4RUX\";\n  b +=\n    \"KRISWTvGeODwJmSYWzxgPWjIDEmvK1jkkIO8DH8j5BGGW/D/kWmlRd1aDZsVqLXxB1P7rHSNOIF\";\n  b +=\n    \"lXMg0rCRuVF3BQLRDrZhDTJ8hKdpMH6rVfcNVT+MxQRhTtpiNKhWBqWpG1xgFE8tF754VDtIUHn\";\n  b +=\n    \"tTwsjoRg6JAlmSeZLJq9tGi21PqRUTVQlsGdR1R4a4fml508U9meKL+/IZQCZMHZZV4H5Z2T24L\";\n  b +=\n    \"VGEPCi7m/NTmdeab09gnqHBMJxYWSOnOYEB40nrP52UR1gLqhqg4GfRLXSEw7hd0GP8IGYVlCgg\";\n  b +=\n    \"v25XdisPzrBFNsWtmxJKFWLR0aAbyVlAJPR009KX82rCGF/5CpKu9elINGa1/4yn/Xel0d10Jdm\";\n  b +=\n    \"4/SGWxIVCjMy4Qg/ol3ToSnsOdP4ZbN/9rAhyy3qtac18w2QTPbBM1sEzSzTdDMNkEz2wTNbBM0\";\n  b +=\n    \"s03QzDZBM9sEzWwTNLNN0Mw2QTPbBM1sEzSzTdDMNkEz2wTNbBM0s03QzDZBM9t4zWz3lsmzyL9\";\n  b +=\n    \"qxFJW/lS3sNMv7PALM35BeFNFzUkWnvQLJ/3CE37hhF84rgvj9to+4WdMsyynWeduLWejqX6yT8\";\n  b +=\n    \"2qVQjpp2rPL1G6orh6eEl4eEl4eEl4eEl4eEl4eEl4eEl4eEl4eEl4eEl4eEl4eEl4eEl4eEl4e\";\n  b +=\n    \"El4eEl4eEl4eEl4eEl4eEl4eEl4eEl4eEl4eEn/w0v8w0v8w0v8w0v8w0v8w0v8w0v8w0v8w0v8\";\n  b +=\n    \"w0v8w0v8w0v8w0u+n4eX6MN7qKIFq2XY/oUGMIRFRsMYk8tsHJkWmTjGZC9JGIxLK2mUbh9x/a1\";\n  b +=\n    \"Seo5x8efY8rKQQTV77yyDS27ytpa2wa77ZhmJQvJcudut5DMNkZBrd1LvU2qJGdXuAhY2G718RJ\";\n  b +=\n    \"KnqA+I6Si664pWTrOsCMXGePCyld1kUt4yTiubHCSYBtXUo4TmRVnnhOgKF9v+shFT7nOVKi8sH\";\n  b +=\n    \"70v0NOhPcLVotKA1I33Oa7tEgX+HdhvbLvIWJWRMSVdk8fvI4HUzUf8aUn8Zi+0F60FuUZLNREj\";\n  b +=\n    \"FVDEk2mIPyoRvtbCqFZOu0Xounucx2rfouTO/K/AwW2FB9l2xHAPPgMTfAYm+AxM8BmY4DMwwWd\";\n  b +=\n    \"ggs/ABJ+BCT4DE3wGJvgMjHYoXGKHwiV2KFxih8IldihcYofCJXYoXLpScuqMdihcYofCJXYoXG\";\n  b +=\n    \"KHwiV0KAGo/z71COdegA7ohPyhlBalXS/g+/ENRbRSiZKEJjDRCVCbgjNWnb6YQ0SynPLrEcgq3\";\n  b +=\n    \"1PD+a+EhWOKKONl3fd5vqyPPagva+0KQo/4gRRTRDsSlQe/fj8p554htbCb2+dPN2gR4NXnqYWo\";\n  b +=\n    \"KZEULiFydGe4tcFBfRH3Kz2+noORbuxIOlrW71kPF9dz5n3XAIwWS/l4E15EZn9u84YimV56b3U\";\n  b +=\n    \"HE2n6GStfHgLDmoaLBm5IDRuwMEYBWcUb2Sjf/s3DtJQbeCSrrMhrMxkX/JnuM5MA9pHaMvRtGP\";\n  b +=\n    \"FuTCRr3YvRKJ/kSa5xS//CQH3DLa1zFXytQGG9AKQIXTeCAKSug5SW+dVyag2ZP+oWv61XXKIm/\";\n  b +=\n    \"vJzS12eSyBOurrFxbyHV7/BCT8+jAan9vhsGpSKSdnj71NnTlGxyP5UL/9G0sdieIWkhiYk9sSU\";\n  b +=\n    \"3o1sS79yVl856zVomQ8JVEUMsWAdMTa50cF1o2QqHRhIlJ90/2dJ8XT0s1VP7UeKwkhCpmD9R4R\";\n  b +=\n    \"PDY44yzPVmUdR7GnO1GtCp7qkMyzOPGr4iiG5k1LHkgThHlUb2O9jn+W4tOP+MC5pjzhGTGkmQj\";\n  b +=\n    \"aryqP3U40GycXlk1i++bNBjMYzkrtNBw8DV1ve/lllUS3njwgt65GKlpWRjz+3prmd3D4gVkdq9\";\n  b +=\n    \"pCyLsfuiV7v7DBvGooYL8ZuAYB1UvKx3tDrDkvmeVJknaE2JxXOYJvuwiaBYQL/HqgSmkW2eapo\";\n  b +=\n    \"bkacFvFct5JuhplaDOPiLU6Ass1FMuX+dofgXi2ksMHCxuZu4i5P1odhDY9W4wdAYK8H3Qsujbc\";\n  b +=\n    \"n3tQ1K/F0rpgsryuJQ9iKI1YSQYyNvfJ6lmehfLkUb2NxEop5KvgqrRSVZuskjPMov08RI3GIK0\";\n  b +=\n    \"IRS8tbf43GdUbSkMwemLHPBF3k0Lj37t/jKXfxDt4hwO5HVAnK9hC7BizadC3yfVpYjrryxRStT\";\n  b +=\n    \"e5Ny1wrtp3tOAwR3tiZwQXp8rMi2cQU2WYP4P5YXljidCSpPDDWjyiQbgiEGwNnQ+A7K099+3CU\";\n  b +=\n    \"vwnvCvIMuEaCigbuA8kccMqUJOc3sY45vQ5UIiLSb0CgeUs59htwL70S+G73lQLzkgIQlJTPRFP\";\n  b +=\n    \"wotLet72WkGu6/qKMrnR3MFSazeT5SL3K8F/+HRNSd37HJ6S6XaZa/2aV0zy4jSV9Uaj66xmMWZ\";\n  b +=\n    \"WOmmG7kWlpU8n40v5UxfXO/unPVFyH3MXFExVXK4imSlRc7fkimKc4Vk8IoFunlpgIRsChgMhnY\";\n  b +=\n    \"Ho1Yons35ilAroppi3Cs3PGWYv5l6S3wUHjr+tJrmIuJn4z5CoO1XMVG4vlKoo7id0jW1bzrQVy\";\n  b +=\n    \"8xyb/1v/2fw/1OY/ZWWcXV1TaBkHXG8chuw47NpxmLnjsHrHYQSPwyYel+d0Gae8nAFzQsz5Mae\";\n  b +=\n    \"evBZvTxzQ9FTTq+0ZMNriWQ9BrqXF6J+7Sstp9FFOo41yGl2UH64mCgl8v27NMIBP5NwsZzL+2b\";\n  b +=\n    \"gSwJ/J7vAFhCEF5DPCR0H+1y9lYakdlvKwNBqWxsLSqrBU6FJSDsF7f1QFbwXCQaM+1IjsCY3Yk\";\n  b +=\n    \"8dK1k4Rr6SeXHRFp61pfsNuuIeuKjKqFRMeV7rFmWDCh5D9N1QvzBYrFEx47XBN5/M5Mm2CnZA/\";\n  b +=\n    \"SgdrKol9rgppfhHYryaFM8w183GrMqwynxrbgp4E/EtPN6cgtJNt5SiKj3zr9LTEyYxQYjzrvt7\";\n  b +=\n    \"WPJN9vTV6Jvt6e/VM9vUW7Zns623eM9nXW8Vu8jKGtNBq3yjsG+m+q1rPWE0MsD5iXvTy+xuDPL\";\n  b +=\n    \"NEWtFJVMSLEc3ebQTacNB0Y8WNHTI1rtnm6bhmExkjmgNcs27q8QomPuvFM3HV16Bdx6xgf0KHP\";\n  b +=\n    \"mcHyKiO2kXZqGZtxT4rILJZS0e3Al9cWT7Kj61LIZei4UF5kfQi4l//cAarfklmWdvHLLs/MMsC\";\n  b +=\n    \"7X2PZ5Z9t9pLJ73sBulMIGQZ2IcOUcfCFec7YzGiLowPxaLzKNxEkGvsWt8wcooTOEVQtajO8Zb\";\n  b +=\n    \"YH/8LTELbbSQpQXYEs8Nx9BsIR5/YpfQO8ynsdPKwzOycjcAqGZdHb1LVUg4Dx1NEHyATNp8SU8\";\n  b +=\n    \"xA0YnUFdNzgdKEepxSju/fWUwnUh06Ocgq9pL3g+unNQDYhfF8utbV29/ybnKauvvK/5F6Fqm0t\";\n  b +=\n    \"mp2shrlPFae9Jqdi2zb8Va/Dfclf478tj6a90LH02xzBnMnLm1FXROisL/ZW3Z+w6apSRf5L8Yf\";\n  b +=\n    \"nPmxiP7Nx1yzpbD3/hm8Ye73HyLm+6KznkmctWvKrlDHQT8c1m/5cyQYk29MVL/dROpOGBO+GL7\";\n  b +=\n    \"O5KpEFrKr+EA//j03W/4v5U1PH8awWn7h39zvx+L87VbonFzLuXl0OV6ewM8eW+58yv1+xLod3B\";\n  b +=\n    \"cpufjzz2CKPv/Q8OVu5YG3/0avbG6ES+/fWf6+kyz/y8e39MplG6ex4Y59bvmOsY3QdbzJLT7e4\";\n  b +=\n    \"v4f/drmXvnRP/+vbieh3rlx3UZWnnhEw9uDVTL9a86+KpubD0zAIJ+LdrihK5Y9amR4SUAYpiC/\";\n  b +=\n    \"+CJcaT8u8FFA4awOKJxLAgpnXUDhXBZQOOsDCuelAYVzZUDhvDygcK4OKJxXBRTONcTg0ObaaXo\";\n  b +=\n    \"T7/jcjY9+5tjvfu95a7188QTcst995P4bH1O981NRbwLO3I+/9V3f+Fctc/PGCbiAv/3WD+79Ky\";\n  b +=\n    \"074crgOL7nDTPfnWTRxL89cxOwhTu+43a5Vhr/lwK17F6LJG8J7rvpDVAIwh0gapGvI/8i4oSuB\";\n  b +=\n    \"7iShWZaIpaRkgsgB1Ht0Bi6Mq533crU79bjOqMNHGzoi0br3VAusEz2RKC6ZO5DeeLNR4ym8HOe\";\n  b +=\n    \"mkg3hDi59kJjaZGwE3JlceiDxtjvCNAFVHiYbHr0tVEulrG+DihfSyOdIJ71k9BT1r6o4KhFijU\";\n  b +=\n    \"/N27nD7BfXC+OS6Ne5NVVJ7RaNYXvvsn3QSdwU+WONwVVYeR6UIqnVgv7Umf2wE/MMH5GbyZxGx\";\n  b +=\n    \"FwGyDtPJrK7x82pGrvbHoCNbglAkBORhvkIOMlqmfV/A9PFs2Ni5SWc8cZ2r2uMHVWhhqKbnUnU\";\n  b +=\n    \"qBAMDLYHOsEQJBJIOgyAR60BU+3vg9P91LB040Knu7Kzogg75bRpIFsOuJTNEiuhm46EHVn0fCB\";\n  b +=\n    \"cDpgdrRYroFyOrB3z6d5BOl0APLGJOEaaDZXcWLUGkStZcSxDRPZ1nZ/R4BXgzCF+7uCmLaziXJ\";\n  b +=\n    \"7HnFv5xRjC9BsO5D2Tg7q9T3QUbgPpClg4gQu6Iuj1N0t/dDInCoTAmQaeB3fAqGBm9yfIltZIv\";\n  b +=\n    \"UmWwlhQqGvaK9II9D/0RxDRre7/b7S8rYnqFPQtwGyUYjNrsAcDJ1tFq62A1eLBy8AygVzaXSO+\";\n  b +=\n    \"7mkV+574rAkUeJrSstzepIx2bjQjq2NYVi7BzmEHzyzFKlbxaXROrc0vDYedz9DcExzf8q3pOTY\";\n  b +=\n    \"QJ+Z8rtxb9DbzQhVh3pafSkAGcdYz9cce7g3qnyzCDG45Uukup2mhuJAPtkEG2UqUjtR6xFrU9H\";\n  b +=\n    \"SmFMsqLA00rjfRJ/w6p7IMvQzggY5gjqhqc+ZCkIM5HHmjDb/OvH+GXpHmblmQhHFsGfh5sN81O\";\n  b +=\n    \"IhlNgG5s4CwUMfBY8oSkQRBENYfjj19MCFEALoZDYSblLvcIRjJKljVKw6GlYXzbsEf/zSjdJZa\";\n  b +=\n    \"oRxveaM5p9vkmri8838k0Km6neXaW6+332s7EfQiVjtPB5Gmyb9aXOMlD5tajFScbgX2mhdU7uB\";\n  b +=\n    \"MWnZbkxqhYAIkhtBmSKCSO8Fv0x3eC0TEsBkp+dA4pIeeoz8/HqM2/Nq/7Dg/nnQan1IB8E+u85\";\n  b +=\n    \"wG9cJYJM6+2saVnzaByG8g2kuhswlgo3yaSX2IleJcs/7Xad+Qb5LKJdRF+rLDySIiBfnE1bCgb\";\n  b +=\n    \"vO9qALkz9qqV+Uvr5rtsB5i5c7sfDUQ7gvpM50G2W8lZBUwbHqGhyr7qNuTm0l4o4pDFvcVz3Fy\";\n  b +=\n    \"MPW/F+MZHSeCVdAUs6c1eO1TflbPaEWdov/H3wt4dpm4Nrp4LXLn5/qmjLd2gW4S3iVzdaumSIS\";\n  b +=\n    \"EG77yalpVCtmVCSSq+a/XEjGUqsqA1ECIQ9no+m+Y00VnccMGJd74cYRw4gNqZm7zdK8khlkaHU\";\n  b +=\n    \"3c2nA4fxig3kJnNd46TFnZuFYQVa2Uffzxr87zMAOy9tQL8BcEp8z4KqYG6bEA7v5opumAl2eXD\";\n  b +=\n    \"UC9VQ72WEmZFr4vTClDKePeLaSEnVpOcOrJL5KKVizJyGWlvOk7myvGKGPCbBMg2UL336CSbw/l\";\n  b +=\n    \"8jdIZBiJ1HjZIMQXfPqeh++Aoj/3vy3rgvtlDtPqCe93H2CBff4AgRTMNHlBS4ok06jJSqUZIcH\";\n  b +=\n    \"7O6frW1KL7CaaW/CGiwfOgM3In7gPyNm18cCEIwFrdCNw7ZcPnw3eiSCU+gGECR8t4ojbAhCoWs\";\n  b +=\n    \"CQLIlxDXD4lRlF5D6bqGzUdGEI4EvbLCCkJ9YqoJHzdIVnDNLVxBYwOdeQYpaksPGekXJSNQaqX\";\n  b +=\n    \"KpmmF/Y00KJGZrSycpi44FgN1LxGH2urWANV3aLeXuG+8V5EZrC9Q2rqKzOuVEWawtcqaJq3WyQ\";\n  b +=\n    \"wT6JmVc1S1qV57/ClqVFle8L+Wc//wryF53u7/E87Y686wkq7HMQRnYdJW7ivPyem2egeHYkYg8\";\n  b +=\n    \"ZFerU3TRIVzO4Hw6Sark+1L+AaaRHZtwUjGmYOl5gAm7Q3wPtB82KY8rHoD4E0Vp20xR4L4o9wd\";\n  b +=\n    \"iOVe58sHa2n1peY9fPaH2hwfdKAvRIkkjfhosDv9noWWo8Ti4Efe62vqSO8qVY0il1AoXFMhQfp\";\n  b +=\n    \"0nSVL9mXZOw7GvrK7SpofdYQbXVOfGqPSL1BYceoP3CJ6nHTrx1wpFcg7SuA9ck2W+7gKCOWZtY\";\n  b +=\n    \"2ByplTZMd7nSvRMoNVAiIyYUiTMGNJkROlG8RMK5h2n8NhlzPcn5dlsWikOlbHqgDGZnq3qxH72\";\n  b +=\n    \"UYiAfe0cDT0HkoAbm1Z2Gx6NTXkAsGhdNQXeAiRObId7UERwko0riTqTGJdC3vK3JgQFd7LAM+g\";\n  b +=\n    \"6Ag/tdiZe0FsY6+Uft362BUYnVxuPt9v/uwqvA94OxNJ7WTDGw8qbdyve7i80KLfHKh0FWZSH3O\";\n  b +=\n    \"8s2RvpsOwoE4KzrBJOBdApaggAd2w19Th/ZdEu2kQDIPm7OyIfQjM82pb7N1JU68Pu3wjeinrhk\";\n  b +=\n    \"PtXX8dbl+Wv9xEAdfmlYU7yDkMUuAQvFlbQNVD+6v56NQetV9SrWbNHUa8m6lUvRL3q60vUS4kj\";\n  b +=\n    \"9lilGUgGRDAQ8744ehjzMmdaHDWaDXypK5ICV6/PQX8O82GyNbjSByVHoUulTRqFc2Yz9CfQjXL\";\n  b +=\n    \"3WHdP6juWM9zLNZJSQh41EJqM6a6V0yJpviycgQPZ1nazpeqt7iXfNJKK1mSvLNxsATZW/rGU54\";\n  b +=\n    \"KcqxtUIrq6QbEnJ+umyHNvM7/OXWn3btW4K6FMwLXfll70tBuLcte7va6eW3sFAT1FuScU9lcqY\";\n  b +=\n    \"aUYQcL9OUMuAOY0ylw+E71CWpv2nOSQKvA9PyQWnvoNPUk+wdHuY1MspiQ9cVo7k3vvKcdKTGd/\";\n  b +=\n    \"fkrI1ZZz7ayt7hNya5Ly29gaNi9jQbsqGCl98vvCfeYXPcVIKUNy7YgRv88sjyitJNgnwkyEqQr\";\n  b +=\n    \"TuuPJwmyUW3Yd28cpMx7xpvVWkYJceE5BmatGkv0P6ufn6GnbnYinbc9NP5mets+eoaftSPC07U\";\n  b +=\n    \"7wv+Nn4GkTV9rbMvn9ZrrApfawj6BFHtJpy5mCfzauROcfC0osVpszU3sFOrkkiYh57fwOQonWh\";\n  b +=\n    \"cT4ywZNTgE//mFDYgZE9cTSqaX1NJVxEq7Ws1QKwhzqSSoy9x2TLBTqY7U9ONM9yocplpwzcV/C\";\n  b +=\n    \"bpB5bKD+Y4JBzCr4AnCBAbEAQGBFe02mYwLkNHgWg2fS8+1GonUfyzDJ19MLof7HffMbB775M/h\";\n  b +=\n    \"gBz7x76eX+HF88zuUAa4Iye75LRJNDCB378TBEM9MIv9BBHC9Z4O/hd4iEDIss4mNxQEmAifUmm\";\n  b +=\n    \"pIFNyj/BuqJy8VBucJwc4LsP75Aqx/Lhte3s081h9kVYtg/V/e8pfc/rKRRvngJ9znfp+bywct+\";\n  b +=\n    \"mjiDQhrIO4B4eqoTJWsBGzqdtS9lmXUt+pGspB5pm9VXjQlJbmxpv4WZ4LjV0KaQTaMVJ8CMZef\";\n  b +=\n    \"giEnBqkiLUxFn6dsyonIsffTKC8sFKRF7XDwdLvZQ519j66NLV2WjyoAJtfftv4K+x5gecq+Z/v\";\n  b +=\n    \"Z91Kw76XhtKmoN9KstnL6SNn33H0Psu8JZ0aX1NENvVCjxq5nNXLeo7zuQva9FOx7qbDvwVnW3E\";\n  b +=\n    \"6Ddzk7AzFokY0cTZbxlLtNV7tEthSGyJeY9GQYiBpCnO5Vj8TRmUrSJ+BB3SZFitnK3cSdDmJlp\";\n  b +=\n    \"blyBC0Tb3Fm6thUJxOflVsaKqB03yU5Gf3vgrShuvtWwaw0iqEt054WEQqLaAnXtW5U9DDPHoE4\";\n  b +=\n    \"XZiCaiSKA3vj9YmnQJxMcCdNdSKS3cPng6CoJW8zhNZ4m1b9ua3HrLOq4m2F8oq4ns/9f8euG/K\";\n  b +=\n    \"3xsizhaaMOdCNJ1A4sq1L9VSqulL2NZ7I3+Q2Pf3M8htv6KaSylwkWoKtO3dAv3ZADqZrJpVOnY\";\n  b +=\n    \"5LRrkPFKnqtV7fjVVFFtdKrr+L37Kr0lSva8RKYuJxX1Vdr3WgsAe6ia8oKuPOoBKwkLN19apVN\";\n  b +=\n    \"tbKpr6yyekqmw1WNq5XNlq0snDnfsz2p+uoNAv94vicXuu94mKT7zRVsOEYS2ZqJSL4dyqqOfXp\";\n  b +=\n    \"GBPf0pU137r6uAt/9rGBwEU+ENjI+qTObE3nTGA/b20q+1H+B2nN/W3Kn5buZee7Z0k8b8sVl0a\";\n  b +=\n    \"vlbvMv7OAZM6fTDmiXje4vVKtmNN56Kz1KaNw3+dvbErixkXlLEd9yT6FXmQsTBzET8YEY+Z3pk\";\n  b +=\n    \"H0QrSmoAjrhkDJ7839gaQCpzAnckrz3SkMI4HiFXqOtpwj6wIlFB0zJNrhlWBEe+YdnJLpwaGAB\";\n  b +=\n    \"ETzvqAlyTDrMA9EpIupOZdI+qbQiGtdKAF0ItJ8YzefZXn+HQTtsJ4/2hRp3ljEriVrtpd/heYR\";\n  b +=\n    \"JqMnjPy+k0m9NFBngImoaFdjuo16g2z9NPgGafoHC2V8qR2elEmgYR3ACcziEe+2vQmFFeyqFnd\";\n  b +=\n    \"WizPV4ikTFk9WiycWghvmFwE3uGZaAG6YMwvBDUfNILiBnK0gxK1QDMajGBJFMdDLgEjl/A14ed\";\n  b +=\n    \"Z5FAPK2a5YALUudTwSj2IwimL4oretQuoePC1JXfTqcgZmkwElKySJfoDk5EGYarUwrvug++pKq\";\n  b +=\n    \"Ola4WJSMnXs4g8OGlTXBuXGJL8MHqh1fQJU6yeDhKhI62S9ekG+XPjNtBbn6ZpsG5LzmroOqT+J\";\n  b +=\n    \"3+j3jOTI2r1gc/+9mFY5R2Lycv4DlebUHPuIv7WS2brHc96VO8FELNMXnUJcaJO18YzIOtCtN0f\";\n  b +=\n    \"ZrEAKxxuegXSYbMv/jEHPo/a8AXpPyQGiNSFmhKfM07ktT4ypVLlX2eJ4AFCn6vM7YjVVhpBCyZ\";\n  b +=\n    \"9htZL8Pc0uGSp2n4t8nRebW8+VvJ35Md9xRnynlFwGu+w6F0M7dyGn3tOJaAadSvSGbPmorbHfn\";\n  b +=\n    \"UJKqW5qFo38g0lRvxvcy56m4OSOfgDGcbn3AzpB9u18Mg5jmF20nedt1c6ihB7wmGzneSvt7Lbl\";\n  b +=\n    \"f24ECfqc23nWaDvfZhZv57tNaOeDpr+dd2s7n2hLOz/elnY+2F6ynefb0s4H29LOj1lp52NWb8g\";\n  b +=\n    \"9WDMAPE11E9r59xe288l48XaeDcCE1VQrAcgPRtjEri9Gr+LcNdNEqnLINSR63OsJ0cEOM90MP9\";\n  b +=\n    \"tuuMvNPBHBLI9Hv44o55byb791OOq9IIpeTI6ibaS7dltfNyn7DewRu5MCTzbxzOGvvuDVRdaJx\";\n  b +=\n    \"M95l7vc30Qv46C7jRNlV4sey5G346+YLHlmihyVw68cPEMysJ8Mz9vrO6zuMaUdtvBOJPxEvgnK\";\n  b +=\n    \"nyviyXyrW2Uw7IGa92ogdhBS3QciBwRcauwAniOGAjCF0hd53L70tEEEj8usxx0QCNBXFmlOCw6\";\n  b +=\n    \"l6j14bFxXf9VUa4MyHOanGvqiqtNCT6txAJU9q2wj4AUtQzBEjdT67/zN/cGCVQPBgjEJFrRDsE\";\n  b +=\n    \"CYSsqTPlhwv7pZZoTxoQK2CuI+nxLWkWIKw9ELEcx3d/8x22EgBikS9BlLANjN1J+B+AW0aSxUa\";\n  b +=\n    \"WKq0sQ9SXrfThVYqKltpdtq+SYR9Jlh3PINRpCrpjwuEB+ebwaCi860y7d2hCV4iSuu/ZFcUHC4\";\n  b +=\n    \"pnz0W5Xzum+VvA/EGu3DJx3rJ82GpPOyEiKB77JjqnF+9/7DPugLhR8JbeJFiZ+L+ojw1vv5GKb\";\n  b +=\n    \"2ojxC+mueuF4RXOE0FYmVNVtVUaRO1GdKv+860T8pdUrk033U2lg6vz1J8JZqMrtkgOe9/FSTM2\";\n  b +=\n    \"C39GU1BJKuFZ8oiGciSTkEIAbTjd9Jug0YcMS1TczYGyei/z4ihIyH3NB48H2Br7YBU28hXy0g0\";\n  b +=\n    \"ZiMNZxleJla0N0U2B3VRpYzSY3eRdrVQ1aGMZnUc+7tJpsVfSzL87d5F5H0dbs54XvQ+sztuNzF\";\n  b +=\n    \"kiNViXv+9h67Nt6ZlLOu3uULBEQUlzvdvP8NC0BEbq6aiLvUt+pBu2SrPhVa9dEfrFX3gSv3h9K\";\n  b +=\n    \"q+4y26u+yVfcZ36o0hsDJeyKqN6rr8r7W36b7+FzuMVWb7mHJ3aavTfebtfFuO9CmzlxZtE0P0p\";\n  b +=\n    \"C697n0jS+yA30j+bIUe2L7+sZosKtSTz4SkJl4zJFYBTOjhR2VrToqW/WMS1xv7Y/gclZ60VpHG\";\n  b +=\n    \"C3VLx73gIrUt+F2acGkm77ATX/LFuEpMlsH/fOHkMl9zM+gk3H7qPU0mqQznrOckiUwqR/Fr3tm\";\n  b +=\n    \"c1bUwHia/JaGAP64+0G3+yw23209hU2iKUKe7JnYBDn0r2PuHXy2fVEKISaJQto5Pce8yCF/kXu\";\n  b +=\n    \"sMNzg4o01zriQ+h2xgxdN0F/ULosjMI3nfbiuxptwgSSGO7rz+yrjgsTBUWbLt/JJu1grP972rc\";\n  b +=\n    \"y5emjlo6Zq5SOmr5VnDQKv0spHjNzFrPGtjGn979RbeQ/mzdi811StzERDP1/2rYxD52Pu/Vxbe\";\n  b +=\n    \"Z+/yH7T18qHtH53m8GLJpLYFS7LVj5itJX3mUVa2e3ozl+18kFDo9yKq8oOCapbiKIJKe1k9KEp\";\n  b +=\n    \"S1JHwMTMdUsnJB4mP82JGnJYXfPiSMJ88kjiM3/dl1r40VwzhgFW7cY1UGotWZiN2KyTt0X0V/K\";\n  b +=\n    \"/6Mbg9AOu4agHywSEcjn3LtcdnkQe2tGmxyLHNRTyoYbgZBJBzQxJsp5EfjrD9DoP05UBpTIgB4\";\n  b +=\n    \"a4hkkC2u06xfS2f9G9fq2i/WomF7U8FXProxi1Erqk4ba1BwR1Axnabd2mOl5vcAaPOncxx44gi\";\n  b +=\n    \"U5vdeWcztTFS7HzxjbX2MXO68MJrscZwg7ZojsMVTu0qx0a1Q5N3QFjXeUxdr1aPHXA7fiSwGJU\";\n  b +=\n    \"uIIi1Ji7c7vPN+X2oYXbJY5NpjHJgZU8JexQNOFtdgcKV37rgwIFhJ8yEaRKFD71brSpywhVWt7\";\n  b +=\n    \"dZuY7dVZFK5LOq0m3kH8YMzJRTuphRxE9kQPdIUzXSTXZsvCcg9VRLLbVd2ZJ1Ykfu5HXPtFGUF\";\n  b +=\n    \"o0Xptah4FrsxA7iqkDd7Pp0VR3L91GYePq8ZO1W8DN+ES7J9N+Dr9qvtNut+hGYNojbMI4FqcXp\";\n  b +=\n    \"2mnW8+ttdPxsTNsp+Njg+1Eh2CqDkE5yC1VR7HYVr3+gnbafe4ZtpPbsb+dbj13iXa6/dxF22nX\";\n  b +=\n    \"udJOcDUNtNNXdaJzMiHhkVVyA8SAt/cuT2qjSVKN2UQA+MGkoX4bhsHwABvsxo/RFc+BugHagzk\";\n  b +=\n    \"rhzU47P2dlSGEe+tA3agN1A2Z8vm01EIPTvN7dYiWZECcOFlsDMG0iOc+5M/tx+dEOJ2OavWOWK\";\n  b +=\n    \"lRdbGGjs9SXF2xsWB4huPywTe6XvRF5Y4bfaC54ZoS/Ztv2Dl7Bg3rh+kzadijRmtupGFnjW9Yj\";\n  b +=\n    \"HR/X29YHZsbtbFZG9anClcNe/g5Nuw+f24/JGvDHtLq3W2kRtXFGjokS3F1xcaCEXmJhp3jUPyQ\";\n  b +=\n    \"RttmUh81In7mg2LecFVoVk/1hXz+CG62+OLoVDAziL59u2XgRqEz7s9bagXkQH1DVYDA0FOGyBl\";\n  b +=\n    \"c5Z1K5mqh2cpq+MhUxoBS/pFUjLSSmdj7MznsPuMrh21IyHaD5ikjCdnks6p8ujhhvqcRfq1cdE\";\n  b +=\n    \"aynUUF5GmorSTlN36PcCe54N7b3crx93i8U9+227DtSb/tY8F6rMPB4kyAXYKPz9+X+OQ/Z669P\";\n  b +=\n    \"fam0Gql8mIaUHkZ/V8VfOqSboL8L2KrPHeoIKrgg0Pk6kN0ll2JzBIvxSqAr/1N5XIADTV8EycI\";\n  b +=\n    \"/Y4k2VMEAqOexrwj5pJTRSKAytw5iNHKNR0y13RI7y4zyv63vkKJrZ8UlNhtHiVGp8remxQjptm\";\n  b +=\n    \"ZT/rs8BuVyQ9QW0mllBTZfyUEDStcBEILfjpFkVsoARIZ6lpkly66r+U2XXSf2G5dbK+xt+tiTj\";\n  b +=\n    \"kdLo6usf4MY2vcRyiLq9Y4I1cWC36WXLyAXyEXx/lhcvGiNfYeXVzN3oOLl7BD4eI69jFcvGwNQ\";\n  b +=\n    \"KVcXO+6cF18qevVdfFK19Hr4svX2Md08Wo31Ojiq9bY47p4zRp7Qhd/aY19ggnhhCkQel7OfB3S\";\n  b +=\n    \"iTVELoBA/emnaGGTo4EUkDurUYsZH7VQGHsszAcADOSv8Uh+z4Zg1UvQtxpJUogkXbiOBhMGVE8\";\n  b +=\n    \"KJHAP5cbXBE3i3bEEspmDBxyelEjoIigB6+4JNqpypZxSYicDdeivIXZsSO51dUxVDa7JRV1Fi6\";\n  b +=\n    \"bmjfDaeiI9yK8yZuEvMYMIResumSchBJsDCkZP9gyAI+eV5wN498wzzU2g8DIl3Xtbf61rJyHlT\";\n  b +=\n    \"TazyfIlvRamq6sk4ePIN+43DCxUbAnlIWH166YQutvSbUx5r5OrXL6H/OSgfxd+R5E9xyGY/RA+\";\n  b +=\n    \"Q3bISDxKdotAJt3s6ae2lslUj0renOyATsRdYgussa4/I7EzmAMa0u1JVCfDg8BaIv4xjnJjy1v\";\n  b +=\n    \"C8hgp48AYLE/ZGYe2voB+0uf1esql6OIok3hWArJuJaNPOhKL7CYhw7cUFmTJ8b0TOb7pSmqkpy\";\n  b +=\n    \"vdLK0vBRejsmSQrrBC9AAUuhz+fnHL9B2xgcpnevVYsnfjevauDouSvRuDMJLZu8mFTMNOkL1LK\";\n  b +=\n    \"l3N3o2RajkO6BR671gJJsfoPmT2bkkwAuEmPkH3PJJs+wzdOGToti4lf47wWCX04dE19DE/Ox+T\";\n  b +=\n    \"F0XCZwShRuUoRQdG3XSZ8ZSVHFYs4zgidCAgjYhSYsIHbDWGaMRCjlfSxo75LkB4VrJwLUUE3A4\";\n  b +=\n    \"CYM5Bms4krJTzHMauXGv66qwKb3QXVrFkP+XlKDmui+jylWoRGNFfsH4t4vvr3/tyG8/1m1NuIw\";\n  b +=\n    \"ceAqEZ0GTaonCJ8uCxFu9bKEvJtTqqI2ckm1ufBo7L1jJnyjFGkMYEQl2H/pgBkQBTp8HRRLWAS\";\n  b +=\n    \"RCazIJabQAEl4c+dFjEyNNXgVTQm/jpNSOGJjyIREUrEzGmS9AF/cFhio/a8mFqilqJZTFkhXsM\";\n  b +=\n    \"yCU37n/OyJyyls1Ml0extk/v0eb/rZqC8thwi5GgnfJe3TFSI+IXIJOstEIG89ds0GPDkB0JQUG\";\n  b +=\n    \"EjMzKxWuXxZ4914fUTHlkVphejYTU3NP90mGG1NCs5SwUp8h3jTR/ntIgHZ2Uj1Nde2nUdC+agH\";\n  b +=\n    \"o7NvSM/Xynyfr86QYDMVSi2cB2N5s9ytEXEo4KpLG89eWO+w/L/MXV4yCW576kku7MQ2qdGauqZ\";\n  b +=\n    \"wVd3n/bYz2986i6830P+TtvyluV/4770O/QWblittW4yQLXq2jHBa0O1Z0xBKJq0BaO5KvYA8zk\";\n  b +=\n    \"G9layMoYIbdFH6A66kNoR4MIbdE2A5Jav8uoD2od1aHWgsWO+uDcUR+cOxqEc0cDcO5W/pvKzjw\";\n  b +=\n    \"mUGzje+d8RQ2AfUstNavB+WIFo1WwFtlXBUvbFATWkCByhWNtMxjWRLx6c5FOU8uBeC7Zh7+bpT\";\n  b +=\n    \"ibltN5/Nbm6WlgYwXBJVrWKcxNNz261dlpHVPpdceoiyU7Q+3bXAyYbBcDJltUu/9wUN+5GZkEB\";\n  b +=\n    \"Rs6c7sL6dvqp8A7NJ8ytk24CWTqAlS5jLcI8dGvkpnajwsqG4gNT6R94Zmg1wfXqVXwHH+UlBcG\";\n  b +=\n    \"IBKs8q8kkktxuv2QbzZnfRbh0vuBzOJbIqp42v2Q2PuZhDosykV9uWemTpQ2OPG0wZG7Z6CerX5\";\n  b +=\n    \"YGogC2HfViHgUy2fePDNz3ctH+KTzjzaEbyUKdMRBPTHrejLJ1F1Sv0myfHkOYyvTIqge3NoQ9c\";\n  b +=\n    \"iFN4AjE7AZI9okYquYdrEWL+OQVaNUJmWdXHYMcxgSOXpZAl6hoiqHlgQftQhM5L8qw7meYruco\";\n  b +=\n    \"jSeh00poaS+/MCWL2Q6fgfyTBmYF7r1crxjJ5LOkN0Wr5/AC3bd5ZhucdYswe2JdW8qsonxN5GH\";\n  b +=\n    \"amZm9pnoxh2uYEwL5n/+RreWydrJ82/cgY3ZTqyeWo5NY1h+usmDxt3yv8coXbdzx44dNKnp7in\";\n  b +=\n    \"haMw2rhTprKjbgH5tA3ARemLK/W4kzf+0wWlgOilSGyoG5IZhdwcTb8T1f++dOE9z08ru8F3yKQ\";\n  b +=\n    \"xPNG5095BA6QeMzK4AO77+Rk9vXgztaL2nep+sHwMXy7Eh++l2QlYe4XQ2cxWU/luyaoqFAK5Im\";\n  b +=\n    \"bbYp/9PkWmTf6Hpe+gyar0fsbQfbS94gQR4aDjCOgXbBrrELqWv8l92awdjYvdl0yy6bFLlYNNc\";\n  b +=\n    \"WjtqnmnHSAbCppNNnCOWTTNk5oy5YdcwzE+5ToshMbkK5l96jRHC2eQKy+Cak/MvF75Gnp15P3t\";\n  b +=\n    \"t6wM/+iZSTlNpFtztTqMNIW20Wu8dbcRNM0O+jVbLTdaOGvFttFruiG0kR50lbcRjRtFGcsTzpY\";\n  b +=\n    \"24PyaZuvdKaSPu/VNoI9n7fGkj7t3p8bKt/9e0t5fHT4jZC6OjfNKtlM+cDyVedFSPuVXmi9guy\";\n  b +=\n    \"bCssOHHEoeFr43j4HnIYglMlci/wXnQ3Z7PP5uYI5O1bpaxFCzLpsNP9yL6fOgDok+IJgjtLfqQ\";\n  b +=\n    \"aH7QgOInzI+dX/YSAjTnb4W9JWKa3zJdAwbRxyLNTzvmFx71C3N+4UG/cNQvHPEL6yfl9zJdX6e\";\n  b +=\n    \"/l8ivsybrdemj2CKNDOhj3K2unC7t1DT9HKY35Sbb060PWZsEhKUABBMisNnI7mE8et9h9nqpTt\";\n  b +=\n    \"voiYADBFA53dhVTTZLk3dUmIXiSofBim846DAgZ0DMZMJWT7iJuGT0f8ScJ6FzGxIdCxICgANA8\";\n  b +=\n    \"sJIzZuFzNNACgzDWzFVOh9HDAcQYGeZj5XtMoF6sMH7hWVo2uIjQJamFb9tIKePyv2fFbaZSKxU\";\n  b +=\n    \"DcJ+tUay+7+PGEsU/IEEhvezewjVofga69KwkXrsxAdHr25940luPEmX3OGmm3rUR9n/HF45vN5\";\n  b +=\n    \"U/zI5maV9Qhom9xL7frDbKM0W9tpE0ALEiaEBSwcmxrcxoH8XIwYWkGWqUTRkRgsYeAIFqky+s0\";\n  b +=\n    \"Y5/jq8fQmJ19sEdEAuu8VJo+T/IVvphLO0kV8ndmrCyelox1aSkpZdN72TioRhArykrQNAgc+V2\";\n  b +=\n    \"c2qTy7hM/1ycfJWNV1dLfbgD94Yu8xzbI1d5ie1Ob6ywH+w8F9QZM+chZekjWamePFdvz8L7kAo\";\n  b +=\n    \"l9PHIq5eyrDf5jbln7fntTPZ9Ym9btezF911xu/alF0f6NvV1Hd9bK/u2oC/5G7Z8c4mVnHk21F\";\n  b +=\n    \"w1qIX2euPBE9C+a93wmLBkVz9B6wOYZVEvcew+nys6rc6i4LGouc9eqecF16zdyY1r0Mt3SCWt0\";\n  b +=\n    \"ykChZ9y6DOklBJB3h/Lh2Y2GOf9S2Lw1sWCzICb1kc3rJY37LYv2Vx7S2Lw1sW+7csWfiWedXMU\";\n  b +=\n    \"Xqew1sW19+yZOm3TLn7/8WYZm32qiA4n75sMCVtahqy+lkafta6ubDTJAFLMG2Vfay6XKhLuqB4\";\n  b +=\n    \"mshzTmnHdEaLXLBYQ51xSM42mpxtNDlbp39e7JRMCpqcLZFPTc6OfHL2KT9jlhkbWVunMVsiI+l\";\n  b +=\n    \"Np38HkjN5B9pn9gok/hVo/6S+AW+tdDO+r04XbtSfnyrAci8tgcSM03e66Zaf0D73TT7/1vgQNm\";\n  b +=\n    \"ZEUf7viS5qQY1fKV9W31TOfg9zJ2EC1lhoIsgKTw7s9nLng3cxRPjFcMS3luhrzgipfGRqDvrZm\";\n  b +=\n    \"RRG0/QUuy8vqm2M9OszYmAusmm6E/V/gZy+XSAJIhVl7+4QFiC1XqI+2e09UX6/mAlTkH3XvBzk\";\n  b +=\n    \"V/lNZnDTDWGTHdx0fY9W8MVRXN+iCf+JAj9/orTfv21MWleZcY/1VIP0NZGQOAv3CGkSFd2Uf8b\";\n  b +=\n    \"ynUe3xuTpkGRuJA5Z9GrMi3X9BoJHBfXqprcgbFDNlw0Sfy56zEtxHxKuYQaUsc2AMrYZUMY2lb\";\n  b +=\n    \"42z1TTmnYV7rWEuU0+jJtO10kkZ9ZJPBP39xJ28V4i8b2E/UntJThrpxe1YMZi8BZk3SRQ0sCv+\";\n  b +=\n    \"2WxYzqaASG8QcyztmKnbO8pSYYVReyxXj91EUmma8RF9IYuoC0SYFYHowxYcEVXJunh7AnZxJxZ\";\n  b +=\n    \"pZHATtDrBlRbOT4lcth/2SxcsFlj7AR8EoRW4jUngcuOKoIo2DP6xW6yIjV+cZQn/Fnh0/3wQns\";\n  b +=\n    \"mmDiQXHFEzD8biwpmKjCuCAmpbbud4fU0/+0Ybz0qzbzt0rsNvCMh/7OEWIH8be5b5QuTfyoto1\";\n  b +=\n    \"ZVp6Wvz5puCBK7dK+3WwizJOL4XyCo2VbVTmmFG9ltqSSyV34NmrBBLTboyAaF2aA9G1Rpg15tU\";\n  b +=\n    \"LINareUue1XlNLUNCSjeTFIyEfUVmx9Ja6vJPWVtL7SqK80/Yrmss37udUsSpfzDcu/as5rvVex\";\n  b +=\n    \"Rwd9QA99QhMgWUn2tprkbTXJu+E5z+90HQlhyPTsxZTPa28UGVWlKXf9jtAtEfoLcG+T4F5GCgW\";\n  b +=\n    \"5Sb+Vz9uidaBQYb5JhSHqlxGdeTDGg8uPXJzpRvhA01eMCLeygC+tZOffDeCrEkCssQdhZOxHin\";\n  b +=\n    \"Mo2oe+/aBV8GHZLvcCngmmv/LuG0Va1uM1ffPsMf3N83hbcrSt5mZbzc0OzbOXzfN4+0yahwhyb\";\n  b +=\n    \"Z4n2s/ePCfaVfPMt6V5DrafrXl2G2mevabePHswvbnd1JtnN2kqzZk0z4eqIaZ5AWSysh46hOY4\";\n  b +=\n    \"KfUTkUFIsN4msbOoJCQlAS/NYhh+tmaRYazOhK2rCXfjB1KBCy0V9U806p/IO94ohhg4/LOkS7q\";\n  b +=\n    \"+pjClfoMXHpMRponlVSSmxrLrAaDwmFzq5hrxBl437+UfZ9ebXBoFD2OTo8fylh4Pz184+tLoov\";\n  b +=\n    \"KvvkTcZROD4M1zbvnRL3i0qqoUH/mCttXufmeaho3FGaDwgrHy8Tfe60ziKvgO+JE6qLD5LxfZD\";\n  b +=\n    \"HCS9f5QtzYUJkiD9v4+pLc569pd214cAU5mlYyAMxNIeCIFkEgo6yNqscZ7L46GNoj0A8BgI9wR\";\n  b +=\n    \"VdoLtBReon74V0u2/v4iW1u4UhldEcz7j2jLFH6iwu4csoVVQDwR1FMakFKJzrzWqD1JAmej84Y\";\n  b +=\n    \"iXRansTXujX3YPYX/Vh5/2AOwmRHG2GVPI8TZUhFiVXkWNwaRdyL3W5gJS+5beWoZFZDKo18mR8\";\n  b +=\n    \"L+R7wq9ZMP8wW4/ZFw6YBJScq5OcluTwSQkpRH5yS7nZldex/20vODQWKOXB8LtvAeU+lCdJRBU\";\n  b +=\n    \"DQZoH8muoJM/peyv08XSdsPEVzVxZCQPBJk5C2imz/OeYZuimmT+xMhn+bXEdFxgzNmKKjnOAAc\";\n  b +=\n    \"RLymbgKZUjgTc5ExTf6Xc44KgDHHNy4QCTK9iwgEWAjyzzXzUZJCiaDDBVcx6u71HwraC3o6Br8\";\n  b +=\n    \"G9/cCEO+A9sM3UyFvce12s7rnQt52uYvJa9+lEpig/ONe/rFEcouPBpA95x3gTYfppZB27B/5rI\";\n  b +=\n    \"AYVBlSmD9Vnc0V5h9N/Lkkz4yXrEFbBXavYQ7OpbQaNyceKM8M6Q0eKf8g8J4VGD5TnPypd3vEd\";\n  b +=\n    \"9hrV1zt5s4o++30mPkP9uPIjOJY3FvpMWQyuaKe3TcSVb0GiarqOWNWLCNipPrvAtcguYlwMA4I\";\n  b +=\n    \"p1NCupx9yFXjheWTD1VazhVS6/aHqPy85yFVfnaHkpIC0mI7vjgLUbCDX3wWkWntlXk+9soHH9J\";\n  b +=\n    \"7xoNdelyJdFyJ/NyJX9s7bF3t3qdPJ2WM4TzpqNqY13jEy335SgFi1tF4AufRnHZtnYEOJ0xQI8\";\n  b +=\n    \"wqABb2fcjeL9fUviG0oEG/RIBmtZI20TCpJM6Ly8h75LrKa7ZtqkyukKwrSTzIFALKDFLrSSDlt\";\n  b +=\n    \"G5/j1FyA2wcJOa/Bh+k9OtQSj6AvMNVBDRiPeb6mABBMc5yfVSUFN16yvVcmHnceuOA5C2iLlhv\";\n  b +=\n    \"HpBER/KHuvXsgGRGRliJuBLdUCO/e66/dyGddLpoTheNaYDQkukinoa3MbpiqvW0QVPcrn5QpNj\";\n  b +=\n    \"Lwm1+YZdfuNkv7PQLO/zCjF942ujCKb/wpF846Ree8Asn/MJxvzDvFx7zC8f8wqN+Yc4vPOgXjv\";\n  b +=\n    \"qFI8ZHomfNEhK3A8pPbySo2XgeewFdaR4LJrSM0YF7oJOQ4kcokQ62JYQbdTyAm8K0L3Dz04774\";\n  b +=\n    \"nePuElrEa/EsfmvuheVDKScprhejZgBDNqFwRWuElZLUl0SzIyOQz+zKueSqFdhVycDjyg2u6qc\";\n  b +=\n    \"aKvkgmoNk800kxG0lgw2GlK38/D6tyVx7Fna4NZzF2+D+bEl2mDXuWiDo+c6u+bM2uDWc8+gDcR\";\n  b +=\n    \"IWrwNdp/7A7fBzT4jPxZRHyuuMlsjyAU+5W0ZfUDzcc/PUB6L9axukqOlpaTlN0DA4LrGE0wi2Q\";\n  b +=\n    \"DHE7gQYpmTPRiLJXMUgYKD5KRysyI3Dm5AA1wcHVS+Ek3h38MseLCjcAiuZcx7EgJfAjqMmNl0m\";\n  b +=\n    \"iLPPejbAUbvT4x63S+O/tC67h9agLSPqcssFFitZ4yMAbN2MX7sp+Kl+bEPAvdCePo+5v28J/U0\";\n  b +=\n    \"IUqRvd8szpH9R/0c2XQz+dnGoozXcwsYrzlBogKzP/D7YLMWTkbvZS90ENRhkMOCuICI8pBBMBV\";\n  b +=\n    \"mFvdYV2ooBeNRKtYvDUFx0Fgd/6wf/3J10FCpWMbI2j7MrZExkjaR9ypx/4VuJe9D+idLT5E/fk\";\n  b +=\n    \"zTUTnXGh0kOjbKF8rMx0+l4iiZiYPT6G+NIMc0AJCeCSlx2kdKnGjcC4+5UUGKkx+PY2jWLOIY+\";\n  b +=\n    \"q3zcJ+0yWa8pLLoKQtApJajccIMJGnMm0WzNI7B0XGIznAQhH46lbQzKcy/nkq5FJbjnqHObfrj\";\n  b +=\n    \"FOYiGC6vSIQJCnYqhLacFZs76x52nzMm0X8SPhLlo62Fx+rrbiv6uxkrsVRrxJTyzlClG/LkQ/X\";\n  b +=\n    \"vHBSrElnw37lIDHi2oUTZhuDfB9/Q1SNWCF1JezoKqIy+k48I06urO181OP2VY4jf0pjCjcOJ3c\";\n  b +=\n    \"TlarkF31GA+/cl7Cty5PC2a57awa95rPY18yX+rnH2o91Ww8+CACQW8xZhrshuY06NlSRaEIt10\";\n  b +=\n    \"zLbqLo1ZaYWY5mVtwecb1pe1xP3fYN4M7qTmL+SdZvAJDcHMcnNPkxysx+T3Kxhkps1THIzYJKb\";\n  b +=\n    \"HpOMG7gO1D9X4zlPYFDmiWZ3vjPrZBPWexqKbEfrG6YO0fBS2BpDClkcRrM4jGZxmCqL4znBk5j\";\n  b +=\n    \"FYWpZHKfBGQ0Ckb4PLFMrf7vxXpW3Dzr5x3q+T5JO2RLrlxfSUeb3pkpwrx2vQN6jPuhKWtreMp\";\n  b +=\n    \"saZpsRI385leeiV44k5YMfd7bKWHnoUGXWzUWS5+Ah+mIcQoZanCqe957Y1lti/3XcEks03bqzl\";\n  b +=\n    \"0fd+cpu+YQ/bfn0IQLkd3/CXweDj9u3y1lSnL+p0WqFqU6h/Jh87/dbamEHm7fc+Xf3GyHkw5LY\";\n  b +=\n    \"Q64BL42aav7a9eWut94bAVYfT2z/74msFvGEuZ4hFjCKmfKb95H3dc+9XpCOZ9Nu9jTpVzvvraV\";\n  b +=\n    \"f7bpX06+qo8uizICOFIt6QpCZRRXhRMZdTHFJ6gLkPi6I/vr7zoHiRQHDvAUv0AL0kianJLbycN\";\n  b +=\n    \"3zSGWdJior6aHA4oqMR+yAcSpmqKRKpv6YQBURJqo6IkNqW3S/+04brG5gPMzlMtnYMGI85kRG+\";\n  b +=\n    \"b4zCRf4kltNuKkHq5viHLZ124CXsmqPNmLiaUkhgY0rfSrI6Zx9TzxSc/Y9+Yh39iUMpErcVBQX\";\n  b +=\n    \"jAxDEnQOrk5GI9XVGSoSL4utjbwXIA6pMRIxtu0qXzgWPr2G+gHo53SmPdvYttzXaVuS1+It/4S\";\n  b +=\n    \"W/6KuyHdqq6zWZEQis3XSNtrnAbEmEmgoVQKrDBvrOxJ4qbdfziHG9Se2nLuX/cnckT43ERrjAk\";\n  b +=\n    \"3b5JsMyZ9DR2b5Obg3GZBcQzIHeAoNYUjwTKIJy9kjwa8qrROFxCHjk1hJs3Crin9EIcGpHkk0f\";\n  b +=\n    \"qJqNDywIGnneP8oM4B6/V9liHkHvjdGzkUd7/Nmeauae0TB1tTs9LZv7khQGpKyLj+r5KeQnwvk\";\n  b +=\n    \"Z1x+LpKf1fJzifysk5/L5Ect6ZfKz5Xy83L5uVp+XiU/18jPL8mPSpD9ivy8Vn5eJz+vl58t8nO\";\n  b +=\n    \"d/FwvPzNGfnfo7079vdm0dlbjrpI5UNLFNYb/UEV+haEohEQ6SWgeD6x25vzmnnyl8nGIn08/mT\";\n  b +=\n    \"bNkehKYWCfLA2+lkhYFOsMuq7Pn713NgoJzuh1D93rSXSTXnnw8KzYKdyP7lb/1Z24t+rToyBhA\";\n  b +=\n    \"4i5mmOcJrsuIwoRIg2XqEpMwY/ARwdtlfSXjWgYVbE2UDFRxTbR+0g2noZleKznh4k1NuSI1xIY\";\n  b +=\n    \"DJcyTXWoMxBfUGcgLjwDcdHLH/cKpd8fAfHXf9C7/NcfxV1KqKV+m3/zg93mv2iPtssbhHjcTzU\";\n  b +=\n    \"1uwQ6D4F0D91ieQRhhj9tBMr9jAypNCyw0x51gAivfjKdv0GkNkQxfF/F9oHZaPQWiw8el4LLNY\";\n  b +=\n    \"rWRC8Gh75lENdgnhiFC62frNhBdgAKMB69eI2IPF8azVjxva9bE71BiZt4XP61ZAID74RpiRm7i\";\n  b +=\n    \"9bhd/SmZ5LaTZ8KN/3l/puej8pHw10ftHrX76rd9UHr79ptrt+1CA/Am6XxJd72UzH6JFzs6Vhu\";\n  b +=\n    \"G41zKu6/bbkShDj8seWTMe97Mtz3yVju+7Vron+K/X27A/O3Ddz3DGm//tjYhjMQhQYk0fRK8j2\";\n  b +=\n    \"evwXOG+jXFPDDHwjEg9ff0B2+qxtvLobhX++mU0W8GYcWQyyVdSoYbSFdupmaBi9Ag8q/nBeard\";\n  b +=\n    \"Mk123iA2kqiWS4VHrghgG1G54LJ3Gv+/m/MY2QRFoDQMZ9IEhnqxLQWDSo+J0SuZhWSEgw1E9Jc\";\n  b +=\n    \"t/AdkAaRexKPKoGOwrCJ96yVfwqVnni/abYbSrzKbdVyPLQSwpF7feHYPym3tpJ65PBQOZsckPv\";\n  b +=\n    \"sOtgZi2R3yLc0I05XiAZDEPLwT9QPUSVAWMHlArhK4yfhPqvMfomKi6R830jAIAYf7JN9HtYmXi\";\n  b +=\n    \"LZQhf7uZLVUimmyiHRiFashJf1z7sWJ96xVgv/56+fUmdMcNnkQlL6T8bL6ybB2djP3VxQv9gIj\";\n  b +=\n    \"pvtBJpzJLJVGHSWZ+xa3wojBA5+vMbEBl395936Nlvd5tFA7OvdCSWTOW2wExychPztO20Vc58x\";\n  b +=\n    \"Q2PF5b7v+KHx5QgOcF6e8NHJ9r5+6AE+qvqmIlqELas5pHhTOobxufRHGxVXU2//Ef+F5h47VNV\";\n  b +=\n    \"ELR72OgKw9b8A9a3N9Y+C9fa0UQ7ow8YafGjCTyn29DRDWHTHB08PB8HoJMNuJvD+bFq8ts53+B\";\n  b +=\n    \"P/gkqOg31ZGFumAvar7i9y1nqF02YtGhoz3KwhRv9e/UrBpq2QilcXGdDn03+i5wTX9aTJ0mXRN\";\n  b +=\n    \"mU2X68FpP7cu+dIiNsynu4dKVb6mDyJ7xrGCoMpifrBV4LWwBkLSSiMSKUvCZSjc6xtW5enEsSI\";\n  b +=\n    \"ukDXDNdKr3mhdHQ2sgLNcPFSWmkCQkX3NVx9ngLHJTCyuJ6qYniTUW0wxkDueYxHjOelA4E3IQe\";\n  b +=\n    \"A72ZulVOm2aMauqgexH3rzIPb1ei7fQuUF9bUl9bUF/DBzOx/BpOB6EOILYiuy85YCLZOXiM23U\";\n  b +=\n    \"beqB0YsZNgtOJbGeHLy1ea3Jlt/pFBGKQZVNBQOrIGUM/P/a8PsX1PXlX4ZoY50C1rif0OfTj7G\";\n  b +=\n    \"/KsJcT183ZSr4v7cYbgoLPhfH4XexeZPLvwSZjPNdYTyAlOFFtoOVp7kq7GkCTjGrNF428vyMLm\";\n  b +=\n    \"thq9A+qe40Fr6nfEKusF9idwnsq1r6QbAkqV1HDTGJNaT6rKe8n1DTq73ZL+U0COKIB8Cz7Hzkc\";\n  b +=\n    \"8A4T29dKwqpC5iJ4iQWLtTR0oZ8IB/bQhsJMe1KOBRYs2S+8Df+Qoa6eDHJBwcH18tdLQjp8+dd\";\n  b +=\n    \"3GwQTF+mrDoAa81UHrufAkVVqjeNwRnCScJ3C/5WIyVKioSJiEgaIQMQ0IdT91l+f3yWuXzuuwc\";\n  b +=\n    \"rcIFVouCqkrAIFG/qr0Wo9Dpd+4tFR6tPPd/3/1F0HYBVF+t/2CrwAi6KEJpvISUBKQAREBDZ06\";\n  b +=\n    \"QYU1BNC8oCEkEAS2omAEIqKSD0DoqAiTVBUsKIERMUKCipiQ0XFdkZFRUX5z1dmd98moYne/b3j\";\n  b +=\n    \"ZWd3dtrOfPPNV34f4VbaR+4sRnEe41VDzCm+E5D4mfYhvhOkOwc4GUIoMVgSFr99RLBt/BpwcJQ\";\n  b +=\n    \"fLJ5GyAAAEF3uYIAu8B4rN3R7kbTD1NH+UqfLIpW8CziqD8IrKlzOfcBmkCXTgZg+koLmPZWiUs\";\n  b +=\n    \"ke6kR3PT006I6nhwFW2rgdtghH3+K3oYf8WonsLLpuj5C8OveQwgVqbg817CHbJS6TndWwhxr3U\";\n  b +=\n    \"HN6qMkeSlut96GHaLBf4jDfK9Ba6yoZ7hXPEboMHIgrfi8WvkbnUBYyoAXufU+iaFCRrAE/szlK\";\n  b +=\n    \"ygF8c5MOhyw5dKSRWk/3DI432EBbqcO47VZJg663cvTmeCXGyMX/koTHoDisyOQYsd3b7RyoUHV\";\n  b +=\n    \"mzlO9/TugxvTvMI7xIRlVQsaWwP4tNGL7R89sJwoMvq96+3cES/ta9fXvoAr9G3163SN429eJpH\";\n  b +=\n    \"hpgozfQjRBUgdBENQYgqCUogex9MglCicmSeUXJRtyCnTlbdWR69COQEye2Om0KXTU19krRuwq5\";\n  b +=\n    \"pJQos624TrbhkvvFvJRoRiLoM3eAt4wASxJHAkTdFGc6xmjECQDDnmcl3VEow3S+rmycsrLBh1u\";\n  b +=\n    \"Xo54Wy0LcuOhRvWIcE+tY3dwxxbUoI6hXX7ZHXvqv9yx17ljgksJsI0siWPiEoOsTMasiSHyjWk\";\n  b +=\n    \"d44oFgbq8rlgBkLV4XLEC7IplWQH0qzkj3kAh0cBgWfBQAWJL9rFAojhOavXCnuB1Ym+qSMNDIT\";\n  b +=\n    \"qLIPIY3DN/lSDPLiTzEZl1L2Q9hClxz1wVRJBMcaOltqgCXotyBJkGr6PdGO1nHpYr7pp3q451r\";\n  b +=\n    \"JFlTkFzkhQV9GSFa9Ac+vBqV42iowje4PpFBeaTUHVxXFb5PXNiizo9w678f+rZp9Az6fuP2jNF\";\n  b +=\n    \"EP8IGTsyNBwhKBNeGBrTeuDg4Im0H6VA0+XDwSnmm0aVE2UDG4nd2gmziTaZ3wROmA0Q3rYakcg\";\n  b +=\n    \"CV+4NEQHVhCDyqpJhhQB/pE+2p37xPNsSw2jKRFZCENRvU1ERizo/eASmQyRUDdlKNzB96wFcbQ\";\n  b +=\n    \"C8NOJBUAHCkgBqbuyVXJNmT+kpOGVIko846sogaa/nLLoxxV5D1xCPAJU9VUHuwwsyjKsUrTbEb\";\n  b +=\n    \"VmyqCfCXQ/aag/gowUDq0Q8ih5LJSEI8PhK5C369GhU81sI/SdkIFQn7fghO3cc6BbnjgPa4txx\";\n  b +=\n    \"kFqcOyukYMC5QwFEd3vuTEXbc/Hr3NmIdzZ67hwg+3TPHQjxpcKvuINos2BE4TGQLN9Ekswj2Tj\";\n  b +=\n    \"SYDBQoHNsFQnm0/AtyzB5xEMiW1cbZZk86sc3eVTJ5NHxFWFpk4FiDXJtoBTHxUBgW/vr6bi2D0\";\n  b +=\n    \"zltX2ijkp7WLejG+P8HQUTWLejpexby+pojH2rfnz71uN0VPpwuB3dFFdORz9kCeMKjc09eecnF\";\n  b +=\n    \"z8WmYFWKlGlvZ9bejCe45YaEjSDUf8Jq4p83gLoB50YGEn42BrGIdHdsUe/NhZ76/yBcC5ns9Vi\";\n  b +=\n    \"EOtU2PJTxpAK0V6/QpOQrxF7UbmuarKD81R/B8FJz9dB4Nq4g5viYjoIQ0rb7XE7CAFpdHfM/R1\";\n  b +=\n    \"Ew0wVI9I4Hfw4TnbQiTjFHZynnkwH3wI9FKF5v06iEfA6iZPuDK8DOWd1504xSyISsxpcRSyIm2\";\n  b +=\n    \"JpPXAuk3El+HkjvofWizW8FEh7JExS8wkDSxMNJygQgNsIQrhQLC4x2AfRpNHfwS4pklHVRKoHa\";\n  b +=\n    \"b28pQWwNLjIgqZVobemLuG3nmUuToaskmLtRaulWFvGNL0aT7toQskiUJ0YrSSLjr0QujwQG6QK\";\n  b +=\n    \"9kKSLoEXizqOjE9wi8hCxaxGgcemUEganQTmOvrBkezf8MTq5EVPMbkJt53cz3erPhc3jy8+ExO\";\n  b +=\n    \"/Hz4L39ECXcM2xLPZA3Lo1TgSi9j4HEd7M0J+9dAOZF1NMLXG3ZW97I3yvOwRqM04OYd6ZK7fUN\";\n  b +=\n    \"EZsC78nAc/deCnNvzUgp+a8FMDfuLhpzr8nAs/58BPNfg5G37Ogp+q8GPCTxX4qQw/leAnDn4Qk\";\n  b +=\n    \"Loi/FRArHr4CcFPEH4CCFcNP/hVNPhR8fvkHf8/kLLWHQc7Hgjzv9fyIt/4rDYsdQPJpFMIIM7+\";\n  b +=\n    \"CvwvK8T6X9YqpIMzK3EOQ5YIOVwe+lLM4Ts1F+fIPkYF4NPZ07fD00RE21YJGCpAiOngIKkmqJV\";\n  b +=\n    \"4KioOAj95VS5nUa23GQkStz/enl+G02WC6hhBqtL/8jnVsekmAUR8liNrjWc3QkTfSNRZBQTKEg\";\n  b +=\n    \"bpwG0lQC6D4INHFEuXimOxrKZRtDZQKo1DeACMYaBwuHlnWSFgMy0rdOnHZaXTstIxA8WHUlysC\";\n  b +=\n    \"0EKwTGODA1gbXkMLtixlg+ZbOlFUHWkaoW2AYe9PiaYXIQir5g3GY7qjZHXyfHRQgkxEm7zPYN0\";\n  b +=\n    \"B0pKGK0AYbgAGYOATKBDmiPQp/UEgaoVdvADoBQQSBYbwCgQEL1YqQ8GpeGEAQdXnIcb64xMrAC\";\n  b +=\n    \"At2RAX4FUaxVIe4h+vl3tYAF8gwoWBu+0BWFHSEkD3KrNOonQCqsCEjcwZrQqwEyyIHhFBbtEfO\";\n  b +=\n    \"4KqNoRv2fBF7tUXJlZYPREj81FOKngZumcUKwoKw/lPtSmiKg9ANfmzWqtBLy9sQ7ZgpypLjX+3\";\n  b +=\n    \"+nSE8BRoJ0oyt/1MRhCURAVvQ8K7CaNSQg5widgqi3dCfYDFNpBk/Xc1Mq6qftv8hwCG55EzQqR\";\n  b +=\n    \"vCBAHKK/Kt6SghQ+jsLWRl6JWfl0QEGdMZwR3iomkmhPscNmKpzJLAr2SFxngBXlCOUPApGCPAp\";\n  b +=\n    \"C71WCyxZ4n+syxLOvhtPWiksC8AnIUtGc/YDiUG4ZmjoJSCvHkEa9hBT9wTZdtJr1C0Z/dGudAJ\";\n  b +=\n    \"A6YqrJABF7YwJEdII4NKu2KRTAfDdakQGjsQ8CRPSlABEDccen0OZugIjWMQEikn0BIuxDolAzI\";\n  b +=\n    \"kW3yRxDTGGJ6gGM+vAWfzIZMAz9sQLkj2XE+GPBiaHEcJQLXxtZ0gj6gOHxxwI+lPyxjmDITOmP\";\n  b +=\n    \"dcggL533DHKC2GdQPGELyt0nCGcnAomR/lis0ka53OMy5hcz6cxMlOVZxeG/Ii8zYUiWYh8rK4U\";\n  b +=\n    \"lYvHOlSmvUsi3Cj+A5fg+qeYnGkl8Xg5XIpUeMWUGfz4d9TpgSSjjvyThHXN+0HGcCLdCYw0Oxl\";\n  b +=\n    \"XDBXnCdFUX5AnTFRhIF9MO5NKLjhrfOh1rMNiAbjYI4yfomE5awVaacgpGYWymNFPn9XFK9l5zp\";\n  b +=\n    \"L3XGejKL/oZ6sqsP9eVXcAg/E1o38mov5SB0lQIlIZaacHfrzhajKIeAqAj8HQdWXXKRjG/6PAz\";\n  b +=\n    \"fVtMVogwptB+KLJGnvIobBGBnQY6UU9RZxbSOmk/G88hbiB7IoQuGYQ3HTK4/jhkMMWBoJG1aaT\";\n  b +=\n    \"C8bwnuLtJifoNLNLuvwE4QqlGiW1GJPKMexRid3qLENK7V6IlSxJGQYwMtGXUxGlIfA34IuI0pM\";\n  b +=\n    \"ELuO7jnbWtwtagczg60wFqNPEgSc4t35OLovQzDMvwRCoBLiiEO41AVqrrBy9RYHSefOYxcR59J\";\n  b +=\n    \"pbd7EBR4fUy28/gG77THPqpOe3XqP2at/0atx+/LLdfc9qveduvedqvedqve9qvedv/tOqG/NPr\";\n  b +=\n    \"OX6KvInAK13ZsgpZF1RJm78FKdg8evg7Kot5eMOj3ZiNNzzqDQWvpmpSlk7q7alalrkUfTbQQ5p\";\n  b +=\n    \"ALKQbL0V2t2DCc6AM3r0o5IpkXXY7EQuLxaaze902xQHGg11op/cGGFsWx+SQiTUaBorDSKoqhZ\";\n  b +=\n    \"lW0WxqBszvnXDsYO5B7MtdMLIl23UmwCoAnzy02kEbmiMqCUM0zp6oIBCG7nshQkJZ5CEfcxkxR\";\n  b +=\n    \"/dWm6xN4gk0z0D8QfMnnUDyghRzxCT1FcZkSwiAiRoiqnvRs2RJKIug4sK+4uIodHqYGpUQijgh\";\n  b +=\n    \"U6VfuOBego5vrPf4f9IN//nkG864Vsdt+M9/tuHbVUL0inVkNhhH1kLZLQBwJRgSVghiAiYGOyN\";\n  b +=\n    \"oYogyBMwoCE0wGJEVNO8PJYZwbgQdsYlBYpMwYb7KLUu3l62iLUunLUu3F62iLQvXADwl/xQpzk\";\n  b +=\n    \"UZIHQv7PFj26I6TjeO+RWZTKHXC9FUsHAqNtjYCg2kXEsr0znduuEB4uVLywy/aVW4tGmVeRzTq\";\n  b +=\n    \"nC5plXJp9T6ktNp/fb/ldYvCJxG6x8I/o+0fq9+Gq3/+a8fe1XSfoaANj/VcUenMKKo9X481kcd\";\n  b +=\n    \"IRi8PuqMxODdpshHfYUqzzEU8Rn8ApYaTtJ0YRTYfl7PAiGXInM4EZOfkWJ3NvElm5iTozx6DOX\";\n  b +=\n    \"RmfKEy6A84bIpT7gcynP0BR/lOfyCh/LA05OgPK+584cN6yg4sIFQyQoF/TSXM7oCO221wLGhkN\";\n  b +=\n    \"wYX5qCcGPcFBywlhxMBb1+W8oQK4zPwJFX0C2+pQzIAqnaLWWcFkhZLWX4FkjVaymjukAqiVLvU\";\n  b +=\n    \"aqRB0j7gBqL7YQRDY9Q0BsYd7i0p8CIHuVIOLh1QUKw4se0RJXdNFnxrLJZ25SelVR6mQvjJ6r4\";\n  b +=\n    \"hh5zYwjZMg09d4kR3NDKg9IiD/AcF2zj9m2infS1Dj8nrot3cIhEwYOAb6/9gbi3TdybIXhBxwj\";\n  b +=\n    \"5ARW9eEWbqqAiR0ZiFAMy0tbHiDMOaCfpCep7VCk1AjcNQlJD4F5BMexJmB9RRHobjMVg3zitMJ\";\n  b +=\n    \"yNrhYBYtUCsPzBh4A1IPoY1BrTO8APEWMZU5PGmG2R53mV0Bchh98gHzUTGDpTY4t9YFQDWLNBy\";\n  b +=\n    \"A4PEANpcExjRzbm+AuX/LtYopyxfSXjZIUl6Irjckt36WwrShvFB1gPl1H2+2zR/yrTqtIiNpVl\";\n  b +=\n    \"X+YsVfpjOjf+57CzpYxtpxqLJuAESIKhNLyAcUjM+5KDreF6fHqQBTTp36g4zr9e/8ae5MeI/o2\";\n  b +=\n    \"ax79RZb9HGmwjy17zRDHZCdnrn5DuiwxCsOWJGPfFvhL6wlIjq119IkTTS8b5o/uQ0jUUW7LTSC\";\n  b +=\n    \"xSuu+RFynd98iDlO55EouULg5DHxcTNr0bMpxo00MxDaVpVpshEgTx+d0AtRx5lIqxBiE0EEwSw\";\n  b +=\n    \"wRADENQmGRzBnIlkHglGrwfkMgLDZoxCFRtyHSQNFWWi4ejYzxbNrwzXDcixdYIKg/QEhxyuhY8\";\n  b +=\n    \"HvTJIPK4GL7uhkReuvqGyYmhFLBZrzL9hsQwX8HXhJxh+DGsMDl4EdRbcLIVEulJiUHOPOmGxBB\";\n  b +=\n    \"nCMID6QaWKChTYMwGkbGdxvQClxFSLF60IqsVmrQapNZjCNUycr+0N1MdC3+xcy1BZz2vzpSs/q\";\n  b +=\n    \"o5Ua9gtMC6kWVVBulN9XgEGkcNEeNQIbB7cpa5WUvhEWMod0IVx7MO6pMSHfs91Xmf/fEMQvp3G\";\n  b +=\n    \"rtb8zZ26Z9uLJtSuI3ddLzGgllGouOSpDrvO40lPucB2VgpjIeCX4BoL2orPVlaMot7ryA9CEuh\";\n  b +=\n    \"RussS3PbjpbIceIF+0Gwt7PIkn3FWnFdskYiXXIA5SRfAGUrNoCyJ+CyN9qyjKe8Q42NJYng5aC\";\n  b +=\n    \"UBRxchYEiQDUrQXqLQL8aKg3Sq7pqWsy3APIFywDzBfF0FTkQVaQ/NUY0BxmfZs+FN3VzvorIvB\";\n  b +=\n    \"6dLgQnYxTdRAVwilmnq0RW8KhzXHddAlHvDDlr3ST7VBSIgfQelc66A5GsECFoHROdGha2d3B17\";\n  b +=\n    \"2CHvZEQJO6dwrwZwdjTPom2qw+6vBaPM5vgdGYtQgoVQ16KOkeRVekDMBIRvWCH+7AYTCIRialq\";\n  b +=\n    \"71xezEhEuoNEZEgkIpwYOArUcMEEy7qUlBtfUsxtQceMXcIbPBR7WFJZcyvBiN2GeWPulRFxT/V\";\n  b +=\n    \"F3CtD1F1mxD3dF3FPd30lvaHwdE8ovPVqLPgAaeJJ1R1GFTep5P839Nz3gQ2JuQxFn9fCz0D46Q\";\n  b +=\n    \"8/yED0hJ9u8NMJftD6oS38tIafFhhg8QwFiiwfETMvstIlEOjEB4RI/JjrUU136P5tCursxCSEa\";\n  b +=\n    \"DJgQYmPxKmwFH/4OCGSKYhmJpXDhLyNUdbBv8z8TgdUMwVRzcTYGBRw+FYjUqoMZG6Z4ZynSlBo\";\n  b +=\n    \"yTrbJnH3OHE1sh5UwGIryAJJsTwmCI6gksJxiYKIcCbmWELIVdmEWhGIHVnMe2BuVZJ1Z4FNFYn\";\n  b +=\n    \"4Wb0sW/QwywhNxoYBsldb8nnkRaeR3FvMyC6JRi1RoUa8PHGFeZUo1o5ivk9RRQlbTaUoy2w5hV\";\n  b +=\n    \"ialEWaXyFcMKGl+eqS1YDhrqxGHhGwzUtdnwFaQLBekYMxr0a1KVIdy5GHxHsAshUM0Ymr32RpC\";\n  b +=\n    \"imuzPsD6ENhyLWKkG1AgMnoU+MAF4bcrqR3sCO/RwL6sIpxLj224Y5FOVuHA3UsxzAcTF7INry8\";\n  b +=\n    \"TMT7sWV4eZkYDprswsvLRHoQtAp/3CX6NAfgHKATJJguOX6FNboMBIQHaHJ6UnqLczTz9CuedHl\";\n  b +=\n    \"6ABYjiHp5slEIwocRguIkhE9cuRA+cRLCh8/XflgxOdr/+X802s+UIc5wxEwyji8bDqI2g/zaDU\";\n  b +=\n    \"fqAyaCrFSC+PWae2AkJZFGtgFxhMP5XcAjX2chHkm9yGmefcTs3U+j0/zuZySE24Fn8MacrQ6EG\";\n  b +=\n    \"62+O1y/4uNR2gRD7o3J0jtEB69vOoKfDIntVRaFHRQpVQKTM1x+kh1YEZBMuEIMMIdt3qWSMTLH\";\n  b +=\n    \"fA643DXc1M2dQG+L0ROfAUooqZsL4bRYYhC3BSnRNnMH4DColAfKFkc6cOYPUHlwycbP3AgFHP/\";\n  b +=\n    \"Bs3cHZkHjijtBmEIzh4IDQKcKEkNolIwGzAqdFskMOtgLZaniWWKYjJfB2NdSQLevFZgPiCaHLI\";\n  b +=\n    \"kW7tgx65bCUPxo0PwAmX2Qx3TEfcrQmxbZIoG983GadzDe37wFNWTzxLOTbB7akesWnVxwsMpsH\";\n  b +=\n    \"j5l/yGneQtqRFb7TCDQ+DQhEIOKAipOVEdpZGamun5s4CaLil22ZgDffVg+4MCCWwPEu9XZtVM3\";\n  b +=\n    \"P1HJcFdMfTHtxLIhR7qulaTVoiGyoI43znINn1E48/c29HbthA29XSu7oQ95joYO2GqclGlo5ss\";\n  b +=\n    \"6Q/Wimh5jULVR6ovnEg5CRziIGngJQTgaiTtb7iQ4CB1gIjqhhQ+BQMBV/SzAh9CRXrVEqNakLP\";\n  b +=\n    \"uVOz3hNRpo1TzIHLWz2NNQ59PhWtnkyk54waAn8IPq3ABtwEPAFW2MQ325mzHLOTKzk85G9AgQj\";\n  b +=\n    \"807wToCAtq7BfJT5xUohfJQ0ct0pxwoYQUkd1eGpi5Xlf9pTjpyL9itaJO91l5JGHPPPRDpPAkt\";\n  b +=\n    \"qYoR3NPmkLS9SkD21ATtL0VHky9p8iXPGxaarIm3Zlhk9A+X5r4QCzckIosj4mIZ1hog81KgiWp\";\n  b +=\n    \"q9KrpjR4NvMvBTUFFXOxFFE8TEjUfaNVKGuyraPcs9pb7Q+DCg7dgX8UNF5QAeiWnUICUR9Fngg\";\n  b +=\n    \"O2yAcrW0mQgUE9MNWRdSBt0zwx4tFfme1tDGdxq87ZE4Ql5o94BqwNxzZ2AiqRTkBs8e0e8XUpT\";\n  b +=\n    \"GGgAFQGOm7XKG8jky6FpDWOwt0jx6FRPb22Hv6vtPXfPlGKC8pOXkOKuUiXx38dFVpo3Y8KgTZK\";\n  b +=\n    \"Mr3QiETVSY7FYQspfUnKMh/RKb6o7kCUkJAmnnxVMM8t5NhqPhSUDMgit12Or6HBzi/QqsVOq1i\";\n  b +=\n    \"YZmQ5UaGSKXsjYuiSHBFFCx5qbhUbr1peKZxslcat0rhVfCp5JlbRMcUX5ZrQUL1WexvX+az2pt\";\n  b +=\n    \"5Pikg6XJmzA4RYcJw33lvnf0M9wRtr/G84mo1H/KdUNPolK1BUWvAZkpyCyM7MTNToIKngeVUvd\";\n  b +=\n    \"V69lT6FA1puzgzK+6AkpOCbDoPpOab2TNTdY2pPi2DsSx9TN7g+xf8fziWLVW8oUjsZVY1GWfbk\";\n  b +=\n    \"HkWJQfbkx31+g9/e3KuCIQ2LUYaGhYOCPswc/YGgA0bFzLTKTLwGaFeqw9V7dnEN+GyV+XnnCfD\";\n  b +=\n    \"q92h8X3GzkGMuloVJhOWSu7xIQkb3RZW4e0zEMAKizUvc7Un8j66m2CqSUqWbDN2GIjc6xmmVDN\";\n  b +=\n    \"iMbNhbyJIT471DBDcyW1PFPhRBjGkEn4IJShuWxr56tOGpLiYDBEKOSMmjux9tdC07nYBSYUc/6\";\n  b +=\n    \"NX1qbyIkH7RuR1UVyTQ7FyJ0cLDKGIikCSEyH78eQmS5H2+6Hn5vOh5CbpU9vtrPO9bbEyItMvx\";\n  b +=\n    \"G0hZ9cOx79fcNr9Y7BsDRXLzWy/PfOfpJz9ZMKWV3lekH7xpxucL3zs8d1ArvZtI3vTbxm+mL77\";\n  b +=\n    \"1M5EEsPxjx/Z8/OuxrW+GWumtRXLdm6C5+nZrDqo9kPSI491MQ1LZZMZuETdNuqeCF4A2OYVxe3\";\n  b +=\n    \"auxgPvg2GM0KfRY8/B10FtJBeBpRKtUnW9IIrhpJmIPgpeRYhE60lybxAYTGv3xk7FJ6pGMZXel\";\n  b +=\n    \"66sVvoQukoGrBi5daPqGkCAiiUyDSKIRW6SjtTSpzgEkmRBL/AsD8c99mUQpy8wkmUjQSskGCCw\";\n  b +=\n    \"dyHhA1uMqiBnxrga4jV7ChxgugpeT+sOlsJqF0JaFEd41IDqbkh1nLC+pohjb0xT4GD8tzVlvAS\";\n  b +=\n    \"I8wpswOswaXJiAPSbUG9gdaLUhjNAHTCORiXUKqONB9r1SsQMiI+MN+xwguHwlg4QPm4fE8qrd5\";\n  b +=\n    \"7611Z8q8/bg2wtUBVEIj+dzKlV0lfHw/brskcK6bDwXACHJNBXA69ExhIylwkHAbKBhrPALSHbo\";\n  b +=\n    \"7G21YhHX/0YRjFDi2HQVJsqSY9j0TQ1FysmBjgTAE1DErEZdkG0YgBmliHiwiNxQgRGomEQ4mri\";\n  b +=\n    \"vMC4cVZYbCFvBSIcZlrPskKOZxhCP5dqT5K2Q0skjiFyoxOGBkQfYg+My0sMUKgvKyBj0Ot8Q6c\";\n  b +=\n    \"bWh6qxgxwYaAHmhN7Xgd3B9/tPJzlBpgMUNx5cG6DHzrM/c1NSC6jCdP+3ibMU8towwa/E201hw\";\n  b +=\n    \"klXzGTmFCg+o/jDbDOM8jSUvChgjAkkXudTX4AFBxXkN9V29hIh9l8Kg4K3oWA6YTVyCoIBEs0u\";\n  b +=\n    \"cxEZBtRDZqgsxEWq9yO09yStb7mHlpbZnPjy2zukbW+5lJxf7K5C1ig7QBoUrQOQiNGqMpjCmNl\";\n  b +=\n    \"agB7aSDspZHl8ckXa8c2xuFXrNKDnHSmgm0YYF+ijsELbFkGEmYWmsq5YJiR+SfZplZ/X5PeZZw\";\n  b +=\n    \"Z1T60hQzcglXDSspP7982d9WytX98rVyBTBfefGjhrgd/fve1Wan9IKLmJrFP7+CACAoF1LB87/\";\n  b +=\n    \"arhS4aiHdIpccWU8smfJGj4qHYBBaGqpQuzZO7rMK8lcWWdlvIUQpIoSGJ1Fy1ALBv4pLVr46So\";\n  b +=\n    \"CZZz8jHjjp9p+LY8JoPeXUFcCQxd6qkLGCVwEw1Uion6wRIPFgUaxD7J9uW5DbtkZNu2iOlmoZ7\";\n  b +=\n    \"21y/LuXI6lNQn2hSfUKw36A+wXjSpD4xQX2iofqEwiBDgyKRUiV41Sdz/MvGARWPWcaKf81wBDx\";\n  b +=\n    \"xvwfs6uMSFCLCsGIUXjFKuStGc1eM5l0xt5xEa1r9XY0ZV1prh4JlOD7oY/DAhI6LMcyY4TJjxv\";\n  b +=\n    \"GYMaNcZmxs+dW251oDBWecBVzqyos42jdIXAQNxcDu8ey5RhgnNnHauC0ZZNGEsCZ/aOj+Y6u90\";\n  b +=\n    \"PnUkPHlOXQL+BmVI5IwZOiWMqPZ3OBwp6jgs+tJ3yGLQlRTpBLDfnYpB/SRnknm2+iXFMY4lwZa\";\n  b +=\n    \"sbveUFBTI0uRZnaNssynVWwzRkSORqQ44j6ekyCO4NAhLI7QCH1b86gXdRede4ULCU65pMSBn0M\";\n  b +=\n    \"S1YI6iSR0ukd43hrIGnQqhcQOWmmlIgo7NJZA3ELYs9pkPKgqrCoGWzmLBtugyAGKeb+RqHFIPM\";\n  b +=\n    \"FVQMw2lNMhpsro6SlqYcT7HKO/HQ1NTzBSxGdPmQq4NCnAAcsXIoS5DZKTQKFlFFp6IYyZY8bpn\";\n  b +=\n    \"HkRnkkjf+VitbO0usajMAGu4ZFZqmHRv9ZDtIEyu6Sazg5lk3XFT9aVGLIOlIEMOJf5bSJZdmtx\";\n  b +=\n    \"dBalFXBI9o6FjGkUT5ZjaAr2VJATEgHbHC8o88YFYn9sReYoRYvE9aaF0ioSIczDyNuVIctFbk2\";\n  b +=\n    \"Q6d8DjgXkLa7g5m9EUEEzmF2GzywsUuhEZJwnaTO5+UzmXYu8fGb7vXym+r18jihlevmMdkH4Cb\";\n  b +=\n    \"bZXGoATr0RYadW+cF0Oa9I7bdR9bmZQpCSGDdTiGRStptpkcpupo+rrpsp+NWuNBDjklBwNDGfk\";\n  b +=\n    \"uWgJxC3hz6jKgp+cSaBTUSXyF0MZsamlGj0jAJFtlWy8NgYZ96hk09wsLQHhNHSE/gQCHTYEeyr\";\n  b +=\n    \"ZOKh0l0FtGgj7cBYSgS8RoeeQDRSJ0CBoWBCkRaakC0xWoMM3UkWtqprXovCQZIYN1YqIAQSmdJ\";\n  b +=\n    \"WYpvXeHsl2796bWkrqTUj9PS+Mp5GElWxCiIu3NFMXoMlUvnMlMAzh0hK5plDuxVy3nV1THjVjc\";\n  b +=\n    \"QO4PePsUwJXwLCmOrkq8ScHAKdYaYZBk02CJmmxkpfvKgWDAUW6mV0YKtUAgbUy7V11UrZuoIBn\";\n  b +=\n    \"3mbTnIcgB1cjTDwcNb6TYtxrtPQSpf35f9is9b9bzbr5+M066+aTK+GT2IyrXQn00yfQ6elOpoO\";\n  b +=\n    \"c4SdzLANGnlTx8SncULXqKVC11DcGnx0Q+mAN8CW6HCMVYn3TfZuIRvlPgzufAqQatbTdhhp3hW\";\n  b +=\n    \"UNu8mBYzCfQP3EHNDiKHOSGmhd3UsrJEnJ7i9BxFB3H5Q0FnVfDlE1kGiyV1ZaLARKKSNUkZNRu\";\n  b +=\n    \"umxgB2vQJ4wNwaIPvLvc3ZcxrN2Uoy/a1aOc3ByNk2UsMyTfN/RQuXsMfapUIbpa543kJCW4Akp\";\n  b +=\n    \"p64sXdZMcbH0MH0pS3OEAq0AVd1s+jwZmXZR5fFGLbEeQxbqrmIJXgcWxCjtnXkOBT9mEdJ0PRN\";\n  b +=\n    \"5Ns1BU2+bQkNUS0RNEqKPftuMdWOwuraQ7yBeBTxhzN3/Enk6vAbCzqq2JNs01PHbdP6Ff+NNm0\";\n  b +=\n    \"5bpsOLz+jbZqlKggb68KygDFcouPjZzgyvbBzFedcmc5VNW+oQL5ydeiWEzy2AhABgrihCOHI6L\";\n  b +=\n    \"2sRu51xfmlqc9f5MtIV1ZLxaKrei2VenSV1FJJoqtGLZVGDmmaEatzUJiPZ+bdZeohUMY9Didfr\";\n  b +=\n    \"kRGkxIZxYwnyQidL8yzI6XyeeUxRSyjI6AaQY67EJyjkaigFkq3K/aqpNrLpoG3k71lmrSVffdG\";\n  b +=\n    \"cSPZnjPNCzcO6gSCjEVMIwaZZZf5GHtL2DcCEl6DDuKGJd49AJFgMTDB8Vu2oMbptAzQerlliO8\";\n  b +=\n    \"rW+Y1tXRbVlTD27J5NahlB+Ij08GizZ6jkkgeeH66KJQXU+XFUYUvjsiLw/KiRF58LS8OyYuDfJ\";\n  b +=\n    \"GkDSnfam2F3/2jGuHlSPW7BP2prCkq4JlQME50yUZLUwJ3J8WQ2DXB2ClCGLJoVuSAsz23jWIUw\";\n  b +=\n    \"DJqrJjmcl1hf1fOjOaPZeXynd+YNbIkgoNqvkHgPow75I2MFntGM78IsMes4fXCskQRKyDgEkIN\";\n  b +=\n    \"qOYXesTBFLLXLEbDrKLFPAtO2JjXT7Yxh8ptzN2exnx5vMbcgP6ornUPxtWuwpEN+VBSJcvmLyR\";\n  b +=\n    \"mr8MrkqyPDzvSe7+ZUiUlPBPiJRK7CTG/EsTpMSEAgokgW+eAVXKhFSiMFKihKdI8J4wDwBitiJ\";\n  b +=\n    \"gFkUjB+dgegkKuIQgHrhPYr7gRgxpEaMqgGhW7RjDRAE8bFfGVVRlH1FJHii0pErkdz154bDKxB\";\n  b +=\n    \"6YLXI4dJrcI6JOljabNTO9ViY6OyP6VEbNdI8cfwxWZicHe/ZoY7Evs4tccK34I0LlLpKYjQPUu\";\n  b +=\n    \"/BbLdvHjW6V4y+MXivJGhErTHeMcTUJKAJfr3GSTCUSNNiegDik5y5ymye3IyYkYbChA9N5E8DQ\";\n  b +=\n    \"dcNaktcR4wkUgOAAKqDklyw4BihcBdBkSjAQu4TyqyzC3KFdMYm9jUGHojImn07wGgIuaZJMXxc\";\n  b +=\n    \"0+jFEAKT3LIwrCKUnCH9Ur/FHJbZCEPwpFsJsVcKU+ahlSH5WkPjFR7jQnyh16xZDUhyPWRXLBD\";\n  b +=\n    \"EIxP9bQA57B8QLARiCBk56HyDskaU7PkWobeVksjRI1ENVEY8ggnCRIVQvDCT9IRC0jTwpXBV0I\";\n  b +=\n    \"1qMxRl9NIPq481cNQVgFQRGCcogx0IIVZJoQBANkFTDKgxRe7t0A3IsH29ggh/OWAmeNYjQw7Nn\";\n  b +=\n    \"csALqai2GjzNdsGOT/bqY8UjUzS0BEm0RnwKUS6c9USoJVDwB1EUyUZf5f16eLjY/7AOeeMizYh\";\n  b +=\n    \"yN5fmVGTm9DFIHZle6tDldYTAEHPOWhPQWdo+UDrtoS5APYrfIE1f3OLaOYrM3xWlIIzG9ld4YN\";\n  b +=\n    \"fRGxCPR2VNZSjrBk/OJsIT3wROFIz11MQE83KyLXMq1sYT2BLUVq7K2Z2Jr49i2x6mNJK2FPnNO\";\n  b +=\n    \"outx7C5muBFCcXInSL2H4bFVNe8J0IbLmBjskeyG6I7xJiNFCXmTOfaZk7nPHLqMhOSGYxeLcMV\";\n  b +=\n    \"wji5BFwEAIFbNS9FLORHPuAxTjG7LpXIRm8YwxTRrIiTSr0eezmDiROahop8vqt3FBNsp5tRIgo\";\n  b +=\n    \"VAVI3uADZEYZiyGPgFsLdxXud7cIN5TmMIXXAUhQOALkqzixxUf9DWYgrDEjwuruwk+wDcAKo/0\";\n  b +=\n    \"xHnuqjq5hKDvc89M5pmcQIHKjYS6YBl6e1QTi6hEsWZGGAfKLJFHEM1mi/orve5Z86rnjl/3MWn\";\n  b +=\n    \"lrX45MJ7Eht7Covvr2rIM/8rDbn9zDZkRllTpOjPThGM8+7MkEUnbsaoWHgCUh6KLfMHHdc3Lns\";\n  b +=\n    \"6+CVpHsB/9INMBD1wBJWZU8CBVaXBVCQLyU6nyA5QbRP98rKdKKJCgVk82SlkkcTMZD3Q3hDLq2\";\n  b +=\n    \"RAVZZShUlKFcdSKlRz4OlFLG3AYAXffa90bKJfOHbEFY5hzUekcEzWvOdP1iwFYeNiZJXslharT\";\n  b +=\n    \"wKTP8VBapCQRLB7AfKcvgFcEVTiRpKy7DBsuxrFlxOjOx+3yGpA1syvAo4AYHop7CIE0iHtrE7B\";\n  b +=\n    \"NHTbQvickVAR2qegQbL3IGir+SPRWw1couAxYmeASyxwCgai8ICDEm73dt0xBUBnxwjiWHfMuDz\";\n  b +=\n    \"BlmuamORaB/vArB2smf6wTS+D8GOR2f6wDQWPOdDG3lTIXDToLdvYK2XSPihexh8HUwzLAwlQlg\";\n  b +=\n    \"3WAiL7aIlWrBXYB5ZtV7Mu1khE5KTEsaWQgkDqkesdtkwiurmgISBpx6Wuy7h7gg1hwCFakzAOc\";\n  b +=\n    \"uXrfrlVDCRItVhIEBRknWLdy/+Ldd99Jutu5VBewaPYlmAfXwihbzZeI5avuO1hZZmtmOpa70lJ\";\n  b +=\n    \"sj1XTwyYX+P0C9MsjEMI+Lk6Te8goSMbMLGD4m4PdKI14UXzvQDN4QBNXgNMEYj/mBd0dX2Gp+U\";\n  b +=\n    \"zS9n4g5OMiwPms/KXIGHSsl+NscxHAC88yxx6qizL/r1Pyef7nnIt+y0P+fz7GaxIVDUA4EpjWC\";\n  b +=\n    \"rgVeWlMRk4LPHImp2oTUb8ZxWug5MnJYqLmZNozUmQbM0KTk5RJoEyqj9GD4fMhZME1QwLBlJif\";\n  b +=\n    \"6lSI2/QDAFbQ03KEZBDs7LkJKnN1jMqkm46/ukt2VsTbBQxYjk8SSKGNp7+hOlwOD2IR2/kX/8L\";\n  b +=\n    \"1Rc61efGbMWqd6MgQYYqTmgkbI+jPSiMSEloyK93sBFoUa0prfO9gDQK4NsaAA9iGc5mHCU7Yj4\";\n  b +=\n    \"DGydzBjZO+QwMa0fnYHKgidckKCoLW4CH0uVxBJy5FE3OPmC6yQW7dPw3B6hFczUFJKWnNnsfkt\";\n  b +=\n    \"fBmWmHP+Deqbfjep+bJW3EFPdcJ/ZKtxs5nt9tCduUHL8BCG/2IkY0BcfvFhb5VEqXSzNLuoDHk\";\n  b +=\n    \"aYMGJmNhlR/5XM4GnXkScFlLQ2UAZfF8FcsZz8e/hWyXpEMlU1rEuFds0RDiC04bSLeuSgFruoR\";\n  b +=\n    \"Ne2M6K+d8yTUlGAdUdSM7KUkeBIjS8bhjEZkxw7oJ9exY+pxOlasn6hjB3ToWM4ZXq6iJ6sCaKV\";\n  b +=\n    \"KaKO+1TrGa7fo+KCHE42RwP6PtAPjEgPd8WwLweX2Boj8GEyyyBecNzXsLAnYA4RfQYJelDI+oU\";\n  b +=\n    \"tt/zifm5i0JkvQQNTaWBkibcySycSMZZWOUdgBJYtRV8tTPUW8uicpOble8QisSF0AMdH4wJVYt\";\n  b +=\n    \"iwCBZdPOv6ttuoLmgF6iRjX2H0vb3ODZsx7ZRtpkKe6SmsInhwgpIYAkeuYuKuCw5WLNACL9DBW\";\n  b +=\n    \"FKBVGrCLvqb6AvYPCizTAEZWhmUawNDIsEwDGG4VlmkAbSSxBWN4ufDX1fnrzlNzEg36vGJqmK/\";\n  b +=\n    \"x59XRpb4rS+lI98TQsDxXVUKuNchtC/Bh4QU31nJYbDtl1ijm0xmo0Cpd32igw3As/DlIhVC1OA\";\n  b +=\n    \"2JNGN4QLA5DrggtxskyK0TDw29XDBUGi5NMNF21X/QDvG9IlDhKL+6tnwH8iSfA7lF2Wt7jPvwk\";\n  b +=\n    \"6HuFcjYJt1jBYa7eBYOJ8aT4ADsGOvDiWylQQwsf2AsDWJglb6p+29S8CuK4hgRWwlUBS2rR5sM\";\n  b +=\n    \"qIlVJ2i45cbDQBTpeLqqBlZw1Tj8L3h2mezNyl6PMpDqyESVLHhFF0faxrhEPOBbSo9aYhpHJiF\";\n  b +=\n    \"OFAbxQ5zI8i3dEv0IkRzIrzSSpBfysZRRm+ExahuNp0r3SKBgyI1EgyH7XK2P/K6C5IpjaUrSJM\";\n  b +=\n    \"a9xQ9/NfQTkRJSrEk48xCjVgMIW42V2Bad4UfSFJqnujAOgHai+Q0yNb9BpuY3yNRcg0xpiEPWm\";\n  b +=\n    \"ITejJt0bKQYhSO495Eww2Gy9or3WV6ZPsOrcJl2V2TmJTYN3fxMkz2MrKJgYqKhc4oZK7pqGBkl\";\n  b +=\n    \"Cy8czsjnXaPHOtZschxrdG9G1ll+DD4yVKD7mnz4iXho79uMyrNFm6SynW+slDdGx6gzYGKRtBb\";\n  b +=\n    \"XBiz6MYl6GyWEegsv+Y/Pslc8Wqw4Qc0QuvJRGTYpxOYsc0idLyhTQBqdjPedlzXizwDbEN03yY\";\n  b +=\n    \"i/M5kyIU4lSFWYmaOTNNjtc4wdYMmlqZ65X+SLlFLf8AfJcdUHfFBnS27dDZ0tdREEYJFomBUJX\";\n  b +=\n    \"4Mu0DIPr+apdKWQOS0/080PdcLwF9VdyRG7aWc1SRFFUTk5NBieDDAytqAaJ8uWTfBZESGVqZNl\";\n  b +=\n    \"fm54MXDJFoapq0mkrra983n49PTtDsP1im2OqTec9lXGtcXsRmzQn8hAF82GHErUMRYj4Ons3IE\";\n  b +=\n    \"aXtSAgRhCTBgC4Pb4d9hh3lo83HterPRYUDpFKvqRuSvDdoDj9N6tx9qNq64zhkce62rzZ0tt/i\";\n  b +=\n    \"lUeXdslfecbpW+Mwp8go13FCseUmOv8aYFC7XCmy7yJuCkbM4LS5Six1W6B4rp17BFcHdtQJ5RM\";\n  b +=\n    \"mOWuBSXemSlJstKydw8BqpVGnY7AVlJQno/jYNHQoqT5FpkRGAFgNsEBgnDaEcq7tlghqA60Y7g\";\n  b +=\n    \"TAcOEwkKm59B3kQJ/R6THUFfxVej02YjwvFPIhT/egkEcVEPOWZnl+1Au3hrDhvhWN4mE/Z+IxJ\";\n  b +=\n    \"HJZFwql7ZW3JbsXFQlR2oyrZUZWuusnVslf2pyp4yzoRTZyeqswPV2ZbqbF12nX0FG4DMnGK+Dv\";\n  b +=\n    \"x92FwXAmQ6zdwVFiO1EwNGWBpWqNi7IclB5QSVyAOZYRjfSdDsanQh5hZd4CQVxWAEcvEpR2aha\";\n  b +=\n    \"vhriC4xdepUlRajx6uXYAvwrS1aJUVyEDQI8TG7wewvfIeBnV/QYYCjsTyoMowLlpXgmNoIfrLA\";\n  b +=\n    \"4SXJsGbnkmJ2MSheUqxIgZCULjTiw7sKxwKwRTi0kAF57ArwIXE4LDQHsTikjIpiImjFRkMKhob\";\n  b +=\n    \"7lPh/Gt64HCeUtjGopaq50yC5iCZPtyieDTsYKBwzhU6LWcwisYJFnvrIJlolFQ+EoEGcjEMSJw\";\n  b +=\n    \"OZFnHb/EmNMZO2k127ZPvgKrJO0iD2Gm6OhPhhuFWhvp5NnlXS6jyuMXNl71S9tYn75mdqjBW0e\";\n  b +=\n    \"N1T3WGnuqkG+XUoLuiQB3oIlOchVdONQDCEYq9XgFuJM+9FPsd+ClJVZWolpKrL1K0xqZ82eVOf\";\n  b +=\n    \"QcqUqT2QOlumdkCqikhFhnscBBz5A38vXW61pL9TOSYlgiM6JrFiXVNEVoCMQAYjUJBl7nNE3yx\";\n  b +=\n    \"2GID4yuQJD8xr98RALYq2EMRoC5axwQpumJwIYQzAiQBUkSKHaoVX2+q4rMSQYFxpGw15ttEsWr\";\n  b +=\n    \"mljKKSAfmILKPQ3AkAQHWMrEPGUZh2AY3wfzrG4JFWUh7bqQNs8IOHJHAULBWjErD7ASHZjUY5V\";\n  b +=\n    \"ffd2Oi/ccB/Y54RE6ayp1hEYk8hPH0bIrzURC8nVngptg5OtCo70YIbAnyoPiQampKFByO9R62I\";\n  b +=\n    \"uC6gwqbqZ6awYT4yEi+h6Hyw7CYzYgAo6Nh6g5ITaIoDJag7yh8J5MxUZJQP7ESNMeWs7Ug2BXE\";\n  b +=\n    \"MOZJNYKr3fbmNw5yEgDgSv0DqHF0KOI0s8ghAlziQl5x2bXu/K782rCaJ6j0ztR3+W2tb8/1p1H\";\n  b +=\n    \"ZV7NmKt09dbp/xHPVSQhWaHPRSzh2FneJ0uYfK+RBbruKUqzjlqr5yy4yKW6rcUx8dnUZn/Q+nM\";\n  b +=\n    \"c/SvP7bJO0yyGKbXZw1txOGs2hkBBKNO2HY854uRjVKlrxCdNm52pmrYYVTwwpfDcN9x7GNjxLz\";\n  b +=\n    \"Ih1yT/pbiFehaPS54CvBa295TOyb1BPH5JU8yl3qHsSQaUDIgxwyDWk+pUFtISh3AP9HodXwXcN\";\n  b +=\n    \"5ZDBR9/ekePu20+3JgR3buCd8JXpy4NVtSpkj9t6zp13Pbqee3U49c3ZxPRl+tXzMXI799rrv2+\";\n  b +=\n    \"vOt9ftI4KEUpgovoJK3uBKro7tDMMUG6fUCyj53/zBPWtxcKyzAAXAwNORToYugBMsOFa2lgF1f\";\n  b +=\n    \"SJYmm9IUScB7lutSXyEQ59z8fo2I0GTbofiNHW14Bdcm3LNY1Nul0yWoc+y2aRPHBR/C0gTEzht\";\n  b +=\n    \"loCrH53LHMtxTVqOn6FR4SAmMaNyhope+fpfVvTGb0sXfZW/6DM0R6Ttl6OjU+xXVIKJCV6q7gZ\";\n  b +=\n    \"zy9li3r+islnKfTpqClM49rzpXIXlFf0RjAMKtfZJyT8kFXMpmINs1M9Uj8oaqWup3BVqjHwr2X\";\n  b +=\n    \"xKc634wh71ouZG04yxy4uLtctboXoOOX+VDAatFMzZmhS7/JNVw1pMX8Sx6snjdYZcmo7XmY14Y\";\n  b +=\n    \"rvOa/pDQh2N4zCg9YyODggcg/CU41hEslEZwUGruFQp/quso4Gzffj1YjDRLdzj+G1J8006wKNn\";\n  b +=\n    \"DdkDgAqaDRerROyde0goLV+81rUjJxlAMh6w6VyhOecPVfpkwCg4N3ErpP0QNji81MwcEujWg63\";\n  b +=\n    \"TxRJGdFtF1dhDkrvHLjwUEaaoBiospkiFBekHxMpQW3FAaPahxCgtoGM51RoOxZ1yDYPJDHuKWw\";\n  b +=\n    \"f5iJ0AfZcp+vGwdyNobt5RmnmrZE8PBvOAUUmgrqKdGl66clw1QYvEitkj1/jkOMk08+qxD7IK3\";\n  b +=\n    \"asGCtMFxWgSrwKv2Ai5mKQsKbOJyyKhHMxCc3ZAimuu9ZV9QDmDhQ+MVWbi7krKLJQASPGkxiuY\";\n  b +=\n    \"1D8SyJpMRylsESkRWWtpK5HUWBaEJMg3GeSLFx9jRsESJZIYvE/cmWjk2wb9fTAotRh/vsxPSpU\";\n  b +=\n    \"5CLN5o7V59G8KEXEzJlqbq31z4OpUCruGzwVxIX3qNXBoNwhCxw4gReJQk6p9fVZlTVPxjD1RTH\";\n  b +=\n    \"MQNtqEuwADjskAzTIvwJKLEjygjM92Jr4ZSrBZzCP9VzUaReCGpLDa0rjDvnIskGXoXV1TJiXSm\";\n  b +=\n    \"80BwrJACDcEahMoyXEd68wSUpdaaujtBWJwyD5B1II66isd8x8OYkvBUHlta9KTROyrXxoRVwV1\";\n  b +=\n    \"Is1ShmvwQ0cMBI1CZgJwnNilpiYfHYqWIgkHACtbMWcHbQ4igwhuD6lOTJliGcaSLHxWlorpONW\";\n  b +=\n    \"AwBpayne79qxY/OPuLwMEgTxtx/5nF9y2d24FgkB+cvPdj+/d+fPOXgiBnPLhb198//Ats59bNQ\";\n  b +=\n    \"W+qpby7Yxfv970xJZFkLZE+oF7l+5Z+NyHaxMwIl5KSdGWZz+/9albzkVJTMqn3+385KFlc+f2A\";\n  b +=\n    \"VZEkVDuhYaDY3QFj3AHitKssfmZoNioWVDt4Dg0tD6m9yK/dHB2bIBzof2YDRhNFI1lwnbR1m1k\";\n  b +=\n    \"cC2LTC6ryGRPkdrxiwyWLtIqq0jLU6R6/CINt8hBrjUsEVrECTM36wg6f0SlTZVkc7Q7KyCxUzl\";\n  b +=\n    \"KMojw+AZiiZnXEfa4GNKeyE/YfWGpgMlBxT4GpJdPycJkAJtor6Ukqoa6Z9lgRrGVcwS71xIUOw\";\n  b +=\n    \"LXyFmV75UkvmMP2LDQJ8kyYP6dwNkItRRrZGogNRXZClFxcra9b902APA34/gwRVclzhXpj4Ojx\";\n  b +=\n    \"UU2IBysF9nNQaQIEw9mP4TpSD9pFlTWBzPcD9a+lzQGcj+Z53up7vfq7SiZzTOhXD45ygJuqE8E\";\n  b +=\n    \"ToGyDKI1bzqm3mjK21iJwzB8ZjF5EkOaQhOUzaU6/nFPulxqG6dktiXYwMYquDUKKo/Af35zAJL\";\n  b +=\n    \"C++QQ8T6rE9NndBIu0+aEQMVeDcvzSz9Rql2bMBVVbDBaBqFvblj8cYK0O1auHlwO3HdwcxM8cm\";\n  b +=\n    \"1GY/RsHqUnTdg/aU44Y/ATx7hlU3gaVnMIkkVtpyh4OmEc8c67goVbCrcR9PmylYoToZtUxY6Fr\";\n  b +=\n    \"up0zGANF5vCqWQ+ZSAoWIwOtBrye2LuvBRAb0tbQ6MG8y7djTTOnyM24AtZvnVgMHD400GM5A9w\";\n  b +=\n    \"2rjALtnLp41Tbase21bd19YrSDqzUJc0g0KvKa5VCSVRCgO/lCTSUCyTJZgswaQssshbZFFskUW\";\n  b +=\n    \"xRRbFFlkUW2SRfsqdNmI7bfg63dehFDqxLMiKUmxAZaSF0OQ6ro3HENASHZjRfF6hgxoyBWjLB3\";\n  b +=\n    \"psJdK9FI/kMF1o2ctcplYGlymZLpVM+PpKS7YyzIjZiFgq7wx3GRocw8mrtmN9XX883omsO8gHR\";\n  b +=\n    \"SUFP4Q+xCVHHCJyMRgYKxEOV+ajQVqpeHzvZKmxqcjVCls0ciRUgrVRHVgb1YG1UR1YG9WBtVEd\";\n  b +=\n    \"WBvVgbVRCdYm4itakeYBSQqjLoirMNOeJCWOloq4MmlyiKtq0phRcUwcldotNVH0tTwUZMxEuL4\";\n  b +=\n    \"kplB5EMAGyOjgOLtIuEDJ81JjKin2V89uA/5xx7PbpOwgcrmPmBN42qcax8VieCv26UcfIB1NbM\";\n  b +=\n    \"nPSWfLGzyfll3Uu3+uKJZ04Un4Pc3xKO3CHqVOUZqnKO3ERX105oparf+porxj9dGZG/b3TqeoL\";\n  b +=\n    \"ix/ijWhppgHuNObb7n20zLygSQsaLkIwQ/KaRGO06m2qFvpITcPnM63K6ugD06nIMthYYhZp/Wd\";\n  b +=\n    \"BN73xI10JGgSOFrq5NAGCn/4E0DSBdJ8RQr1WSJFCDFg0wQjq5fZ2qf1M9TtZ0+noC4K98miLQm\";\n  b +=\n    \"M6Sdy87mnZJ7juc+CNoUCUoLgULSHoEXFaZsGwygfj0XiDMXgsSgUNDrSA00IAX9m6g4FwM5VUs\";\n  b +=\n    \"SqUjMLmCQaoYyK8bUJ/AxVteg44jXL7hb7SZkJJhZRIw6YsEhi/Bs37XEiG+1h/0eQ6AG6v7k5S\";\n  b +=\n    \"BJZDJmNAMhWKyD0xJECn0jYGZMdrjQe/lyq1Il09oeJsw+8CYYe9opF28AyrYZEhBTXw0lg+xY2\";\n  b +=\n    \"BG6kyrhuVyhyi9OUGPQf3OI0Z4vTnC1Oc7Y4rZrf1B73oY4KSkt1V24VJuP8GLlVvE9uZXo5+Eg\";\n  b +=\n    \"nbK8GJ+XTFn55PhdJ4yQQns4GcSZBLxqkf6xN+keyGYgn1FDWhXf3nUaqsWDTiaGx7EsZBeMHGQ\";\n  b +=\n    \"UjNgQGYB1ASS3lIZPkzsQ4iYHbGGcXVbIPiUGuJeHCaf2TVKm81w7E2ztr2EU1ynmtNwkMGGHZb\";\n  b +=\n    \"1oP9l8eI/sIswpoKy8dS8wPEAyVDPUv858UzZ8CBCiBRIFmD51zkVLUxAOmPA32UEoZk3lC2YGM\";\n  b +=\n    \"5y4ZaA5gRP+jV3Gf7PMmNqiRtlL/IbjMDqI55ksg2Lo9eFLn6D5lNEQRLXHrftdb3TSRsOfsRGX\";\n  b +=\n    \"Kphe9yhR4emcgYmNjRP2PBWQ8OUrA6otDsYO9czPIKFQUO0yFvRCvDtBVpO2fEPFGLvJyfeTA63\";\n  b +=\n    \"4CV1bJ6qIIzpIURmmMw8WdxQcynBDiJ4tPIEnEGxqMj6Yx7VVgbUTa+TYM1V5TLOhORfPOoIOaQ\";\n  b +=\n    \"YCUm8R98yWtpmjFYodt78InXdfY0j3cCiItT64yYrkqo9BteW6b55QbaQuYIpMozCIFr7hQZxse\";\n  b +=\n    \"ji+sUmhWErmY/0KPDFjXt6uRS+DDqQ5EnFSnhdmIVSElu/dMLWXGMP/sjZ8+j/WCuX1ojNHBPBq\";\n  b +=\n    \"01Xyv6gXVhuTbJPZ1sSd0hZepWtsc14GUgnTGASN3sUdNGgN7YpdEtRZLHmDACixIKpFkReKgIZ\";\n  b +=\n    \"wWxMcNjhRHv5C4DIkTYg/xGhIAcUetZbY41RcuiSST8aA4w2JEdTUGqxw9EFyscsQoHxljQqugn\";\n  b +=\n    \"QN8QD5BzHlum7tgCBxPPlrmPMJvHCbRk/OpnZ2eRFprDJjpMfSHDC0c/bXKFlmwEmcEHRmUctqw\";\n  b +=\n    \"/h0cqq+wHZeUA83ZTfbUCtlTi0W/ext/RYg/uJudK9v7MWXbKPHkX1eNlghYK8/BrSPOsdJmlPW\";\n  b +=\n    \"jYmDKb4A06HYacPB7TwNeWc/4wK1glCpmi49mH9KyLZAN2yuWaBS+RFzYm2ZJABJR5rwdYFYgpm\";\n  b +=\n    \"ukRSlCv5YoAYdIc9LeYKWlX1rne2ld6ZcuhoVkeha+6S58hYVGMR8a0pFGvJcpnd3YBUjpVGb7q\";\n  b +=\n    \"pB61tyvR2S7QH0dEg0L2RquBF4V5m8wq0PidnKWeYEVYrX0xW68CXrJKPslEPakiL/kVdSSWag4\";\n  b +=\n    \"O268wzGFMcGMlIEJ5q8UTHhfC3lfC3lfC3lfC/leC3tfC3tfC3tfC/teM72vmd7XTO9r5nhJ780\";\n  b +=\n    \"7QuBLhMCvKOs7EM9ntnuBVd6kZUlhJEDOatI5U1+j0etL+PWP4+j1jXH8+kp4faXqfX2F6rxepE\";\n  b +=\n    \"YuPtFM3uGfyeLoQOSPoClsuWsIImwHC6iahgQeAuZmXWoBC3SRK2JnwRFHBWTBPYctZOdxkmg1c\";\n  b +=\n    \"XgRFah8HNgqC2LaRomjgJIKnh/C4Dz7qji8NVccHaP5fgh9RM0PQuxXYxaGSRJlzjb4YpYRaR67\";\n  b +=\n    \"1ZJWeVpIwitrimuIIrfX49eyM1hGLY1jXOJOxETVJzUMC90cxCwx0iAIFlkIKyvS1NED0zpSy1h\";\n  b +=\n    \"HtoIrD9X9zU5mtYoXUpyl2oTf8BolKdI4igdrNbAiB3CNtip/ZJopZNT+KIvxzWlyeG40IvUVdr\";\n  b +=\n    \"aZqbEyx3wjbB4LkVrH4kgwaqSF9D/GFse49bZRwo5E19I7t1EqSElcEzfMgMcYiZ1G2AwLHUZKv\";\n  b +=\n    \"F3eHWuHtVP1ZkePj93Y5calNTy426IVMCOGznd2zAsVyquQYaNd+LRgfSPmO0E6x4m8u3VkSlnD\";\n  b +=\n    \"40b3AO/oSoqPLxJDJRgjHCWx/2EoYlhLpao5LFhru0LZ1TT3ykyB7VWYYQ63oiEFg3wSvQIKqhI\";\n  b +=\n    \"f8b2iSEfgBkqY1coNFBP0zXgV30qPj5zUqL7ujqq/AweArSlnnBrKtWSDX2aereUxNcqyyZkC+V\";\n  b +=\n    \"dEImqKQWMMpnElDYjElTSw93oo3Jq1z6vEWkaakA0JZS9milis2Yc92Yv2xGZP5tIP6JT9gG4vm\";\n  b +=\n    \"u1m3/emk70p2fNw/uIQFx+yN3nyP/7OCYs/7Mm+4iMnezLTHAh8BTGsCWoKbGcfoaQ0j70TzWM1\";\n  b +=\n    \"FKppHdxwVDIEoQbHHKBL5WVIyj5BhoAsIaGcDOIowDnaSThRlE85iKKqvWcteyuhBOg5SFWWqcc\";\n  b +=\n    \"hVQk8mRqXzcY6SL4uG7s9SENkxxGHhJx1nOSQZHQCad5JEgh6oRq9AAwSXjPYmFh5JhsMEukR9B\";\n  b +=\n    \"pfIJ4/ET2exA6ZyPYDGnv8qGTXh1u1CpNCiqJATnUipVW5Qx6XfYIhX6HJHEC1bR3wKUhKNtVwc\";\n  b +=\n    \"NjiHdWZPEkJPrkILc0E6StvNR30rybgFxqVs5YKZ/vWkpO5jKm+0r+SIHPj8tbRDv86Ol7RhTf5\";\n  b +=\n    \"VhFkrh9jaio+VyvcqpFh8Z6Emvh3Abb2RcnknEfBUggPabaKaPPIY3u3SMYtcHiHWYbDREQuLHO\";\n  b +=\n    \"HsUPENRx9hD1FzU1iQjdkcQlGlhT8IHu/rVRddSri8oiJ1uBk4ziI3RnnIotPUhzBiauPxKuIY7\";\n  b +=\n    \"mwAQEf16eok+Di8kSlFvblUY0qPdCGB72NvaPQHXQJrkjCB6gUTGUgY0V77+yYfEcOPC/zXeD22\";\n  b +=\n    \"HH18/QVfsStSFKpbMvV0vmWq5HzFDccgVwtJIArh8IRdZEmvtger9oFMX90i32E0APoc9GPf8R0\";\n  b +=\n    \"72AZ3YMYB/VjkUJIFISyw0TF/MUg6iGmX11HFFF27xPc5+V0m2taoXlrkgEM/6OS7K3eCVr0iOZ\";\n  b +=\n    \"tkWqRdgHls2SJRBqLmwIKt8jWy9+rz2dfZMOePEYeL1QnO3988cYGpFkmxVGMx17GKBZqFUbwgG\";\n  b +=\n    \"/RYFv2Xs+cK7p5O2jlYbukwHCUKdk+7Mn0uJvpApy/Cs9fxV40w812yM3WECXs4qNyMNPZADPvy\";\n  b +=\n    \"brzltisRTfJrHBl7/VmXThN9VZ+iCnnIcGFeCuftUP1dsTp7aKZbqbdN8dmcnq7yZOpxM2EFRYZ\";\n  b +=\n    \"3DLD3uvJtuKWcio87Mn0+G3lVLjIs0PsczPVEbMrxqTWa2EKzVEJSt4GylW42imDztLkDBE5n5e\";\n  b +=\n    \"6tKGPM/vHTHmRjvxD5tHlXlzoWRc2yDALVSeXSzQK/YS0EJhuCIYBkEFivqa0n5WoT7L0GeJyyg\";\n  b +=\n    \"AieueJrotGI4Y+KWhRYAhi1KpViWy6w3fQPzthG0qMGbzCGb652ViOr2dmrvTPTMiUVMa83OGfl\";\n  b +=\n    \"05G36w86J+VTrWeOVk40zcnneY7PVzpn5Gle7jDPx+dqjyz8aB/NpauqnCWby6WrmqlfyZCFitW\";\n  b +=\n    \"Ba+NtNTuDinbG4gcP8MekaE2U9wyZ995TPyscqYdNHD33bz/IhaePfUejyRVsB9DxGqwp35Bh0G\";\n  b +=\n    \"QxduFlOhcJYL3UUloq9iQUpMPp14d5TgPax/vYdzxHgou5Bwm5Bppl+MgCogYEtYIsF0iSlccF4\";\n  b +=\n    \"q6CkUjYMG+6gSvYF1ENT7i6QUs9YG9lgbZLt4Hqtda4OwESlitluCyLsUdxk4Wn+MdlRS0HxcrT\";\n  b +=\n    \"mgtVIOfI3d3iRsnMhfg9GAUJnFALRHDHjDHE14CJAxzfKRm6c5j11UlchaVyVp16rcSA6QWY74X\";\n  b +=\n    \"qUO0S5RG8zjGzhArQgkIGDICD8mqBrNxzCNHAxGyws4j+ib4VtmP5G2rglXRV2BMXXXKr6tO+XX\";\n  b +=\n    \"VKb+uOpGq9DVLfUr/IFE6Eu8fb5XsCpAbAd1u2DmPobUdDr9YB/gETmeY71BcefnwiZNvZ43y8u\";\n  b +=\n    \"ETJ19RufmKZL4aTCbMREAUVAPSOjmCXZIeXSg2hZkJbPk5CktNFQKHV+yGXWpFzlVc4RZB0IHQU\";\n  b +=\n    \"Mw2MeY1ELRhpPit6+QsxSnVJrmZvfsLMYcr+xDxapTHOzmvfTZtu1gHvteqK37EWqqrOq9l/31u\";\n  b +=\n    \"GlhKoDkFGUvgUMDtUuuzhnd9kswYahYlmQrxjFMgDrw6ckykksvgzlC5IofAsAVG5GzOlOVpE93\";\n  b +=\n    \"jGHUqnWOqIbko5t/utUA6gQvbO5vNlnjLnmrhj8glDtSlc7XhxjTQwmx0wnOaK+4wstQAoRdT2F\";\n  b +=\n    \"VaY9YkzTlqIJWqgmNckIgHy5F5+GqKQhgsm1ZxFCQ5ULw8YbArO2dlRPGoTDBuMmlKwyINjchTY\";\n  b +=\n    \"9+Pc2+o0oneGVTvF+V7qvfeOYqHk4ohwU4AK+euU6ZnXVSTggv/PKCbGlq8RyooLEaWV8uC1GTv\";\n  b +=\n    \"PKzsFTtlRbxiqix8SB3MMt8MyCSNx3BvMi42GTZrxD6t4XbDCehYGSif6gCVGiCxkn1AbgI+bVX\";\n  b +=\n    \"i5DwNNpFYeG64TdYLvB0wRApfL/a/bmk8p+SE8iv7nUEx1wDKOAWSNmxtjKAtUIK31eP5sTjmjr\";\n  b +=\n    \"GNcU7KGmMHxjlrkb5InPMtzXbexHk0hWnvxg27Cq0I2MMx7VnTv6ve1B+qW1BYsFNxHl6L80lWy\";\n  b +=\n    \"vTOTnO9/8ZBVdaKMxUKi82w2f/G5/IGz21zlixC5sj1pSe5aZzLE9wSMb3caQNOkzinDXw2iemG\";\n  b +=\n    \"vFHV8wZGCo1URBe6Ajuch0PgatrjXDlPTTk6pPzggROPHgx3lgkLE1zEVA3fqkhUxlLGRCI8L/Q\";\n  b +=\n    \"xzht4hncmIUyQLM9suh9mEydr6h0E60jJizWpD3K+n7kr6JmHIj1fxWQD3claUWYdGAmBREbwV3\";\n  b +=\n    \"FOVe9rRM823SNGpRqsLffZWt2TeC0sEva7N22HYRHsfkUWzk3J4go2mLt0Kmv2/aKsUGxZs0NuO\";\n  b +=\n    \"/7pXnZzLy/EdhM7qpofqThsZFysurkucC+T3cvW7mV9KobWiDnXU8xcTzEp7u1Fntuj8bZtIQdM\";\n  b +=\n    \"nVn48jZQA8V05i2Vu2/YE8Y4l6q8jIu5HCdZwRWkhhLbz1viRq2qiqJ4yvxY9SQe1zyJLZrb2Od\";\n  b +=\n    \"19/oBz/3Fnn7uD0hCPl2NhOmqprw11bk1CmaDat4XoL8rnbdedK72OJmHyou+8tlKZ7soUuXVAi\";\n  b +=\n    \"e/LS8ayGeznWfXyVsLnVtN5UV3eVFJZrrZKf1X6iOt5xyZ8TL5eJrToG9oKImUfE+3U5CB4Heul\";\n  b +=\n    \"jlv1HBJCLaI/47Ev4JnoL8TYHLLuDe0eu5V6W8RvWpu5fSN/Pd5vn8H/12rRYLwdzAl7wlGAiDF\";\n  b +=\n    \"Fb/mXqDQHphe0WoXlhcevf5A0Y4l0x/+uXAKpOb+9O1779z8/I4HpoiicJ3AX5jo8HeTGBUouiQ\";\n  b +=\n    \"eijk094/D+/c/tq8SJO564Y5dP27+cntSRFdU/Bf59me1sRhJwapFNl/QNG9sfkF60/SL01s2S0\";\n  b +=\n    \"5Ly0hOS27WPO2S5s1bR9OHtr4oPb3ZJdFWrZo1a5Z2cfNmLZKbZmcOzUvLm9g0LTs7N71pfp54N\";\n  b +=\n    \"Tc7O5pekJmbk990aEFeNNo0J21c5vC0gmiTvHwxz01lsPg9pipKU0Vx0u01RblS/P1L6s/NgLrT\";\n  b +=\n    \"8vOjeXDfGpaWmR3NaGNFM4ZHm4yIZg4fUWBddpmVH80eJpONrWbKVNG2a0Sbpoi2VRB/SxeQmTH\";\n  b +=\n    \"Bamt1tPvaHbv3HyTzTy83f1kVYus8tSpOvct1KkemexmKcq4nfTOnS9cjxqFJdjQnqQHUkpFfQA\";\n  b +=\n    \"n53ktBRQmIv+li0KIZ1pA+o+HlNm3G5ozPSxud1GCIJYpKs4b0zs2JDrHGpWWPjcLAiqGmL1hdM\";\n  b +=\n    \"5WK4u/PGn1Dmf7Fl75cofbLdF9feoD4V9mTvtr3fLDveYbveabveY7veb7v+QTf8xt8z2f6nt/i\";\n  b +=\n    \"ez7P93yx7/lS3/Plvucrfc/X+p4/4Hv+iO/5477nT/ue7/A9f8WX3uNL7/elP/KlD/nS3/rSP/n\";\n  b +=\n    \"Sv/vShhqbruhLV1Fj23+O73ltX/oCX7qBCkE83XQjkY73pLv58vfw5R8g0jU86SEi3cSTHibSyZ\";\n  b +=\n    \"70LN/z20S6uSe9wFf/Ml/9y331rxLpDp70OpGu60mv97Vvs0i39M4Hka7pST/rK+81kU7xpN/xP\";\n  b +=\n    \"f/A9/wjX31f+tLf+PKX+Pr7m698oPGXe9KaoA91POkKvnRTke7iSTfXYvt7qUhX8qQvE+m2nnQH\";\n  b +=\n    \"kb7Uk+6sxdbfTYttbx8ttn9XiHQL7/zQYsd3kC99jUh38qSv89G/dF96rEhf4klP8bVvlq/+W3z\";\n  b +=\n    \"t+7cWO5+W+MZrhRY7/vdosfNzpS//Gl99z4l0qie9y9e+d33lfyTSjTzpT7m98J8K31/898c1fx\";\n  b +=\n    \"zTVj6dGth3d4Xwvksu6nbDnQ1SV3+Tr3K+MP89hb1IZr0imj82u8CfNcca0jkvj7NSOwz+J5qn6\";\n  b +=\n    \"J72wb0AX8O/IOylVsHY0dlRK3eYlZ/5r6ilVDDFrqlg/+L4nQhfV8L8nTLzR2enTbQyR4n3RkVz\";\n  b +=\n    \"CtJwK86LFozNyxHtFC2K5uXl5lljc6ITRgvOJJqRPfHPszn5BXmZOcNxQx4u2tgD9ssKRE/l2Gb\";\n  b +=\n    \"miEHIzKChaGM1smT9ltgbxDtV4JuKvxFPXsEoDC8YYSlHfM8re8atyl/Fp3n4xKSKxBcuEv/qiX\";\n  b +=\n    \"8yDXtg/VObL6Nzsyfm5I7KTMu2MqLDRUVWQW6uNUIwXE1H5I6KNk0fkZcpmpCdX1BALYMXoA3fi\";\n  b +=\n    \"DrPg31ATBzgy2R6uEZtkOlXfc9f4+cnsw7k/Dc98xROg2eJf2djP0enpWcWTLRyx0XzhmXnjgc+\";\n  b +=\n    \"JGJinj//DcZFxV8xJwYPy8sdNTizIJo3OCeaL2YIzqv1op7rFKKpZ53Z+qITCqI5UEvtOFPpL8p\";\n  b +=\n    \"uxetJjkfvsaOGRvOs3LEF+ZkZuBxH52WOilrDMqPZGU2uxLnquWNFae01WSXKAxpdjcuC8TwH2l\";\n  b +=\n    \"72p3Z42n3iPdiLpoh/HT3pqZxO6Zk6OLV718Hib7PmF7Vu1rX54IG9OrVJ7WY3bn5xy8GpqVcNG\";\n  b +=\n    \"HxFn8G9B/Qc7Lx7p0L7m0xXVmPTi9XYum5XiR7LdEPm/+G/PyBsBtCwbrry62OFA3/ss+Xrb/vM\";\n  b +=\n    \"WZIbeG79oIfqxZ9onnWKpudNxLWSOiIt79Ro6Lk+mlndM1dhP+2Cpw6xqqz0vKhYv1ZeWk5G7ih\";\n  b +=\n    \"rSF+xkIa0sVpUBvlbud9ALjfl2sq0fs4TFSUcr9yUzHFpeVg4TAxe1G2sOeJ94M+eFH+B1svyWj\";\n  b +=\n    \"DfcCbGsaZnLGoBj+pJwzfLiIqzmCA1Yu/IsIZOLIjmWxm5OfULrGhOujjoCdI0PC937Gg5X71D0\";\n  b +=\n    \"iQ9LW94btO86PBMQdwn4tgMzywYMXZok/TcUY2bRdPTWza/5JKMoZdE01s3v6jp0EwssnGzJhc1\";\n  b +=\n    \"uQhzZ0TF22m4eHOrmMpAWEe8rkSJY9MLLBg0a7wo1GommyDmWxVaM+f51gy/0zF31KjMAsjqezP\";\n  b +=\n    \"OpO9KO6bMnTl6hDiNigVOuS+SufOVFiJ/fU9bxg7NzkzvEZ2YGi0o1aYMkTdRIX5Yjq/l2adiVr\";\n  b +=\n    \"3YbEfniYHnvfev2JtGpY1uKsrPg5m6Q7RtCMxPPg+I9ZKWlydYADEZef9scQr7U3fuEvIbbfBPv\";\n  b +=\n    \"jVKdEF0ssDKhOxj8VlSMqyFBkp+VRO/6dSqNEb3iL9y3nYU7+WOUvC+XKPni3+p0TFjxRSM9hLP\";\n  b +=\n    \"u6WNi/bEdqaKYntmiq/byZ22ds7E3rkFqWNHj84VnzGDW9c/bXhnmG6C58D9WJb9D/GPs3QUhEX\";\n  b +=\n    \"m4VspubnZzmvKBZ736rvvDSgY1trJlOTJ0wDy5Ao66Ll34RnZh/LSxg8We5H4lv3zMonE5Is1mD\";\n  b +=\n    \"MSrtKsbLEQxeYj996Ss0zs80rxt6f4ez+f6wyHh7V3rCpWIvOanmiX6XQ2UfZVzEXJdHU1Np2n0\";\n  b +=\n    \"e4vObk/QyZGp2UCp9g4uUmzlk2SY9uzTNQHUpg05nBPYdaOys0Ymz0238rMFxQNqHOeVTBCrISx\";\n  b +=\n    \"LVu0adPLHljOUGTmFOQKbkNU36eaiVT+LObwTkR5G3k48MaesemE5L9/bm43wdF1EqQoM120pjO\";\n  b +=\n    \"sVTGPO+fkjh0+Ave8/P4jonKzEK2WTKA1LBeaHrXSc6PDhmWmZwKtgnkwVGTLyYhOQEJOSxBW+8\";\n  b +=\n    \"ei3bBrp2YOz0kTPL6gfFi6eF/QH1yuGbIVGVSCknyOiTNXNEhsBNAiscxjX1cyRJ5a7qooQ9gIR\";\n  b +=\n    \"VltSWqYhxt3fpO0/MF50WFJDUjC92fmCWyug9Nz86JiplzcpBnmHyoWzEigeOfQbrKKJTwyvZcp\";\n  b +=\n    \"tEy/5UsX80r/8+0akSb+L1rWvElzekMwhjSHrz3XVAaJv/O5rvvX4Sx64tix1If+OHb/efV+2vj\";\n  b +=\n    \"TijeSh289a8YPhT3GZ7y9vkfHR1fX6rH0symXfFlVrXkKc/5/6psMrB77TWR6cxkc75ke893VY8\";\n  b +=\n    \"f8/+sYLouPHUOZ/jvGsFqN0x7DP8U1Clos2nNRk1aerWD8iDTxX3vlftGmfjAWKnGNMt1bxYinT\";\n  b +=\n    \"nqALz2I84vTUf/BKXanwakd7Z72FZjs22Nw99TB3Xt36d67e/9BeOvKzld07zJocBe7e09M2127\";\n  b +=\n    \"XjG4/6C+nQf36p7ay+7fsRu92ad77/6De/fpL94e3PWKPgP6+m736T2444ArruzsVNu5d8c+nbr\";\n  b +=\n    \"37oo3Ugd07Ng5NfUUxtXZ0Zt4OGGQ4IEUuJnnXnMSWeXk5ALvmT42Lz9zXFRw1mnpY8ZmCpI+aq\";\n  b +=\n    \"xggOGdWnzyOU2OJb8gg4Q9E/Objk/LH9W0SZOmY3PyJW/WFOsR3+/aWsSRVlfK0zzlWO0us5L/f\";\n  b +=\n    \"Dty0puOGp2P4qdo2iiYyQdF3SA1vJUlF2Voo6Jia8xokpk/OEeMdZJg6+Q708p9Z3RBnpUgWuzm\";\n  b +=\n    \"vV1xT8Py3nK+J9Pryy2vIVIXwQOPjYp1IYZwVDRvcFpGRibkEmQmvyCalp3fZHi0IKkBDpVT5o9\";\n  b +=\n    \"MC2TaUqkOmf4Xz32Zvt6Xns3p0m0S84aqcvLO8b27kusSXFM0LyctmySJbQQPIdJiUo/NEV9BEJ\";\n  b +=\n    \"ih2cC+ZETle5tZMwCHBHnvOTV2rJ7n9BknJqLMI3WILvwWIAnrRaBd4fUDEo6LPRw9SPgzMvPTx\";\n  b +=\n    \"BcQZ/rM/NycztBJlAjJPK0VkpzLdBuWSsk0aAEu86zPdmWOd1JDwZ9lN2iCa92djmduUcDPYJpj\";\n  b +=\n    \"efm/nGcqV4FWoNw5mdQwRxyTPe3JF18Cloci3x3M7/4V32hZ3dhv1J75NRjDDp796GRERLbnlJ5\";\n  b +=\n    \"yRuidQ2eAOUaJRk+L5i2cVxK4PnlvMEs5ZHoIp/uPyMQTSpo1Mid3fI41dOxwOFADt38FHLDzC8\";\n  b +=\n    \"QmnZaXYXEDmlip4nAwoqBgdH6bpp5Rxf40zk7LGY5XTTPz88dG85tedMlFLVvsFXVmeOr+TSlvv\";\n  b +=\n    \"RMNlvniVKIrIMXJyRffEgQZl7WzoqNGF0wEbXWCic9l/hYif9JxaFtpCua+e7lT18nREfne1Sqt\";\n  b +=\n    \"3aFpGVYOS2SHWSJjTk40O9/Kjg4rsGonmigFk+8UqHSmk+kb1BPTeJn3XqZJMr2dNawy/fpJ0FK\";\n  b +=\n    \"Z981y8zbMzc4Aw4hka9IkJ9G4maeej7nNQD/lvRJf277zpb/n9Kmsm44emtXpvyDZ2H0+STYKz4\";\n  b +=\n    \"+VbJzsPDmDpDMXFnmLeiZaibTXaY3LdEudNI0yPcb3fLovXWSQpEimF/rStxpUXmo0JwN3m1NgE\";\n  b +=\n    \"v/+sYErotl9/0E0ewxr5GR6LO8TMj3N93wmS+pkGjQRDctcG8PHCnLYZOhYQU8y/xUFSkLLJCkj\";\n  b +=\n    \"mpaRnZnj2aesCy6wEsbnjowOHjt6cNowUB6NTxP8VM7wBrKeejyfZLo30zCnndwOmS5SSRYk04s\";\n  b +=\n    \"5v+K5t9pX5poT9IX244wo/hWcnocNdcpYq5bHN1MZgtVPj4q092X57jpfe55W2SqroABIOaov0r\";\n  b +=\n    \"LTx2aDBgN2nrzoqDQ48+aR0DvNysgcJ9geJK3/iublesp6RiUtg0xvVV3ty1+pNe/soUtgMZAv1\";\n  b +=\n    \"on4rlSqKDN/hDj4FIxIK6gv9tZs0DlMtED8DhlqJ5m4ts7c/OcKxRLom0TaQuCNzi2Hp8LNMCOt\";\n  b +=\n    \"II22wpgPLt8fxHv0ya5l+V6WQhYOMj2MeVOZfobbJdPrmVcZO3p4XhqOYNpw8e2VaxuQdl3me9n\";\n  b +=\n    \"33lGWi8r0ET6DynQNnmOa594lvv3ntGQxgiX9C/njfC9/XKMh8bjTyuWXyueP5bv3K65mT5z5G6\";\n  b +=\n    \"d279q4R+dBXTv3bpxq9+zfmOx+I7uNEwmXRy37/od5Xyx58fxrF8x6+ZvsC2+7pH/ev6vtCVQ9N\";\n  b +=\n    \"mj5O+90C50bl/r7vFmPXPvjsXFLhh+tPmHb3ZdWe2Fxn3O6fr77h1ezHijpcPjdhFdyXvtm7G+R\";\n  b +=\n    \"u+zx6lljEj+Pe3Ph+ifn/h4/sWZ64pzX/hG66uzBg95f1K9D3wYD1/crHqRsaD+nduWse8J9j7b\";\n  b +=\n    \"bEvn9GHzKCuM0JW5HRDn81ZMDX0i9qqjb4M5XXTE6deBr40d9feU9t9cMXbvw4NRfn73up3NOtT\";\n  b +=\n    \"1tZsf/0DD7imOjtUtbH1x204IBu9cuvzX/7Zsabut07zU/vHRW9dQe/x5X61jb5E7jv/jmjU6VT\";\n  b +=\n    \"7U9ZsVF2j23ff9jzX9vmnXBbz8+MvXThu02L1xz9xcPtK1555JFRSNbpsenPzY89+0tfTsumH9j\";\n  b +=\n    \"IPjT+XeNLV5737NDXt1y53Mr1gUnzPw4fvJDlw5/xJ7xyqM1a3Wdcc73lb95dPsP3wzJr9BwQdX\";\n  b +=\n    \"Le3YfcqRifs+rl7W8ru6vkwZdnV5xXfaMzz4f3L1Szhebv33qnn98WzJ27Z7Qp/unTp77+3Tlnx\";\n  b +=\n    \"szPlxwtHjDe2nVLqxYf138iq8OXpq1fsPMNvde9mLva7tP/Oaltiv7Dqz++fe1Pki/e/uFpzz+Y\";\n  b +=\n    \"mLtFxOrRP2rO5523aPLQz/eMuq+9DqpHwaaPvfiglU9W/S6fMrgF8fPuGPxrDUtZl17RYc/unbc\";\n  b +=\n    \"HDn25DXVbqjR+9el1ii9Xdz5d7WfeXifGiys+MqTLS+YfqAwt2vDlt82/uqLjyovj/YxMla/dPe\";\n  b +=\n    \"b3fq8WfnUOw4m95GMU5Wy/37s6LHTqOtjUdc2rUv1FrVb1P3w8HfG6xVWfTau4puPLu6Z3fXTW4\";\n  b +=\n    \"un37lw7eyvhjdeXGPzjHYTl6775KUFn95WVLWo6c0p8zu1GrPrt+LN9727+Ytrtl95yXdVvxu0c\";\n  b +=\n    \"lr7BW9eV/v+onWhfeo10896Zkazes/eEDeg4J/P5P3x0AdTVwffu6Pguzu2bcu84+DMrs98+/yd\";\n  b +=\n    \"26q8cndcvdxGXzReV1hw+XtrN167f/Yv467o165o1PPN1uysr298YcqgrT9EDjzfdf7qN/ulvxQ\";\n  b +=\n    \"c3qBBtRkVH6vfOqFWk6OjGvU6u1Lr1P75FaNPVcwa1+TF7TfOaJS34O5DW+/pMazmmtG39Nh+b7\";\n  b +=\n    \"/sF2ocWvB6veCSt2ZcXPnw6BVZ5rnbVtYIZ7c6r+f4bvU3b9nY4pG42pdcvm5f7z4vLbvmh9wmI\";\n  b +=\n    \"/4z7baC3PT7JlSbsLMwrL0w59djz8z7Krvvyp/v/eWZ7yeMeb5b846N+1zZ+YrU7ld3btwpFejg\";\n  b +=\n    \"7oNAB6v/cAxUaPXXVVRaHG2uvJI6ZWrFkf/64raub9d78rNnJu95qOn9E7Zemv/i3MkfTL+sX+e\";\n  b +=\n    \"3KowpGTPz4Iv6q2/c92rdLon3/3NxrRl7HkwZPfCul59Un6n86Nw3+u6ennPDL7o9K71/1CqJ77\";\n  b +=\n    \"fux6WV10WbPntu4XmNe3aZ+XGzpx+b/+m1j0/q/f3m+bU/qn9x/NGR+3NaJc2oE/r02QH9z7laq\";\n  b +=\n    \"Rj9bsCSm9t+sWvB649Ei+wdP7Sr8s2eB1J2LLjshyb/bnvPoj5vv9v6YOI5L07of8GW9cZ7x0CZ\";\n  b +=\n    \"nT27jjIv+VZldJVnkwZ+U73e8PEdqr/X8Yvz19+ZcM7Zy2q1H9D30KMVn2k6Zk6o7uCEPS+N2dx\";\n  b +=\n    \"xe+PRtb8dsumViHl7nz6zGxdc2Pre1s3bNXp39m2vtb+7fZWDx+5ZUPTgPfnKgbsT/xiTueS33M\";\n  b +=\n    \"YF1zzSbu3SHc8t+eDsIV3njPk04Z5n67ebNXvfFVcf3Jz30sjWN9tpHaYFa5+tPPjDo/G95nz8x\";\n  b +=\n    \"8LbE36t8UCNKV2+m5HU3njk2Pctvnzv/P5K8bE3Bl7z+uFnrIrWM2dXuOXpd69tPeOmm9YNe+eF\";\n  b +=\n    \"tgcntm1z/quHF350+zkbzh/W67xvW828flqlN/7T+OGqGwpnLXnu+gqhHsMi3doMTLnv+RGfXlC\";\n  b +=\n    \"cOeboqs37ejf79p5rPi/R+hXP73/NRKXhDaOX5HxYb8CQt887pzBk1/95dFJC7+4JySufbvrpHf\";\n  b +=\n    \"df1vOTRROv+vGCIU9/2/DQH3caN13RN2nC+/ujX9VUv2y2d2Hlzr1Wv9Vj/H/mzXhoq31z7f3/y\";\n  b +=\n    \"jj8j0dSb6pZ5dqpB2sl1Otp3vavL2vsuWT+uT9dmDp3Q+XvKzx2QcvDHy98f9TTb79y99JG3e57\";\n  b +=\n    \"+vD0+PTOzau9Wzz551cWVWyyvNuVlbs1TtrY4KaWm17eejj+98YdUl8see78L/q8NjDzWMd/pX9\";\n  b +=\n    \"4X+PLKl3SqMrbv3xUdO2Hu29/OO++zKJ9x/449I+mLxwbf9aqNcEq3UsOT7zx9+SpaxYdmWFm3P\";\n  b +=\n    \"JQ/+T9Z0UrzQ5Ep9z38XfKwSHfF6x4Kml3wk8Thz4Wjmx8c8KTnfM+G5sRX3fpk1cWbrr0kc9+2\";\n  b +=\n    \"jp7wsszq9z7xIxzPv7PHwO+fW/ZqsD6+z5c+v6SzyqExvy49apnP630sFlz5AObKlW89dVHHhn+\";\n  b +=\n    \"1JUf93n4zt5XXbn35on2730Hz+9ojE2/5YOfe8yp8EKDd26YnLbxs7H5qSl7W+X8cVe3f529/4M\";\n  b +=\n    \"H63w1aVz7Da9/e3DXR1WmDNvX7/La0+ps7fFhn8D1426N9m34bt6bj1x1z6/zt97c9f6MVtPfyv\";\n  b +=\n    \"ziqwpmw2qj7S5Nn0l+d53a56F/jumQOyPrgfjOv2z8ffyKoU+sOHv/t1UK1q7q9Nxb7eZc2Wtbu\";\n  b +=\n    \"7NvmXf9s+03nTtvUIMX20SWDa66YWH2uqj6zrbgfZcurX9+VvXoooov7VpwrGRAq4cub3DpwgdG\";\n  b +=\n    \"9629f1TVztbXPRckd/7mte9u/Oat6ReFj369vNOq7TOKSi4av+eV/hdenrKt9azfl++v/vuvjzS\";\n  b +=\n    \"vv/q3FWeN6PFpyz4tj318fmBY220NqtglE6ZVfaX7J78ZzZveljhrb99+Hywt/MeeFz/cfs6yty\";\n  b +=\n    \"5c2/Hg9faWThMa1Y7rFDpc2E876/rAy1kPRKcMrGt16Nf8207Vuu8ffdbni3/5LSWrY96Q4P5XH\";\n  b +=\n    \"h4ZX6XPvHDBOcU/fZPe9omzrRrVXk2cOf+3Te+/1C4lo+flF/z2c/0G538V2X5ZmyM/9folefYP\";\n  b +=\n    \"U9+ut/ebB756atGbjTu8Eryt/cP9qo6ru/eRGld1jNZb2/yJRs/PPtTycMbB56/6+e61oz+8see\";\n  b +=\n    \"ga26996LM4LBNrfKm5Mb9vHPchIJw28ySqbt+icx4MbHetr5P7B8zb+75D15f+62hW246f9Kb+/\";\n  b +=\n    \"d9PHJL4t3V1s3KnF/993PPXtbx2Ce1Vn84ZmybetElN77649AGP/38Qu2Wi35Yuu755ofrb/8o/\";\n  b +=\n    \"j/bn2rxVLPnnmxkxoW2rr/+xWrjlhQvmP9EXvqRtGfbX1zt6OI51zTtPqthdvDCl6rOytx6zW3V\";\n  b +=\n    \"zz104HDJ2++tOmt43vSPf5hy5YXDVw984qq7etXJz3/a+PI27bUP92RHKt7b7JWFF2ROWxV//Q2\";\n  b +=\n    \"m3nBvp1BypfbdU+4bPGD7kglHCroJ6vzHzUNuv+2WISX/3Nn9wkDz1geqrXzzhsWrLkgfPaCzvf\";\n  b +=\n    \"2dDbdWbPPTtQ0XpLxz9g3nXZDzyUWTL741fGXhpHsCu0r6Pvl5nacV5YO6c5qmvrB7eqDB1lt+i\";\n  b +=\n    \"Px89lNPP7h18e9XXRuq3v+6VYPuTRoVafnTptemX5I6avIvPy3/6MGfL6zRt/NtXcTsveXOg68+\";\n  b +=\n    \"Gmnf7+ZjLwyNDPr9tZfyPunZo5my5vFFrzX/duTgy8YsXlH44aj5CUUbe772Zcats2tF2ybM1N/\";\n  b +=\n    \"fUqtqs4rN7pt2U7X9PxZffvcXb5zf/8VlG35ZfbBd0uLinHWh+bWbaHWv2bWw+uxvrv7wd7XvO6\";\n  b +=\n    \"vf3ph3X7RGm67Tb2x87cdP3zDr5c+/Orp9401Lx2XveTjw2105h2r9+6wn637w4bYGtb4K1Xt1x\";\n  b +=\n    \"895iw8snN934rh5C3q33NzvwRGTu2TOqNLix0sWrblhZUavg9Omzv/18MSrMz+798I3K/YfXKl3\";\n  b +=\n    \"YYNq8y96eGS/e/u13z0sJ7XDlZMHXjatxeq1974x89dWA775bsObldcuzL8uq/myZdVqLjir7cZ\";\n  b +=\n    \"nLuxS/fL6FX/9cel733zV8tDTcwcs7fJAn5rfHbkrY+h7bS+MfqTc+PL++duHPj00/oJG39300u\";\n  b +=\n    \"MvBvqsf2JtlXMXqY1+nTji6ssysu78qMvs968ZVm3rT+0fTK1U56lPh9708LMfvXBW9XY3R+Ztv\";\n  b +=\n    \"W7zDnVBza/Hv/fH4V41vzTfDdXtNajmjn++/lul+amXX/R918WtV44ZeG7RcluzjnYOKQ+eu+nH\";\n  b +=\n    \"3avOu7PdlXOvCLYZV73duEnfPnXXOSVzO6tnP/Xvuil/dJn+Rr1Plk27vnGlc7q81XrzyAoL20y\";\n  b +=\n    \"rs7jGBQ1zV/bpN+jLR4bd1rTCz0arz9J//PWd73tmn90jr/vW3bt2Dco0uqR2yOlxa8GXt72pNV\";\n  b +=\n    \"oW+mL+oDtGLYp2D9r/+eipN75rNnxFrfb3Dv/49iOhwZUTalRoUN28vW/RDdtWNZzV8MqMs85Nf\";\n  b +=\n    \"eU/Wt8fj/3rkwdDrUf8X3PfAdZE1rY9LZXQpEmTqKiAlAQCCYgKigougopYEQgkYAQSTKFYg2Av\";\n  b +=\n    \"2HtB7Ih17Ypd7F3XhmvDtYtddyn5z5mZKMv6vvvm/b79rj9cFzP3mXOeU+fU57nn0JO8Wbp+G85\";\n  b +=\n    \"PvWvns+/EPhvXXVcmZVm5tH/SY3lg5svkXqlWU5Nqmo8dsnxyyYg/7rW2qTtZNaKTWpFgvgcZ8L\";\n  b +=\n    \"Hvu9k51S0WTePW7guMjw0dLrW+fXe+Bk9S3ZEnPD4ZnfR+YNvK1Q33e3fKYfVvvbYqYHinhoxRX\";\n  b +=\n    \"2o2Wy5jZH/M2v28fZf0a6sHHS11F3vxrow8NNS61+QnvvKeqbs/Ot3au2NaAxG+rKF/6fpj6MTV\";\n  b +=\n    \"ug41X0e978w6k6MNmjYlKcZveoZvpDuTbd3wy4EHp6dGCHPGHd02qOJwx2k3RuPWlW/SS31nnxI\";\n  b +=\n    \"iey4kuagOu26vn7j/caz5tTWlzw8V990SumTzxuFLfzu/vXaeT+qBuV2JZ6d2van5rKyMP6C+N+\";\n  b +=\n    \"WY+yLXRY7vrq7ZPuK8I6e27Gislce6LrfR+1EW19X+uZyQTM7Hms1JL60PLnnrMWAyd22Vf7RGY\";\n  b +=\n    \"ade7Vb7M1P+YkTKnhMz1RcXx69Pu/56d3SS7HoBb0j1tCEW7xaHC/KfbZ9fLbtjqA5Y2tAp8Fyl\";\n  b +=\n    \"u6zMvXbFCrm2NXdYwIy3TG10JywvwHztNe2rOVt2jl0oKl9ZtjP8+KScWSum4L8NeVmRsP787cP\";\n  b +=\n    \"43D8yNgZ6RvffVf9oRMDxDxa+5Z+jrrs9HysYGbgvoeLGE71NhuPa6SG5rS/HOKhX1V/evCVnvW\";\n  b +=\n    \"XivkzD6Fe8NTdamTtOqJ8w50G7L6OmOAg2xC+v2jIvj1FxK0r39dasjlLHIgduFIgq8XndihOd3\";\n  b +=\n    \"28xpBPOSZLRw1fkHMVdjrwwn3swf9fj160Hn5L268ZrnbBiPF95Ic4rt4XlzPGGUc2i1tcMt+Ye\";\n  b +=\n    \"jWh32MrFqp9weAhjxrsD2Oe2b1d8eFUS16dqQdRypO4au+IGB0P2hd7k9ahOWtH8auKAVZn9Ksb\";\n  b +=\n    \"GO7NdFw0eU93y7PXdbXbvGHCeP6EVsX/Vtg/jrI4VTtEs+qVgef6Ju/dsAqMKg31XCjktE7ZVeM\";\n  b +=\n    \"9fgc+VfSndmLs/Pl3Grrz/mKj31eaN8S2cX2uRuPV8zLHfLR6sir6dUR75+uvm9XiLwiThPc9Eq\";\n  b +=\n    \"Vdg3BKpQ4s5iTFHRB491PLA683a9Bqqm50sWsc1db5tqn8wsa8DE3vB8W46ME83n3Jj7QT/uFYf\";\n  b +=\n    \"vLzHLhWksSf3dreaPHa6s3npsFl3H8W+rbYNmSCz65z1xBYJ31YPw3Xpa4MjSMiTCdjXXy15bLT\";\n  b +=\n    \"ic9jjuysmP0WZwrZ9xH3MNkWcchiw6Bcsvd+L/Oc7+c2Q8FkNUNORUAx8VWcwnLieXz/k6psPq1\";\n  b +=\n    \"3TDSqbkwEbxlXw+l0IsG07yHtYUfsky26RAXPmH0aGPmAlxP8O1osvJ/1hKL7zxKCSXw251m2u9\";\n  b +=\n    \"rLlxxw5M/W3Prev6Z+Hd3Ty/NWcaBgTnWbH3lIGxBs+da039Hj93rDHX7H8eWlUyDPWyAP+hcIP\";\n  b +=\n    \"G14pjnwsaTHDtoaJGTq1/ZlLvFz0ySOhGJXb32711oHAfjulKPSw0fj/orLrsXPma58Ut5Jj6jd\";\n  b +=\n    \"eXk+qDQVFtc0WsVdK97aY8FLbhug/p1n+89K7M1c95WycX53+ZW+3gg6lPvezDlsIPcRDL9kf/R\";\n  b +=\n    \"iUEnHI+gF7wss+e8eWaecuSv5Q38/Ft9L+aaXfuNPrG1a41W5xRxMmRjxLPfR1x+APYwfnjtvJ5\";\n  b +=\n    \"n6ZXljR3qba0Tu3sFxxE+3me0z7/JeOGwwztuU+PT7z4Oqhl3yJY4FHDvdmj3vuGcwytSKubrsF\";\n  b +=\n    \"CnTKxg9/7Flz72mPDhcb7redmt7bMNJxw5J0j+gdAy+zBxxqMXVWmnv7cej+I5Y7ln8FLetFqzV\";\n  b +=\n    \"cyYj7/qeVynW7OobNc1bu18xbHxd6WCfieocr1l7reCW2Spt4N6GZqf5BQxx/FKwwMVMX+VeWJK\";\n  b +=\n    \"wdOtCvU2HB0YkdW87r4i9OmXY6wkPSvJOVY73X5jn73o4uj43Jdz2dOH5M3ZwbZncsVw8uXX9p1\";\n  b +=\n    \"Oixc7yO/upQ9e5QTMatGWy/9de1dybxz15xPXhxQdqgUp+rk+oPvB7b3uKf9p+S+MDl1IjPPToF\";\n  b +=\n    \"M5uxBtxjlo6o/+B1QT865XLmihd4AfFZfPl0uX23k+Ev+Jz4Yr2Nqf5BwU4ABXsEvTwiOj4+/kn\";\n  b +=\n    \"S6rLhre8ZOk9q/rtyh2P3jOHdoiaxiyYfa3ly03Rs/YUgj4rB9eutAk5xj48YBPzzuFvKVrhZIb\";\n  b +=\n    \"y7C/PzXef51W53UYbXdGEtuPaxP+PYozBkT4fggifSvOW2zyTrysrK3m/tE79r9hvDyq7TR4tv8\";\n  b +=\n    \"1YH7ipd05XoEvFw1qP47gXX0pznJW5uiJu8OJXxus2pES6nysJmPi4aGR/PcTy+KbyYy3C4tV01\";\n  b +=\n    \"7vT1CbJbgy5P+Jq/U6m4iun9tU4zHZHwt5OOwi2zhZtswKsd4tbJsNpVWjfkPXuHo+TcAPHZ5q+\";\n  b +=\n    \"mq4LayTpN2TY/+fSohXjfjcGdty//TPjGQ/W4nAg+Etl1CbK3atA0Zc+Lz8eqKodsPLJHgG/f06\";\n  b +=\n    \"9Fbd32MOnDnWbjOIcK8DHxt4D8ybr7BjOlzPAh/OzwLuVXn23/8nX3Xf8LTtqf3Qb6RO77dOf5X\";\n  b +=\n    \"qF2/4O4cfaHcusqij7fWvDoclqHj9WCXfV9F4gNk3s2f0g8++NV63MDNr5cvXnF46uWx2+cFCYy\";\n  b +=\n    \"TrNN9Q/6zKlkDTJ3zgZVzz1cL8mZdjU+q9ebwfykmb+PX36juZPrqNKRpRNnzr26Y8dxbJyeY9b\";\n  b +=\n    \"FZgxP6xIHavD3mxvK7kR+MVxq2f3Q0syJV5YM7nO1JdayNDvyndfqI4qfzXtu7W/wPHF+OyaeWQ\";\n  b +=\n    \"5qkPGof3z+MBZSVXdPbDfVCV3AU4alvkvdyHT5rWDD+OiP5ujLYr1l226xDgkf0v1WVWSvabOzX\";\n  b +=\n    \"cAjScORGelvK99fvnbGd9HgIXPPxLvI0rVvHx353K7frDIPZeJoayRcPx1kJPn+4Jw/DIYUVFdb\";\n  b +=\n    \"iES+GFVsHfR8UKtQ5/43dKc3Hl350Do5Jwip6zTibB/rO+EdSypxU/2DApsB4inBTmId6g2GbUP\";\n  b +=\n    \"3178c2PqTzU0n+14bpKx1iT1PrItZrfM+sNT6aMtBmkru59ryCpvbjy1OGqBi0PY0AfJK9hSxPc\";\n  b +=\n    \"e8sla1K7HT+o2chhKbM0VTbMZtzqvlPrTuWzy7k8XyLozfyk6AltIr7pIhPdrBsDDOtY3ZpJea9\";\n  b +=\n    \"4ftOJP6jhj//s5xnxVn9y8LCY4c8OaPu9pDtvLrjj/3nc9m2RRyd81JUlQWt3K4cj702cI3nlU7\";\n  b +=\n    \"zm4ZsrrXxbKhL+Y+dnmZVrvNstV7dvdfnkRvHv55x6vRUXUZJV0Gzru2uM31+ZGXLj/bELZ/mfP\";\n  b +=\n    \"RKb+WPDlnI/HdOq5o8p0aC+uQ/TPynYNqX3kPnjh77z3k6Mw77Vu/Kz5i0bLH2XeVoUdvEAmjDv\";\n  b +=\n    \"fwatVjUJLLk6J3VigS/qAYVsg/3YeCV3cWjMfU3cBnsqkgP+8EXoMvjt10b++HL7l2lSFnN9gvx\";\n  b +=\n    \"eq1X/2GH1O6ZCen7QkKSpY6u29a48wAs5I5IJ5ZJg8ipk5/TM2IqbORgfGg3Rq+XKo3rJz6yZD0\";\n  b +=\n    \"ib990i7W/InBtfM9lrVL2N/6QNpQpx0d7w28KjKc61PMvozRlmn1e+oMjMhR67nbutpYbdOkzfo\";\n  b +=\n    \"jJG5dzN2nSPiRhaBgCi3/J4pgWoUy3ycDuEozfPx9BbRCMqUPduQnSvFZglKmqEbcC6UUJf56OP\";\n  b +=\n    \"eNVYQf2vE734gxXF9a+caIoWIPvxGGiiYujfARlFJQMOLTtAmg0chjvJ66TqWuevIPXKfpvymek\";\n  b +=\n    \"XcFtDuH9jeVDj+ZvnKo59DYhbxOo/E0WtlnCh0Op68YfaWj0XPpGzq83hgf7UFvTAebdqdN3XKk\";\n  b +=\n    \"aoUUmrVl97IiFTMok7lvzsjkXpRJl1Keq83P/v6kpBd1UKxTKr5J2Qvc4CpBrtRlnQf38JA+S5q\";\n  b +=\n    \"N3AL3OHlYT5l6VQPMbiSTSguCfKTTQB0QUyfBvBhKJh0PqQTAj6HM+qEVI2XghiAi2o2yPgcjMs\";\n  b +=\n    \"AseOg8TKqWpkIjoOTkgTGUyXhqDGWWlpapkkKtEH62SqHU8pO1MZRJvfE5PISHSklQaW8ecOM0e\";\n  b +=\n    \"paiUmXKoXYCuN/W5Nn/slFUSqZG6J8UIBH6kepTefxUlUotUyih2oZHqsCziYPQ83wMZR79nEEp\";\n  b +=\n    \"iRvxiyaYwaTMfI2YSWP4M3W9Z5RhSytt/tP0CdGNFEF6/Z+WOYKE9abNz2nlLyPujVMKqvD3T5/\";\n  b +=\n    \"Lm1o/xjTmYlT9mDqQ/YPGSybVe0yTeqd6M0Txj9U/pf+HhPWlaB4G06aeRpxEG2IYcfp/aez1Xy\";\n  b +=\n    \"hOCaAhR0AcZVIeBq7h59eBsZjDp4sIA7Mw6DAXt6L5RUw9rjY1E6bORkxthGnf7O7TFJmZ/Nxho\";\n  b +=\n    \"A/mp+jS0uRqxKMfZaXY5n9Bw0uh8oOkKaQ9VO9+FIdJO1rz1ojjUIpv5XuactUK0AE3TtTBfpQG\";\n  b +=\n    \"MtSMg7VV3Y+qrLfgGl63sUllzSoDDs8wY2X9nebP32kOmVq4plbeP13ZpitymKrEcWvz/83aYdF\";\n  b +=\n    \"WGI+p6TM1XSA/22A8pqbP9HJ7tv3of7Wze3oHDGd6vjb8DMOZ2t6Q8Mk7YTjT6+sZGc70NS/8XL\";\n  b +=\n    \"WZwPTy3LAbri3R//8W8c/2kAn7p1fxptfQhn1kwjIru7znHm8rzm7YfaXsqNfoUtuf9teywko8b\";\n  b +=\n    \"UVp/qP71GS0uhoj3z8fufdl4vlX2Y+xztUHzT+F3hpfjC6/H9epoLTgoTx07dm3lfMbes/oe6mN\";\n  b +=\n    \"LmNq/sferyf0rHjzNbO+xNXB9Cb3bD+ZMFOrxtSq/y/eoYNkwkytGlOr3vRO4VkFSNgSO1OrxtS\";\n  b +=\n    \"q/5/MD9PSwNSwCUVFZJIVEktTrUCF6L6NjP7ijAa6/6CR9sEkykj7NE0VF6PSRim7Q+4ZhFS6Nq\";\n  b +=\n    \"YFGqXpNBRtnFYWEqIdBpXiQ0JSdWq1XAktshQaPrQWzlZpNAqoVk4aTJD2AJTfdhp+pioVcpRJt\";\n  b +=\n    \"VL+MKmGnyKXK/kyOciHKl8uazp5okIZ582lyRRxCKT8a/2n6VK6XClXwyUrWNqP0Blj40dFhPBT\";\n  b +=\n    \"FFpNtjRVzpfnDZPqIO0XchnIgYaXRnlWBDUdM2J7gja2oJX+U1RqtSoXBCStaDIUShmlnG+k1IN\";\n  b +=\n    \"7OVlyjUaaLifdjWsKWKY/Ad+xGqheT4UxliWc+w9pRPaRADX+/gPjmBIpRSjyCqXWBsa9I1JJ/r\";\n  b +=\n    \"thqQlT/x+YYSeBZpSlUtLFn6RQpqlg7PYpViRdjT1t7No4P0Ob4MQf5CdbqlSkZlCEftkp1HS2O\";\n  b +=\n    \"0aRaRhxD4yiaGpcNkm0bGO5JtNkLkY6uRS41mniBxorymk3o9FmmomGa+mN5A2D7f+7UTppStE4\";\n  b +=\n    \"v5Cm10hL1NgdGlNkwLIgw0O6lHSVGvJmxYK3Qh2r08am9ZJnqdT58d+IE7up0qKgiYZalw1QuDp\";\n  b +=\n    \"dB+mfosG73k+lilZ94x3qDlq/UpoFWWF6SZX50QplhqarGrx6ck2EPEeRCi9SGSSB6JYnT9Vpoa\";\n  b +=\n    \"EHDNNFp8kH2Vfp1KnkPXSDkqHVHLwHDUArz+qjU2ml3fJS5SCzMsiVJJdnQAlxWpUaNPTuuszMA\";\n  b +=\n    \"XCRMliuVvVTZIEM6bR0wiLAy03fRimzddo4rTRTHiPX5oKXB0YQCfqjzEZRRatU2X1BUmOVmfnf\";\n  b +=\n    \"XSMUalAcKorgBpqLRmnCG7t9BwNUukxZF5jRcOqN7ZYHCkvTRa3KkCt7K7KNcUeocpXhMpkaBs4\";\n  b +=\n    \"BfQfMDsRRyniNHDh2VSmVZA3QN+DNCU8hq5sWEP/dYiZSpdE2gt9DgJKVaxvDNNBlynrL1VkK0C\";\n  b +=\n    \"mqlBFypYIs0O4qnVLWV56aQ76wqmzYgcGtSo0uFVSdJg00T8j8B/vTb6yboOWqoGUv6GezM6XaN\";\n  b +=\n    \"JU6C+4Zyq3Ipep/SqgA5cL3+QEI50cbl5B7jiqlLEeq5kMDNzLeb0EQhJ9G0af9p3HQsshOKwKE\";\n  b +=\n    \"9W9E3PB3nBKT0yhCCVMJIraBcIJG8fx9z5YtVWfI1X7k8KEge9i3QEYAbdDUtqnhMvQOzam1ckS\";\n  b +=\n    \"UbkXGY/TvR8f73QtpQZxO2ll9p0RFZCCcW6Nw3oiR/KBRPFR4hRIEhfKWpVN9ozFMGm04ZcRamp\";\n  b +=\n    \"Cocb+T1Sj/PzKc/RHlJm8YRbn5lo6PSe/vSSF7VJZUS+5va9WwdfwdD+xfo07LgrZtSAaIozlNO\";\n  b +=\n    \"+xC05k3plxVNsoDNBLMpg1Bf0QzL88EkwhoD22MDRLgkJEpdVl+MkV+ErkrT7bB28OocTOabhtG\";\n  b +=\n    \"HENjlCYHg+PGMxyMLWBwLZmIImFdLBH9gkUI8vATAzm7BLIzk7SbcK50mQXPDxAkzBxH9EVg1PI\";\n  b +=\n    \"Rosixl2bIvEBQnEdV7ye2JvNWUFM+YUh4ls8bMKmffg1MUW1Qt+GHZa8lytcL19/5+Hvn53gsmF\";\n  b +=\n    \"Zvg4/aop3m+3IW38frJXaWftXa1q8+XbrGriJO3Nl24aDjuIB1eFu35zEYEv4V+l7DRUf7Lhoy6\";\n  b +=\n    \"doh9crbtyb52TWr7P1rRray5yXLW/NvKEfsaLstrXKze5Cd6+BrXUIt+hlSj2jizzvU/C5/73Ew\";\n  b +=\n    \"/supKn3Va+XHizVVSV/iGMgPizEtU+svk5NcKHDwyveTge5fpfzhpwZkvllS0Hw78QVIxHCqb9H\";\n  b +=\n    \"Rc8ofelYodRrSN/LNf86/8Z+dSXk3+s39d7JBQnxTh8lTM+QySIHiQQX3bGxhZ5ST95/K0ehSPO\";\n  b +=\n    \"hkNxZklJP/L+VAU2PqHBE0117hA0mW1YioHlH94hrlfSQd3oiP0m3TiH9HqPm4Ef9B991GjNJEB\";\n  b +=\n    \"kYMqegbyzNrgnlNsHkTbNEE/0RTtxuxHP1z/CNQqs/8Vpfon9NbSKcP/u53c+qIX3L67Wjt+QaI\";\n  b +=\n    \"z1YuOeXQkL2pqvY6iWOrDh6q255r+FxbRWLeLxnhNbP7H7KuqyZxaN24WZvdLs/wrntF4sIl8UK\";\n  b +=\n    \"PhD7Xutd9JPGuM+s2F5ePWC6tqyPxuWlvWue2WvZiVB1hgDgrLi9sdtT5LQvqeCQecHH30Pxmoe\";\n  b +=\n    \"O319mSWNy/tlfQPKtj5+pcSBy7KFKierFg1m917iQ+FTK+zbkJ2ptIvTeJPy48vPDCpYklzvUiE\";\n  b +=\n    \"j8p93JYxBXVBNaHknjmjkCv2nTJjt71ESTu0Lny6v3rp4sy6qNJvP/CNad2EfdOTqjvR+IFZ9oc\";\n  b +=\n    \"uLgyY25JfQKJi9amjHHPLL+7v15G4s93kswHpm1afaM+k8Rt3x3/de7XRx9q6rUk3qs3lG3YvGs\";\n  b +=\n    \"Xt2E0iaf1HJ3JSEqZ1KahiMRxgqOiZMPBM50bppM4vu3+2dMnxCwY3DCPxBVjPbPdc3+/r21YRu\";\n  b +=\n    \"LivU/2rqy4v664YQ2J543RTr6UtPHrxoZyEl9auqF4bnbEvhMNO0mcYWd5+Otb9tT7DQdJvFsol\";\n  b +=\n    \"Me32Xbh94YTJC4fN+py5aPOi20N50nM7NDe64RVQrWv4TqJr83RKBa7u5dFGapIbHEWKXy/a1J9\";\n  b +=\n    \"qqGaxC+drOfI2E8OjjW8IvH5yb1VnPMHpy82fCSxt9zx0UCHPVd+NtQZkPB1v4LOkhG27KIBdME\";\n  b +=\n    \"7IbjZ3mrt9WfPyJMv+EspP/kybzNO9u2gtDnzvuYFdy5oQVPf/mzHOjPq4sIjEtJwH4xKCS9GXf\";\n  b +=\n    \"QfWxxHjt9gdaB/vmmN5OqNLJL4B0G6tVri0LZd7MrJJGkPWKnVnrguLE19XUoSYCDIhs2np0vkv\";\n  b +=\n    \"26rIMcjBLkr3+Q0k32q8Bb5viDIEtcRXX53HXriPbkuBCvMp87rvBW95pijMhK/mJHtJHuD3mmH\";\n  b +=\n    \"ZpK4Z27NksWrs0q7oFoST8gYs3NUHud9AjqaxLnN7+Wvqu63MxctIvGxk0uHzJk4ZOIcdDqJOw5\";\n  b +=\n    \"dcPpkXODpcnQeld+ShX8k7PSafwpdRuLHSSWLK1Z2//UhuobEbaYH3xUdW7q2Di0nccLKRavVSy\";\n  b +=\n    \"o/22M7SXzx0PN+cYer9gixgyR+FN7qvcOHusnR2AkSr81LuLb0Iv98Gnae6g3iWo76MNh+UQF2n\";\n  b +=\n    \"cQhAreFVbtKHi3Fqki84OfHCXFXbm/YjVWTODRi/Zrbo5fWXsZeUcTiEWvWR0fnHHiJfSSx07Kw\";\n  b +=\n    \"3TUzN01j4nUk9i4asM6qxu0yHyeNpBFP4eznT9ZYLe2A80i8nLdsVe1Sq6fxuC31/GOHlNt8j/J\";\n  b +=\n    \"s3IXEEy6tH5n4U4R+Gu5OYp975XhYdcvDa3FvEhcbIhL9lqXPPIKLSBy+d/qy5Q4B1+/goSTe6P\";\n  b +=\n    \"x455y7jis+4REkvp17f7/y8IKXlkQ0if+zkTddrdDoyNnMkREUCfQYmrbLiDfSI4gRlzXBm5rg8\";\n  b +=\n    \"iZ4cxO85W9GRn5747AcyvcQ8kND+UFCz0bhtzaRZ2akyflOGwF5IWRySD5K00IY/VrQpv5G7EB/\";\n  b +=\n    \"mMOIuzZ53pN+/te0toTDLxiuSdIhj8bpe4D+Tf4aZcsY5iH65zw9aoLbYVQejdgL+3M6k5vgIwD\";\n  b +=\n    \"3aIRvAvxTI/yYfv5v2wi9Q1atsSJ3xg7+u5nIEMFQMItKSWgnSIA7SMYwFf8yDFiDaDXf5y+i72\";\n  b +=\n    \"EO0WEEvr4+8CRboFCmxUhj/mYClCXNA/dGGeNo4nJfkNkTWupQswu549ZLpzV1M4uezRlXFHBGN\";\n  b +=\n    \"llrRX8oAjJwqnRauH+ZAhffmhByaxKkBW5cgjRqSUx5BC4I4q6jVqIR4NqMlm1cnYxsgkeRGkpa\";\n  b +=\n    \"MFfUtOzYseNfyyDZg6SS4qvhV7A8k7l8kloKuCd7cylHeB8C45sL4oMUHOV0vId0lObSWR2l/ZT\";\n  b +=\n    \"8b/y81VGaQ1CQMe+2OVS55jXaVRtN9x9jId0f+P2lfYEVm1+KTpEpk6vhRnFEDk3zSK+OjVhAr0\";\n  b +=\n    \"b5o7jeXG8+fxTf15c7xhv8548hAbiM8eB6eHv+ubzG/ahNwzhBu4ZteW8OdQgvp1dcgjyBQCAU+\";\n  b +=\n    \"AsCBCJBoCBIIBZIBMFCgVAo9BcGCEXCQGGQUCyUCIP9Bf5Cf3//AH+Rf6B/kL/YX+IfHCAIEAb4\";\n  b +=\n    \"BwQEiAICA4ICxAGSgGCRQCQU+YsCRCJRoChIJBZJRMGBgkBhoH9gQKAoMDAwKFAcKAkMDhIECYP\";\n  b +=\n    \"8gwKCREGBQUFB4iBJULBYIBaK/cUBYpE4UBwkFosl4mCJQCKU+EsCJCJJoCRIIpZIJMHBIInBIP\";\n  b +=\n    \"pgIDoYBAsGTn8uB6h0UkBThPywPOh3+3QuVR4CJrVDKvgf/ozyvJgU1bRWrZOnSTM1sLyNzyayq\";\n  b +=\n    \"biMeAab2v39Szo1mYpUuV+WPCt1GNzzyc6j2sYQun9Qw50QuK2h1tKvl/FFpJ5AdmpSRCN2+ZI8\";\n  b +=\n    \"ql3vyKMI4CmfciVNN82vzqM07IzPqfDUMzImDV+qpd5qEIgECJFvRabfKZ/SRKTHIeoQgQ5KitF\";\n  b +=\n    \"lQxfQUSmydFkULbYkn6L8oTZOaX90WkG/JlPJqcMPsg8gjzSgihe5o/cnr5n5FOVdQT5Fl702h3\";\n  b +=\n    \"pfh/j6+g4l1RDpEgI90J96K3gHXvwz+ZTm4XU6L8b3PUWerlBCPVVYRB7wxpOfO0xORQ93bkBYY\";\n  b +=\n    \"iSlFdlsJKVRaT+SKkOjDOMBjhRuXqmpeEE9d+DDLR8NSBj5nRK+B/XNB08yRcb0RAJZcPWnHElp\";\n  b +=\n    \"ZOaAK7OR7L+2Ga3a2LbXjKTa1yf6AxN/8atTKki6sWy1QkluZNMUzSOpnU8u/ZEKI3aiKTcRFGc\";\n  b +=\n    \"wmEyMxWSzONZcFzNHnpO5lYW5JWGFN2tmw7FHHYjmqCPuxHJGXTA3ez7eHvcx80UFuBDzR9djG7\";\n  b +=\n    \"EyYhP7D6yWUY814AbO5rz8aTNKBQMGTps+y+WeheVP0bV1vn6dE4YmPSqaMXP2nI3b9x84WXnm7\";\n  b +=\n    \"K/VTwwIYd3MUygSh3ToGNVzaNFM8HDn/gOVZy9eqn6CEOYW5NOQDt26R/VMlMmLZi9dfubiJXNr\";\n  b +=\n    \"T+AUNWBIQmKSTD5j9kYQ5OSZ+9VP3ppbd4uSyfVFOw4eOnzj5tt3hROmrVl36PDJUxcv3bkbuaj\";\n  b +=\n    \"iQuXFS1ExsQMGJSZNmVm8ffeew0crT920tncYkvD5S4NBnzXi1/sWbkqVi2vSmLFbto47cNDeoY\";\n  b +=\n    \"Vb9x4xsQMHJySOHbfr5PUbVW/ffVJrirW6BW19/dZv3XP41KWb95eELVwkKHa7ev2iISZ28BAW2\";\n  b +=\n    \"9Kqnd+bGqVK3LFzl26zZsel606fuXzl1u2nDQaEn9Rq/H1ifATbmWBaF5Rb6Dcx3DgFzrgjGyX8\";\n  b +=\n    \"CBHBwlEWk2XN7W3ZjBXPwgkXLgdn4ywcw3GcRzBwMyZqYceIYTmzBrAwpr15b6Ir7oOjhDXTkhd\";\n  b +=\n    \"CuLZJ4mcRw9voTzPGb8OdmOPr8UEse05zji3PljecyWU6MQex2jO6c70JHoHiQjNvwolphuvLwS\";\n  b +=\n    \"M/YS9cv4YdilvioSwJuz1jvMG6OdvP2gdvadnSUj+dGL/Q0cxu8jyGH6MDC7NoztEfaqXl6X9x4\";\n  b +=\n    \"jH0Bob+Pu/9clzMKUiw1e9l688xuM074FymhN2dzWNqzVrgg4lBHH1hcxeuPSea0E9lblrDcyCE\";\n  b +=\n    \"q4iCO21ZPAZDv86q4BML5XsxwdMZhP4Q7oxbmiNMFAWZwxgsFsZmczAuwwyzIKxQa6wZw8baFrX\";\n  b +=\n    \"DHDBHcxeGK9sdHU5kYFvxg9gl7Ap2nXeD8wt2E7uDPmA8xJ4Sz7A3/LfEVww0VJTXrkOnmNjiFS\";\n  b +=\n    \"tWjpo2d0Hpjv0TtzNZnKCOnfp/uHyFsG0eJO4/YFzZlq0VgQ+aTZoyc8W3lggbYkysTJ6we4+zC\";\n  b +=\n    \"4vNNbN1CAoO2bDx1m2OeNbsDSxuh05piuI5qqTDb2oGp3ysMyxZ6uvXziN+ecmq1WvWb9i8/+AJ\";\n  b +=\n    \"phnPzjWkc7c+69afv1DCcnRq1aZT56evagwnKwl+6zZtPQIkIZE9o3vHxfeHjS45VZ6WockbM27\";\n  b +=\n    \"qmrKt245c3rJVqZqb2GoUAyd88DQc9fPVj3fFhZYuhDunBaM9I4Kw8NKXMd0Jd8KDLTKL6Vog5t\";\n  b +=\n    \"hz2c07dAvGU9kcgT2jJe7MQMMkxE8MP4LL4rDC+O0IHicID2E4sQgeq3eUOMA8gOXL5ha07Rvjw\";\n  b +=\n    \"fayd2rrYuvAiQERRJg7srjMSHY7js6sc7gXswODy+zDRBlWOEM/LaVFJJurX5fYqpsZl2luE8Lk\";\n  b +=\n    \"BnkTDvp9obI4XiSH272bcyQ7zjyqgNWd64r3iBLjFmwuM5jFLQhy1O9BLf3NC5em6cz0J6ZGp5o\";\n  b +=\n    \"X+RVfGd9j1b7xwSwvIoHZltud68GwGb9tiPwnIphlHQbbwMKv7KJfvDilTwsCfHBrgl0wfQqRwT\";\n  b +=\n    \"DHOSyrOck9ONpQ/Weuhp1t112/xJY3gOOon1TQA5/QxdKuqLeb/mF7/Q0f3InACsLcrEMYaNED/\";\n  b +=\n    \"RfPaIJLYIXWEdEd9cdCmSgRz3AWYQUW3oSM15+r3yJxNfcmOKDdM/VLCm+BTJvjWt4gFniLLHmE\";\n  b +=\n    \"BGTGg90qpqAfzw5n4CyOK27GYHK5TDboVfXn2nCLmP+yw6avSSRXHdlnF+itSLpDuMbxaISNdHd\";\n  b +=\n    \"G3JemOP7huidFkU5PE5EqPfUBJPghSfTHlLQq6gT/B6s8RbpCCxevIsFfH6rgCS3cb45TZcnhGo\";\n  b +=\n    \"NcjJAfcoE35PkmZIXUqsgjjyQwwDee1xUilPJlIcFHZjOSkaE2JUgzB74bj5/sVuNd0t5LwPdWr\";\n  b +=\n    \"XvgjW1I9mlRm+yLNPCDVhiSg+rRh0Eot6XY3fyheJOFNNiv+apggcvDHh9atIx+O/xhbKyqZe/l\";\n  b +=\n    \"B1f1Ri5J+8ivrOqD3GnZF3nwME7wUBq/5dGq/pefPezPR5QD3qKGAUg2wkJ8UBTFwB8aaSaws0L\";\n  b +=\n    \"loGPFMJRojbZwHmIWwuGgzQmUA/ohRns8lO3VHOWLQQCCDTpQFhdzRUNgcIINvHAxJxTDgkGHRW\";\n  b +=\n    \"Cgw0ZbYDhqBjEDeEBtMXvQnYXAuIBvFs7FWqAdQFgeCOkBxAOpoPGgBAszI6XCJIFIMYhdsGDse\";\n  b +=\n    \"yyuaCRKoEA4ykb7oBiLx05BMY4ZsyfmjMKf2AIFMTLMUHcOmkagTJAozBEjcCvCHNwyUUsUlDvu\";\n  b +=\n    \"irUAf2EYymKjmBkHBcMIqsNaoTk4gXFQJn4XFAJILQtKxNhMLoYK3ISEAGAG6sHhYXyQSRSXoGR\";\n  b +=\n    \"C8BA2hi3CUXOUBSPEscowBD3eEsFnoMl8hKnAEALl8rHeGAI7dNQRY6ALMadm5mhbtqOZLy5AYZ\";\n  b +=\n    \"G1Q7uCkscwHsiXHxoApGIYA+TbC2Ojb2CxoaABW1nBpRr6CJ3PQHCQS8IDJ9C1QD6CLTYTEqPQI\";\n  b +=\n    \"EtPkEsuLgQSWWhH3J2BsjuhPEzEAW84moTDgmSiJSjOtiNLFUXtUQsWzjjOhhlxgCXKhJUEK+Al\";\n  b +=\n    \"SBcTXJ2xeDZ0GY6SgVE5DiqUgXBQ7BOoD9Aa0FkgNgLlcz2YZC0xMdwXFDbCAoWB9rUHCQFSRjJ\";\n  b +=\n    \"xKBWUYCSMCgX5AGMpgnYm+sB7X8wBAXkmGGw2xmpBzMMRMeHPRi1QewZqCSRZk1IYoMWiHQmElc\";\n  b +=\n    \"VCkvVvkdRMlQZ+QEahzFFlgIl641NjsGr4pjpkpOiEhqjHEDMQ+xOUk61WyXSpYP2KsSGvtU6aL\";\n  b +=\n    \"scISIqN4F3BOowHnsOzdrnMJyWfYJCa3m2EvkECX4GPEi7IQRwe3zS/+WBd6e8j8PcRijwZqVBe\";\n  b +=\n    \"f6HIF/jle/yATDszM4f65wMiGS5P1fLBQlOSKhP5pwZIAuViYUpQgDxQJhXLRcH+YCmZmpYWJBU\";\n  b +=\n    \"Hy8QpnsxckBedhinwFQb7CnjwyNsnBSwK0uXKZlB/Syzie/iLU8VSkUwQ5Im0stRC1Q1tUpqc/N\";\n  b += \"aOBm1vmUWpe/ikZ6pSwJru/wGcYyJi\";\n\n  var input = pako.inflate(base64ToUint8Array(b));\n  return init(input);\n}\n","import nacl from \"tweetnacl\";\nimport naclUtil from \"tweetnacl-util\";\nimport { throwError, log } from \"../lib/utils\";\nimport * as wasmECDSA from \"../lib/ecdsa-sdk\";\nimport { wasmBlsSdkHelpers } from \"../lib/bls-sdk\";\n\nconst SYMM_KEY_ALGO_PARAMS = {\n  name: \"AES-CBC\",\n  length: 256,\n};\n\n/**\n * Hash the unified access control conditions using SHA-256 in a deterministic way.\n * @param {Object} unifiedAccessControlConditions - The unified access control conditions to hash.\n * @returns {Promise<ArrayBuffer>} A promise that resolves to an ArrayBuffer that contains the hash\n */\nexport function hashUnifiedAccessControlConditions(\n  unifiedAccessControlConditions\n) {\n  const conds = unifiedAccessControlConditions.map((c) =>\n    canonicalUnifiedAccessControlConditionFormatter(c)\n  );\n  const toHash = JSON.stringify(conds);\n  log(\"Hashing unified access control conditions: \", toHash);\n  const encoder = new TextEncoder();\n  const data = encoder.encode(toHash);\n  return crypto.subtle.digest(\"SHA-256\", data);\n}\n\nexport function canonicalUnifiedAccessControlConditionFormatter(cond) {\n  if (Array.isArray(cond)) {\n    return cond.map((c) => canonicalUnifiedAccessControlConditionFormatter(c));\n  }\n\n  if (\"operator\" in cond) {\n    return {\n      operator: cond.operator,\n    };\n  }\n\n  if (\"returnValueTest\" in cond) {\n    if (cond.conditionType === \"solRpc\") {\n      return canonicalSolRpcConditionFormatter(cond, true);\n    } else if (cond.conditionType === \"evmBasic\") {\n      return canonicalAccessControlConditionFormatter(cond);\n    } else if (cond.conditionType === \"evmContract\") {\n      return canonicalEVMContractConditionFormatter(cond);\n    } else if (cond.conditionType === \"cosmos\") {\n      return canonicalCosmosConditionFormatter(cond);\n    } else {\n      throwError({\n        message: `You passed an invalid access control condition that is missing or has a wrong \"conditionType\": ${JSON.stringify(\n          cond\n        )}`,\n        name: \"InvalidAccessControlCondition\",\n        errorCode: \"invalid_access_control_condition\",\n      });\n    }\n  }\n\n  throwError({\n    message: `You passed an invalid access control condition: ${cond}`,\n    name: \"InvalidAccessControlCondition\",\n    errorCode: \"invalid_access_control_condition\",\n  });\n}\n\nexport function hashCosmosConditions(cosmosConditions) {\n  const conds = cosmosConditions.map((c) =>\n    canonicalCosmosConditionFormatter(c)\n  );\n  const toHash = JSON.stringify(conds);\n  log(\"Hashing cosmos conditions: \", toHash);\n  const encoder = new TextEncoder();\n  const data = encoder.encode(toHash);\n  return crypto.subtle.digest(\"SHA-256\", data);\n}\n\nexport function canonicalCosmosConditionFormatter(cond) {\n  // need to return in the exact format below:\n  /*\n  pub struct CosmosCondition {\n      pub path: String,\n      pub chain: String,\n      pub return_value_test: JsonReturnValueTestV2,\n}\n  */\n\n  if (Array.isArray(cond)) {\n    return cond.map((c) => canonicalCosmosConditionFormatter(c));\n  }\n\n  if (\"operator\" in cond) {\n    return {\n      operator: cond.operator,\n    };\n  }\n\n  if (\"returnValueTest\" in cond) {\n    const { returnValueTest } = cond;\n\n    const canonicalReturnValueTest = {\n      key: returnValueTest.key,\n      comparator: returnValueTest.comparator,\n      value: returnValueTest.value,\n    };\n\n    return {\n      path: cond.path,\n      chain: cond.chain,\n      returnValueTest: canonicalReturnValueTest,\n    };\n  }\n\n  throwError({\n    message: `You passed an invalid access control condition: ${cond}`,\n    name: \"InvalidAccessControlCondition\",\n    errorCode: \"invalid_access_control_condition\",\n  });\n}\n\nexport function hashSolRpcConditions(solRpcConditions) {\n  const conds = solRpcConditions.map((c) =>\n    canonicalSolRpcConditionFormatter(c)\n  );\n  const toHash = JSON.stringify(conds);\n  log(\"Hashing sol rpc conditions: \", toHash);\n  const encoder = new TextEncoder();\n  const data = encoder.encode(toHash);\n  return crypto.subtle.digest(\"SHA-256\", data);\n}\n\nexport function canonicalSolRpcConditionFormatter(\n  cond,\n  requireV2Conditions = false\n) {\n  // need to return in the exact format below\n  // but make sure we don't include the optional fields:\n  /*\n#[derive(Debug, Serialize, Deserialize, Clone)]\n#[serde(rename_all = \"camelCase\")]\npub struct SolRpcCondition {\n    pub method: String,\n    pub params: Vec<serde_json::Value>,\n    pub pda_params: Option<Vec<serde_json::Value>>,\n    pub pda_interface: Option<SolPdaInterface>,\n    pub chain: String,\n    pub return_value_test: JsonReturnValueTestV2,\n}\n\n#[derive(Debug, Serialize, Deserialize, Clone)]\n#[serde(rename_all = \"camelCase\")]\npub struct SolPdaInterface {\n    pub offset: u64,\n    pub fields: serde_json::Value,\n}\n  */\n\n  if (Array.isArray(cond)) {\n    return cond.map((c) =>\n      canonicalSolRpcConditionFormatter(c, requireV2Conditions)\n    );\n  }\n\n  if (\"operator\" in cond) {\n    return {\n      operator: cond.operator,\n    };\n  }\n\n  if (\"returnValueTest\" in cond) {\n    const { returnValueTest } = cond;\n\n    const canonicalReturnValueTest = {\n      key: returnValueTest.key,\n      comparator: returnValueTest.comparator,\n      value: returnValueTest.value,\n    };\n\n    // check if this is a sol v1 or v2 condition\n    // v1 conditions didn't have any pda params or pda interface or pda key\n    if (\"pdaParams\" in cond || requireV2Conditions) {\n      if (\n        !(\"pdaInterface\" in cond) ||\n        !(\"offset\" in cond.pdaInterface) ||\n        !(\"fields\" in cond.pdaInterface) ||\n        !(\"pdaKey\" in cond)\n      ) {\n        throwError({\n          message: `Solana RPC Conditions have changed and there are some new fields you must include in your condition.  Check the docs here: https://developer.litprotocol.com/AccessControlConditions/solRpcConditions`,\n          name: \"InvalidAccessControlCondition\",\n          errorCode: \"invalid_access_control_condition\",\n        });\n      }\n\n      const canonicalPdaInterface = {\n        offset: cond.pdaInterface.offset,\n        fields: cond.pdaInterface.fields,\n      };\n\n      return {\n        method: cond.method,\n        params: cond.params,\n        pdaParams: cond.pdaParams,\n        pdaInterface: canonicalPdaInterface,\n        pdaKey: cond.pdaKey,\n        chain: cond.chain,\n        returnValueTest: canonicalReturnValueTest,\n      };\n    } else {\n      return {\n        method: cond.method,\n        params: cond.params,\n        chain: cond.chain,\n        returnValueTest: canonicalReturnValueTest,\n      };\n    }\n  }\n\n  throwError({\n    message: `You passed an invalid access control condition: ${cond}`,\n    name: \"InvalidAccessControlCondition\",\n    errorCode: \"invalid_access_control_condition\",\n  });\n}\n\nexport function canonicalResourceIdFormatter(resId) {\n  // need to return in the exact format below:\n\n  return {\n    baseUrl: resId.baseUrl,\n    path: resId.path,\n    orgId: resId.orgId,\n    role: resId.role,\n    extraData: resId.extraData,\n  };\n}\n\nexport function hashResourceId(resourceId) {\n  const resId = canonicalResourceIdFormatter(resourceId);\n  const toHash = JSON.stringify(resId);\n  const encoder = new TextEncoder();\n  const data = encoder.encode(toHash);\n  return crypto.subtle.digest(\"SHA-256\", data);\n}\n\nexport async function hashResourceIdForSigning(resourceId) {\n  const hashed = await hashResourceId(resourceId);\n  return uint8arrayToString(new Uint8Array(hashed), \"base16\");\n}\n\nfunction canonicalAbiParams(params) {\n  return params.map((param) => ({\n    name: param.name,\n    type: param.type,\n  }));\n}\n\nexport function canonicalEVMContractConditionFormatter(cond) {\n  // need to return in the exact format below:\n  /*\n  pub struct JsonAccessControlCondition {\n    pub contract_address: String,\n    pub chain: String,\n    pub standard_contract_type: String,\n    pub method: String,\n    pub parameters: Vec<String>,\n    pub return_value_test: JsonReturnValueTest,\n  }\n  */\n\n  if (Array.isArray(cond)) {\n    return cond.map((c) => canonicalEVMContractConditionFormatter(c));\n  }\n\n  if (\"operator\" in cond) {\n    return {\n      operator: cond.operator,\n    };\n  }\n\n  if (\"returnValueTest\" in cond) {\n    /* abi needs to match:\n      pub name: String,\n    /// Function input.\n    pub inputs: Vec<Param>,\n    /// Function output.\n    pub outputs: Vec<Param>,\n    #[deprecated(note = \"The constant attribute was removed in Solidity 0.5.0 and has been \\\n          replaced with stateMutability. If parsing a JSON AST created with \\\n          this version or later this value will always be false, which may be wrong.\")]\n    /// Constant function.\n    #[cfg_attr(feature = \"full-serde\", serde(default))]\n    pub constant: bool,\n    /// Whether the function reads or modifies blockchain state\n    #[cfg_attr(feature = \"full-serde\", serde(rename = \"stateMutability\", default))]\n    pub state_mutability: StateMutability,\n    */\n\n    const { functionAbi, returnValueTest } = cond;\n\n    const canonicalAbi = {\n      name: functionAbi.name,\n      inputs: canonicalAbiParams(functionAbi.inputs),\n      outputs: canonicalAbiParams(functionAbi.outputs),\n      constant:\n        typeof functionAbi.constant === \"undefined\"\n          ? false\n          : functionAbi.constant,\n      stateMutability: functionAbi.stateMutability,\n    };\n\n    const canonicalReturnValueTest = {\n      key: returnValueTest.key,\n      comparator: returnValueTest.comparator,\n      value: returnValueTest.value,\n    };\n\n    return {\n      contractAddress: cond.contractAddress,\n      functionName: cond.functionName,\n      functionParams: cond.functionParams,\n      functionAbi: canonicalAbi,\n      chain: cond.chain,\n      returnValueTest: canonicalReturnValueTest,\n    };\n  }\n\n  throwError({\n    message: `You passed an invalid access control condition: ${cond}`,\n    name: \"InvalidAccessControlCondition\",\n    errorCode: \"invalid_access_control_condition\",\n  });\n}\n\nexport function hashEVMContractConditions(accessControlConditions) {\n  const conds = accessControlConditions.map((c) =>\n    canonicalEVMContractConditionFormatter(c)\n  );\n  const toHash = JSON.stringify(conds);\n  log(\"Hashing evm contract conditions: \", toHash);\n  const encoder = new TextEncoder();\n  const data = encoder.encode(toHash);\n  return crypto.subtle.digest(\"SHA-256\", data);\n}\n\nexport function canonicalAccessControlConditionFormatter(cond) {\n  // need to return in the exact format below:\n  /*\n  pub struct JsonAccessControlCondition {\n    pub contract_address: String,\n    pub chain: String,\n    pub standard_contract_type: String,\n    pub method: String,\n    pub parameters: Vec<String>,\n    pub return_value_test: JsonReturnValueTest,\n  }\n  */\n\n  if (Array.isArray(cond)) {\n    return cond.map((c) => canonicalAccessControlConditionFormatter(c));\n  }\n\n  if (\"operator\" in cond) {\n    return {\n      operator: cond.operator,\n    };\n  }\n\n  if (\"returnValueTest\" in cond) {\n    return {\n      contractAddress: cond.contractAddress,\n      chain: cond.chain,\n      standardContractType: cond.standardContractType,\n      method: cond.method,\n      parameters: cond.parameters,\n      returnValueTest: {\n        comparator: cond.returnValueTest.comparator,\n        value: cond.returnValueTest.value,\n      },\n    };\n  }\n\n  throwError({\n    message: `You passed an invalid access control condition: ${cond}`,\n    name: \"InvalidAccessControlCondition\",\n    errorCode: \"invalid_access_control_condition\",\n  });\n}\n\nexport function hashAccessControlConditions(accessControlConditions) {\n  const conds = accessControlConditions.map((c) =>\n    canonicalAccessControlConditionFormatter(c)\n  );\n  const toHash = JSON.stringify(conds);\n  log(\"Hashing access control conditions: \", toHash);\n  const encoder = new TextEncoder();\n  const data = encoder.encode(toHash);\n  return crypto.subtle.digest(\"SHA-256\", data);\n}\n\nexport function compareArrayBuffers(buf1, buf2) {\n  if (buf1.byteLength !== buf2.byteLength) return false;\n  const dv1 = new Uint8Array(buf1);\n  const dv2 = new Uint8Array(buf2);\n  for (let i = 0; i !== buf1.byteLength; i++) {\n    if (dv1[i] !== dv2[i]) return false;\n  }\n  return true;\n}\n\nexport function encryptWithBlsPubkey({ pubkey, data }) {\n  return wasmBlsSdkHelpers.encrypt(\n    uint8arrayFromString(pubkey, \"base16\"),\n    data\n  );\n}\n\n/**\n * Import a symmetric key from a Uint8Array to a webcrypto key.  You should only use this if you're handling your own key generation and management with Lit.  Typically, Lit handles this internally for you.\n * @param {Uint8Array} symmKey The symmetric key to import\n * @returns {Promise<CryptoKey>} A promise that resolves to the imported key\n */\nexport async function importSymmetricKey(symmKey) {\n  const importedSymmKey = await crypto.subtle.importKey(\n    \"raw\",\n    symmKey,\n    SYMM_KEY_ALGO_PARAMS,\n    true,\n    [\"encrypt\", \"decrypt\"]\n  );\n  return importedSymmKey;\n}\n\n/**\n * Generate a new random symmetric key using WebCrypto subtle API.  You should only use this if you're handling your own key generation and management with Lit.  Typically, Lit handles this internally for you.\n * @returns {Promise<CryptoKey>} A promise that resolves to the generated key\n */\nexport async function generateSymmetricKey() {\n  const symmKey = await crypto.subtle.generateKey(SYMM_KEY_ALGO_PARAMS, true, [\n    \"encrypt\",\n    \"decrypt\",\n  ]);\n  return symmKey;\n}\n\n/**\n * Decrypt an encrypted blob with a symmetric key.  Uses AES-CBC via SubtleCrypto\n * @param {Blob} encryptedBlob The encrypted blob that should be decrypted\n * @param {Object} symmKey The symmetric key\n * @returns {Blob} The decrypted blob\n */\nexport async function decryptWithSymmetricKey(encryptedBlob, symmKey) {\n  const recoveredIv = await encryptedBlob.slice(0, 16).arrayBuffer();\n  const encryptedZipArrayBuffer = await encryptedBlob.slice(16).arrayBuffer();\n  const decryptedZip = await crypto.subtle.decrypt(\n    {\n      name: \"AES-CBC\",\n      iv: recoveredIv,\n    },\n    symmKey,\n    encryptedZipArrayBuffer\n  );\n  return decryptedZip;\n}\n\n// used this as an example\n// https://github.com/infotechinc/symmetric-encryption-in-browser/blob/master/crypto.js\n/**\n * Encrypt a blob with a symmetric key\n * @param {Object} symmKey The symmetric key\n * @param {Blob} data The blob to encrypt\n * @returns {Blob} The encrypted blob\n */\nexport async function encryptWithSymmetricKey(symmKey, data) {\n  // encrypt the zip with symmetric key\n  const iv = crypto.getRandomValues(new Uint8Array(16));\n\n  const encryptedZipData = await crypto.subtle.encrypt(\n    {\n      name: \"AES-CBC\",\n      iv,\n    },\n    symmKey,\n    data\n  );\n  const encryptedZipBlob = new Blob([iv, new Uint8Array(encryptedZipData)], {\n    type: \"application/octet-stream\",\n  });\n  return encryptedZipBlob;\n}\n\n// borrowed from eth-sig-util from meatmask.\n/**\n * Encrypt a blob with the public key of a receiver\n * @param {string} receiverPublicKey The base64 encoded 32 byte public key.  The corresponding private key will be able to decrypt this blob\n * @param {Blob} data The blob to encrypt\n * @param {string} version The encryption algorithm to use.  This should be set to \"x25519-xsalsa20-poly1305\" as no other algorithms are implemented right now.\n * @returns {Blob} The encrypted blob\n */\nexport function encryptWithPubKey(receiverPublicKey, data, version) {\n  switch (version) {\n    case \"x25519-xsalsa20-poly1305\": {\n      // generate ephemeral keypair\n      const ephemeralKeyPair = nacl.box.keyPair();\n\n      // assemble encryption parameters - from string to UInt8\n      let pubKeyUInt8Array;\n      try {\n        pubKeyUInt8Array = naclUtil.decodeBase64(receiverPublicKey);\n      } catch (err) {\n        throw new Error(\"Bad public key\");\n      }\n\n      // padding?  not needed for c decryption?\n      // const paddingBytes = new Uint8Array(32)\n      // paddingBytes.fill(0)\n      // const msgParamsUInt8Array = new Uint8Array([...paddingBytes, ...naclUtil.decodeUTF8(data)])\n      const msgParamsUInt8Array = naclUtil.decodeUTF8(data);\n      const nonce = nacl.randomBytes(nacl.box.nonceLength);\n\n      // encrypt\n      const encryptedMessage = nacl.box(\n        msgParamsUInt8Array,\n        nonce,\n        pubKeyUInt8Array,\n        ephemeralKeyPair.secretKey\n      );\n\n      // handle encrypted data\n      const output = {\n        version: \"x25519-xsalsa20-poly1305\",\n        nonce: naclUtil.encodeBase64(nonce),\n        ephemPublicKey: naclUtil.encodeBase64(ephemeralKeyPair.publicKey),\n        ciphertext: naclUtil.encodeBase64(encryptedMessage),\n      };\n      // return encrypted msg data\n      return output;\n    }\n\n    default:\n      throw new Error(\"Encryption type/version not supported\");\n  }\n}\n\n// borrowed from eth-sig-util from meatmask.\n/**\n * Decrypt a blob with a private key\n * @param {Blob} encryptedData The blob to decrypt\n * @param {string} receiverPrivateKey The base64 encoded 32 byte private key.  The corresponding public key was used to encrypt this blob\n * @param {string} version The encryption algorithm to use.  This should be set to \"x25519-xsalsa20-poly1305\" as no other algorithms are implemented right now.\n * @returns {Blob} The decrypted blob\n */\nexport function decryptWithPrivKey(encryptedData, receiverPrivateKey) {\n  switch (encryptedData.version) {\n    case \"x25519-xsalsa20-poly1305\": {\n      const recieverEncryptionPrivateKey =\n        naclUtil.decodeBase64(receiverPrivateKey);\n\n      // assemble decryption parameters\n      const nonce = naclUtil.decodeBase64(encryptedData.nonce);\n      const ciphertext = naclUtil.decodeBase64(encryptedData.ciphertext);\n      const ephemPublicKey = naclUtil.decodeBase64(\n        encryptedData.ephemPublicKey\n      );\n\n      // decrypt\n      const decryptedMessage = nacl.box.open(\n        ciphertext,\n        nonce,\n        ephemPublicKey,\n        recieverEncryptionPrivateKey\n      );\n\n      // return decrypted msg data\n      let output;\n      try {\n        output = naclUtil.encodeUTF8(decryptedMessage);\n      } catch (err) {\n        throw new Error(\"Decryption failed.  Could not encode result as utf8\");\n      }\n\n      if (output) {\n        return output;\n      }\n      throw new Error(\"Decryption failed.  Output is falsy\");\n    }\n\n    default:\n      throw new Error(\"Encryption type/version not supported.\");\n  }\n}\n\nexport function combineEcdsaShares(sigShares) {\n  // R_x & R_y values can come from any node (they will be different per node), and will generate a valid signature\n  const R_x = sigShares[0].localX;\n  const R_y = sigShares[0].localY;\n  // the public key can come from any node - it obviously will be identical from each node\n  const publicKey = sigShares[0].publicKey;\n  const dataSigned = \"0x\" + sigShares[0].dataSigned;\n  const validShares = sigShares.map((s) => s.shareHex);\n  const shares = JSON.stringify(validShares);\n  log(\"shares is\", shares);\n  const sig = JSON.parse(wasmECDSA.combine_signature(R_x, R_y, shares));\n\n  log(\"signature\", sig);\n\n  return sig;\n}\n\nexport function combineBlsShares(sigSharesWithEverything, networkPubKeySet) {\n  const pkSetAsBytes = uint8arrayFromString(networkPubKeySet, \"base16\");\n  log(\"pkSetAsBytes\", pkSetAsBytes);\n\n  const sigShares = sigSharesWithEverything.map((s) => ({\n    shareHex: s.shareHex,\n    shareIndex: s.shareIndex,\n  }));\n  const signature = wasmBlsSdkHelpers.combine_signatures(\n    pkSetAsBytes,\n    sigShares\n  );\n  // log(\"raw sig\", signature);\n  log(\"signature is \", uint8arrayToString(signature, \"base16\"));\n\n  return { signature: uint8arrayToString(signature, \"base16\") };\n}\n\nexport function combineBlsDecryptionShares(\n  decryptionShares,\n  networkPubKeySet,\n  toDecrypt\n) {\n  // sort the decryption shares by share index.  this is important when combining the shares.\n  decryptionShares.sort((a, b) => a.shareIndex - b.shareIndex);\n\n  // combine the decryption shares\n  // log(\"combineBlsDecryptionShares\");\n  // log(\"decryptionShares\", decryptionShares);\n  // log(\"networkPubKeySet\", networkPubKeySet);\n  // log(\"toDecrypt\", toDecrypt);\n\n  // set decryption shares bytes in wasm\n  decryptionShares.forEach((s, idx) => {\n    wasmExports.set_share_indexes(idx, s.shareIndex);\n    const shareAsBytes = uint8arrayFromString(s.decryptionShare, \"base16\");\n    for (let i = 0; i < shareAsBytes.length; i++) {\n      wasmExports.set_decryption_shares_byte(i, idx, shareAsBytes[i]);\n    }\n  });\n\n  // set the public key set bytes in wasm\n  const pkSetAsBytes = uint8arrayFromString(networkPubKeySet, \"base16\");\n  wasmBlsSdkHelpers.set_mc_bytes(pkSetAsBytes);\n\n  // set the ciphertext bytes\n  const ciphertextAsBytes = uint8arrayFromString(toDecrypt, \"base16\");\n  for (let i = 0; i < ciphertextAsBytes.length; i++) {\n    wasmExports.set_ct_byte(i, ciphertextAsBytes[i]);\n  }\n\n  const decrypted = wasmBlsSdkHelpers.combine_decryption_shares(\n    decryptionShares.length,\n    pkSetAsBytes.length,\n    ciphertextAsBytes.length\n  );\n  // log(\"decrypted is \", uint8arrayToString(decrypted, \"base16\"));\n  return decrypted;\n}\n\nexport function generateSessionKeyPair() {\n  const keyPair = nacl.sign.keyPair();\n  return {\n    publicKey: uint8arrayToString(keyPair.publicKey, \"base16\"),\n    secretKey: uint8arrayToString(keyPair.secretKey, \"base16\"),\n  };\n}\n\nexport async function hashEncryptionKey({ encryptedSymmetricKey }) {\n  const hashOfKey = await crypto.subtle.digest(\n    \"SHA-256\",\n    encryptedSymmetricKey\n  );\n  const hashOfKeyStr = uint8arrayToString(new Uint8Array(hashOfKey), \"base16\");\n  return hashOfKeyStr;\n}\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","\"use strict\";\nlet _permanentCensorErrors = false;\nlet _censorErrors = false;\nconst LogLevels = { debug: 1, \"default\": 2, info: 2, warning: 3, error: 4, off: 5 };\nlet _logLevel = LogLevels[\"default\"];\nimport { version } from \"./_version\";\nlet _globalLogger = null;\nfunction _checkNormalize() {\n    try {\n        const missing = [];\n        // Make sure all forms of normalization are supported\n        [\"NFD\", \"NFC\", \"NFKD\", \"NFKC\"].forEach((form) => {\n            try {\n                if (\"test\".normalize(form) !== \"test\") {\n                    throw new Error(\"bad normalize\");\n                }\n                ;\n            }\n            catch (error) {\n                missing.push(form);\n            }\n        });\n        if (missing.length) {\n            throw new Error(\"missing \" + missing.join(\", \"));\n        }\n        if (String.fromCharCode(0xe9).normalize(\"NFD\") !== String.fromCharCode(0x65, 0x0301)) {\n            throw new Error(\"broken implementation\");\n        }\n    }\n    catch (error) {\n        return error.message;\n    }\n    return null;\n}\nconst _normalizeError = _checkNormalize();\nexport var LogLevel;\n(function (LogLevel) {\n    LogLevel[\"DEBUG\"] = \"DEBUG\";\n    LogLevel[\"INFO\"] = \"INFO\";\n    LogLevel[\"WARNING\"] = \"WARNING\";\n    LogLevel[\"ERROR\"] = \"ERROR\";\n    LogLevel[\"OFF\"] = \"OFF\";\n})(LogLevel || (LogLevel = {}));\nexport var ErrorCode;\n(function (ErrorCode) {\n    ///////////////////\n    // Generic Errors\n    // Unknown Error\n    ErrorCode[\"UNKNOWN_ERROR\"] = \"UNKNOWN_ERROR\";\n    // Not Implemented\n    ErrorCode[\"NOT_IMPLEMENTED\"] = \"NOT_IMPLEMENTED\";\n    // Unsupported Operation\n    //   - operation\n    ErrorCode[\"UNSUPPORTED_OPERATION\"] = \"UNSUPPORTED_OPERATION\";\n    // Network Error (i.e. Ethereum Network, such as an invalid chain ID)\n    //   - event (\"noNetwork\" is not re-thrown in provider.ready; otherwise thrown)\n    ErrorCode[\"NETWORK_ERROR\"] = \"NETWORK_ERROR\";\n    // Some sort of bad response from the server\n    ErrorCode[\"SERVER_ERROR\"] = \"SERVER_ERROR\";\n    // Timeout\n    ErrorCode[\"TIMEOUT\"] = \"TIMEOUT\";\n    ///////////////////\n    // Operational  Errors\n    // Buffer Overrun\n    ErrorCode[\"BUFFER_OVERRUN\"] = \"BUFFER_OVERRUN\";\n    // Numeric Fault\n    //   - operation: the operation being executed\n    //   - fault: the reason this faulted\n    ErrorCode[\"NUMERIC_FAULT\"] = \"NUMERIC_FAULT\";\n    ///////////////////\n    // Argument Errors\n    // Missing new operator to an object\n    //  - name: The name of the class\n    ErrorCode[\"MISSING_NEW\"] = \"MISSING_NEW\";\n    // Invalid argument (e.g. value is incompatible with type) to a function:\n    //   - argument: The argument name that was invalid\n    //   - value: The value of the argument\n    ErrorCode[\"INVALID_ARGUMENT\"] = \"INVALID_ARGUMENT\";\n    // Missing argument to a function:\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    ErrorCode[\"MISSING_ARGUMENT\"] = \"MISSING_ARGUMENT\";\n    // Too many arguments\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    ErrorCode[\"UNEXPECTED_ARGUMENT\"] = \"UNEXPECTED_ARGUMENT\";\n    ///////////////////\n    // Blockchain Errors\n    // Call exception\n    //  - transaction: the transaction\n    //  - address?: the contract address\n    //  - args?: The arguments passed into the function\n    //  - method?: The Solidity method signature\n    //  - errorSignature?: The EIP848 error signature\n    //  - errorArgs?: The EIP848 error parameters\n    //  - reason: The reason (only for EIP848 \"Error(string)\")\n    ErrorCode[\"CALL_EXCEPTION\"] = \"CALL_EXCEPTION\";\n    // Insufficient funds (< value + gasLimit * gasPrice)\n    //   - transaction: the transaction attempted\n    ErrorCode[\"INSUFFICIENT_FUNDS\"] = \"INSUFFICIENT_FUNDS\";\n    // Nonce has already been used\n    //   - transaction: the transaction attempted\n    ErrorCode[\"NONCE_EXPIRED\"] = \"NONCE_EXPIRED\";\n    // The replacement fee for the transaction is too low\n    //   - transaction: the transaction attempted\n    ErrorCode[\"REPLACEMENT_UNDERPRICED\"] = \"REPLACEMENT_UNDERPRICED\";\n    // The gas limit could not be estimated\n    //   - transaction: the transaction passed to estimateGas\n    ErrorCode[\"UNPREDICTABLE_GAS_LIMIT\"] = \"UNPREDICTABLE_GAS_LIMIT\";\n    // The transaction was replaced by one with a higher gas price\n    //   - reason: \"cancelled\", \"replaced\" or \"repriced\"\n    //   - cancelled: true if reason == \"cancelled\" or reason == \"replaced\")\n    //   - hash: original transaction hash\n    //   - replacement: the full TransactionsResponse for the replacement\n    //   - receipt: the receipt of the replacement\n    ErrorCode[\"TRANSACTION_REPLACED\"] = \"TRANSACTION_REPLACED\";\n})(ErrorCode || (ErrorCode = {}));\n;\nconst HEX = \"0123456789abcdef\";\nexport class Logger {\n    constructor(version) {\n        Object.defineProperty(this, \"version\", {\n            enumerable: true,\n            value: version,\n            writable: false\n        });\n    }\n    _log(logLevel, args) {\n        const level = logLevel.toLowerCase();\n        if (LogLevels[level] == null) {\n            this.throwArgumentError(\"invalid log level name\", \"logLevel\", logLevel);\n        }\n        if (_logLevel > LogLevels[level]) {\n            return;\n        }\n        console.log.apply(console, args);\n    }\n    debug(...args) {\n        this._log(Logger.levels.DEBUG, args);\n    }\n    info(...args) {\n        this._log(Logger.levels.INFO, args);\n    }\n    warn(...args) {\n        this._log(Logger.levels.WARNING, args);\n    }\n    makeError(message, code, params) {\n        // Errors are being censored\n        if (_censorErrors) {\n            return this.makeError(\"censored error\", code, {});\n        }\n        if (!code) {\n            code = Logger.errors.UNKNOWN_ERROR;\n        }\n        if (!params) {\n            params = {};\n        }\n        const messageDetails = [];\n        Object.keys(params).forEach((key) => {\n            const value = params[key];\n            try {\n                if (value instanceof Uint8Array) {\n                    let hex = \"\";\n                    for (let i = 0; i < value.length; i++) {\n                        hex += HEX[value[i] >> 4];\n                        hex += HEX[value[i] & 0x0f];\n                    }\n                    messageDetails.push(key + \"=Uint8Array(0x\" + hex + \")\");\n                }\n                else {\n                    messageDetails.push(key + \"=\" + JSON.stringify(value));\n                }\n            }\n            catch (error) {\n                messageDetails.push(key + \"=\" + JSON.stringify(params[key].toString()));\n            }\n        });\n        messageDetails.push(`code=${code}`);\n        messageDetails.push(`version=${this.version}`);\n        const reason = message;\n        let url = \"\";\n        switch (code) {\n            case ErrorCode.NUMERIC_FAULT: {\n                url = \"NUMERIC_FAULT\";\n                const fault = message;\n                switch (fault) {\n                    case \"overflow\":\n                    case \"underflow\":\n                    case \"division-by-zero\":\n                        url += \"-\" + fault;\n                        break;\n                    case \"negative-power\":\n                    case \"negative-width\":\n                        url += \"-unsupported\";\n                        break;\n                    case \"unbound-bitwise-result\":\n                        url += \"-unbound-result\";\n                        break;\n                }\n                break;\n            }\n            case ErrorCode.CALL_EXCEPTION:\n            case ErrorCode.INSUFFICIENT_FUNDS:\n            case ErrorCode.MISSING_NEW:\n            case ErrorCode.NONCE_EXPIRED:\n            case ErrorCode.REPLACEMENT_UNDERPRICED:\n            case ErrorCode.TRANSACTION_REPLACED:\n            case ErrorCode.UNPREDICTABLE_GAS_LIMIT:\n                url = code;\n                break;\n        }\n        if (url) {\n            message += \" [ See: https:/\\/links.ethers.org/v5-errors-\" + url + \" ]\";\n        }\n        if (messageDetails.length) {\n            message += \" (\" + messageDetails.join(\", \") + \")\";\n        }\n        // @TODO: Any??\n        const error = new Error(message);\n        error.reason = reason;\n        error.code = code;\n        Object.keys(params).forEach(function (key) {\n            error[key] = params[key];\n        });\n        return error;\n    }\n    throwError(message, code, params) {\n        throw this.makeError(message, code, params);\n    }\n    throwArgumentError(message, name, value) {\n        return this.throwError(message, Logger.errors.INVALID_ARGUMENT, {\n            argument: name,\n            value: value\n        });\n    }\n    assert(condition, message, code, params) {\n        if (!!condition) {\n            return;\n        }\n        this.throwError(message, code, params);\n    }\n    assertArgument(condition, message, name, value) {\n        if (!!condition) {\n            return;\n        }\n        this.throwArgumentError(message, name, value);\n    }\n    checkNormalize(message) {\n        if (message == null) {\n            message = \"platform missing String.prototype.normalize\";\n        }\n        if (_normalizeError) {\n            this.throwError(\"platform missing String.prototype.normalize\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"String.prototype.normalize\", form: _normalizeError\n            });\n        }\n    }\n    checkSafeUint53(value, message) {\n        if (typeof (value) !== \"number\") {\n            return;\n        }\n        if (message == null) {\n            message = \"value not safe\";\n        }\n        if (value < 0 || value >= 0x1fffffffffffff) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"out-of-safe-range\",\n                value: value\n            });\n        }\n        if (value % 1) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"non-integer\",\n                value: value\n            });\n        }\n    }\n    checkArgumentCount(count, expectedCount, message) {\n        if (message) {\n            message = \": \" + message;\n        }\n        else {\n            message = \"\";\n        }\n        if (count < expectedCount) {\n            this.throwError(\"missing argument\" + message, Logger.errors.MISSING_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n        if (count > expectedCount) {\n            this.throwError(\"too many arguments\" + message, Logger.errors.UNEXPECTED_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n    }\n    checkNew(target, kind) {\n        if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n    checkAbstract(target, kind) {\n        if (target === kind) {\n            this.throwError(\"cannot instantiate abstract class \" + JSON.stringify(kind.name) + \" directly; use a sub-class\", Logger.errors.UNSUPPORTED_OPERATION, { name: target.name, operation: \"new\" });\n        }\n        else if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n    static globalLogger() {\n        if (!_globalLogger) {\n            _globalLogger = new Logger(version);\n        }\n        return _globalLogger;\n    }\n    static setCensorship(censorship, permanent) {\n        if (!censorship && permanent) {\n            this.globalLogger().throwError(\"cannot permanently disable censorship\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n        if (_permanentCensorErrors) {\n            if (!censorship) {\n                return;\n            }\n            this.globalLogger().throwError(\"error censorship permanent\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n        _censorErrors = !!censorship;\n        _permanentCensorErrors = !!permanent;\n    }\n    static setLogLevel(logLevel) {\n        const level = LogLevels[logLevel.toLowerCase()];\n        if (level == null) {\n            Logger.globalLogger().warn(\"invalid log level - \" + logLevel);\n            return;\n        }\n        _logLevel = level;\n    }\n    static from(version) {\n        return new Logger(version);\n    }\n}\nLogger.errors = ErrorCode;\nLogger.levels = LogLevel;\n//# sourceMappingURL=index.js.map","export const version = \"logger/5.6.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\n/**\n *  BigNumber\n *\n *  A wrapper around the BN.js object. We use the BN.js library\n *  because it is used by elliptic, so it is required regardless.\n *\n */\nimport _BN from \"bn.js\";\nvar BN = _BN.BN;\nimport { hexlify, isBytes, isHexString } from \"@ethersproject/bytes\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nconst _constructorGuard = {};\nconst MAX_SAFE = 0x1fffffffffffff;\nexport function isBigNumberish(value) {\n    return (value != null) && (BigNumber.isBigNumber(value) ||\n        (typeof (value) === \"number\" && (value % 1) === 0) ||\n        (typeof (value) === \"string\" && !!value.match(/^-?[0-9]+$/)) ||\n        isHexString(value) ||\n        (typeof (value) === \"bigint\") ||\n        isBytes(value));\n}\n// Only warn about passing 10 into radix once\nlet _warnedToStringRadix = false;\nexport class BigNumber {\n    constructor(constructorGuard, hex) {\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"cannot call constructor directly; use BigNumber.from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new (BigNumber)\"\n            });\n        }\n        this._hex = hex;\n        this._isBigNumber = true;\n        Object.freeze(this);\n    }\n    fromTwos(value) {\n        return toBigNumber(toBN(this).fromTwos(value));\n    }\n    toTwos(value) {\n        return toBigNumber(toBN(this).toTwos(value));\n    }\n    abs() {\n        if (this._hex[0] === \"-\") {\n            return BigNumber.from(this._hex.substring(1));\n        }\n        return this;\n    }\n    add(other) {\n        return toBigNumber(toBN(this).add(toBN(other)));\n    }\n    sub(other) {\n        return toBigNumber(toBN(this).sub(toBN(other)));\n    }\n    div(other) {\n        const o = BigNumber.from(other);\n        if (o.isZero()) {\n            throwFault(\"division-by-zero\", \"div\");\n        }\n        return toBigNumber(toBN(this).div(toBN(other)));\n    }\n    mul(other) {\n        return toBigNumber(toBN(this).mul(toBN(other)));\n    }\n    mod(other) {\n        const value = toBN(other);\n        if (value.isNeg()) {\n            throwFault(\"division-by-zero\", \"mod\");\n        }\n        return toBigNumber(toBN(this).umod(value));\n    }\n    pow(other) {\n        const value = toBN(other);\n        if (value.isNeg()) {\n            throwFault(\"negative-power\", \"pow\");\n        }\n        return toBigNumber(toBN(this).pow(value));\n    }\n    and(other) {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"unbound-bitwise-result\", \"and\");\n        }\n        return toBigNumber(toBN(this).and(value));\n    }\n    or(other) {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"unbound-bitwise-result\", \"or\");\n        }\n        return toBigNumber(toBN(this).or(value));\n    }\n    xor(other) {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"unbound-bitwise-result\", \"xor\");\n        }\n        return toBigNumber(toBN(this).xor(value));\n    }\n    mask(value) {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"negative-width\", \"mask\");\n        }\n        return toBigNumber(toBN(this).maskn(value));\n    }\n    shl(value) {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"negative-width\", \"shl\");\n        }\n        return toBigNumber(toBN(this).shln(value));\n    }\n    shr(value) {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"negative-width\", \"shr\");\n        }\n        return toBigNumber(toBN(this).shrn(value));\n    }\n    eq(other) {\n        return toBN(this).eq(toBN(other));\n    }\n    lt(other) {\n        return toBN(this).lt(toBN(other));\n    }\n    lte(other) {\n        return toBN(this).lte(toBN(other));\n    }\n    gt(other) {\n        return toBN(this).gt(toBN(other));\n    }\n    gte(other) {\n        return toBN(this).gte(toBN(other));\n    }\n    isNegative() {\n        return (this._hex[0] === \"-\");\n    }\n    isZero() {\n        return toBN(this).isZero();\n    }\n    toNumber() {\n        try {\n            return toBN(this).toNumber();\n        }\n        catch (error) {\n            throwFault(\"overflow\", \"toNumber\", this.toString());\n        }\n        return null;\n    }\n    toBigInt() {\n        try {\n            return BigInt(this.toString());\n        }\n        catch (e) { }\n        return logger.throwError(\"this platform does not support BigInt\", Logger.errors.UNSUPPORTED_OPERATION, {\n            value: this.toString()\n        });\n    }\n    toString() {\n        // Lots of people expect this, which we do not support, so check (See: #889)\n        if (arguments.length > 0) {\n            if (arguments[0] === 10) {\n                if (!_warnedToStringRadix) {\n                    _warnedToStringRadix = true;\n                    logger.warn(\"BigNumber.toString does not accept any parameters; base-10 is assumed\");\n                }\n            }\n            else if (arguments[0] === 16) {\n                logger.throwError(\"BigNumber.toString does not accept any parameters; use bigNumber.toHexString()\", Logger.errors.UNEXPECTED_ARGUMENT, {});\n            }\n            else {\n                logger.throwError(\"BigNumber.toString does not accept parameters\", Logger.errors.UNEXPECTED_ARGUMENT, {});\n            }\n        }\n        return toBN(this).toString(10);\n    }\n    toHexString() {\n        return this._hex;\n    }\n    toJSON(key) {\n        return { type: \"BigNumber\", hex: this.toHexString() };\n    }\n    static from(value) {\n        if (value instanceof BigNumber) {\n            return value;\n        }\n        if (typeof (value) === \"string\") {\n            if (value.match(/^-?0x[0-9a-f]+$/i)) {\n                return new BigNumber(_constructorGuard, toHex(value));\n            }\n            if (value.match(/^-?[0-9]+$/)) {\n                return new BigNumber(_constructorGuard, toHex(new BN(value)));\n            }\n            return logger.throwArgumentError(\"invalid BigNumber string\", \"value\", value);\n        }\n        if (typeof (value) === \"number\") {\n            if (value % 1) {\n                throwFault(\"underflow\", \"BigNumber.from\", value);\n            }\n            if (value >= MAX_SAFE || value <= -MAX_SAFE) {\n                throwFault(\"overflow\", \"BigNumber.from\", value);\n            }\n            return BigNumber.from(String(value));\n        }\n        const anyValue = value;\n        if (typeof (anyValue) === \"bigint\") {\n            return BigNumber.from(anyValue.toString());\n        }\n        if (isBytes(anyValue)) {\n            return BigNumber.from(hexlify(anyValue));\n        }\n        if (anyValue) {\n            // Hexable interface (takes priority)\n            if (anyValue.toHexString) {\n                const hex = anyValue.toHexString();\n                if (typeof (hex) === \"string\") {\n                    return BigNumber.from(hex);\n                }\n            }\n            else {\n                // For now, handle legacy JSON-ified values (goes away in v6)\n                let hex = anyValue._hex;\n                // New-form JSON\n                if (hex == null && anyValue.type === \"BigNumber\") {\n                    hex = anyValue.hex;\n                }\n                if (typeof (hex) === \"string\") {\n                    if (isHexString(hex) || (hex[0] === \"-\" && isHexString(hex.substring(1)))) {\n                        return BigNumber.from(hex);\n                    }\n                }\n            }\n        }\n        return logger.throwArgumentError(\"invalid BigNumber value\", \"value\", value);\n    }\n    static isBigNumber(value) {\n        return !!(value && value._isBigNumber);\n    }\n}\n// Normalize the hex string\nfunction toHex(value) {\n    // For BN, call on the hex string\n    if (typeof (value) !== \"string\") {\n        return toHex(value.toString(16));\n    }\n    // If negative, prepend the negative sign to the normalized positive value\n    if (value[0] === \"-\") {\n        // Strip off the negative sign\n        value = value.substring(1);\n        // Cannot have multiple negative signs (e.g. \"--0x04\")\n        if (value[0] === \"-\") {\n            logger.throwArgumentError(\"invalid hex\", \"value\", value);\n        }\n        // Call toHex on the positive component\n        value = toHex(value);\n        // Do not allow \"-0x00\"\n        if (value === \"0x00\") {\n            return value;\n        }\n        // Negate the value\n        return \"-\" + value;\n    }\n    // Add a \"0x\" prefix if missing\n    if (value.substring(0, 2) !== \"0x\") {\n        value = \"0x\" + value;\n    }\n    // Normalize zero\n    if (value === \"0x\") {\n        return \"0x00\";\n    }\n    // Make the string even length\n    if (value.length % 2) {\n        value = \"0x0\" + value.substring(2);\n    }\n    // Trim to smallest even-length string\n    while (value.length > 4 && value.substring(0, 4) === \"0x00\") {\n        value = \"0x\" + value.substring(4);\n    }\n    return value;\n}\nfunction toBigNumber(value) {\n    return BigNumber.from(toHex(value));\n}\nfunction toBN(value) {\n    const hex = BigNumber.from(value).toHexString();\n    if (hex[0] === \"-\") {\n        return (new BN(\"-\" + hex.substring(3), 16));\n    }\n    return new BN(hex.substring(2), 16);\n}\nfunction throwFault(fault, operation, value) {\n    const params = { fault: fault, operation: operation };\n    if (value != null) {\n        params.value = value;\n    }\n    return logger.throwError(fault, Logger.errors.NUMERIC_FAULT, params);\n}\n// value should have no prefix\nexport function _base36To16(value) {\n    return (new BN(value, 36)).toString(16);\n}\n// value should have no prefix\nexport function _base16To36(value) {\n    return (new BN(value, 16)).toString(36);\n}\n//# sourceMappingURL=bignumber.js.map","export const version = \"bignumber/5.6.2\";\n//# sourceMappingURL=_version.js.map","/**\n * [js-sha3]{@link https://github.com/emn178/js-sha3}\n *\n * @version 0.8.0\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\n * @copyright Chen, Yi-Cyuan 2015-2018\n * @license MIT\n */\n/*jslint bitwise: true */\n(function () {\n  'use strict';\n\n  var INPUT_ERROR = 'input is invalid type';\n  var FINALIZE_ERROR = 'finalize already called';\n  var WINDOW = typeof window === 'object';\n  var root = WINDOW ? window : {};\n  if (root.JS_SHA3_NO_WINDOW) {\n    WINDOW = false;\n  }\n  var WEB_WORKER = !WINDOW && typeof self === 'object';\n  var NODE_JS = !root.JS_SHA3_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;\n  if (NODE_JS) {\n    root = global;\n  } else if (WEB_WORKER) {\n    root = self;\n  }\n  var COMMON_JS = !root.JS_SHA3_NO_COMMON_JS && typeof module === 'object' && module.exports;\n  var AMD = typeof define === 'function' && define.amd;\n  var ARRAY_BUFFER = !root.JS_SHA3_NO_ARRAY_BUFFER && typeof ArrayBuffer !== 'undefined';\n  var HEX_CHARS = '0123456789abcdef'.split('');\n  var SHAKE_PADDING = [31, 7936, 2031616, 520093696];\n  var CSHAKE_PADDING = [4, 1024, 262144, 67108864];\n  var KECCAK_PADDING = [1, 256, 65536, 16777216];\n  var PADDING = [6, 1536, 393216, 100663296];\n  var SHIFT = [0, 8, 16, 24];\n  var RC = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649,\n    0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0,\n    2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771,\n    2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648,\n    2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648];\n  var BITS = [224, 256, 384, 512];\n  var SHAKE_BITS = [128, 256];\n  var OUTPUT_TYPES = ['hex', 'buffer', 'arrayBuffer', 'array', 'digest'];\n  var CSHAKE_BYTEPAD = {\n    '128': 168,\n    '256': 136\n  };\n\n  if (root.JS_SHA3_NO_NODE_JS || !Array.isArray) {\n    Array.isArray = function (obj) {\n      return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n  }\n\n  if (ARRAY_BUFFER && (root.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView)) {\n    ArrayBuffer.isView = function (obj) {\n      return typeof obj === 'object' && obj.buffer && obj.buffer.constructor === ArrayBuffer;\n    };\n  }\n\n  var createOutputMethod = function (bits, padding, outputType) {\n    return function (message) {\n      return new Keccak(bits, padding, bits).update(message)[outputType]();\n    };\n  };\n\n  var createShakeOutputMethod = function (bits, padding, outputType) {\n    return function (message, outputBits) {\n      return new Keccak(bits, padding, outputBits).update(message)[outputType]();\n    };\n  };\n\n  var createCshakeOutputMethod = function (bits, padding, outputType) {\n    return function (message, outputBits, n, s) {\n      return methods['cshake' + bits].update(message, outputBits, n, s)[outputType]();\n    };\n  };\n\n  var createKmacOutputMethod = function (bits, padding, outputType) {\n    return function (key, message, outputBits, s) {\n      return methods['kmac' + bits].update(key, message, outputBits, s)[outputType]();\n    };\n  };\n\n  var createOutputMethods = function (method, createMethod, bits, padding) {\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createMethod(bits, padding, type);\n    }\n    return method;\n  };\n\n  var createMethod = function (bits, padding) {\n    var method = createOutputMethod(bits, padding, 'hex');\n    method.create = function () {\n      return new Keccak(bits, padding, bits);\n    };\n    method.update = function (message) {\n      return method.create().update(message);\n    };\n    return createOutputMethods(method, createOutputMethod, bits, padding);\n  };\n\n  var createShakeMethod = function (bits, padding) {\n    var method = createShakeOutputMethod(bits, padding, 'hex');\n    method.create = function (outputBits) {\n      return new Keccak(bits, padding, outputBits);\n    };\n    method.update = function (message, outputBits) {\n      return method.create(outputBits).update(message);\n    };\n    return createOutputMethods(method, createShakeOutputMethod, bits, padding);\n  };\n\n  var createCshakeMethod = function (bits, padding) {\n    var w = CSHAKE_BYTEPAD[bits];\n    var method = createCshakeOutputMethod(bits, padding, 'hex');\n    method.create = function (outputBits, n, s) {\n      if (!n && !s) {\n        return methods['shake' + bits].create(outputBits);\n      } else {\n        return new Keccak(bits, padding, outputBits).bytepad([n, s], w);\n      }\n    };\n    method.update = function (message, outputBits, n, s) {\n      return method.create(outputBits, n, s).update(message);\n    };\n    return createOutputMethods(method, createCshakeOutputMethod, bits, padding);\n  };\n\n  var createKmacMethod = function (bits, padding) {\n    var w = CSHAKE_BYTEPAD[bits];\n    var method = createKmacOutputMethod(bits, padding, 'hex');\n    method.create = function (key, outputBits, s) {\n      return new Kmac(bits, padding, outputBits).bytepad(['KMAC', s], w).bytepad([key], w);\n    };\n    method.update = function (key, message, outputBits, s) {\n      return method.create(key, outputBits, s).update(message);\n    };\n    return createOutputMethods(method, createKmacOutputMethod, bits, padding);\n  };\n\n  var algorithms = [\n    { name: 'keccak', padding: KECCAK_PADDING, bits: BITS, createMethod: createMethod },\n    { name: 'sha3', padding: PADDING, bits: BITS, createMethod: createMethod },\n    { name: 'shake', padding: SHAKE_PADDING, bits: SHAKE_BITS, createMethod: createShakeMethod },\n    { name: 'cshake', padding: CSHAKE_PADDING, bits: SHAKE_BITS, createMethod: createCshakeMethod },\n    { name: 'kmac', padding: CSHAKE_PADDING, bits: SHAKE_BITS, createMethod: createKmacMethod }\n  ];\n\n  var methods = {}, methodNames = [];\n\n  for (var i = 0; i < algorithms.length; ++i) {\n    var algorithm = algorithms[i];\n    var bits = algorithm.bits;\n    for (var j = 0; j < bits.length; ++j) {\n      var methodName = algorithm.name + '_' + bits[j];\n      methodNames.push(methodName);\n      methods[methodName] = algorithm.createMethod(bits[j], algorithm.padding);\n      if (algorithm.name !== 'sha3') {\n        var newMethodName = algorithm.name + bits[j];\n        methodNames.push(newMethodName);\n        methods[newMethodName] = methods[methodName];\n      }\n    }\n  }\n\n  function Keccak(bits, padding, outputBits) {\n    this.blocks = [];\n    this.s = [];\n    this.padding = padding;\n    this.outputBits = outputBits;\n    this.reset = true;\n    this.finalized = false;\n    this.block = 0;\n    this.start = 0;\n    this.blockCount = (1600 - (bits << 1)) >> 5;\n    this.byteCount = this.blockCount << 2;\n    this.outputBlocks = outputBits >> 5;\n    this.extraBytes = (outputBits & 31) >> 3;\n\n    for (var i = 0; i < 50; ++i) {\n      this.s[i] = 0;\n    }\n  }\n\n  Keccak.prototype.update = function (message) {\n    if (this.finalized) {\n      throw new Error(FINALIZE_ERROR);\n    }\n    var notString, type = typeof message;\n    if (type !== 'string') {\n      if (type === 'object') {\n        if (message === null) {\n          throw new Error(INPUT_ERROR);\n        } else if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {\n          message = new Uint8Array(message);\n        } else if (!Array.isArray(message)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(message)) {\n            throw new Error(INPUT_ERROR);\n          }\n        }\n      } else {\n        throw new Error(INPUT_ERROR);\n      }\n      notString = true;\n    }\n    var blocks = this.blocks, byteCount = this.byteCount, length = message.length,\n      blockCount = this.blockCount, index = 0, s = this.s, i, code;\n\n    while (index < length) {\n      if (this.reset) {\n        this.reset = false;\n        blocks[0] = this.block;\n        for (i = 1; i < blockCount + 1; ++i) {\n          blocks[i] = 0;\n        }\n      }\n      if (notString) {\n        for (i = this.start; index < length && i < byteCount; ++index) {\n          blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\n        }\n      } else {\n        for (i = this.start; index < length && i < byteCount; ++index) {\n          code = message.charCodeAt(index);\n          if (code < 0x80) {\n            blocks[i >> 2] |= code << SHIFT[i++ & 3];\n          } else if (code < 0x800) {\n            blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else if (code < 0xd800 || code >= 0xe000) {\n            blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else {\n            code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\n            blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          }\n        }\n      }\n      this.lastByteIndex = i;\n      if (i >= byteCount) {\n        this.start = i - byteCount;\n        this.block = blocks[blockCount];\n        for (i = 0; i < blockCount; ++i) {\n          s[i] ^= blocks[i];\n        }\n        f(s);\n        this.reset = true;\n      } else {\n        this.start = i;\n      }\n    }\n    return this;\n  };\n\n  Keccak.prototype.encode = function (x, right) {\n    var o = x & 255, n = 1;\n    var bytes = [o];\n    x = x >> 8;\n    o = x & 255;\n    while (o > 0) {\n      bytes.unshift(o);\n      x = x >> 8;\n      o = x & 255;\n      ++n;\n    }\n    if (right) {\n      bytes.push(n);\n    } else {\n      bytes.unshift(n);\n    }\n    this.update(bytes);\n    return bytes.length;\n  };\n\n  Keccak.prototype.encodeString = function (str) {\n    var notString, type = typeof str;\n    if (type !== 'string') {\n      if (type === 'object') {\n        if (str === null) {\n          throw new Error(INPUT_ERROR);\n        } else if (ARRAY_BUFFER && str.constructor === ArrayBuffer) {\n          str = new Uint8Array(str);\n        } else if (!Array.isArray(str)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(str)) {\n            throw new Error(INPUT_ERROR);\n          }\n        }\n      } else {\n        throw new Error(INPUT_ERROR);\n      }\n      notString = true;\n    }\n    var bytes = 0, length = str.length;\n    if (notString) {\n      bytes = length;\n    } else {\n      for (var i = 0; i < str.length; ++i) {\n        var code = str.charCodeAt(i);\n        if (code < 0x80) {\n          bytes += 1;\n        } else if (code < 0x800) {\n          bytes += 2;\n        } else if (code < 0xd800 || code >= 0xe000) {\n          bytes += 3;\n        } else {\n          code = 0x10000 + (((code & 0x3ff) << 10) | (str.charCodeAt(++i) & 0x3ff));\n          bytes += 4;\n        }\n      }\n    }\n    bytes += this.encode(bytes * 8);\n    this.update(str);\n    return bytes;\n  };\n\n  Keccak.prototype.bytepad = function (strs, w) {\n    var bytes = this.encode(w);\n    for (var i = 0; i < strs.length; ++i) {\n      bytes += this.encodeString(strs[i]);\n    }\n    var paddingBytes = w - bytes % w;\n    var zeros = [];\n    zeros.length = paddingBytes;\n    this.update(zeros);\n    return this;\n  };\n\n  Keccak.prototype.finalize = function () {\n    if (this.finalized) {\n      return;\n    }\n    this.finalized = true;\n    var blocks = this.blocks, i = this.lastByteIndex, blockCount = this.blockCount, s = this.s;\n    blocks[i >> 2] |= this.padding[i & 3];\n    if (this.lastByteIndex === this.byteCount) {\n      blocks[0] = blocks[blockCount];\n      for (i = 1; i < blockCount + 1; ++i) {\n        blocks[i] = 0;\n      }\n    }\n    blocks[blockCount - 1] |= 0x80000000;\n    for (i = 0; i < blockCount; ++i) {\n      s[i] ^= blocks[i];\n    }\n    f(s);\n  };\n\n  Keccak.prototype.toString = Keccak.prototype.hex = function () {\n    this.finalize();\n\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n      extraBytes = this.extraBytes, i = 0, j = 0;\n    var hex = '', block;\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        block = s[i];\n        hex += HEX_CHARS[(block >> 4) & 0x0F] + HEX_CHARS[block & 0x0F] +\n          HEX_CHARS[(block >> 12) & 0x0F] + HEX_CHARS[(block >> 8) & 0x0F] +\n          HEX_CHARS[(block >> 20) & 0x0F] + HEX_CHARS[(block >> 16) & 0x0F] +\n          HEX_CHARS[(block >> 28) & 0x0F] + HEX_CHARS[(block >> 24) & 0x0F];\n      }\n      if (j % blockCount === 0) {\n        f(s);\n        i = 0;\n      }\n    }\n    if (extraBytes) {\n      block = s[i];\n      hex += HEX_CHARS[(block >> 4) & 0x0F] + HEX_CHARS[block & 0x0F];\n      if (extraBytes > 1) {\n        hex += HEX_CHARS[(block >> 12) & 0x0F] + HEX_CHARS[(block >> 8) & 0x0F];\n      }\n      if (extraBytes > 2) {\n        hex += HEX_CHARS[(block >> 20) & 0x0F] + HEX_CHARS[(block >> 16) & 0x0F];\n      }\n    }\n    return hex;\n  };\n\n  Keccak.prototype.arrayBuffer = function () {\n    this.finalize();\n\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n      extraBytes = this.extraBytes, i = 0, j = 0;\n    var bytes = this.outputBits >> 3;\n    var buffer;\n    if (extraBytes) {\n      buffer = new ArrayBuffer((outputBlocks + 1) << 2);\n    } else {\n      buffer = new ArrayBuffer(bytes);\n    }\n    var array = new Uint32Array(buffer);\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        array[j] = s[i];\n      }\n      if (j % blockCount === 0) {\n        f(s);\n      }\n    }\n    if (extraBytes) {\n      array[i] = s[i];\n      buffer = buffer.slice(0, bytes);\n    }\n    return buffer;\n  };\n\n  Keccak.prototype.buffer = Keccak.prototype.arrayBuffer;\n\n  Keccak.prototype.digest = Keccak.prototype.array = function () {\n    this.finalize();\n\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n      extraBytes = this.extraBytes, i = 0, j = 0;\n    var array = [], offset, block;\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        offset = j << 2;\n        block = s[i];\n        array[offset] = block & 0xFF;\n        array[offset + 1] = (block >> 8) & 0xFF;\n        array[offset + 2] = (block >> 16) & 0xFF;\n        array[offset + 3] = (block >> 24) & 0xFF;\n      }\n      if (j % blockCount === 0) {\n        f(s);\n      }\n    }\n    if (extraBytes) {\n      offset = j << 2;\n      block = s[i];\n      array[offset] = block & 0xFF;\n      if (extraBytes > 1) {\n        array[offset + 1] = (block >> 8) & 0xFF;\n      }\n      if (extraBytes > 2) {\n        array[offset + 2] = (block >> 16) & 0xFF;\n      }\n    }\n    return array;\n  };\n\n  function Kmac(bits, padding, outputBits) {\n    Keccak.call(this, bits, padding, outputBits);\n  }\n\n  Kmac.prototype = new Keccak();\n\n  Kmac.prototype.finalize = function () {\n    this.encode(this.outputBits, true);\n    return Keccak.prototype.finalize.call(this);\n  };\n\n  var f = function (s) {\n    var h, l, n, c0, c1, c2, c3, c4, c5, c6, c7, c8, c9,\n      b0, b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b11, b12, b13, b14, b15, b16, b17,\n      b18, b19, b20, b21, b22, b23, b24, b25, b26, b27, b28, b29, b30, b31, b32, b33,\n      b34, b35, b36, b37, b38, b39, b40, b41, b42, b43, b44, b45, b46, b47, b48, b49;\n    for (n = 0; n < 48; n += 2) {\n      c0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40];\n      c1 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41];\n      c2 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42];\n      c3 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43];\n      c4 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44];\n      c5 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45];\n      c6 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46];\n      c7 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47];\n      c8 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48];\n      c9 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49];\n\n      h = c8 ^ ((c2 << 1) | (c3 >>> 31));\n      l = c9 ^ ((c3 << 1) | (c2 >>> 31));\n      s[0] ^= h;\n      s[1] ^= l;\n      s[10] ^= h;\n      s[11] ^= l;\n      s[20] ^= h;\n      s[21] ^= l;\n      s[30] ^= h;\n      s[31] ^= l;\n      s[40] ^= h;\n      s[41] ^= l;\n      h = c0 ^ ((c4 << 1) | (c5 >>> 31));\n      l = c1 ^ ((c5 << 1) | (c4 >>> 31));\n      s[2] ^= h;\n      s[3] ^= l;\n      s[12] ^= h;\n      s[13] ^= l;\n      s[22] ^= h;\n      s[23] ^= l;\n      s[32] ^= h;\n      s[33] ^= l;\n      s[42] ^= h;\n      s[43] ^= l;\n      h = c2 ^ ((c6 << 1) | (c7 >>> 31));\n      l = c3 ^ ((c7 << 1) | (c6 >>> 31));\n      s[4] ^= h;\n      s[5] ^= l;\n      s[14] ^= h;\n      s[15] ^= l;\n      s[24] ^= h;\n      s[25] ^= l;\n      s[34] ^= h;\n      s[35] ^= l;\n      s[44] ^= h;\n      s[45] ^= l;\n      h = c4 ^ ((c8 << 1) | (c9 >>> 31));\n      l = c5 ^ ((c9 << 1) | (c8 >>> 31));\n      s[6] ^= h;\n      s[7] ^= l;\n      s[16] ^= h;\n      s[17] ^= l;\n      s[26] ^= h;\n      s[27] ^= l;\n      s[36] ^= h;\n      s[37] ^= l;\n      s[46] ^= h;\n      s[47] ^= l;\n      h = c6 ^ ((c0 << 1) | (c1 >>> 31));\n      l = c7 ^ ((c1 << 1) | (c0 >>> 31));\n      s[8] ^= h;\n      s[9] ^= l;\n      s[18] ^= h;\n      s[19] ^= l;\n      s[28] ^= h;\n      s[29] ^= l;\n      s[38] ^= h;\n      s[39] ^= l;\n      s[48] ^= h;\n      s[49] ^= l;\n\n      b0 = s[0];\n      b1 = s[1];\n      b32 = (s[11] << 4) | (s[10] >>> 28);\n      b33 = (s[10] << 4) | (s[11] >>> 28);\n      b14 = (s[20] << 3) | (s[21] >>> 29);\n      b15 = (s[21] << 3) | (s[20] >>> 29);\n      b46 = (s[31] << 9) | (s[30] >>> 23);\n      b47 = (s[30] << 9) | (s[31] >>> 23);\n      b28 = (s[40] << 18) | (s[41] >>> 14);\n      b29 = (s[41] << 18) | (s[40] >>> 14);\n      b20 = (s[2] << 1) | (s[3] >>> 31);\n      b21 = (s[3] << 1) | (s[2] >>> 31);\n      b2 = (s[13] << 12) | (s[12] >>> 20);\n      b3 = (s[12] << 12) | (s[13] >>> 20);\n      b34 = (s[22] << 10) | (s[23] >>> 22);\n      b35 = (s[23] << 10) | (s[22] >>> 22);\n      b16 = (s[33] << 13) | (s[32] >>> 19);\n      b17 = (s[32] << 13) | (s[33] >>> 19);\n      b48 = (s[42] << 2) | (s[43] >>> 30);\n      b49 = (s[43] << 2) | (s[42] >>> 30);\n      b40 = (s[5] << 30) | (s[4] >>> 2);\n      b41 = (s[4] << 30) | (s[5] >>> 2);\n      b22 = (s[14] << 6) | (s[15] >>> 26);\n      b23 = (s[15] << 6) | (s[14] >>> 26);\n      b4 = (s[25] << 11) | (s[24] >>> 21);\n      b5 = (s[24] << 11) | (s[25] >>> 21);\n      b36 = (s[34] << 15) | (s[35] >>> 17);\n      b37 = (s[35] << 15) | (s[34] >>> 17);\n      b18 = (s[45] << 29) | (s[44] >>> 3);\n      b19 = (s[44] << 29) | (s[45] >>> 3);\n      b10 = (s[6] << 28) | (s[7] >>> 4);\n      b11 = (s[7] << 28) | (s[6] >>> 4);\n      b42 = (s[17] << 23) | (s[16] >>> 9);\n      b43 = (s[16] << 23) | (s[17] >>> 9);\n      b24 = (s[26] << 25) | (s[27] >>> 7);\n      b25 = (s[27] << 25) | (s[26] >>> 7);\n      b6 = (s[36] << 21) | (s[37] >>> 11);\n      b7 = (s[37] << 21) | (s[36] >>> 11);\n      b38 = (s[47] << 24) | (s[46] >>> 8);\n      b39 = (s[46] << 24) | (s[47] >>> 8);\n      b30 = (s[8] << 27) | (s[9] >>> 5);\n      b31 = (s[9] << 27) | (s[8] >>> 5);\n      b12 = (s[18] << 20) | (s[19] >>> 12);\n      b13 = (s[19] << 20) | (s[18] >>> 12);\n      b44 = (s[29] << 7) | (s[28] >>> 25);\n      b45 = (s[28] << 7) | (s[29] >>> 25);\n      b26 = (s[38] << 8) | (s[39] >>> 24);\n      b27 = (s[39] << 8) | (s[38] >>> 24);\n      b8 = (s[48] << 14) | (s[49] >>> 18);\n      b9 = (s[49] << 14) | (s[48] >>> 18);\n\n      s[0] = b0 ^ (~b2 & b4);\n      s[1] = b1 ^ (~b3 & b5);\n      s[10] = b10 ^ (~b12 & b14);\n      s[11] = b11 ^ (~b13 & b15);\n      s[20] = b20 ^ (~b22 & b24);\n      s[21] = b21 ^ (~b23 & b25);\n      s[30] = b30 ^ (~b32 & b34);\n      s[31] = b31 ^ (~b33 & b35);\n      s[40] = b40 ^ (~b42 & b44);\n      s[41] = b41 ^ (~b43 & b45);\n      s[2] = b2 ^ (~b4 & b6);\n      s[3] = b3 ^ (~b5 & b7);\n      s[12] = b12 ^ (~b14 & b16);\n      s[13] = b13 ^ (~b15 & b17);\n      s[22] = b22 ^ (~b24 & b26);\n      s[23] = b23 ^ (~b25 & b27);\n      s[32] = b32 ^ (~b34 & b36);\n      s[33] = b33 ^ (~b35 & b37);\n      s[42] = b42 ^ (~b44 & b46);\n      s[43] = b43 ^ (~b45 & b47);\n      s[4] = b4 ^ (~b6 & b8);\n      s[5] = b5 ^ (~b7 & b9);\n      s[14] = b14 ^ (~b16 & b18);\n      s[15] = b15 ^ (~b17 & b19);\n      s[24] = b24 ^ (~b26 & b28);\n      s[25] = b25 ^ (~b27 & b29);\n      s[34] = b34 ^ (~b36 & b38);\n      s[35] = b35 ^ (~b37 & b39);\n      s[44] = b44 ^ (~b46 & b48);\n      s[45] = b45 ^ (~b47 & b49);\n      s[6] = b6 ^ (~b8 & b0);\n      s[7] = b7 ^ (~b9 & b1);\n      s[16] = b16 ^ (~b18 & b10);\n      s[17] = b17 ^ (~b19 & b11);\n      s[26] = b26 ^ (~b28 & b20);\n      s[27] = b27 ^ (~b29 & b21);\n      s[36] = b36 ^ (~b38 & b30);\n      s[37] = b37 ^ (~b39 & b31);\n      s[46] = b46 ^ (~b48 & b40);\n      s[47] = b47 ^ (~b49 & b41);\n      s[8] = b8 ^ (~b0 & b2);\n      s[9] = b9 ^ (~b1 & b3);\n      s[18] = b18 ^ (~b10 & b12);\n      s[19] = b19 ^ (~b11 & b13);\n      s[28] = b28 ^ (~b20 & b22);\n      s[29] = b29 ^ (~b21 & b23);\n      s[38] = b38 ^ (~b30 & b32);\n      s[39] = b39 ^ (~b31 & b33);\n      s[48] = b48 ^ (~b40 & b42);\n      s[49] = b49 ^ (~b41 & b43);\n\n      s[0] ^= RC[n];\n      s[1] ^= RC[n + 1];\n    }\n  };\n\n  if (COMMON_JS) {\n    module.exports = methods;\n  } else {\n    for (i = 0; i < methodNames.length; ++i) {\n      root[methodNames[i]] = methods[methodNames[i]];\n    }\n    if (AMD) {\n      define(function () {\n        return methods;\n      });\n    }\n  }\n})();\n","export const version = \"address/5.6.1\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { arrayify, concat, hexDataLength, hexDataSlice, isHexString, stripZeros } from \"@ethersproject/bytes\";\nimport { BigNumber, _base16To36, _base36To16 } from \"@ethersproject/bignumber\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { encode } from \"@ethersproject/rlp\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nfunction getChecksumAddress(address) {\n    if (!isHexString(address, 20)) {\n        logger.throwArgumentError(\"invalid address\", \"address\", address);\n    }\n    address = address.toLowerCase();\n    const chars = address.substring(2).split(\"\");\n    const expanded = new Uint8Array(40);\n    for (let i = 0; i < 40; i++) {\n        expanded[i] = chars[i].charCodeAt(0);\n    }\n    const hashed = arrayify(keccak256(expanded));\n    for (let i = 0; i < 40; i += 2) {\n        if ((hashed[i >> 1] >> 4) >= 8) {\n            chars[i] = chars[i].toUpperCase();\n        }\n        if ((hashed[i >> 1] & 0x0f) >= 8) {\n            chars[i + 1] = chars[i + 1].toUpperCase();\n        }\n    }\n    return \"0x\" + chars.join(\"\");\n}\n// Shims for environments that are missing some required constants and functions\nconst MAX_SAFE_INTEGER = 0x1fffffffffffff;\nfunction log10(x) {\n    if (Math.log10) {\n        return Math.log10(x);\n    }\n    return Math.log(x) / Math.LN10;\n}\n// See: https://en.wikipedia.org/wiki/International_Bank_Account_Number\n// Create lookup table\nconst ibanLookup = {};\nfor (let i = 0; i < 10; i++) {\n    ibanLookup[String(i)] = String(i);\n}\nfor (let i = 0; i < 26; i++) {\n    ibanLookup[String.fromCharCode(65 + i)] = String(10 + i);\n}\n// How many decimal digits can we process? (for 64-bit float, this is 15)\nconst safeDigits = Math.floor(log10(MAX_SAFE_INTEGER));\nfunction ibanChecksum(address) {\n    address = address.toUpperCase();\n    address = address.substring(4) + address.substring(0, 2) + \"00\";\n    let expanded = address.split(\"\").map((c) => { return ibanLookup[c]; }).join(\"\");\n    // Javascript can handle integers safely up to 15 (decimal) digits\n    while (expanded.length >= safeDigits) {\n        let block = expanded.substring(0, safeDigits);\n        expanded = parseInt(block, 10) % 97 + expanded.substring(block.length);\n    }\n    let checksum = String(98 - (parseInt(expanded, 10) % 97));\n    while (checksum.length < 2) {\n        checksum = \"0\" + checksum;\n    }\n    return checksum;\n}\n;\nexport function getAddress(address) {\n    let result = null;\n    if (typeof (address) !== \"string\") {\n        logger.throwArgumentError(\"invalid address\", \"address\", address);\n    }\n    if (address.match(/^(0x)?[0-9a-fA-F]{40}$/)) {\n        // Missing the 0x prefix\n        if (address.substring(0, 2) !== \"0x\") {\n            address = \"0x\" + address;\n        }\n        result = getChecksumAddress(address);\n        // It is a checksummed address with a bad checksum\n        if (address.match(/([A-F].*[a-f])|([a-f].*[A-F])/) && result !== address) {\n            logger.throwArgumentError(\"bad address checksum\", \"address\", address);\n        }\n        // Maybe ICAP? (we only support direct mode)\n    }\n    else if (address.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {\n        // It is an ICAP address with a bad checksum\n        if (address.substring(2, 4) !== ibanChecksum(address)) {\n            logger.throwArgumentError(\"bad icap checksum\", \"address\", address);\n        }\n        result = _base36To16(address.substring(4));\n        while (result.length < 40) {\n            result = \"0\" + result;\n        }\n        result = getChecksumAddress(\"0x\" + result);\n    }\n    else {\n        logger.throwArgumentError(\"invalid address\", \"address\", address);\n    }\n    return result;\n}\nexport function isAddress(address) {\n    try {\n        getAddress(address);\n        return true;\n    }\n    catch (error) { }\n    return false;\n}\nexport function getIcapAddress(address) {\n    let base36 = _base16To36(getAddress(address).substring(2)).toUpperCase();\n    while (base36.length < 30) {\n        base36 = \"0\" + base36;\n    }\n    return \"XE\" + ibanChecksum(\"XE00\" + base36) + base36;\n}\n// http://ethereum.stackexchange.com/questions/760/how-is-the-address-of-an-ethereum-contract-computed\nexport function getContractAddress(transaction) {\n    let from = null;\n    try {\n        from = getAddress(transaction.from);\n    }\n    catch (error) {\n        logger.throwArgumentError(\"missing from address\", \"transaction\", transaction);\n    }\n    const nonce = stripZeros(arrayify(BigNumber.from(transaction.nonce).toHexString()));\n    return getAddress(hexDataSlice(keccak256(encode([from, nonce])), 12));\n}\nexport function getCreate2Address(from, salt, initCodeHash) {\n    if (hexDataLength(salt) !== 32) {\n        logger.throwArgumentError(\"salt must be 32 bytes\", \"salt\", salt);\n    }\n    if (hexDataLength(initCodeHash) !== 32) {\n        logger.throwArgumentError(\"initCodeHash must be 32 bytes\", \"initCodeHash\", initCodeHash);\n    }\n    return getAddress(hexDataSlice(keccak256(concat([\"0xff\", getAddress(from), salt, initCodeHash])), 12));\n}\n//# sourceMappingURL=index.js.map","\"use strict\";\nimport sha3 from \"js-sha3\";\nimport { arrayify } from \"@ethersproject/bytes\";\nexport function keccak256(data) {\n    return '0x' + sha3.keccak_256(arrayify(data));\n}\n//# sourceMappingURL=index.js.map","import { Contract } from \"@ethersproject/contracts\";\nimport { verifyMessage } from \"@ethersproject/wallet\";\nimport {\n  Web3Provider,\n  JsonRpcSigner,\n  JsonRpcProvider,\n} from \"@ethersproject/providers\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\nimport { hexlify } from \"@ethersproject/bytes\";\nimport { getAddress } from \"@ethersproject/address\";\nimport WalletConnectProvider from \"@walletconnect/ethereum-provider\";\nimport LitConnectModal from \"lit-connect-modal\";\nimport { SiweMessage } from \"lit-siwe\";\nimport Uint8arrays from \"../lib/uint8arrays\";\nconst uint8arrayFromString = Uint8arrays.fromString;\nconst uint8arrayToString = Uint8arrays.toString;\n\nimport naclUtil from \"tweetnacl-util\";\nimport nacl from \"tweetnacl\";\n\nimport LIT from \"../abis/LIT.json\";\nimport ERC20 from \"../abis/ERC20.json\";\nimport { LIT_CHAINS } from \"../lib/constants\";\nimport { throwError, log } from \"../lib/utils\";\n\nfunction chainHexIdToChainName(chainHexId) {\n  for (let i = 0; i < Object.keys(LIT_CHAINS).length; i++) {\n    const chainName = Object.keys(LIT_CHAINS)[i];\n    const litChainHexId = \"0x\" + LIT_CHAINS[chainName].chainId.toString(\"16\");\n    if (litChainHexId === chainHexId) {\n      return chainName;\n    }\n  }\n}\n\nexport function encodeCallData({ abi, functionName, functionParams }) {\n  const iface = new ethers.utils.Interface(abi);\n  const callData = iface.encodeFunctionData(functionName, functionParams);\n  return callData;\n}\n\nexport function decodeCallResult({ abi, functionName, data }) {\n  const iface = new ethers.utils.Interface(abi);\n  const decoded = iface.decodeFunctionResult(functionName, data);\n  return decoded;\n}\n\nexport async function connectWeb3({ chainId = 1 } = {}) {\n  const rpcUrls = {};\n  // need to make it look like this:\n  // rpc: {\n  //   1: \"https://mainnet.mycustomnode.com\",\n  //   3: \"https://ropsten.mycustomnode.com\",\n  //   100: \"https://dai.poa.network\",\n  //   // ...\n  // },\n\n  for (let i = 0; i < Object.keys(LIT_CHAINS).length; i++) {\n    const chainName = Object.keys(LIT_CHAINS)[i];\n    const chainId = LIT_CHAINS[chainName].chainId;\n    const rpcUrl = LIT_CHAINS[chainName].rpcUrls[0];\n    rpcUrls[chainId] = rpcUrl;\n  }\n\n  const providerOptions = {\n    walletconnect: {\n      package: WalletConnectProvider, // required\n      options: {\n        infuraId: \"cd614bfa5c2f4703b7ab0ec0547d9f81\",\n        rpc: rpcUrls,\n        chainId,\n      },\n    },\n  };\n\n  log(\"getting provider via lit connect modal\");\n\n  const dialog = new LitConnectModal({\n    providerOptions,\n  });\n  const provider = await dialog.getWalletProvider();\n\n  log(\"got provider\", provider);\n  const web3 = new Web3Provider(provider);\n\n  // const provider = await detectEthereumProvider();\n  // const web3 = new Web3Provider(provider);\n\n  // trigger metamask popup\n  await provider.enable();\n\n  log(\"listing accounts\");\n  const accounts = await web3.listAccounts();\n  // const accounts = await provider.request({\n  //   method: \"eth_requestAccounts\",\n  //   params: [],\n  // });\n  log(\"accounts\", accounts);\n  const account = accounts[0];\n\n  return { web3, account };\n}\n\n/**\n * Delete any saved AuthSigs from local storage.  Takes no params and returns nothing.  This will also clear out the WalletConnect cache in local storage.  We often run this function as a result of the user pressing a \"Logout\" button.\n */\nexport async function disconnectWeb3() {\n  localStorage.removeItem(\"walletconnect\");\n  localStorage.removeItem(\"lit-auth-signature\");\n  localStorage.removeItem(\"lit-auth-sol-signature\");\n  localStorage.removeItem(\"lit-auth-cosmos-signature\");\n  localStorage.removeItem(\"lit-web3-provider\");\n  localStorage.removeItem(\"lit-session-key\");\n  localStorage.removeItem(\"lit-comms-keypair\");\n}\n\n// taken from the excellent repo https://github.com/zmitton/eth-proof\n// export async function getMerkleProof({ tokenAddress, balanceStorageSlot, tokenId }) {\n//   log(`getMerkleProof for { tokenAddress, balanceStorageSlot, tokenId } ${tokenAddress}, ${balanceStorageSlot}, ${tokenId}`)\n//   const { web3, account } = await connectWeb3()\n//   log(`getting mappingAt(${balanceStorageSlot}, ${tokenId}, ${account})`)\n//   const storageAddress = mappingAt(balanceStorageSlot, parseInt(tokenId), account)\n//   log('storageAddress: ', storageAddress)\n\n//   // you may need to try the below twicce because sometimes the proof isn't available for the latest block on polygon because the node just isn't fast enough\n//   let tries = 0\n//   let rpcProof = null\n//   let rpcBlock = null\n//   while (!rpcProof && tries < 6) {\n//     try {\n//       if (!rpcBlock) {\n//         // only set the rpc block once\n//         rpcBlock = await web3.request({ method: 'eth_getBlockByNumber', params: ['latest', false] })\n//         log('rpcBlock: ', rpcBlock)\n//       }\n//       rpcProof = await web3.request({ method: 'eth_getProof', params: [tokenAddress, [storageAddress], rpcBlock.number] })\n//       log('rpcProof: ', rpcProof)\n//     } catch (e) {\n//       log(e)\n//       log(`error getting rpc proof, have made ${tries} attempts`)\n//       tries++\n//     }\n//   }\n\n//   return {\n//     header: rpcBlock,\n//     accountProof: rpcProof.accountProof,\n//     storageProof: rpcProof.storageProof[0].proof,\n//     blockHash: rpcBlock.hash\n//   }\n// }\n\n// export async function checkAndDeriveKeypair () {\n//   let keypair = localStorage.getItem('lit-keypair')\n//   if (!keypair) {\n//     await deriveEncryptionKeys()\n//     keypair = localStorage.getItem('lit-keypair')\n//   }\n//   keypair = JSON.parse(keypair)\n//   const { web3, account } = await connectWeb3()\n//   // make sure we are on the right account\n//   if (account !== keypair.address) {\n//     await deriveEncryptionKeys()\n//     keypair = localStorage.getItem('lit-keypair')\n//     keypair = JSON.parse(keypair)\n//   }\n//   return keypair\n// }\n\nexport async function checkAndSignEVMAuthMessage({\n  chain,\n  resources,\n  switchChain,\n  uri,\n  expiration,\n}) {\n  const selectedChain = LIT_CHAINS[chain];\n  const { web3, account } = await connectWeb3({\n    chainId: selectedChain.chainId,\n  });\n  log(`got web3 and account: ${account}`);\n\n  let chainId;\n  try {\n    const resp = await web3.getNetwork();\n    chainId = resp.chainId;\n  } catch (e) {\n    // couldn't get chainId.  throw the incorrect network error\n    log(\"getNetwork threw an exception\", e);\n    throwError({\n      message: `Incorrect network selected.  Please switch to the ${chain} network in your wallet and try again.`,\n      name: \"WrongNetworkException\",\n      errorCode: \"wrong_network\",\n    });\n  }\n  let selectedChainId = \"0x\" + selectedChain.chainId.toString(\"16\");\n  log(\"chainId from web3\", chainId);\n  log(\n    `checkAndSignAuthMessage with chainId ${chainId} and chain set to ${chain} and selectedChain is `,\n    selectedChain\n  );\n  if (chainId !== selectedChain.chainId && switchChain) {\n    if (web3.provider instanceof WalletConnectProvider) {\n      // this chain switching won't work.  alert the user that they need to switch chains manually\n      throwError({\n        message: `Incorrect network selected.  Please switch to the ${chain} network in your wallet and try again.`,\n        name: \"WrongNetworkException\",\n        errorCode: \"wrong_network\",\n      });\n      return;\n    }\n    try {\n      log(\"trying to switch to chainId\", selectedChainId);\n      await web3.provider.request({\n        method: \"wallet_switchEthereumChain\",\n        params: [{ chainId: selectedChainId }],\n      });\n    } catch (switchError) {\n      log(\"error switching to chainId\", switchError);\n      // This error code indicates that the chain has not been added to MetaMask.\n      if (switchError.code === 4902) {\n        try {\n          const data = [\n            {\n              chainId: selectedChainId,\n              chainName: selectedChain.name,\n              nativeCurrency: {\n                name: selectedChain.name,\n                symbol: selectedChain.symbol,\n                decimals: selectedChain.decimals,\n              },\n              rpcUrls: selectedChain.rpcUrls,\n              blockExplorerUrls: selectedChain.blockExplorerUrls,\n            },\n          ];\n          await web3.provider.request({\n            method: \"wallet_addEthereumChain\",\n            params: data,\n          });\n        } catch (addError) {\n          // handle \"add\" error\n          if (addError.code === -32601) {\n            // metamask code indicating \"no such method\"\n            throwError({\n              message: `Incorrect network selected.  Please switch to the ${chain} network in your wallet and try again.`,\n              name: \"WrongNetworkException\",\n              errorCode: \"wrong_network\",\n            });\n          } else {\n            throw addError;\n          }\n        }\n      } else {\n        if (switchError.code === -32601) {\n          // metamask code indicating \"no such method\"\n          throwError({\n            message: `Incorrect network selected.  Please switch to the ${chain} network in your wallet and try again.`,\n            name: \"WrongNetworkException\",\n            errorCode: \"wrong_network\",\n          });\n        } else {\n          throw switchError;\n        }\n      }\n    }\n    // we may have switched the chain to the selected chain.  set the chainId accordingly\n    chainId = selectedChain.chainId;\n  }\n  log(\"checking if sig is in local storage\");\n  let authSig = localStorage.getItem(\"lit-auth-signature\");\n  if (!authSig) {\n    log(\"signing auth message because sig is not in local storage\");\n    authSig = await signAndSaveAuthMessage({\n      web3,\n      account,\n      chainId,\n      resources,\n      uri,\n      expiration,\n    });\n  } else {\n    authSig = JSON.parse(authSig);\n  }\n  // make sure we are on the right account\n  if (account !== authSig.address) {\n    log(\n      `signing auth message because account is not the same as the address in the auth sig.  address: ${account} and auth sig address: ${authSig.address}`\n    );\n    authSig = await signAndSaveAuthMessage({\n      web3,\n      account,\n      chainId: selectedChain.chainId,\n      resources,\n      uri,\n      expiration,\n    });\n  } else {\n    // check the resources, expiration, and URI of the sig and re-sign if they don't match\n    let mustResign = false;\n    try {\n      const parsedSiwe = new SiweMessage(authSig.signedMessage);\n      log(\"parsedSiwe.resources\", parsedSiwe.resources);\n\n      if (JSON.stringify(parsedSiwe.resources) !== JSON.stringify(resources)) {\n        log(\n          \"signing auth message because resources differ from the resources in the auth sig\"\n        );\n        mustResign = true;\n      } else if (parsedSiwe.address !== getAddress(parsedSiwe.address)) {\n        log(\n          \"signing auth message because parsedSig.address is not equal to the same address but checksummed.  This usually means the user had a non-checksummed address saved and so they need to re-sign.\"\n        );\n        mustResign = true;\n      }\n    } catch (e) {\n      log(\"error parsing siwe sig.  making the user sign again: \", e);\n      mustResign = true;\n    }\n    if (mustResign) {\n      authSig = await signAndSaveAuthMessage({\n        web3,\n        account,\n        chainId: selectedChain.chainId,\n        resources,\n        uri,\n        expiration,\n      });\n    }\n  }\n  log(\"got auth sig\", authSig);\n  return authSig;\n}\n\n/**\n * Sign the auth message with the user's wallet, and store it in localStorage.  Called by checkAndSignAuthMessage if the user does not have a signature stored.\n * @param {Object} params\n * @param {Web3Provider} params.web3 An ethers.js Web3Provider instance\n * @param {string} params.account The account to sign the message with\n * @returns {AuthSig} The AuthSig created or retrieved\n */\nexport async function signAndSaveAuthMessage({\n  web3,\n  account,\n  chainId,\n  resources,\n  uri,\n  expiration,\n}) {\n  // const { chainId } = await web3.getNetwork();\n\n  if (!expiration) {\n    // set default of 1 week\n    expiration = new Date(Date.now() + 1000 * 60 * 60 * 24 * 7);\n  }\n\n  const preparedMessage = {\n    domain: globalThis.location.host,\n    address: getAddress(account), // convert to EIP-55 format or else SIWE complains\n    version: \"1\",\n    chainId,\n    expirationTime: expiration.toISOString(),\n  };\n\n  if (resources && resources.length > 0) {\n    preparedMessage.resources = resources;\n  }\n\n  if (uri) {\n    preparedMessage.uri = uri;\n  } else {\n    preparedMessage.uri = globalThis.location.href;\n  }\n\n  const message = new SiweMessage(preparedMessage);\n\n  const body = message.prepareMessage();\n\n  const signedResult = await signMessage({\n    body,\n    web3,\n    account,\n  });\n\n  const authSig = {\n    sig: signedResult.signature,\n    derivedVia: \"web3.eth.personal.sign\",\n    signedMessage: body,\n    address: signedResult.address,\n  };\n\n  localStorage.setItem(\"lit-auth-signature\", JSON.stringify(authSig));\n  // store a keypair in localstorage for communication with sgx\n  const commsKeyPair = nacl.box.keyPair();\n  localStorage.setItem(\n    \"lit-comms-keypair\",\n    JSON.stringify({\n      publicKey: naclUtil.encodeBase64(commsKeyPair.publicKey),\n      secretKey: naclUtil.encodeBase64(commsKeyPair.secretKey),\n    })\n  );\n  log(\"generated and saved lit-comms-keypair\");\n  return authSig;\n}\n\n/**\n * @typedef {Object} AuthSig\n * @property {string} sig - The actual hex-encoded signature\n * @property {string} derivedVia - The method used to derive the signature. Typically \"web3.eth.personal.sign\"\n * @property {string} signedMessage - The message that was signed\n * @property {string} address - The crypto wallet address that signed the message\n */\n\nexport async function signMessage({ body, web3, account }) {\n  if (!web3 || !account) {\n    let resp = await connectWeb3();\n    web3 = resp.web3;\n    account = resp.account;\n  }\n\n  log(\"pausing...\");\n  await new Promise((resolve) => setTimeout(resolve, 500));\n  log(\"signing with \", account);\n  // const signature = await web3.getSigner().signMessage(body);\n  const signature = await signMessageAsync(web3.getSigner(), account, body);\n  //.request({ method: 'personal_sign', params: [account, body] })\n  const address = verifyMessage(body, signature);\n\n  log(\"Signature: \", signature);\n  log(\"recovered address: \", address);\n\n  if (address !== account) {\n    const msg = `ruh roh, the user signed with a different address (${address}) then they\\'re using with web3 (${account}).  this will lead to confusion.`;\n    console.error(msg);\n    alert(\n      \"something seems to be wrong with your wallets message signing.  maybe restart your browser or your wallet.  your recovered sig address does not match your web3 account address\"\n    );\n    throw new Error(msg);\n  }\n\n  return { signature, address };\n}\n\n// wrapper around signMessage that tries personal_sign first.  this is to fix a\n// bug with walletconnect where just using signMessage was failing\nexport const signMessageAsync = async (signer, address, message) => {\n  const messageBytes = toUtf8Bytes(message);\n  if (signer instanceof JsonRpcSigner) {\n    try {\n      log(\"Signing with personal_sign\");\n      const signature = await signer.provider.send(\"personal_sign\", [\n        hexlify(messageBytes),\n        address,\n      ]);\n      return signature;\n    } catch (e) {\n      log(\n        \"Signing with personal_sign failed, trying signMessage as a fallback\"\n      );\n      if (e.message.includes(\"personal_sign\")) {\n        return await signer.signMessage(messageBytes);\n      }\n      throw e;\n    }\n  } else {\n    log(\"signing with signMessage\");\n    return await signer.signMessage(messageBytes);\n  }\n};\n\n// export async function decryptWithWeb3PrivateKey (encryptedData) {\n//   const { web3, account } = await connectWeb3()\n//   try {\n//     const decryptedMessage = ethereum\n//       .request({\n//         method: 'eth_decrypt',\n//         params: [encryptedData, account]\n//       })\n//     return decryptedMessage\n//   } catch (error) {\n//     log(error)\n//     return false\n//   }\n// }\n//\n// async function deriveKeysViaSignature () {\n//   const { signature, address } = await signMessage({ body: KEY_DERIVATION_SIGNATURE_BODY })\n//   log('Signed message: ' + signature)\n//\n//   // derive keypair\n//   const data = Buffer.from(signature.substring(2), 'hex')\n//   const hash = await crypto.subtle.digest('SHA-256', data)\n//   const uint8Hash = new Uint8Array(hash)\n//   const { publicKey, secretKey } = nacl.box.keyPair.fromSecretKey(uint8Hash)\n//   return {\n//     publicKey: naclUtil.encodeBase64(publicKey),\n//     secretKey: naclUtil.encodeBase64(secretKey)\n//   }\n// }\n//\n// // this only works on metamask :(\n// async function deriveKeysViaPrivateKey () {\n//   try {\n//     const { web3, account } = await connectWeb3()\n//     /* global ethereum */\n//     /* eslint no-undef: \"error\" */\n//     const publicKey = await ethereum\n//       .request({\n//         method: 'eth_getEncryptionPublicKey',\n//         params: [account] // you must have access to the specified account\n//       })\n//     return { publicKey }\n//   } catch (error) {\n//     log(error)\n//     if (error.code === 4001) {\n//       // EIP-1193 userRejectedRequest error\n//       log(\"We can't encrypt anything without the key.\")\n//       error('You must accept the metamask request to derive your public encryption key')\n//     } else {\n//       console.error(error)\n//     }\n//     return { error }\n//   }\n// }\n//\n// export async function deriveEncryptionKeys () {\n//   let keypair = {}\n//   // key derivation via metamask is more desirable because then even this SDK can't see the secret key :-D\n//   const { error, publicKey } = await deriveKeysViaPrivateKey()\n//   if (!error) {\n//     keypair = {\n//       publicKey,\n//       derivedVia: 'eth_getEncryptionPublicKey'\n//     }\n//   } else {\n//     const { publicKey, secretKey } = await deriveKeysViaSignature()\n//     keypair = {\n//       publicKey,\n//       secretKey,\n//       derivedVia: 'web3.eth.personal.sign',\n//       signedMessage: KEY_DERIVATION_SIGNATURE_BODY\n//     }\n//   }\n//\n//   const { web3, account } = await connectWeb3()\n//   keypair.address = account\n//\n//   log('public key: ' + keypair.publicKey)\n//   const asString = JSON.stringify(keypair)\n//   localStorage.setItem('lit-keypair', asString)\n//\n//   // is it already saved on the server?\n//   const { pubkey, errorCode } = await getPublicKey({\n//     address: account\n//   })\n//   if (errorCode === 'not_found' || pubkey !== keypair.publicKey) {\n//     // add it\n//     const msg = `I am saving my public key so that others can send me LITs.  It is ${pubkey}`\n//     const res = await signMessage({ body: msg })\n//     await savePublicKey({\n//       sig: res.signature,\n//       msg,\n//       pubkey: keypair.publicKey\n//     })\n//   }\n// }\n\n/**\n * This function mints a LIT using our pre-deployed token contracts.  You may use our contracts, or you may supply your own.  Our contracts are ERC1155 tokens on Polygon and Ethereum.  Using these contracts is the easiest way to get started.\n * @param {Object} params\n * @param {string} params.chain The chain to mint on.  \"ethereum\" and \"polygon\" are currently supported.\n * @param {number} params.quantity The number of tokens to mint.  Note that these will be fungible, so they will not have serial numbers.\n * @returns {Object} The txHash, tokenId, tokenAddress, mintingAddress, and authSig.\n */\nexport async function mintLIT({ chain, quantity }) {\n  log(`minting ${quantity} tokens on ${chain}`);\n  try {\n    const authSig = await checkAndSignEVMAuthMessage({\n      chain,\n      switchChain: true,\n    });\n    if (authSig.errorCode) {\n      return authSig;\n    }\n    const { web3, account } = await connectWeb3();\n    const tokenAddress = LIT_CHAINS[chain].contractAddress;\n    if (!tokenAddress) {\n      log(\"No token address for this chain.  It's not supported via MintLIT.\");\n      throwError({\n        message: `This chain is not supported for minting with the Lit token contract because it hasn't been deployed to this chain.  You can use Lit with your own token contract on this chain, though.`,\n        name: \"MintingNotSupported\",\n        errorCode: \"minting_not_supported\",\n      });\n      return;\n    }\n    const contract = new Contract(tokenAddress, LIT.abi, web3.getSigner());\n    log(\"sending to chain...\");\n    const tx = await contract.mint(quantity);\n    log(\"sent to chain.  waiting to be mined...\");\n    const txReceipt = await tx.wait();\n    log(\"txReceipt: \", txReceipt);\n    const tokenId = txReceipt.events[0].args[3].toNumber();\n    return {\n      txHash: txReceipt.transactionHash,\n      tokenId,\n      tokenAddress,\n      mintingAddress: account,\n      authSig,\n    };\n  } catch (error) {\n    log(error);\n    if (error.code === 4001) {\n      // EIP-1193 userRejectedRequest error\n      log(\"User rejected request\");\n      return { errorCode: \"user_rejected_request\" };\n    } else {\n      console.error(error);\n    }\n    return { errorCode: \"unknown_error\" };\n  }\n}\n\n/**\n * Finds the tokens that the current user owns from the predeployed LIT contracts\n * @param {Object} params\n * @param {string} params.chain The chain that was minted on. \"ethereum\" and \"polygon\" are currently supported.\n * @param {number} params.accountAddress The account address to check\n * @returns {array} The token ids owned by the accountAddress\n */\nexport async function findLITs() {\n  log(\"findLITs\");\n\n  try {\n    const { web3, account } = await connectWeb3();\n    const { chainId } = await web3.getNetwork();\n    const chainHexId = \"0x\" + chainId.toString(\"16\");\n    // const chainHexId = await web3.request({ method: 'eth_chainId', params: [] })\n    const chain = chainHexIdToChainName(chainHexId);\n    const tokenAddress = LIT_CHAINS[chain].contractAddress;\n    const contract = new Contract(tokenAddress, LIT.abi, web3.getSigner());\n    log(\"getting maxTokenid\");\n    const maxTokenId = await contract.tokenIds();\n    const accounts = [];\n    const tokenIds = [];\n    for (let i = 0; i <= maxTokenId; i++) {\n      accounts.push(account);\n      tokenIds.push(i);\n    }\n    log(\"getting balanceOfBatch\");\n    const balances = await contract.balanceOfBatch(accounts, tokenIds);\n    // log('balances', balances)\n    const tokenIdsWithNonzeroBalances = balances\n      .map((b, i) => (b.toNumber() === 0 ? null : i))\n      .filter((b) => b !== null);\n    return { tokenIds: tokenIdsWithNonzeroBalances, chain };\n  } catch (error) {\n    log(error);\n    if (error.code === 4001) {\n      // EIP-1193 userRejectedRequest error\n      log(\"User rejected request\");\n      return { errorCode: \"user_rejected_request\" };\n    } else {\n      console.error(error);\n    }\n    return { errorCode: \"unknown_error\" };\n  }\n}\n\n/**\n * Send a token to another account\n * @param {Object} params\n * @param {string} params.tokenMetadata The token metadata of the token to be transferred.  Should include tokenId, tokenAddress, and chain\n * @param {number} params.to The account address to send the token to\n * @returns {Object} Success or error\n */\nexport async function sendLIT({ tokenMetadata, to }) {\n  log(\"sendLIT for \", tokenMetadata);\n\n  try {\n    const { web3, account } = await connectWeb3();\n    const { tokenAddress, tokenId, chain } = tokenMetadata;\n    const contract = new Contract(tokenAddress, LIT.abi, web3.getSigner());\n    log(\"transferring\");\n    const maxTokenId = await contract.safeTransferFrom(\n      account,\n      to,\n      tokenId,\n      1,\n      []\n    );\n    log(\"sent to chain\");\n    return { success: true };\n  } catch (error) {\n    log(error);\n    if (error.code === 4001) {\n      // EIP-1193 userRejectedRequest error\n      log(\"User rejected request\");\n      return { errorCode: \"user_rejected_request\" };\n    } else {\n      console.error(error);\n    }\n    return { errorCode: \"unknown_error\" };\n  }\n}\n\n/**\n * Get the number of decimal places in a token\n * @param {Object} params\n * @param {string} params.contractAddress The token contract address\n * @param {string} params.chain The chain on which the token is deployed\n * @returns {number} The number of decimal places in the token\n */\nexport async function decimalPlaces({ contractAddress, chain }) {\n  // if (chain) {\n  //   await checkAndSignEVMAuthMessage({ chain }); // this will switch them to the correct chain\n  // }\n  // const { web3, account } = await connectWeb3();\n  const rpcUrl = LIT_CHAINS[chain].rpcUrls[0];\n  const web3 = new JsonRpcProvider(rpcUrl);\n  const contract = new Contract(contractAddress, ERC20.abi, web3);\n  return await contract.decimals();\n}\n\n/**\n * Lookup an eth address from a given ENS name\n * @param {Object} params\n * @param {string} params.chain The chain on which to resolve the name\n * @param {string} params.name The name to resolve\n * @returns {string} The resolved eth address\n */\nexport async function lookupNameServiceAddress({ chain, name }) {\n  // await checkAndSignEVMAuthMessage({ chain }); // this will switch them to the correct chain\n  // const { web3, account } = await connectWeb3();\n  const rpcUrl = LIT_CHAINS[chain].rpcUrls[0];\n  const web3 = new JsonRpcProvider(rpcUrl);\n\n  var address = await web3.resolveName(name);\n  return address;\n\n  // const parts = name.split(\".\");\n  // const tld = parts[parts.length - 1].toLowerCase();\n  // if (tld === \"eth\") {\n  //   var address = await web3.resolveName(name);\n  //   return address;\n  // } //else {\n  // const resolution = Resolution.fromEthersProvider(web3);\n  // const address = await resolution.addr(name, \"ETH\");\n\n  // // TODO: remove unstoppable dependency because it's big.  the below code is\n  // // from the ethers ens lib.  can we make the above this small and remove the unstoppable lib?\n  // // const addrData = await this.call({\n  // //   to: network.ensAddress,\n  // //   data: \"0x0178b8bf\" + namehash(name).substring(2),\n  // // });\n  // // return this.formatter.callAddress(addrData);\n\n  // return address;\n  //}\n}\n","import Uint8arrays from \"../lib/uint8arrays\";\nconst uint8arrayFromString = Uint8arrays.fromString;\nconst uint8arrayToString = Uint8arrays.toString;\nimport { throwError, log } from \"../lib/utils\";\n\nexport const AUTH_SIGNATURE_BODY =\n  \"I am creating an account to use Lit Protocol at {{timestamp}}\";\n\nfunction getProvider() {\n  if (\"solana\" in window) {\n    return window.solana;\n    // const provider = window.solana;\n    // if (provider.isPhantom) {\n    //   return provider;\n    // }\n  } else {\n    throwError({\n      message:\n        \"No web3 wallet was found that works with Solana.  Install a Solana wallet or choose another chain\",\n      name: \"NoWalletException\",\n      errorCode: \"no_wallet\",\n    });\n  }\n}\n\nexport async function connectSolProvider() {\n  const provider = getProvider();\n  await provider.connect();\n  const account = provider.publicKey.toBase58();\n  return { provider, account };\n}\n\nexport async function checkAndSignSolAuthMessage({ chain }) {\n  // Connect to cluster\n  // const connection = new solWeb3.Connection(\n  //   solWeb3.clusterApiUrl(\"devnet\"),\n  //   \"confirmed\"\n  // );\n\n  const { provider, account } = await connectSolProvider();\n\n  let authSig = localStorage.getItem(\"lit-auth-sol-signature\");\n  if (!authSig) {\n    log(\"signing auth message because sig is not in local storage\");\n    await signAndSaveAuthMessage({ provider, account });\n    authSig = localStorage.getItem(\"lit-auth-sol-signature\");\n  }\n  authSig = JSON.parse(authSig);\n\n  if (account !== authSig.address) {\n    log(\n      \"signing auth message because account is not the same as the address in the auth sig\"\n    );\n    await signAndSaveAuthMessage({ provider, account });\n    authSig = localStorage.getItem(\"lit-auth-sol-signature\");\n    authSig = JSON.parse(authSig);\n  }\n\n  log(\"authSig\", authSig);\n\n  return authSig;\n}\n\nexport async function signAndSaveAuthMessage({ provider, account }) {\n  const now = new Date().toISOString();\n  const body = AUTH_SIGNATURE_BODY.replace(\"{{timestamp}}\", now);\n\n  const data = new TextEncoder().encode(body);\n  const signed = await provider.signMessage(data, \"utf8\");\n\n  const hexSig = uint8arrayToString(signed.signature, \"base16\");\n\n  const authSig = {\n    sig: hexSig,\n    derivedVia: \"solana.signMessage\",\n    signedMessage: body,\n    address: provider.publicKey.toBase58(),\n  };\n\n  localStorage.setItem(\"lit-auth-sol-signature\", JSON.stringify(authSig));\n  return authSig;\n}\n","import Uint8arrays from \"../lib/uint8arrays\";\nconst uint8arrayFromString = Uint8arrays.fromString;\nconst uint8arrayToString = Uint8arrays.toString;\nimport { throwError, log } from \"../lib/utils\";\nimport { LIT_COSMOS_CHAINS } from \"../lib/constants\";\n\nexport const AUTH_SIGNATURE_BODY =\n  \"I am creating an account to use Lit Protocol at {{timestamp}}\";\n\nfunction getProvider() {\n  if (\"keplr\" in window) {\n    return keplr;\n  } else {\n    throwError({\n      message:\n        \"No web3 wallet was found that works with Cosmos.  Install a Cosmos wallet or choose another chain\",\n      name: \"NoWalletException\",\n      errorCode: \"no_wallet\",\n    });\n  }\n}\n\nexport async function connectCosmosProvider({ chain }) {\n  const chainId = LIT_COSMOS_CHAINS[chain].chainId;\n\n  const keplr = getProvider();\n\n  // Enabling before using the Keplr is recommended.\n  // This method will ask the user whether to allow access if they haven't visited this website.\n  // Also, it will request that the user unlock the wallet if the wallet is locked.\n  await keplr.enable(chainId);\n\n  const offlineSigner = keplr.getOfflineSigner(chainId);\n\n  // You can get the address/public keys by `getAccounts` method.\n  // It can return the array of address/public key.\n  // But, currently, Keplr extension manages only one address/public key pair.\n  // XXX: This line is needed to set the sender address for SigningCosmosClient.\n  const accounts = await offlineSigner.getAccounts();\n\n  // // Initialize the gaia api with the offline signer that is injected by Keplr extension.\n  // const cosmJS = new SigningCosmosClient(\n  //   \"https://lcd-cosmoshub.keplr.app\",\n  //   accounts[0].address,\n  //   offlineSigner\n  // );\n\n  // console.log(\"accounts[0]\", accounts[0]);\n\n  return { provider: keplr, account: accounts[0].address, chainId };\n}\n\nexport async function checkAndSignCosmosAuthMessage({ chain }) {\n  const { provider, account, chainId } = await connectCosmosProvider({ chain });\n\n  let authSig = localStorage.getItem(\"lit-auth-cosmos-signature\");\n  if (!authSig) {\n    log(\"signing auth message because sig is not in local storage\");\n    await signAndSaveAuthMessage({ provider, account, chainId });\n    authSig = localStorage.getItem(\"lit-auth-cosmos-signature\");\n  }\n  authSig = JSON.parse(authSig);\n\n  if (account !== authSig.address) {\n    log(\n      \"signing auth message because account is not the same as the address in the auth sig\"\n    );\n    await signAndSaveAuthMessage({ provider, account, chainId });\n    authSig = localStorage.getItem(\"lit-auth-cosmos-signature\");\n    authSig = JSON.parse(authSig);\n  }\n\n  log(\"authSig\", authSig);\n\n  return authSig;\n}\n\nexport async function signAndSaveAuthMessage({ provider, account, chainId }) {\n  const now = new Date().toISOString();\n  const body = AUTH_SIGNATURE_BODY.replace(\"{{timestamp}}\", now);\n\n  // const signed = provider.signArbitrary(chainId, account, body);\n\n  // const data = new TextEncoder().encode(body);\n  // console.log(\"data being signed\", data);\n  const signed = await provider.signArbitrary(chainId, account, body);\n  // const hexSig = uint8arrayToString(signed.signature, \"base16\");\n\n  const data = uint8arrayToString(uint8arrayFromString(body, \"utf8\"), \"base64\"); //Buffer.from(body).toString(\"base64\");\n\n  // console.log(\"signed\", signed);\n  // console.log(\"pubkey: \", signed.pub_key.value);\n\n  // ok now we have to create the actual message\n  const signDoc = {\n    chain_id: \"\",\n    account_number: \"0\",\n    sequence: \"0\",\n    fee: {\n      gas: \"0\",\n      amount: [],\n    },\n    msgs: [\n      {\n        type: \"sign/MsgSignData\",\n        value: {\n          signer: account,\n          data,\n        },\n      },\n    ],\n    memo: \"\",\n  };\n\n  const encodedSignedMsg = serializeSignDoc(signDoc);\n  const digest = await crypto.subtle.digest(\"SHA-256\", encodedSignedMsg);\n  // console.log(\"digest length\", digest.byteLength);\n  const digest_hex = uint8arrayToString(new Uint8Array(digest), \"base16\");\n  // console.log(\"digest_hex length\", digest_hex.length);\n\n  const authSig = {\n    sig: signed.signature,\n    derivedVia: \"cosmos.signArbitrary\",\n    signedMessage: digest_hex,\n    address: account,\n  };\n\n  localStorage.setItem(\"lit-auth-cosmos-signature\", JSON.stringify(authSig));\n}\n\nfunction sortedObject(obj) {\n  if (typeof obj !== \"object\" || obj === null) {\n    return obj;\n  }\n  if (Array.isArray(obj)) {\n    return obj.map(sortedObject);\n  }\n  const sortedKeys = Object.keys(obj).sort();\n  const result = {};\n  // NOTE: Use forEach instead of reduce for performance with large objects eg Wasm code\n  sortedKeys.forEach((key) => {\n    result[key] = sortedObject(obj[key]);\n  });\n  return result;\n}\n\nexport function serializeSignDoc(signDoc) {\n  const sorted = JSON.stringify(sortedObject(signDoc));\n  return uint8arrayFromString(sorted, \"utf8\");\n}\n","import Uint8arrays from \"../lib/uint8arrays\";\nconst uint8arrayFromStringFromLib = Uint8arrays.fromString;\nconst uint8arrayToStringFromLib = Uint8arrays.toString;\n\n/** Convert a Blob to a base64urlpad string.  Note: This function returns a promise.\n * @param {Blob | File} blob The Blob or File to turn into a base64 string\n * @returns {Promise<String>} A promise that resolves to the base64 string\n */\nexport async function blobToBase64String(blob) {\n  let ab = await blob.arrayBuffer();\n  return uint8arrayToString(new Uint8Array(ab), \"base64urlpad\");\n}\n\n/** Convert a base64urlpad string to a Blob.  Note: This function DOES NOT return a promise\n * @param {String} base64String The base64 string that to turn into a Blob\n * @returns {Blob}  A blob that contains the decoded base64 data\n */\nexport function base64StringToBlob(base64String) {\n  return new Blob([uint8arrayFromString(base64String, \"base64urlpad\")]);\n}\n\n/** Convert a Uint8Array to a string.  Supports various encodings.  This is a re-export of https://www.npmjs.com/package/uint8arrays and you can find the list of supported encodings here https://github.com/multiformats/multibase/blob/master/multibase.csv\n * @param {Uint8Array} uint8array The Uint8Array to convert to a string\n * @param {String} encoding The encoding to use when converting the Uint8Array to a string.\n * @returns {String} The string representation of the Uint8Array\n */\nexport function uint8arrayToString(uint8array, encoding) {\n  return uint8arrayToStringFromLib(uint8array, encoding);\n}\n\n/** Convert a string to a Uint8Array.  Supports various encodings.  This is a re-export of https://www.npmjs.com/package/uint8arrays and you can find the list of supported encodings here https://github.com/multiformats/multibase/blob/master/multibase.csv\n * @param {String} str The string to convert to a Uint8Array\n * @param {String} encoding The encoding to use when converting the string to a Uint8Array.\n * @returns {String} The Uint8Array representation of the data from the string\n */\nexport function uint8arrayFromString(str, encoding) {\n  return uint8arrayFromStringFromLib(str, encoding);\n}\n\n/**\n * Convert a file to a data URL, which could then be embedded in a LIT.  A data URL is a string representation of a file.\n * @param {File} file The file to turn into a data url\n * @returns {string} The data URL.  This is a string representation that can be used anywhere the original file would be used.\n */\nexport function fileToDataUrl(file) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onloadend = () => {\n      resolve(reader.result);\n    };\n    reader.readAsDataURL(file);\n  });\n}\n\n/**\n * Download a file in memory to the user's computer\n * @param {Object} params\n * @param {string} params.filename The name of the file\n * @param {Uint8Array} params.data The actual file itself as a Uint8Array\n * @param {string} params.mimetype The mime type of the file\n * @returns {string} The data URL.  This is a string representation that can be used anywhere the original file would be used.\n */\nexport function downloadFile({ filename, data, mimetype }) {\n  var element = document.createElement(\"a\");\n  element.setAttribute(\n    \"href\",\n    \"data:\" + mimetype + \";base64,\" + uint8arrayToString(data, \"base64\")\n  );\n  element.setAttribute(\"download\", filename);\n\n  element.style.display = \"none\";\n  document.body.appendChild(element);\n\n  element.click();\n\n  document.body.removeChild(element);\n}\n\n/**\n * Inject an iFrame into the current page that will display a LIT.  This function safely sandboxes the content in the iFrame so that the LIT cannot see cookies or localStorage of the parent website.\n * @param {Object} params\n * @param {Object} params.destinationId The DOM ID of the element to inject the iFrame into\n * @param {string} params.title The title of the content being displayed\n * @param {string} params.fileUrl The URL of the content that will be shown in the iFrame\n * @param {string} params.className An optional DOM class name to add to the iFrame for styling\n */\nexport function injectViewerIFrame({\n  destinationId,\n  title,\n  fileUrl,\n  className,\n}) {\n  if (fileUrl.includes(\"data:\")) {\n    // data urls are not safe, refuse to do this\n    throw new Error(\n      \"You can not inject an iFrame with a data url.  Try a regular https URL.\"\n    );\n  }\n\n  const url = new URL(fileUrl);\n  if (url.host.toLowerCase() === window.location.host.toLowerCase()) {\n    throw new Error(\n      \"You cannot host a LIT on the same domain as the parent webpage.  This is because iFrames with the same origin have access to localstorage and cookies in the parent webpage which is unsafe\"\n    );\n  }\n\n  const iframe = document.createElement(\"iframe\");\n  iframe.src = fileUrl;\n  iframe.title = title;\n  iframe.sandbox =\n    \"allow-forms allow-scripts allow-popups  allow-modals allow-popups-to-escape-sandbox allow-same-origin\";\n  iframe.loading = \"lazy\";\n  iframe.allow =\n    \"accelerometer; ambient-light-sensor; autoplay; battery; camera; display-capture; encrypted-media; fullscreen; geolocation; gyroscope; layout-animations; legacy-image-formats; magnetometer; microphone; midi; payment; picture-in-picture; publickey-credentials-get; sync-xhr; usb; vr; screen-wake-lock; web-share; xr-spatial-tracking\";\n  if (className) {\n    iframe.className = className;\n  }\n  document.getElementById(destinationId).appendChild(iframe);\n}\n","import JSZip from \"jszip\";\nimport nacl from \"tweetnacl\";\nimport Uint8arrays from \"../lib/uint8arrays\";\nconst uint8arrayFromString = Uint8arrays.fromString;\nconst uint8arrayToString = Uint8arrays.toString;\nimport { formatEther, formatUnits } from \"@ethersproject/units\";\nimport {\n  throwError,\n  log,\n  checkType,\n  checkIfAuthSigRequiresChainParam,\n} from \"../lib/utils\";\n\nimport {\n  importSymmetricKey,\n  generateSymmetricKey,\n  encryptWithSymmetricKey,\n  decryptWithSymmetricKey,\n  canonicalAccessControlConditionFormatter,\n  canonicalEVMContractConditionFormatter,\n  canonicalSolRpcConditionFormatter,\n  canonicalUnifiedAccessControlConditionFormatter,\n  generateSessionKeyPair,\n} from \"./crypto\";\n\nimport { checkAndSignEVMAuthMessage, decimalPlaces } from \"./eth\";\nimport { checkAndSignSolAuthMessage } from \"./sol\";\nimport { checkAndSignCosmosAuthMessage } from \"./cosmos\";\n\nimport { wasmBlsSdkHelpers } from \"../lib/bls-sdk\";\n\nimport { fileToDataUrl } from \"./browser\";\nimport { ALL_LIT_CHAINS, NETWORK_PUB_KEY } from \"../lib/constants\";\nimport { SiweMessage } from \"lit-siwe\";\n\nconst PACKAGE_CACHE = {};\n\n/**\n * Check for an existing cryptographic authentication signature and create one of it does not exist.  This is used to prove ownership of a given crypto wallet address to the Lit nodes.  The result is stored in LocalStorage so the user doesn't have to sign every time they perform an operation.\n * @param {Object} params\n * @param {string} params.chain The chain you want to use.  Find the supported list of chains here: https://developer.litprotocol.com/docs/supportedChains\n * @param {Array<string>} params.resources Optional and only used with EVM chains.  A list of resources to be passed to Sign In with Ethereum.  These resources will be part of the Sign in with Ethereum signed message presented to the user.\n * @param {Array<boolean>} params.switchChain Optional and only used with EVM chains right now.  Set to true by default.  Whether or not to ask Metamask or the user's wallet to switch chains before signing.  This may be desired if you're going to have the user send a txn on that chain.  On the other hand, if all you care about is the user's wallet signature, then you probably don't want to make them switch chains for no reason.  Pass false here to disable this chain switching behavior.\n * @returns {AuthSig} The AuthSig created or retrieved\n */\nexport async function checkAndSignAuthMessage({\n  chain,\n  resources,\n  switchChain = true,\n  expiration,\n  uri,\n}) {\n  const chainInfo = ALL_LIT_CHAINS[chain];\n  if (!chainInfo) {\n    throwError({\n      message: `Unsupported chain selected.  Please select one of: ${Object.keys(\n        ALL_LIT_CHAINS\n      )}`,\n      name: \"UnsupportedChainException\",\n      errorCode: \"unsupported_chain\",\n    });\n  }\n\n  if (!expiration) {\n    // set default of 1 week\n    expiration = new Date(Date.now() + 1000 * 60 * 60 * 24 * 7);\n  }\n\n  if (chainInfo.vmType === \"EVM\") {\n    return checkAndSignEVMAuthMessage({\n      chain,\n      resources,\n      switchChain,\n      expiration,\n      uri,\n    });\n  } else if (chainInfo.vmType === \"SVM\") {\n    return checkAndSignSolAuthMessage({ chain, resources, expiration, uri });\n  } else if (chainInfo.vmType === \"CVM\") {\n    return checkAndSignCosmosAuthMessage({ chain, resources, expiration, uri });\n  } else {\n    throwError({\n      message: `vmType not found for this chain: ${chain}.  This should not happen.  Unsupported chain selected.  Please select one of: ${Object.keys(\n        ALL_LIT_CHAINS\n      )}`,\n      name: \"UnsupportedChainException\",\n      errorCode: \"unsupported_chain\",\n    });\n  }\n}\n\n// high level, how this works:\n// generate or retrieve session key\n// generate or retrieve the wallet signature of the session key\n// sign the specific resources with the session key\nexport async function getSessionSigs({\n  expiration,\n  chain,\n  resources = [],\n  sessionCapabilities,\n  switchChain,\n  litNodeClient,\n}) {\n  // check if we already have a session key + signature for this chain\n  let sessionKey = localStorage.getItem(`lit-session-key`);\n  if (!sessionKey || sessionKey === \"\") {\n    // if not, generate one\n    sessionKey = generateSessionKeyPair();\n    localStorage.setItem(`lit-session-key`, JSON.stringify(sessionKey));\n  } else {\n    sessionKey = JSON.parse(sessionKey);\n  }\n  let sessionKeyUri = getSessionKeyUri({ publicKey: sessionKey.publicKey });\n\n  // if the user passed no sessionCapabilities, let's create them for them\n  // with wildcards so the user doesn't have to sign every time\n  if (!sessionCapabilities || sessionCapabilities.length === 0) {\n    sessionCapabilities = resources.map((resource) => {\n      const { protocol, resourceId } = parseResource({ resource });\n      return `${protocol}Capability://*`;\n    });\n  }\n\n  // check if we already have a wallet sig from the user\n  // and then check a few things, including that:\n  // 1. the sig isn't expired\n  // 2. the sig is for the correct session key\n  // 3. the sig has the sessionCapabilities requires to fulfill the resources requested\n\n  let walletSig = localStorage.getItem(`lit-wallet-sig`);\n  if (!walletSig || walletSig == \"\") {\n    walletSig = await checkAndSignAuthMessage({\n      chain,\n      resources: sessionCapabilities,\n      switchChain,\n      expiration,\n      uri: sessionKeyUri,\n    });\n  } else {\n    walletSig = JSON.parse(walletSig);\n  }\n\n  const siweMessage = new SiweMessage(walletSig.signedMessage);\n  let needToReSignSessionKey = false;\n  try {\n    // make sure it's legit\n    await siweMessage.verify({ signature: walletSig.sig });\n  } catch (e) {\n    needToReSignSessionKey = true;\n  }\n\n  // make sure the sig is for the correct session key\n  if (siweMessage.uri !== sessionKeyUri) {\n    needToReSignSessionKey = true;\n  }\n\n  // make sure the sig has the session capabilities required to fulfill the resources requested\n  for (let i = 0; i < resources.length; i++) {\n    const resource = resources[i];\n    const { protocol, resourceId } = parseResource({ resource });\n\n    // check if we have blanket permissions or if we authed the specific resource for the protocol\n    const permissionsFound = sessionCapabilities.some((capability) => {\n      const capabilityParts = parseResource({ resource: capability });\n      return (\n        capabilityParts.protocol === protocol &&\n        (capabilityParts.resourceId === \"*\" ||\n          capabilityParts.resourceId === resourceId)\n      );\n    });\n    if (!permissionsFound) {\n      needToReSignSessionKey = true;\n    }\n  }\n\n  if (needToReSignSessionKey) {\n    waletSig = await checkAndSignAuthMessage({\n      chain,\n      resources: sessionCapabilities,\n      switchChain,\n      expiration,\n      uri: sessionKeyUri,\n    });\n  }\n\n  // okay great, now we have a valid signed session key\n  // let's sign the resources with the session key\n  // 5 minutes is the default expiration for a session signature\n  // because we can generate a new session sig every time the user wants to access a resource\n  // without prompting them to sign with their wallet\n  let sessionExpiration = new Date(Date.now() + 1000 * 60 * 5);\n  const signingTemplate = {\n    sessionKey: sessionKey.publicKey,\n    resources,\n    capabilities: [walletSig],\n    issuedAt: new Date().toISOString(),\n    expiration: sessionExpiration.toISOString(),\n  };\n  const signatures = {};\n\n  litNodeClient.connectedNodes.forEach((nodeAddress) => {\n    const toSign = {\n      ...signingTemplate,\n      nodeAddress,\n    };\n    let signedMessage = JSON.stringify(toSign);\n    const uint8arrayKey = uint8arrayFromString(sessionKey.secretKey, \"base16\");\n    const uint8arrayMessage = uint8arrayFromString(signedMessage, \"utf8\");\n    let signature = nacl.sign.detached(uint8arrayMessage, uint8arrayKey);\n    // console.log(\"signature\", signature);\n    signatures[nodeAddress] = {\n      sig: uint8arrayToString(signature, \"base16\"),\n      derivedVia: \"litSessionSignViaNacl\",\n      signedMessage,\n      address: sessionKey.publicKey,\n      algo: \"ed25519\",\n    };\n  });\n\n  return signatures;\n}\n\n/**\n * Encrypt a string.  This is used to encrypt any string that is to be locked via the Lit Protocol.\n * @param {string} str The string to encrypt\n * @returns {Promise<Object>} A promise containing the encryptedString as a Blob and the symmetricKey used to encrypt it, as a Uint8Array.\n */\nexport async function encryptString(str) {\n  // -- validate\n  if (\n    !checkType({\n      value: str,\n      allowedTypes: [\"String\"],\n      paramName: \"str\",\n      functionName: \"encryptString\",\n    })\n  )\n    return;\n\n  const encodedString = uint8arrayFromString(str, \"utf8\");\n\n  const symmKey = await generateSymmetricKey();\n  const encryptedString = await encryptWithSymmetricKey(\n    symmKey,\n    encodedString.buffer\n  );\n\n  const exportedSymmKey = new Uint8Array(\n    await crypto.subtle.exportKey(\"raw\", symmKey)\n  );\n\n  return {\n    symmetricKey: exportedSymmKey,\n    encryptedString,\n    encryptedData: encryptedString,\n  };\n}\n\n/**\n * Decrypt a string that was encrypted with the encryptString function.\n * @param {Blob|File} encryptedStringBlob The encrypted string as a Blob\n * @param {Uint8Array} symmKey The symmetric key used that will be used to decrypt this.\n * @returns {Promise<string>} A promise containing the decrypted string\n */\nexport async function decryptString(encryptedStringBlob, symmKey) {\n  // -- validate\n  if (\n    !checkType({\n      value: encryptedStringBlob,\n      allowedTypes: [\"Blob\", \"File\"],\n      paramName: \"encryptedStringBlob\",\n      functionName: \"decryptString\",\n    })\n  )\n    return;\n  if (\n    !checkType({\n      value: symmKey,\n      allowedTypes: [\"Uint8Array\"],\n      paramName: [\"symmKey\"],\n      functionName: [\"decryptString\"],\n    })\n  )\n    return;\n\n  // import the decrypted symm key\n  const importedSymmKey = await importSymmetricKey(symmKey);\n\n  const decryptedStringArrayBuffer = await decryptWithSymmetricKey(\n    encryptedStringBlob,\n    importedSymmKey\n  );\n\n  return uint8arrayToString(new Uint8Array(decryptedStringArrayBuffer), \"utf8\");\n}\n\n/**\n * Zip and encrypt a string.  This is used to encrypt any string that is to be locked via the Lit Protocol.\n * @param {string} string The string to zip and encrypt\n * @returns {Promise<Object>} A promise containing the encryptedZip as a Blob and the symmetricKey used to encrypt it, as a Uint8Array.  The encrypted zip will contain a single file called \"string.txt\"\n */\nexport async function zipAndEncryptString(string) {\n  if (\n    !checkType({\n      value: string,\n      allowedTypes: [\"String\"],\n      paramName: \"string\",\n      functionName: \"zipAndEncryptString\",\n    })\n  )\n    return;\n\n  const zip = new JSZip();\n  zip.file(\"string.txt\", string);\n  return encryptZip(zip);\n}\n\n/**\n * Zip and encrypt multiple files.\n * @param {Array<File>} files An array of the files you wish to zip and encrypt\n * @returns {Promise<Object>} A promise containing the encryptedZip as a Blob and the symmetricKey used to encrypt it, as a Uint8Array.  The encrypted zip will contain a folder \"encryptedAssets\" and all of the files will be inside it.\n */\nexport async function zipAndEncryptFiles(files) {\n  // let's zip em\n  const zip = new JSZip();\n  for (let i = 0; i < files.length; i++) {\n    if (\n      !checkType({\n        value: files[i],\n        allowedTypes: [\"File\"],\n        paramName: `files[${i}]`,\n        functionName: \"zipAndEncryptFiles\",\n      })\n    )\n      return;\n    zip.folder(\"encryptedAssets\").file(files[i].name, files[i]);\n  }\n  return encryptZip(zip);\n}\n\n/**\n * Decrypt and unzip a zip that was created using encryptZip, zipAndEncryptString, or zipAndEncryptFiles.\n * @param {Blob|File} encryptedZipBlob The encrypted zip as a Blob\n * @param {Uint8Array} symmKey The symmetric key used that will be used to decrypt this zip.\n * @returns {Promise<Object>} A promise containing a JSZip object indexed by the filenames of the zipped files.  For example, if you have a file called \"meow.jpg\" in the root of your zip, you could get it from the JSZip object by doing this: const imageBlob = await decryptedZip['meow.jpg'].async('blob')\n */\nexport async function decryptZip(encryptedZipBlob, symmKey) {\n  if (\n    !checkType({\n      value: encryptedZipBlob,\n      allowedTypes: [\"Blob\", \"File\"],\n      paramName: \"encryptedZipBlob\",\n      functionName: \"decryptZip\",\n    })\n  )\n    return;\n  if (\n    !checkType({\n      value: symmKey,\n      allowedTypes: [\"Uint8Array\"],\n      paramName: \"symmKey\",\n      functionName: \"decryptZip\",\n    })\n  )\n    return;\n  // const keypair = await checkAndDeriveKeypair()\n\n  // log('Got keypair out of localstorage: ' + keypair)\n  // const privkey = keypair.secretKey\n\n  // let decryptedSymmKey = await decryptWithWeb3PrivateKey(symmKey)\n  // if (!decryptedSymmKey) {\n  //   // fallback to trying the private derived via signature\n  //   log('probably not metamask')\n  //   decryptedSymmKey = decryptWithPrivkey(symmKey, privkey)\n  // }\n  // log('decrypted', decryptedSymmKey)\n\n  // import the decrypted symm key\n  const importedSymmKey = await importSymmetricKey(symmKey);\n\n  const decryptedZipArrayBuffer = await decryptWithSymmetricKey(\n    encryptedZipBlob,\n    importedSymmKey\n  );\n\n  // unpack the zip\n  const zip = new JSZip();\n  const unzipped = await zip.loadAsync(decryptedZipArrayBuffer);\n\n  // load the files into data urls with the metadata attached\n  // const files = await Promise.all(unzipped.files.map(async f => {\n  //   // const dataUrl = await fileToDataUrl(f)\n  //   return {\n  //     type: f.type,\n  //     name: f.name,\n  //     file: f\n  //   }\n  // }))\n\n  return unzipped.files;\n}\n\n/**\n * Encrypt a zip file created with JSZip using a new random symmetric key via WebCrypto.\n * @param {JSZip} zip The JSZip instance to encrypt\n * @returns {Promise<Object>} A promise containing the encryptedZip as a Blob and the symmetricKey used to encrypt it, as a Uint8Array string.\n */\nexport async function encryptZip(zip) {\n  const zipBlob = await zip.generateAsync({ type: \"blob\" });\n  const zipBlobArrayBuffer = await zipBlob.arrayBuffer();\n  // log('blob', zipBlob)\n\n  const symmKey = await generateSymmetricKey();\n  const encryptedZipBlob = await encryptWithSymmetricKey(\n    symmKey,\n    zipBlobArrayBuffer\n  );\n\n  // to download the encrypted zip file for testing, uncomment this\n  // saveAs(encryptedZipBlob, 'encrypted.bin')\n\n  const exportedSymmKey = new Uint8Array(\n    await crypto.subtle.exportKey(\"raw\", symmKey)\n  );\n  // log('exportedSymmKey in hex', uint8arrayToString(exportedSymmKey, 'base16'))\n\n  // encrypt the symmetric key with the\n  // public key derived from the eth wallet\n  // const keypair = await checkAndDeriveKeypair()\n  // const pubkey = keypair.publicKey\n  // const privkey = keypair.secretKey\n\n  // encrypt symm key\n  // const encryptedSymmKeyData = encryptWithPubkey(pubkey, JSON.stringify(exportedSymmKey), 'x25519-xsalsa20-poly1305')\n  // const packed = JSON.stringify(encryptedSymmKeyData)\n\n  //   log('packed symmetric key ', packed)\n  //   const unpacked = JSON.parse(packed)\n  //   // test decrypt\n  //   const decryptedSymmKey = decryptWithPrivkey(unpacked, privkey)\n  //   log('decrypted', decryptedSymmKey)\n  //\n  //   // import the decrypted symm key\n  //   const importedSymmKey = await importSymmetricKey(decryptedSymmKey)\n  //\n  //   const decryptedZipArrayBuffer = await decryptWithSymmetricKey(\n  //     encryptedZipBlob,\n  //     importedSymmKey\n  //   )\n  //\n  //   // compare zip before and after as a sanity check\n  //   const isEqual = compareArrayBuffers(\n  //     zipBlobArrayBuffer,\n  //     decryptedZipArrayBuffer\n  //   )\n  //   log('Zip before and after decryption are equal: ', isEqual)\n  //   if (!isEqual) {\n  //     throw new Error('Decrypted zip does not match original zip.  Something is wrong.')\n  //   }\n\n  // to download the zip, for testing, uncomment this\n  //   const decryptedBlob = new Blob(\n  //     [decryptedZipArrayBuffer],\n  //     { type: 'application/zip' }\n  //   )\n  //   log('decrypted blob', decryptedBlob)\n  //\n  //   saveAs(decryptedBlob, 'decrypted.zip')\n  // log('saved')\n\n  return {\n    symmetricKey: exportedSymmKey,\n    encryptedZip: encryptedZipBlob,\n  };\n}\n\n/**\n * Encrypt a single file, save the key to the Lit network, and then zip it up with the metadata.\n * @param {Object} params\n * @param {Object} params.authSig The authSig of the user.  Returned via the checkAndSignAuthMessage function\n * @param {Array.<AccessControlCondition>} params.accessControlConditions The access control conditions that the user must meet to obtain this signed token.  This could be posession of an NFT, for example.  You must pass either accessControlConditions or evmContractConditions or solRpcConditions or unifiedAccessControlConditions.\n * @param {Array.<EVMContractCondition>} params.evmContractConditions  EVM Smart Contract access control conditions that the user must meet to obtain this signed token.  This could be posession of an NFT, for example.  This is different than accessControlConditions because accessControlConditions only supports a limited number of contract calls.  evmContractConditions supports any contract call.  You must pass either accessControlConditions or evmContractConditions or solRpcConditions or unifiedAccessControlConditions.\n * @param {Array.<SolRpcCondition>} params.solRpcConditions  Solana RPC call conditions that the user must meet to obtain this signed token.  This could be posession of an NFT, for example.\n * @param {Array.<AccessControlCondition|EVMContractCondition|SolRpcCondition>} params.unifiedAccessControlConditions  An array of unified access control conditions.  You may use AccessControlCondition, EVMContractCondition, or SolRpcCondition objects in this array, but make sure you add a conditionType for each one.  You must pass either accessControlConditions or evmContractConditions or solRpcConditions or unifiedAccessControlConditions.\n * @param {string} params.chain The chain name of the chain that this contract is deployed on.  See LIT_CHAINS for currently supported chains.\n * @param {File} params.file The file you wish to encrypt\n * @param {LitNodeClient} params.litNodeClient An instance of LitNodeClient that is already connected\n * @param {string} params.readme An optional readme text that will be inserted into readme.txt in the final zip file.  This is useful in case someone comes across this zip file and wants to know how to decrypt it.  This file could contain instructions and a URL to use to decrypt the file.\n * @returns {Promise<Object>} A promise containing an object with 3 keys: zipBlob, encryptedSymmetricKey, and symmetricKey.  zipBlob is a zip file that contains an encrypted file and the metadata needed to decrypt it via the Lit network.  encryptedSymmetricKey is the symmetric key needed to decrypt the content, encrypted with the Lit network public key.  You may wish to store encryptedSymmetricKey in your own database to support quicker re-encryption operations when adding additional access control conditions in the future, but this is entirely optional, and this key is already stored inside the zipBlob.  symmetricKey is the raw symmetric key used to encrypt the files.  DO NOT STORE IT.  It is provided in case you wish to create additional \"OR\" access control conditions for the same file.\n */\nexport async function encryptFileAndZipWithMetadata({\n  authSig,\n  accessControlConditions,\n  evmContractConditions,\n  solRpcConditions,\n  unifiedAccessControlConditions,\n  chain,\n  file,\n  litNodeClient,\n  readme,\n}) {\n  // -- validate\n  if (\n    !checkType({\n      value: authSig,\n      allowedTypes: [\"Object\"],\n      paramName: \"authSig\",\n      functionName: \"encryptFileAndZipWithMetadata\",\n    })\n  )\n    return;\n  if (\n    accessControlConditions &&\n    !checkType({\n      value: accessControlConditions,\n      allowedTypes: [\"Array\"],\n      paramName: \"accessControlConditions\",\n      functionName: \"encryptFileAndZipWithMetadata\",\n    })\n  )\n    return;\n  if (\n    evmContractConditions &&\n    !checkType({\n      value: evmContractConditions,\n      allowedTypes: [\"Array\"],\n      paramName: \"evmContractConditions\",\n      functionName: \"encryptFileAndZipWithMetadata\",\n    })\n  )\n    return;\n  if (\n    solRpcConditions &&\n    !checkType({\n      value: solRpcConditions,\n      allowedTypes: [\"Array\"],\n      paramName: \"solRpcConditions\",\n      functionName: \"encryptFileAndZipWithMetadata\",\n    })\n  )\n    return;\n  if (\n    unifiedAccessControlConditions &&\n    !checkType({\n      value: unifiedAccessControlConditions,\n      allowedTypes: [\"Array\"],\n      paramName: \"unifiedAccessControlConditions\",\n      functionName: \"encryptFileAndZipWithMetadata\",\n    })\n  )\n    return;\n  if (\n    !checkIfAuthSigRequiresChainParam(\n      authSig,\n      chain,\n      \"encryptFileAndZipWithMetadata\"\n    )\n  )\n    return;\n  if (\n    !checkType({\n      value: file,\n      allowedTypes: [\"File\"],\n      paramName: \"file\",\n      functionName: \"encryptFileAndZipWithMetadata\",\n    })\n  )\n    return;\n  if (\n    readme &&\n    !checkType({\n      value: readme,\n      allowedTypes: [\"String\"],\n      paramName: \"readme\",\n      functionName: \"encryptFileAndZipWithMetadata\",\n    })\n  )\n    return;\n\n  const symmetricKey = await generateSymmetricKey();\n  const exportedSymmKey = new Uint8Array(\n    await crypto.subtle.exportKey(\"raw\", symmetricKey)\n  );\n  // log('exportedSymmKey in hex', uint8arrayToString(exportedSymmKey, 'base16'))\n\n  const encryptedSymmetricKey = await litNodeClient.saveEncryptionKey({\n    accessControlConditions,\n    evmContractConditions,\n    solRpcConditions,\n    unifiedAccessControlConditions,\n    symmetricKey: exportedSymmKey,\n    authSig,\n    chain,\n  });\n  log(\"encrypted key saved to Lit\", encryptedSymmetricKey);\n\n  // encrypt the file\n  var fileAsArrayBuffer = await file.arrayBuffer();\n  const encryptedZipBlob = await encryptWithSymmetricKey(\n    symmetricKey,\n    fileAsArrayBuffer\n  );\n\n  const zip = new JSZip();\n  const metadata = metadataForFile({\n    name: file.name,\n    type: file.type,\n    size: file.size,\n    encryptedSymmetricKey,\n    accessControlConditions,\n    evmContractConditions,\n    solRpcConditions,\n    unifiedAccessControlConditions,\n    chain,\n  });\n\n  zip.file(\"lit_protocol_metadata.json\", JSON.stringify(metadata));\n  if (readme) {\n    zip.file(\"readme.txt\", readme);\n  }\n  zip.folder(\"encryptedAssets\").file(file.name, encryptedZipBlob);\n\n  const zipBlob = await zip.generateAsync({ type: \"blob\" });\n\n  return { zipBlob, encryptedSymmetricKey, symmetricKey: exportedSymmKey };\n}\n\n/**\n * Given a zip file with metadata inside it, unzip, load the metadata, and return the decrypted file and the metadata.  This zip file would have been created with the encryptFileAndZipWithMetadata function.\n * @param {Object} params\n * @param {Object} params.authSig The authSig of the user.  Returned via the checkAndSignAuthMessage function\n * @param {Blob|File} params.file The zip file blob with metadata inside it and the encrypted asset\n * @param {LitNodeClient} params.litNodeClient An instance of LitNodeClient that is already connected\n * @returns {Promise<Object>} A promise containing an object that contains decryptedFile and metadata properties.  The decryptedFile is an ArrayBuffer that is ready to use, and metadata is an object that contains all the properties of the file like it's name and size and type.\n */\nexport async function decryptZipFileWithMetadata({\n  authSig,\n  file,\n  litNodeClient,\n  additionalAccessControlConditions,\n}) {\n  // -- validate\n  if (\n    !checkType({\n      value: authSig,\n      allowedTypes: [\"Object\"],\n      paramName: \"authSig\",\n      functionName: \"decryptZipFileWithMetadata\",\n    })\n  )\n    return;\n  if (\n    !checkType({\n      value: file,\n      allowedTypes: [\"Blob\", \"File\"],\n      paramName: \"file\",\n      functionName: \"decryptZipFileWithMetadata\",\n    })\n  )\n    return;\n\n  const zip = await JSZip.loadAsync(file);\n  const metadata = JSON.parse(\n    await zip.file(\"lit_protocol_metadata.json\").async(\"string\")\n  );\n  log(\"zip metadata\", metadata);\n\n  let symmKey;\n  try {\n    symmKey = await litNodeClient.getEncryptionKey({\n      accessControlConditions: metadata.accessControlConditions,\n      evmContractConditions: metadata.evmContractConditions,\n      solRpcConditions: metadata.solRpcConditions,\n      unifiedAccessControlConditions: metadata.unifiedAccessControlConditions,\n      toDecrypt: metadata.encryptedSymmetricKey,\n      chain: metadata.chain,\n      authSig,\n    });\n  } catch (e) {\n    if (e.errorCode === \"not_authorized\") {\n      // try more additionalAccessControlConditions\n      if (!additionalAccessControlConditions) {\n        throw e;\n      }\n      log(\"trying additionalAccessControlConditions\");\n\n      for (let i = 0; i < additionalAccessControlConditions.length; i++) {\n        const accessControlConditions =\n          additionalAccessControlConditions[i].accessControlConditions;\n        log(\"trying additional condition\", accessControlConditions);\n        try {\n          symmKey = await litNodeClient.getEncryptionKey({\n            accessControlConditions: accessControlConditions,\n            toDecrypt:\n              additionalAccessControlConditions[i].encryptedSymmetricKey,\n            chain: metadata.chain,\n            authSig,\n          });\n\n          // // okay we got the additional symmkey, now we need to decrypt the symmkey and then use it to decrypt the original symmkey\n          // const importedAdditionalSymmKey = await importSymmetricKey(symmKey)\n          // symmKey = await decryptWithSymmetricKey(additionalAccessControlConditions[i].encryptedSymmetricKey, importedAdditionalSymmKey)\n\n          break; // it worked, we can leave the loop and stop checking additional access control conditions\n        } catch (e) {\n          // swallow not_authorized because we are gonna try some more accessControlConditions\n          if (e.errorCode !== \"not_authorized\") {\n            throw e;\n          }\n        }\n      }\n      if (!symmKey) {\n        // we tried all the access control conditions and none worked\n        throw e;\n      }\n    } else {\n      throw e;\n    }\n  }\n  const importedSymmKey = await importSymmetricKey(symmKey);\n\n  // log('symmetricKey', importedSymmKey)\n\n  const encryptedFile = await zip\n    .folder(\"encryptedAssets\")\n    .file(metadata.name)\n    .async(\"blob\");\n  // log('encryptedFile', encryptedFile)\n\n  const decryptedFile = await decryptWithSymmetricKey(\n    encryptedFile,\n    importedSymmKey\n  );\n\n  // log('decryptedFile', decryptedFile)\n\n  return { decryptedFile, metadata };\n}\n\n/**\n * Encrypt a file without doing any zipping or packing.  This is useful for large files.  A 1gb file can be encrypted in only 2 seconds, for example.  A new random symmetric key will be created and returned along with the encrypted file.\n * @param {Object} params\n * @param {Blob|File} params.file The file you wish to encrypt\n * @returns {Promise<Object>} A promise containing an object with keys encryptedFile and symmetricKey.  encryptedFile is a Blob, and symmetricKey is a Uint8Array that can be used to decrypt the file.\n */\nexport async function encryptFile({ file }) {\n  if (\n    !checkType({\n      value: file,\n      allowedTypes: [\"Blob\", \"File\"],\n      paramName: \"file\",\n      functionName: \"encryptFile\",\n    })\n  )\n    return;\n\n  // generate a random symmetric key\n  const symmetricKey = await generateSymmetricKey();\n  const exportedSymmKey = new Uint8Array(\n    await crypto.subtle.exportKey(\"raw\", symmetricKey)\n  );\n\n  // encrypt the file\n  var fileAsArrayBuffer = await file.arrayBuffer();\n  const encryptedFile = await encryptWithSymmetricKey(\n    symmetricKey,\n    fileAsArrayBuffer\n  );\n\n  return { encryptedFile, symmetricKey: exportedSymmKey };\n}\n\n/**\n * Decrypt a file that was encrypted with the encryptFile function, without doing any unzipping or unpacking.  This is useful for large files.  A 1gb file can be decrypted in only 1 second, for example.\n * @param {Object} params\n * @param {Blob|File} params.file The file you wish to decrypt\n * @param {Uint8Array} params.symmetricKey The symmetric key used that will be used to decrypt this.\n * @returns {Promise<ArrayBuffer>} A promise containing the decrypted file.  The file is an ArrayBuffer.\n */\nexport async function decryptFile({ file, symmetricKey }) {\n  // -- validate\n  if (\n    !checkType({\n      value: file,\n      allowedTypes: [\"Blob\", \"File\"],\n      paramName: \"file\",\n      functionName: \"decryptFile\",\n    })\n  )\n    return;\n\n  if (\n    !checkType({\n      value: symmetricKey,\n      allowedTypes: [\"Uint8Array\"],\n      paramName: \"symmetricKey\",\n      functionName: \"decryptFile\",\n    })\n  )\n    return;\n\n  const importedSymmKey = await importSymmetricKey(symmetricKey);\n\n  // decrypt the file\n  const decryptedFile = await decryptWithSymmetricKey(file, importedSymmKey);\n\n  return decryptedFile;\n}\n\nasync function getNpmPackage(packageName) {\n  // log('getting npm package: ' + packageName)\n  if (PACKAGE_CACHE[packageName]) {\n    // log('found in cache')\n    return PACKAGE_CACHE[packageName];\n  }\n\n  const resp = await fetch(\"https://unpkg.com/\" + packageName);\n  if (!resp.ok) {\n    log(\"error with response: \", resp);\n    throw Error(resp.statusText);\n  }\n  const blob = await resp.blob();\n  // log('got blob', blob)\n  const dataUrl = await fileToDataUrl(blob);\n  // log('got dataUrl', dataUrl)\n  PACKAGE_CACHE[packageName] = dataUrl;\n  return dataUrl;\n}\n\n/**\n * Create a ready-to-go LIT using provided HTML/CSS body and an encrypted zip data url.  You need to design your LIT with HTML and CSS, and provide an unlock button with the id \"unlockButton\" inside your HTML.  This function will handle the rest.\n * @param {Object} params\n * @param {string} params.title The title that will be used for the title tag in the outputted HTML\n * @param {number} params.htmlBody The HTML body for the locked state of the LIT.  All users will be able to see this HTML.  This HTML must have a button with an id of \"unlockButton\" which will be automatically set up to decrypt and load the encryptedZipDataUrl\n * @param {string} params.css Any CSS you would like to include in the outputted HTML\n * @param {number} params.encryptedZipDataUrl a data URL of the encrypted zip that contains the locked content that only token holders will be able to view.\n * @param {string} params.tokenAddress The token address of the corresponding NFT for this LIT.  ERC721 and ERC 1155 tokens are currently supported.\n * @param {number} params.tokenId The ID of the token of the corresponding NFT for this LIT.  Only holders of this token ID will be able to unlock and decrypt this LIT.\n * @param {string} params.chain The chain that the corresponding NFT was minted on.  \"ethereum\" and \"polygon\" are currently supported.\n * @param {Array} [params.npmPackages=[]] An array of strings of NPM package names that should be embedded into this LIT.  These packages will be pulled down via unpkg, converted to data URLs, and embedded in the LIT HTML.  You can include any packages from npmjs.com.\n * @returns {Promise<string>} A promise containing the HTML string that is now a LIT.  You can send this HTML around and only token holders will be able to unlock and decrypt the content inside it.  Included in the HTML is this LIT JS SDK itself, the encrypted locked content, an automatic connection to the LIT nodes network, and a handler for a button with id \"unlockButton\" which will perform the unlock operation when clicked.\n */\nexport async function createHtmlLIT({\n  title,\n  htmlBody,\n  css,\n  encryptedZipDataUrl,\n  accessControlConditions,\n  encryptedSymmetricKey,\n  chain,\n  npmPackages = [],\n}) {\n  // uncomment this to embed the LIT JS SDK directly instead of retrieving it from unpkg when a user views the LIT\n  // npmPackages.push('lit-js-sdk')\n  // log('createHtmlLIT with npmPackages', npmPackages)\n  let scriptTags = \"\";\n  for (let i = 0; i < npmPackages.length; i++) {\n    const scriptDataUrl = await getNpmPackage(npmPackages[i]);\n    const tag = `<script src=\"${scriptDataUrl}\"></script>\\n`;\n    scriptTags += tag;\n  }\n\n  const formattedAccessControlConditions = accessControlConditions.map((c) =>\n    canonicalAccessControlConditionFormatter(c)\n  );\n\n  // log('scriptTags: ', scriptTags)\n\n  return `\n<!DOCTYPE html>\n<html>\n  <head>\n    <title>${title}</title>\n    <style>\n      html, body, #root {\n        height: 100%;\n      }\n    </style>\n    <style id=\"jss-server-side\">${css}</style>\n    ${scriptTags}\n    <script>\n      var encryptedZipDataUrl = \"${encryptedZipDataUrl}\"\n      var accessControlConditions = ${JSON.stringify(\n        formattedAccessControlConditions\n      )}\n      var chain = \"${chain}\"\n      var encryptedSymmetricKey = \"${uint8arrayToString(\n        encryptedSymmetricKey,\n        \"base16\"\n      )}\"\n      var locked = true\n      var useLitPostMessageProxy = false\n      var sandboxed = false\n\n      document.addEventListener('lit-ready', function(){\n        var unlockButton = document.getElementById('unlockButton')\n        if (unlockButton) {\n          unlockButton.disabled = false\n        }\n\n        var loadingSpinner = document.getElementById('loadingSpinner')\n        if (loadingSpinner) {\n          loadingSpinner.style = 'display: none;'\n        }\n\n        var loadingText = document.getElementById('loadingText')\n        if (loadingText){\n          loadingText.innerText = ''\n        }\n      })\n    </script>\n    <script onload='LitJsSdk.litJsSdkLoadedInALIT()' src=\"https://jscdn.litgateway.com/index.web.js\"></script>\n  </head>\n  <body>\n    <div id=\"root\">${htmlBody}</div>\n    <script>\n      var unlockButton = document.getElementById('unlockButton')\n      unlockButton.onclick = function() {\n        if (window.sandboxed) {\n          var loadingText = document.getElementById('loadingText')\n          if (loadingText){\n            loadingText.innerText = 'Could not unlock because OpenSea does not allow wallet access.  Click the arrow icon \"View on Lit Protocol\" in the top right to open this in a new window.'\n            loadingText.style = 'color: rgba(255,100,100,1);'\n          }\n        } else {\n          LitJsSdk.toggleLock()\n        }\n      }\n      unlockButton.disabled = true\n    </script>\n  </body>\n</html>\n  `;\n}\n\n/**\n * Lock and unlock the encrypted content inside a LIT.  This content is only viewable by holders of the NFT that corresponds to this LIT.  Locked content will be decrypted and placed into the HTML element with id \"mediaGridHolder\".  The HTML element with the id \"lockedHeader\" will have it's text automatically changed to LOCKED or UNLOCKED to denote the state of the LIT.  Note that if you're creating a LIT using the createHtmlLIT function, you do not need to use this function, because this function is automatically bound to any button in your HTML with the id \"unlockButton\".\n * @returns {Promise} the promise will resolve when the LIT has been unlocked or an error message has been shown informing the user that they are not authorized to unlock the LIT\n */\nexport async function toggleLock() {\n  const mediaGridHolder = document.getElementById(\"mediaGridHolder\");\n  const lockedHeader = document.getElementById(\"lockedHeader\");\n\n  if (window.locked) {\n    // save public content before decryption, so we can toggle back to the\n    // locked state in the future\n    window.publicContent = mediaGridHolder.innerHTML;\n\n    if (!window.useLitPostMessageProxy && !window.litNodeClient.ready) {\n      alert(\n        \"The LIT network is still connecting.  Please try again in about 10 seconds.\"\n      );\n      return;\n    }\n\n    const authSig = await checkAndSignAuthMessage({ chain: window.chain });\n    if (authSig.errorCode && authSig.errorCode === \"wrong_chain\") {\n      alert(\n        \"You are connected to the wrong blockchain.  Please switch your metamask to \" +\n          window.chain\n      );\n      return;\n    }\n\n    // get the merkle proof\n    // const { balanceStorageSlot } = LIT_CHAINS[window.chain]\n    // let merkleProof = null\n    // try {\n    //   merkleProof = await getMerkleProof({ tokenAddress: window.tokenAddress, balanceStorageSlot, tokenId: window.tokenId })\n    // } catch (e) {\n    //   log(e)\n    //   alert('Error - could not obtain merkle proof.  Some nodes do not support this operation yet.  Please try another ETH node.')\n    //   return\n    // }\n\n    if (window.useLitPostMessageProxy) {\n      // instead of asking the network for the key part, ask the parent frame\n      // the parentframe will then call unlockLit() with the encryption key\n      sendMessageToFrameParent({\n        command: \"getEncryptionKey\",\n        target: \"LitNodeClient\",\n        params: {\n          accessControlConditions: window.accessControlConditions,\n          toDecrypt: window.encryptedSymmetricKey,\n          authSig,\n          chain: window.chain,\n        },\n      });\n      return;\n    }\n\n    // get the encryption key\n    const symmetricKey = await window.litNodeClient.getEncryptionKey({\n      accessControlConditions: window.accessControlConditions,\n      toDecrypt: window.encryptedSymmetricKey,\n      authSig,\n      chain: window.chain,\n    });\n\n    if (!symmetricKey) {\n      return; // something went wrong, maybe user is unauthorized\n    }\n\n    await unlockLitWithKey({ symmetricKey });\n  } else {\n    mediaGridHolder.innerHTML = window.publicContent;\n    lockedHeader.innerText = \"LOCKED\";\n    window.locked = true;\n  }\n}\n\n/**\n * Manually unlock a LIT with a symmetric key.  You can obtain this key by calling \"checkAndSignAuthMessage\" to get an authSig, then calling \"LitNodeClient.getEncryptionKey\" to get the key.  If you want to see an example, check out the implementation of \"toggleLock\" which does all those operations and then calls this function at the end (unlockLitWithKey)\n * @param {Object} params\n * @param {Uint8Array} params.symmetricKey The decryption key obtained by calling \"LitNodeClient.getEncryptionKey\"\n * @returns {promise} A promise that will resolve when the LIT is unlocked\n */\nexport async function unlockLitWithKey({ symmetricKey }) {\n  if (\n    !checkType({\n      value: symmetricKey,\n      allowedTypes: [\"Uint8Array\"],\n      paramName: \"symmetricKey\",\n      functionName: \"unlockLitWithKey\",\n    })\n  )\n    return;\n  const mediaGridHolder = document.getElementById(\"mediaGridHolder\");\n  const lockedHeader = document.getElementById(\"lockedHeader\");\n\n  // convert data url to blob\n  const encryptedZipBlob = await (\n    await fetch(window.encryptedZipDataUrl)\n  ).blob();\n  const decryptedFiles = await decryptZip(encryptedZipBlob, symmetricKey);\n  const mediaGridHtmlBody = await decryptedFiles[\"string.txt\"].async(\"text\");\n  mediaGridHolder.innerHTML = mediaGridHtmlBody;\n  lockedHeader.innerText = \"UNLOCKED\";\n  window.locked = false;\n}\n\n/**\n * Verify a JWT from the LIT network.  Use this for auth on your server.  For some background, users can define resources (URLs) for authorization via on-chain conditions using the saveSigningCondition function.  Other users can then request a signed JWT proving that their ETH account meets those on-chain conditions using the getSignedToken function.  Then, servers can verify that JWT using this function.  A successful verification proves that the user meets the on-chain conditions defined in the saveSigningCondition step.  For example, the on-chain condition could be posession of a specific NFT.\n * @param {Object} params\n * @param {string} params.jwt A JWT signed by the LIT network using the BLS12-381 algorithm\n * @returns {Object} An object with 4 keys: \"verified\": A boolean that represents whether or not the token verifies successfully.  A true result indicates that the token was successfully verified.  \"header\": the JWT header.  \"payload\": the JWT payload which includes the resource being authorized, etc.  \"signature\": A uint8array that represents the raw  signature of the JWT.\n */\nexport function verifyJwt({ jwt }) {\n  if (\n    !checkType({\n      value: jwt,\n      allowedTypes: [\"String\"],\n      paraamName: \"jwt\",\n      functionName: \"verifyJwt\",\n    })\n  )\n    return;\n  log(\"verifyJwt\", jwt);\n  // verify that the wasm was loaded\n  if (!globalThis.wasmExports) {\n    log(\"wasmExports is not loaded.\");\n    // initWasmBlsSdk().then((exports) => {\n    //   // log('wtf, window? ', typeof window !== 'undefined')\n    //   window.wasmExports = exports;\n    // });\n  }\n\n  const pubKey = uint8arrayFromString(NETWORK_PUB_KEY, \"base16\");\n  // log(\"pubkey is \", pubKey);\n  const jwtParts = jwt.split(\".\");\n  const sig = uint8arrayFromString(jwtParts[2], \"base64url\");\n  // log(\"sig is \", uint8arrayToString(sig, \"base16\"));\n  const unsignedJwt = `${jwtParts[0]}.${jwtParts[1]}`;\n  // log(\"unsignedJwt is \", unsignedJwt);\n  const message = uint8arrayFromString(unsignedJwt);\n  // log(\"message is \", message);\n\n  // TODO check for expiration\n\n  // p is public key uint8array\n  // s is signature uint8array\n  // m is message uint8array\n  // function is: function (p, s, m)\n\n  const verified = Boolean(wasmBlsSdkHelpers.verify(pubKey, sig, message));\n\n  return {\n    verified,\n    header: JSON.parse(\n      uint8arrayToString(uint8arrayFromString(jwtParts[0], \"base64url\"))\n    ),\n    payload: JSON.parse(\n      uint8arrayToString(uint8arrayFromString(jwtParts[1], \"base64url\"))\n    ),\n    signature: sig,\n  };\n}\n\n/**\n * Get all the metadata needed to decrypt something in the future.  If you're encrypting files with Lit and storing them in IPFS or Arweave, then this function will provide you with a properly formatted metadata object that you should save alongside the files.\n * @param {Object} params\n * @param {string} params.objectUrl The url to the object, like an IPFS or Arweave url.\n * @param {Array} params.accessControlConditions The array of access control conditions defined for the object\n * @param {string} params.chain The blockchain on which the access control conditions should be checked\n * @param {Uint8Array} params.encryptedSymmetricKey The encrypted symmetric key that was returned by the LitNodeClient.saveEncryptionKey function\n * @returns {Object} An object with 3 keys: \"verified\": A boolean that represents whether or not the token verifies successfully.  A true result indicates that the token was successfully verified.  \"header\": the JWT header.  \"payload\": the JWT payload which includes the resource being authorized, etc.\n */\nfunction metadataForFile({\n  name,\n  type,\n  size,\n  accessControlConditions,\n  evmContractConditions,\n  solRpcConditions,\n  unifiedAccessControlConditions,\n  chain,\n  encryptedSymmetricKey,\n}) {\n  return {\n    name,\n    type,\n    size,\n    accessControlConditions,\n    evmContractConditions,\n    solRpcConditions,\n    unifiedAccessControlConditions,\n    chain,\n    encryptedSymmetricKey: uint8arrayToString(encryptedSymmetricKey, \"base16\"),\n  };\n}\n\nfunction humanizeComparator(comparator) {\n  if (comparator === \">\") {\n    return \"more than\";\n  } else if (comparator === \">=\") {\n    return \"at least\";\n  } else if (comparator === \"=\") {\n    return \"exactly\";\n  } else if (comparator === \"<\") {\n    return \"less than\";\n  } else if (comparator === \"<=\") {\n    return \"at most\";\n  } else if (comparator === \"contains\") {\n    return \"contains\";\n  }\n}\n\n/**\n * The human readable name for an access control condition\n * @param {Object} params\n * @param {Array} params.accessControlConditions The array of access control conditions that you want to humanize\n * @param {Array} params.evmContractConditions The array of evm contract conditions that you want to humanize\n * @param {Array} params.solRpcConditions The array of Solana RPC conditions that you want to humanize\n * @param {Array} params.unifiedAccessControlConditions The array of unified access control conditions that you want to humanize\n * @returns {Promise<string>} A promise containing a human readable description of the access control conditions\n */\nexport async function humanizeAccessControlConditions({\n  accessControlConditions,\n  evmContractConditions,\n  solRpcConditions,\n  unifiedAccessControlConditions,\n  tokenList,\n  myWalletAddress,\n}) {\n  if (accessControlConditions) {\n    return humanizeEvmBasicAccessControlConditions({\n      accessControlConditions,\n      tokenList,\n      myWalletAddress,\n    });\n  } else if (evmContractConditions) {\n    return humanizeEvmContractConditions({\n      evmContractConditions,\n      tokenList,\n      myWalletAddress,\n    });\n  } else if (solRpcConditions) {\n    return humanizeSolRpcConditions({\n      solRpcConditions,\n      tokenList,\n      myWalletAddress,\n    });\n  } else if (unifiedAccessControlConditions) {\n    return humanizeUnifiedAccessControlConditions({\n      unifiedAccessControlConditions,\n      tokenList,\n      myWalletAddress,\n    });\n  }\n}\n\nasync function humanizeUnifiedAccessControlConditions({\n  unifiedAccessControlConditions,\n  tokenList,\n  myWalletAddress,\n}) {\n  const promises = await Promise.all(\n    unifiedAccessControlConditions.map(async (acc) => {\n      if (Array.isArray(acc)) {\n        // this is a group.  recurse.\n        const group = await humanizeUnifiedAccessControlConditions({\n          unifiedAccessControlConditions: acc,\n          tokenList,\n          myWalletAddress,\n        });\n        return `( ${group} )`;\n      }\n\n      if (acc.operator) {\n        if (acc.operator.toLowerCase() === \"and\") {\n          return \" and \";\n        } else if (acc.operator.toLowerCase() === \"or\") {\n          return \" or \";\n        }\n      }\n\n      if (acc.conditionType === \"evmBasic\") {\n        return humanizeEvmBasicAccessControlConditions({\n          accessControlConditions: [acc],\n          tokenList,\n          myWalletAddress,\n        });\n      } else if (acc.conditionType === \"evmContract\") {\n        return humanizeEvmContractConditions({\n          evmContractConditions: [acc],\n          tokenList,\n          myWalletAddress,\n        });\n      } else if (acc.conditionType === \"solRpc\") {\n        return humanizeSolRpcConditions({\n          solRpcConditions: [acc],\n          tokenList,\n          myWalletAddress,\n        });\n      } else if (acc.conditionType === \"cosmos\") {\n        return humanizeCosmosConditions({\n          cosmosConditions: [acc],\n          tokenList,\n          myWalletAddress,\n        });\n      } else {\n        throwError({\n          message: `Unrecognized condition type: ${acc.conditionType}`,\n          name: \"InvalidUnifiedConditionType\",\n          errorCode: \"invalid_unified_condition_type\",\n        });\n      }\n    })\n  );\n  return promises.join(\"\");\n}\n\nasync function humanizeEvmBasicAccessControlConditions({\n  accessControlConditions,\n  tokenList,\n  myWalletAddress,\n}) {\n  log(\"humanizing evm basic access control conditions\");\n  log(\"myWalletAddress\", myWalletAddress);\n  log(\"accessControlConditions\", accessControlConditions);\n  let fixedConditions = accessControlConditions;\n\n  // inject and operator if needed\n  // this is done because before we supported operators,\n  // we let users specify an entire array of conditions\n  // that would be \"AND\"ed together.  this injects those ANDs\n  if (accessControlConditions.length > 1) {\n    let containsOperator = false;\n    for (let i = 0; i < accessControlConditions.length; i++) {\n      if (accessControlConditions[i].operator) {\n        containsOperator = true;\n      }\n    }\n    if (!containsOperator) {\n      fixedConditions = [];\n\n      // insert ANDs between conditions\n      for (let i = 0; i < accessControlConditions.length; i++) {\n        fixedConditions.push(accessControlConditions[i]);\n        if (i < accessControlConditions.length - 1) {\n          fixedConditions.push({\n            operator: \"and\",\n          });\n        }\n      }\n    }\n  }\n\n  const promises = await Promise.all(\n    fixedConditions.map(async (acc) => {\n      if (Array.isArray(acc)) {\n        // this is a group.  recurse.\n        const group = await humanizeEvmBasicAccessControlConditions({\n          accessControlConditions: acc,\n          tokenList,\n          myWalletAddress,\n        });\n        return `( ${group} )`;\n      }\n\n      if (acc.operator) {\n        if (acc.operator.toLowerCase() === \"and\") {\n          return \" and \";\n        } else if (acc.operator.toLowerCase() === \"or\") {\n          return \" or \";\n        }\n      }\n\n      if (\n        acc.standardContractType === \"timestamp\" &&\n        acc.method === \"eth_getBlockByNumber\"\n      ) {\n        return `Latest mined block must be past the unix timestamp ${acc.returnValueTest.value}`;\n      } else if (\n        acc.standardContractType === \"MolochDAOv2.1\" &&\n        acc.method === \"members\"\n      ) {\n        // molochDAOv2.1 membership\n        return `Is a member of the DAO at ${acc.contractAddress}`;\n      } else if (\n        acc.standardContractType === \"ERC1155\" &&\n        acc.method === \"balanceOf\"\n      ) {\n        // erc1155 owns an amount of specific tokens\n        return `Owns ${humanizeComparator(acc.returnValueTest.comparator)} ${\n          acc.returnValueTest.value\n        } of ${acc.contractAddress} tokens with token id ${acc.parameters[1]}`;\n      } else if (\n        acc.standardContractType === \"ERC1155\" &&\n        acc.method === \"balanceOfBatch\"\n      ) {\n        // erc1155 owns an amount of specific tokens from a batch of token ids\n        return `Owns ${humanizeComparator(acc.returnValueTest.comparator)} ${\n          acc.returnValueTest.value\n        } of ${acc.contractAddress} tokens with token id ${acc.parameters[1]\n          .split(\",\")\n          .join(\" or \")}`;\n      } else if (\n        acc.standardContractType === \"ERC721\" &&\n        acc.method === \"ownerOf\"\n      ) {\n        // specific erc721\n        return `Owner of tokenId ${acc.parameters[0]} from ${acc.contractAddress}`;\n      } else if (\n        acc.standardContractType === \"ERC721\" &&\n        acc.method === \"balanceOf\" &&\n        acc.contractAddress === \"0x22C1f6050E56d2876009903609a2cC3fEf83B415\" &&\n        acc.returnValueTest.comparator === \">\" &&\n        acc.returnValueTest.value === \"0\"\n      ) {\n        // for POAP main contract where the user owns at least 1 poap\n        return `Owns any POAP`;\n      } else if (\n        acc.standardContractType === \"POAP\" &&\n        acc.method === \"tokenURI\"\n      ) {\n        // owns a POAP\n        return `Owner of a ${acc.returnValueTest.value} POAP on ${acc.chain}`;\n      } else if (\n        acc.standardContractType === \"POAP\" &&\n        acc.method === \"eventId\"\n      ) {\n        // owns a POAP\n        return `Owner of a POAP from event ID ${acc.returnValueTest.value} on ${acc.chain}`;\n      } else if (\n        acc.standardContractType === \"CASK\" &&\n        acc.method === \"getActiveSubscriptionCount\"\n      ) {\n        // Cask powered subscription\n        return `Cask subscriber to provider ${acc.parameters[1]} for plan ${acc.parameters[2]} on ${acc.chain}`;\n      } else if (\n        acc.standardContractType === \"ERC721\" &&\n        acc.method === \"balanceOf\"\n      ) {\n        // any erc721 in collection\n        return `Owns ${humanizeComparator(acc.returnValueTest.comparator)} ${\n          acc.returnValueTest.value\n        } of ${acc.contractAddress} tokens`;\n      } else if (\n        acc.standardContractType === \"ERC20\" &&\n        acc.method === \"balanceOf\"\n      ) {\n        let tokenFromList;\n        if (tokenList) {\n          tokenFromList = tokenList.find(\n            (t) => t.address === acc.contractAddress\n          );\n        }\n        let decimals, name;\n        if (tokenFromList) {\n          decimals = tokenFromList.decimals;\n          name = tokenFromList.symbol;\n        } else {\n          decimals = await decimalPlaces({\n            contractAddress: acc.contractAddress,\n            chain: acc.chain,\n          });\n        }\n        log(\"decimals\", decimals);\n        return `Owns ${humanizeComparator(\n          acc.returnValueTest.comparator\n        )} ${formatUnits(acc.returnValueTest.value, decimals)} of ${\n          name || acc.contractAddress\n        } tokens`;\n      } else if (\n        acc.standardContractType === \"\" &&\n        acc.method === \"eth_getBalance\"\n      ) {\n        return `Owns ${humanizeComparator(\n          acc.returnValueTest.comparator\n        )} ${formatEther(acc.returnValueTest.value)} ETH`;\n      } else if (acc.standardContractType === \"\" && acc.method === \"\") {\n        if (\n          myWalletAddress &&\n          acc.returnValueTest.value.toLowerCase() ===\n            myWalletAddress.toLowerCase()\n        ) {\n          return `Controls your wallet (${myWalletAddress})`;\n        } else {\n          return `Controls wallet with address ${acc.returnValueTest.value}`;\n        }\n      }\n    })\n  );\n  return promises.join(\"\");\n}\n\nasync function humanizeSolRpcConditions({\n  solRpcConditions,\n  tokenList,\n  myWalletAddress,\n}) {\n  log(\"humanizing sol rpc conditions\");\n  log(\"myWalletAddress\", myWalletAddress);\n  log(\"solRpcConditions\", solRpcConditions);\n\n  const promises = await Promise.all(\n    solRpcConditions.map(async (acc) => {\n      if (Array.isArray(acc)) {\n        // this is a group.  recurse.\n        const group = await humanizeSolRpcConditions({\n          solRpcConditions: acc,\n          tokenList,\n          myWalletAddress,\n        });\n        return `( ${group} )`;\n      }\n\n      if (acc.operator) {\n        if (acc.operator.toLowerCase() === \"and\") {\n          return \" and \";\n        } else if (acc.operator.toLowerCase() === \"or\") {\n          return \" or \";\n        }\n      }\n\n      if (acc.method === \"getBalance\") {\n        return `Owns ${humanizeComparator(\n          acc.returnValueTest.comparator\n        )} ${formatSol(acc.returnValueTest.value)} SOL`;\n      } else if (acc.method === \"\") {\n        if (\n          myWalletAddress &&\n          acc.returnValueTest.value.toLowerCase() ===\n            myWalletAddress.toLowerCase()\n        ) {\n          return `Controls your wallet (${myWalletAddress})`;\n        } else {\n          return `Controls wallet with address ${acc.returnValueTest.value}`;\n        }\n      } else {\n        let msg = `Solana RPC method ${acc.method}(${acc.params.join(\n          \", \"\n        )}) should have a result of ${humanizeComparator(\n          acc.returnValueTest.comparator\n        )} ${acc.returnValueTest.value}`;\n        if (acc.returnValueTest.key !== \"\") {\n          msg += ` for key ${acc.returnValueTest.key}`;\n        }\n        return msg;\n      }\n    })\n  );\n  return promises.join(\"\");\n}\n\nasync function humanizeEvmContractConditions({\n  evmContractConditions,\n  tokenList,\n  myWalletAddress,\n}) {\n  log(\"humanizing evm contract conditions\");\n  log(\"myWalletAddress\", myWalletAddress);\n  log(\"evmContractConditions\", evmContractConditions);\n\n  const promises = await Promise.all(\n    evmContractConditions.map(async (acc) => {\n      if (Array.isArray(acc)) {\n        // this is a group.  recurse.\n        const group = await humanizeEvmContractConditions({\n          evmContractConditions: acc,\n          tokenList,\n          myWalletAddress,\n        });\n        return `( ${group} )`;\n      }\n\n      if (acc.operator) {\n        if (acc.operator.toLowerCase() === \"and\") {\n          return \" and \";\n        } else if (acc.operator.toLowerCase() === \"or\") {\n          return \" or \";\n        }\n      }\n\n      let msg = `${acc.functionName}(${acc.functionParams.join(\n        \", \"\n      )}) on contract address ${\n        acc.contractAddress\n      } should have a result of ${humanizeComparator(\n        acc.returnValueTest.comparator\n      )} ${acc.returnValueTest.value}`;\n      if (acc.returnValueTest.key !== \"\") {\n        msg += ` for key ${acc.returnValueTest.key}`;\n      }\n      return msg;\n    })\n  );\n  return promises.join(\"\");\n}\n\nasync function humanizeCosmosConditions({\n  cosmosConditions,\n  tokenList,\n  myWalletAddress,\n}) {\n  log(\"humanizing cosmos conditions\");\n  log(\"myWalletAddress\", myWalletAddress);\n  log(\"cosmosConditions\", cosmosConditions);\n\n  const promises = await Promise.all(\n    cosmosConditions.map(async (acc) => {\n      if (Array.isArray(acc)) {\n        // this is a group.  recurse.\n        const group = await humanizeCosmosConditions({\n          accessControlConditions: acc,\n          tokenList,\n          myWalletAddress,\n        });\n        return `( ${group} )`;\n      }\n\n      if (acc.operator) {\n        if (acc.operator.toLowerCase() === \"and\") {\n          return \" and \";\n        } else if (acc.operator.toLowerCase() === \"or\") {\n          return \" or \";\n        }\n      }\n\n      if (acc.path === \"/cosmos/bank/v1beta1/balances/:userAddress\") {\n        return `Owns ${humanizeComparator(\n          acc.returnValueTest.comparator\n        )} ${formatAtom(acc.returnValueTest.value)} ATOM`;\n      } else if (acc.path === \":userAddress\") {\n        if (\n          myWalletAddress &&\n          acc.returnValueTest.value.toLowerCase() ===\n            myWalletAddress.toLowerCase()\n        ) {\n          return `Controls your wallet (${myWalletAddress})`;\n        } else {\n          return `Controls wallet with address ${acc.returnValueTest.value}`;\n        }\n      } else if (\n        acc.chain === \"kyve\" &&\n        acc.path === \"/kyve/registry/v1beta1/funders_list/0\"\n      ) {\n        return `Is a current KYVE funder`;\n      } else {\n        let msg = `Cosmos RPC request for ${\n          acc.path\n        } should have a result of ${humanizeComparator(\n          acc.returnValueTest.comparator\n        )} ${acc.returnValueTest.value}`;\n        if (acc.returnValueTest.key !== \"\") {\n          msg += ` for key ${acc.returnValueTest.key}`;\n        }\n        return msg;\n      }\n    })\n  );\n  return promises.join(\"\");\n}\n\nfunction formatSol(amount) {\n  return formatUnits(amount, 9);\n}\n\nfunction formatAtom(amount) {\n  return formatUnits(amount, 6);\n}\n\nexport async function getTokenList() {\n  // erc20\n  const erc20Url = \"https://tokens.coingecko.com/uniswap/all.json\";\n  const erc20Promise = fetch(erc20Url).then((r) => r.json());\n\n  // erc721\n  const erc721Url =\n    \"https://raw.githubusercontent.com/0xsequence/token-directory/main/index/mainnet/erc721.json\";\n  const erc721Promise = fetch(erc721Url).then((r) => r.json());\n\n  const [erc20s, erc721s] = await Promise.all([erc20Promise, erc721Promise]);\n  const sorted = [...erc20s.tokens, ...erc721s.tokens].sort((a, b) =>\n    a.name > b.name ? 1 : -1\n  );\n  return sorted;\n}\n\nexport const sendMessageToFrameParent = (data) => {\n  window.parent.postMessage(data, \"*\");\n};\n\nexport function getSessionKeyUri({ publicKey }) {\n  return \"lit:session:\" + publicKey;\n}\n\nexport function parseResource({ resource }) {\n  const [protocol, resourceId] = resource.split(\"://\");\n  return { protocol, resourceId };\n}\n","import Uint8arrays from \"../lib/uint8arrays\";\nconst uint8arrayFromString = Uint8arrays.fromString;\nconst uint8arrayToString = Uint8arrays.toString;\nimport naclUtil from \"tweetnacl-util\";\n\nimport { version } from \"../version\";\n\nimport {\n  mostCommonString,\n  throwError,\n  log,\n  checkType,\n  checkIfAuthSigRequiresChainParam,\n  convertLitActionsParams,\n} from \"../lib/utils\";\nimport { wasmBlsSdkHelpers } from \"../lib/bls-sdk\";\nimport * as wasmECDSA from \"../lib/ecdsa-sdk\";\nimport { LIT_NETWORKS } from \"../lib/constants\";\nimport { joinSignature } from \"@ethersproject/bytes\";\n\nimport {\n  hashAccessControlConditions,\n  hashEVMContractConditions,\n  hashSolRpcConditions,\n  hashResourceId,\n  hashUnifiedAccessControlConditions,\n  canonicalAccessControlConditionFormatter,\n  canonicalEVMContractConditionFormatter,\n  canonicalSolRpcConditionFormatter,\n  canonicalResourceIdFormatter,\n  canonicalUnifiedAccessControlConditionFormatter,\n  combineEcdsaShares,\n  combineBlsShares,\n  combineBlsDecryptionShares,\n} from \"./crypto\";\n\n/**\n * @typedef {Object} AccessControlCondition\n * @property {string} contractAddress - The address of the contract that will be queried\n * @property {string} chain - The chain name of the chain that this contract is deployed on.  See LIT_CHAINS for currently supported chains.\n * @property {string} standardContractType - If the contract is an ERC20, ERC721, or ERC1155, please put that here\n * @property {string} method - The smart contract function to call\n * @property {Array} parameters - The parameters to use when calling the smart contract.  You can use the special \":userAddress\" parameter which will be replaced with the requesting user's wallet address, verified via message signature\n * @property {Object} returnValueTest - An object containing two keys: \"comparator\" and \"value\".  The return value of the smart contract function will be compared against these.  For example, to check if someone holds an NFT, you could use \"comparator: >\" and \"value: 0\" which would check that a user has a token balance greater than zero.\n */\n\n/**\n * @typedef {Object} EVMContractCondition\n * @property {string} contractAddress - The address of the contract that will be queried\n * @property {string} chain - The chain name of the chain that this contract is deployed on.  See LIT_CHAINS for currently supported chains.\n * @property {string} functionName - The smart contract function to call\n * @property {Array} functionParams - The parameters to use when calling the smart contract.  You can use the special \":userAddress\" parameter which will be replaced with the requesting user's wallet address, verified via message signature\n * @property {Object} functionAbi - The ABI of the smart contract function to call.  This is used to encode the function parameters and decode the return value of the function.  Do not pass the entire contract ABI here.  Instead, find the function you want to call in the contract ABI and pass that function's ABI here.\n * @property {Object} returnValueTest - An object containing three keys: \"key\", \"comparator\" and \"value\".  The return value of the smart contract function will be compared against these.  For example, to check if someone holds an NFT, you could use \"key\": \"\", \"comparator: >\" and \"value: 0\" which would check that a user has a token balance greater than zero.  The \"key\" is used when the return value is a struct which contains multiple values and should be the name of the returned value from the function abi.  You must always pass \"key\" when using \"returnValueTest\", even if you pass an empty string for it, because the function only returns a single value.\n */\n\n/**\n * @typedef {Object} SolRpcCondition\n * @property {string} method - The Solana RPC method to be called.  You can find a list here: https://docs.solana.com/developing/clients/jsonrpc-api\n * @property {Array} params - The parameters to use when making the RPC call.  You can use the special \":userAddress\" parameter which will be replaced with the requesting user's wallet address, verified via message signature\n * @property {string} chain - The chain name of the chain that this contract is deployed on.  See ALL_LIT_CHAINS for currently supported chains.  On Solana, we support \"solana\" for mainnet, \"solanaDevnet\" for devnet and \"solanaTestnet\" for testnet.\n * @property {Object} returnValueTest - An object containing three keys: \"key\", \"comparator\" and \"value\".  The return value of the rpc call will be compared against these.  The \"key\" selector supports JSONPath syntax, so you can filter and iterate over the results.  For example, to check if someone holds an NFT with address 29G6GSKNGP8K6ATy65QrNZk4rNgsZX1sttvb5iLXWDcE, you could use \"method\": \"GetTokenAccountsByOwner\", \"params\": [\":userAddress\",{\"programId\":\"TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA\"},{\"encoding\":\"jsonParsed\"}], \"key\": \"$[?(@.account.data.parsed.info.mint == \"29G6GSKNGP8K6ATy65QrNZk4rNgsZX1sttvb5iLXWDcE\")].account.data.parsed.info.tokenAmount.amount\", \"comparator: >\" and \"value: 0\" which would check that a user has a token balance greater than zero.  The \"key\" is used when the return value is an array or object which contains multiple values and should be the name of the returned value or a JSONPath item.  You must always pass \"key\" when using \"returnValueTest\", even if you pass an empty string for it, because the rpc call only returns a single value.\n */\n\n/**\n * @typedef {Object} CosmosCondition\n * @property {string} path - The RPC URL path that will be called.  This will typically contain any parameters you need for the call.  Note that you can use the special \":userAddress\" parameter which will be replaced with the requesting user's wallet address, verified via message signature.  For example, this path would be used to get the requesting user's balance: \"/cosmos/bank/v1beta1/balances/:userAddress\"\n * @property {string} chain - The chain name of the chain that this contract is deployed on.  See ALL_LIT_CHAINS for currently supported chains.  On Cosmos we currently support \"cosmos\" and \"kyve\"\n * @property {Object} returnValueTest - An object containing three keys: \"key\", \"comparator\" and \"value\".  The return value of the rpc call will be compared against these.  The \"key\" selector supports JSONPath syntax, so you can filter and iterate over the results.  For example, to check the balance of someone's account, you can use the key \"$.balances[0].amount\" which will pull out balances[0].amount from the JSON response and compare it against the \"value\" field according to the \"comparator\".  The \"key\" is used when the return value is an array or object which contains multiple values and should be the name of the returned value or a JSONPath item.  You must always pass \"key\" when using \"returnValueTest\", even if you pass an empty string for it, because the rpc call only returns a single value.\n */\n\n/**\n * @typedef {Object} ResourceId\n * @property {string} baseUrl - The base url of the resource that will be authorized\n * @property {string} path - The path of the url of the resource that will be authorized\n * @property {string} orgId - The org id that the user would be authorized to belong to.  The orgId key must be present but it may contain an empty string if you don't need to store anything in it.\n * @property {string} role - The role that the user would be authorized to have.  The role key must be present but it may contain an empty string if you don't need to store anything in it.\n * @property {string} extraData - Any extra data you may want to store.  You may store stringified JSON in here, for example.  The extraData key must be present but it may contain an empty string if you don't need to store anything in it.\n */\n\n/**\n * @typedef {Object} CallRequest\n * @property {string} to - The address of the contract that will be queried\n * @property {string} from - Optional.  The address calling the function.\n * @property {string} data - Hex encoded data to send to the contract.\n */\n\n/**\n * A LIT node client.  Connects directly to the LIT nodes to store and retrieve encryption keys and signing requests.  Only holders of an NFT that corresponds with a LIT may store and retrieve the keys.\n * @param {Object} config\n * @param {boolean} [config.alertWhenUnauthorized=true] Whether or not to show a JS alert() when a user tries to unlock a LIT but is unauthorized.  An exception will also be thrown regardless of this option.\n * @param {number} [config.minNodeCount=6] The minimum number of nodes that must be connected for the LitNodeClient to be ready to use.\n * @param {boolean} [config.debug=true] Whether or not to show debug messages.\n */\nexport default class LitNodeClient {\n  constructor(config) {\n    this.config = {\n      alertWhenUnauthorized: true,\n      minNodeCount: 6,\n      debug: true,\n      bootstrapUrls: [\n        \"https://node2.litgateway.com:7370\",\n        \"https://node2.litgateway.com:7371\",\n        \"https://node2.litgateway.com:7372\",\n        \"https://node2.litgateway.com:7373\",\n        \"https://node2.litgateway.com:7374\",\n        \"https://node2.litgateway.com:7375\",\n        \"https://node2.litgateway.com:7376\",\n        \"https://node2.litgateway.com:7377\",\n        \"https://node2.litgateway.com:7378\",\n        \"https://node2.litgateway.com:7379\",\n      ],\n      litNetwork: \"jalapeno\",\n    };\n    if (config) {\n      this.config = { ...this.config, ...config };\n    }\n\n    this.connectedNodes = new Set();\n    this.serverKeys = {};\n    this.ready = false;\n    this.subnetPubKey = null;\n    this.networkPubKey = null;\n    this.networkPubKeySet = null;\n\n    try {\n      if (typeof window !== \"undefined\" && window && window.localStorage) {\n        let configOverride = window.localStorage.getItem(\"LitNodeClientConfig\");\n        if (configOverride) {\n          configOverride = JSON.parse(configOverride);\n          this.config = { ...this.config, ...configOverride };\n        }\n      }\n    } catch (e) {\n      log(\"Error accessing local storage\", e);\n    }\n\n    // set bootstrapUrls to match the network litNetwork unless it's set to custom\n    if (this.config.litNetwork !== \"custom\") {\n      // set bootstrapUrls to match the network litNetwork\n      if (!(this.config.litNetwork in LIT_NETWORKS)) {\n        // network not found, report error\n        throwError({\n          message:\n            \"the litNetwork specified in the LitNodeClient config not found in LIT_NETWORKS\",\n          name: \"LitNodeClientConfigBad\",\n          errorCode: \"lit_node_client_config_bad\",\n        });\n      }\n      this.config.bootstrapUrls = LIT_NETWORKS[this.config.litNetwork];\n    }\n\n    globalThis.litConfig = this.config;\n    log(\"LitNodeClient config\", this.config);\n  }\n\n  /**\n   * Execute JS on the nodes and combine and return any resulting signatures\n   * @param {Object} params\n   * @param {string} params.code JS code to run on the nodes\n   * @param {string} params.ipfsId The IPFS ID of some JS code to run on the nodes\n   * @param {AuthSig} params.authSig the authSig to use to authorize the user with the nodes\n   * @param {Object} params.jsParams An object that contains params to expose to the Lit Action.  These will be injected to the JS runtime before your code runs, so you can use any of these as normal variables in your Lit Action.\n   * @param {Boolean} params.debug A boolean that defines if debug info will be returned or not.\n   * @returns {Object} An object containing the resulting signatures.  Each signature comes with the public key and the data signed.\n   */\n  async executeJs({\n    code,\n    ipfsId,\n    authSig,\n    authMethods = [],\n    jsParams = {},\n    debug,\n  }) {\n    if (!this.ready) {\n      throwError({\n        message:\n          \"LitNodeClient is not ready.  Please call await litNodeClient.connect() first.\",\n        name: \"LitNodeClientNotReadyError\",\n        errorCode: \"lit_node_client_not_ready\",\n      });\n    }\n\n    // some JS types don't serialize well, so we will convert them before sending to the nodes\n    jsParams = convertLitActionsParams(jsParams);\n\n    const reqBody = { authSig, jsParams, authMethods };\n    if (code) {\n      // base64 encode before sending over the wire\n      const encodedJs = uint8arrayToString(\n        uint8arrayFromString(code, \"utf8\"),\n        \"base64\"\n      );\n      reqBody.code = encodedJs;\n    } else if (ipfsId) {\n      reqBody.ipfsId = ipfsId;\n    } else {\n      throwError({\n        message: \"You must pass either code or ipfsId\",\n        name: \"MissingParameterError\",\n        errorCode: \"missing_parameter\",\n      });\n    }\n\n    // log(\"sending request to all nodes for executeJs: \", reqBody);\n\n    // ask each node to run the js\n    const nodePromises = [];\n    for (const url of this.connectedNodes) {\n      nodePromises.push(\n        this.getJsExecutionShares({\n          url,\n          ...reqBody,\n        })\n      );\n    }\n    const res = await this.handleNodePromises(nodePromises);\n    if (res.success === false) {\n      this.throwNodeError(res);\n      return;\n    }\n    const responseData = res.values;\n\n    log(\"responseData\", JSON.stringify(responseData, null, 2));\n\n    // combine the signatures\n    const signedData = responseData.map((r) => r.signedData);\n\n    const signatures = {};\n    Object.keys(signedData[0]).forEach((key) => {\n      const shares = signedData.map((r) => r[key]);\n      shares.sort((a, b) => a.shareIndex - b.shareIndex);\n      const sigShares = shares.map((s) => ({\n        sigType: s.sigType,\n        shareHex: s.signatureShare,\n        shareIndex: s.shareIndex,\n        localX: s.localX,\n        localY: s.localY,\n        publicKey: s.publicKey,\n        dataSigned: s.dataSigned,\n      }));\n      log(\"sigShares\", sigShares);\n      const sigType = mostCommonString(sigShares.map((s) => s.sigType));\n      let signature;\n      if (sigType === \"BLS\") {\n        signature = combineBlsShares(sigShares, this.networkPubKeySet);\n      } else if (sigType === \"ECDSA\") {\n        signature = combineEcdsaShares(sigShares);\n      } else {\n        throwError({\n          message: \"Unknown signature type\",\n          name: \"UnknownSignatureTypeError\",\n          errorCode: \"unknown_signature_type\",\n        });\n      }\n\n      const encodedSig = joinSignature({\n        r: \"0x\" + signature.r,\n        s: \"0x\" + signature.s,\n        v: signature.recid,\n      });\n\n      signatures[key] = {\n        ...signature,\n        signature: encodedSig,\n        publicKey: \"0x\" + mostCommonString(sigShares.map((s) => s.publicKey)),\n        dataSigned: \"0x\" + mostCommonString(sigShares.map((s) => s.dataSigned)),\n      };\n    });\n\n    // combine the decryptions\n    const decryptedData = responseData.map((r) => r.decryptedData);\n\n    const decryptions = {};\n    Object.keys(decryptedData[0]).forEach((key) => {\n      const shares = decryptedData.map((r) => r[key]);\n      const decShares = shares.map((s) => ({\n        algorithmType: s.algorithmType,\n        decryptionShare: s.decryptionShare,\n        shareIndex: s.shareIndex,\n        publicKey: s.publicKey,\n        ciphertext: s.ciphertext,\n      }));\n      const algorithmType = mostCommonString(\n        decShares.map((s) => s.algorithmType)\n      );\n      const ciphertext = mostCommonString(decShares.map((s) => s.ciphertext));\n      let decrypted;\n      if (algorithmType === \"BLS\") {\n        decrypted = combineBlsDecryptionShares(\n          decShares,\n          this.networkPubKeySet,\n          ciphertext\n        );\n      } else {\n        throwError({\n          message: \"Unknown decryption algorithm type\",\n          name: \"UnknownDecryptionAlgorithmTypeError\",\n          errorCode: \"unknown_decryption_algorithm_type\",\n        });\n      }\n\n      decryptions[key] = {\n        decrypted: uint8arrayToString(decrypted, \"base16\"),\n        publicKey: mostCommonString(decShares.map((s) => s.publicKey)),\n        ciphertext: mostCommonString(decShares.map((s) => s.ciphertext)),\n      };\n    });\n\n    let response = mostCommonString(responseData.map((r) => r.response));\n    try {\n      response = JSON.parse(response);\n    } catch (e) {\n      log(\n        \"Error parsing response as json.  Swallowing and returning as string.\",\n        response\n      );\n    }\n\n    const mostCommonLogs = mostCommonString(responseData.map((r) => r.logs));\n\n    let returnVal = {\n      signatures,\n      decryptions,\n      response,\n      logs: mostCommonLogs,\n    };\n\n    if (debug) {\n      const allNodeResponses = responseData.map((r) => r.response);\n      const allNodeLogs = responseData.map((r) => r.logs);\n      returnVal.debug = {\n        allNodeResponses,\n        allNodeLogs,\n        rawNodeHTTPResponses: responseData,\n      };\n    }\n\n    return returnVal;\n  }\n\n  /**\n   * Request a signed JWT of any solidity function call from the LIT network.  There are no prerequisites for this function.  You should use this function if you need to transmit information across chains, or from a blockchain to a centralized DB or server.  The signature of the returned JWT verifies that the response is genuine.\n   * @param {Object} params\n   * @param {Array.<CallRequest>} params.callRequests The call requests to make.  The responses will be signed and returned.\n   * @param {string} params.chain The chain name of the chain that this contract is deployed on.  See LIT_CHAINS for currently supported chains.\n   * @returns {Object} A signed JWT that proves the response to the function call is genuine. You may present this to a smart contract, or a server for authorization, and it can be verified using the verifyJwt function.\n   */\n  async getSignedChainDataToken({ callRequests, chain }) {\n    if (!this.ready) {\n      throwError({\n        message:\n          \"LitNodeClient is not ready.  Please call await litNodeClient.connect() first.\",\n        name: \"LitNodeClientNotReadyError\",\n        errorCode: \"lit_node_client_not_ready\",\n      });\n    }\n\n    // we need to send jwt params iat (issued at) and exp (expiration)\n    // because the nodes may have different wall clock times\n    // the nodes will verify that these params are withing a grace period\n    const now = Date.now();\n    const iat = Math.floor(now / 1000);\n    const exp = iat + 12 * 60 * 60; // 12 hours in seconds\n\n    // ask each node to sign the content\n    const nodePromises = [];\n    for (const url of this.connectedNodes) {\n      nodePromises.push(\n        this.getChainDataSigningShare({\n          url,\n          callRequests,\n          chain,\n          iat,\n          exp,\n        })\n      );\n    }\n    const signatureShares = await Promise.all(nodePromises);\n    log(\"signatureShares\", signatureShares);\n    const goodShares = signatureShares.filter((d) => d.signatureShare !== \"\");\n    if (goodShares.length < this.config.minNodeCount) {\n      log(\n        `majority of shares are bad. goodShares is ${JSON.stringify(\n          goodShares\n        )}`\n      );\n      if (this.config.alertWhenUnauthorized) {\n        alert(\n          \"You are not authorized to receive a signature to grant access to this content\"\n        );\n      }\n\n      throwError({\n        message: `You are not authorized to recieve a signature on this item`,\n        name: \"UnauthorizedException\",\n        errorCode: \"not_authorized\",\n      });\n    }\n\n    // sanity check\n    if (\n      !signatureShares.every(\n        (val, i, arr) => val.unsignedJwt === arr[0].unsignedJwt\n      )\n    ) {\n      const msg =\n        \"Unsigned JWT is not the same from all the nodes.  This means the combined signature will be bad because the nodes signed the wrong things\";\n      log(msg);\n      alert(msg);\n    }\n\n    // sort the sig shares by share index.  this is important when combining the shares.\n    signatureShares.sort((a, b) => a.shareIndex - b.shareIndex);\n\n    // combine the signature shares\n\n    const pkSetAsBytes = uint8arrayFromString(this.networkPubKeySet, \"base16\");\n    log(\"pkSetAsBytes\", pkSetAsBytes);\n\n    const sigShares = signatureShares.map((s) => ({\n      shareHex: s.signatureShare,\n      shareIndex: s.shareIndex,\n    }));\n    const signature = wasmBlsSdkHelpers.combine_signatures(\n      pkSetAsBytes,\n      sigShares\n    );\n    log(\"raw sig\", signature);\n    log(\"signature is \", uint8arrayToString(signature, \"base16\"));\n\n    const unsignedJwt = mostCommonString(\n      signatureShares.map((s) => s.unsignedJwt)\n    );\n\n    // convert the sig to base64 and append to the jwt\n    const finalJwt = `${unsignedJwt}.${uint8arrayToString(\n      signature,\n      \"base64url\"\n    )}`;\n\n    return finalJwt;\n  }\n\n  /**\n   * Request a signed JWT from the LIT network.  Before calling this function, you must either create or know of a resource id and access control conditions for the item you wish to gain authorization for.  You can create an access control condition using the saveSigningCondition function.\n   * @param {Object} params\n   * @param {Array.<AccessControlCondition>} params.accessControlConditions The access control conditions that the user must meet to obtain this signed token.  This could be posession of an NFT, for example.  You must pass either accessControlConditions or evmContractConditions or solRpcConditions or unifiedAccessControlConditions.\n   * @param {Array.<EVMContractCondition>} params.evmContractConditions  EVM Smart Contract access control conditions that the user must meet to obtain this signed token.  This could be posession of an NFT, for example.  This is different than accessControlConditions because accessControlConditions only supports a limited number of contract calls.  evmContractConditions supports any contract call.  You must pass either accessControlConditions or evmContractConditions solRpcConditions or unifiedAccessControlConditions.\n   * @param {Array.<SolRpcCondition>} params.solRpcConditions  Solana RPC call conditions that the user must meet to obtain this signed token.  This could be posession of an NFT, for example.\n   * @param {Array.<AccessControlCondition|EVMContractCondition|SolRpcCondition>} params.unifiedAccessControlConditions  An array of unified access control conditions.  You may use AccessControlCondition, EVMContractCondition, or SolRpcCondition objects in this array, but make sure you add a conditionType for each one.  You must pass either accessControlConditions or evmContractConditions or solRpcConditions or unifiedAccessControlConditions.\n   * @param {string} params.chain The chain name of the chain that you are querying.  See ALL_LIT_CHAINS for currently supported chains.\n   * @param {AuthSig} params.authSig The authentication signature that proves that the user owns the crypto wallet address that meets the access control conditions.\n   * @param {ResourceId} params.resourceId The resourceId representing something on the web via a URL\n   * @returns {Object} A signed JWT that proves you meet the access control conditions for the given resource id.  You may present this to a server for authorization, and the server can verify it using the verifyJwt function.\n   */\n  async getSignedToken({\n    accessControlConditions,\n    evmContractConditions,\n    solRpcConditions,\n    unifiedAccessControlConditions,\n    chain,\n    authSig,\n    resourceId,\n    sessionSigs,\n  }) {\n    if (!this.ready) {\n      throwError({\n        message:\n          \"LitNodeClient is not ready.  Please call await litNodeClient.connect() first.\",\n        name: \"LitNodeClientNotReadyError\",\n        errorCode: \"lit_node_client_not_ready\",\n      });\n    }\n\n    // -- validate\n    if (\n      accessControlConditions &&\n      !checkType({\n        value: accessControlConditions,\n        allowedTypes: [\"Array\"],\n        paramName: \"accessControlConditions\",\n        functionName: \"getSignedToken\",\n      })\n    )\n      return;\n    if (\n      evmContractConditions &&\n      !checkType({\n        value: evmContractConditions,\n        allowedTypes: [\"Array\"],\n        paramName: \"evmContractConditions\",\n        functionName: \"getSignedToken\",\n      })\n    )\n      return;\n    if (\n      solRpcConditions &&\n      !checkType({\n        value: solRpcConditions,\n        allowedTypes: [\"Array\"],\n        paramName: \"solRpcConditions\",\n        functionName: \"getSignedToken\",\n      })\n    )\n      return;\n    if (\n      unifiedAccessControlConditions &&\n      !checkType({\n        value: unifiedAccessControlConditions,\n        allowedTypes: [\"Array\"],\n        paramName: \"unifiedAccessControlConditions\",\n        functionName: \"getSignedToken\",\n      })\n    )\n      return;\n    if (\n      !checkType({\n        value: resourceId,\n        allowedTypes: [\"Object\"],\n        paramName: \"resourceId\",\n        functionName: \"getSignedToken\",\n      })\n    )\n      return;\n    if (\n      authSig &&\n      !checkType({\n        value: authSig,\n        allowedTypes: [\"Object\"],\n        paramName: \"authSig\",\n        functionName: \"getSignedToken\",\n      })\n    )\n      return;\n\n    log(\"sessionSigs\", sessionSigs);\n\n    if (\n      sessionSigs &&\n      !checkType({\n        value: sessionSigs,\n        allowedTypes: [\"Object\"],\n        paramName: \"sessionSigs\",\n        functionName: \"getSignedToken\",\n      })\n    )\n      return;\n\n    if (!sessionSigs && !authSig) {\n      throwError({\n        message: \"You must pass either authSig or sessionSigs\",\n        name: \"InvalidArgumentException\",\n        errorCode: \"invalid_argument\",\n      });\n      return;\n    }\n\n    if (\n      authSig &&\n      !checkIfAuthSigRequiresChainParam(authSig, chain, \"getSignedToken\")\n    )\n      return;\n\n    // we need to send jwt params iat (issued at) and exp (expiration)\n    // because the nodes may have different wall clock times\n    // the nodes will verify that these params are withing a grace period\n    const now = Date.now();\n    const iat = Math.floor(now / 1000);\n    const exp = iat + 12 * 60 * 60; // 12 hours in seconds\n\n    let formattedAccessControlConditions;\n    let formattedEVMContractConditions;\n    let formattedSolRpcConditions;\n    let formattedUnifiedAccessControlConditions;\n    if (accessControlConditions) {\n      formattedAccessControlConditions = accessControlConditions.map((c) =>\n        canonicalAccessControlConditionFormatter(c)\n      );\n      log(\n        \"formattedAccessControlConditions\",\n        JSON.stringify(formattedAccessControlConditions)\n      );\n    } else if (evmContractConditions) {\n      formattedEVMContractConditions = evmContractConditions.map((c) =>\n        canonicalEVMContractConditionFormatter(c)\n      );\n      log(\n        \"formattedEVMContractConditions\",\n        JSON.stringify(formattedEVMContractConditions)\n      );\n    } else if (solRpcConditions) {\n      formattedSolRpcConditions = solRpcConditions.map((c) =>\n        canonicalSolRpcConditionFormatter(c)\n      );\n      log(\n        \"formattedSolRpcConditions\",\n        JSON.stringify(formattedSolRpcConditions)\n      );\n    } else if (unifiedAccessControlConditions) {\n      formattedUnifiedAccessControlConditions =\n        unifiedAccessControlConditions.map((c) =>\n          canonicalUnifiedAccessControlConditionFormatter(c)\n        );\n      log(\n        \"formattedUnifiedAccessControlConditions\",\n        JSON.stringify(formattedUnifiedAccessControlConditions)\n      );\n    } else {\n      throwError({\n        message: `You must provide either accessControlConditions or evmContractConditions or solRpcConditions or unifiedAccessControlConditions`,\n        name: \"InvalidArgumentException\",\n        errorCode: \"invalid_argument\",\n      });\n    }\n\n    const formattedResourceId = canonicalResourceIdFormatter(resourceId);\n\n    // ask each node to sign the content\n    const nodePromises = [];\n    for (const url of this.connectedNodes) {\n      let sigToPassToNode = authSig;\n      if (sessionSigs) {\n        // find the sessionSig for this node\n        sigToPassToNode = sessionSigs[url];\n        if (!sigToPassToNode) {\n          throwError({\n            message: `You passed sessionSigs but we could not find session sig for node ${url}`,\n            name: \"InvalidArgumentException\",\n            errorCode: \"invalid_argument\",\n          });\n        }\n      }\n      nodePromises.push(\n        this.getSigningShare({\n          url,\n          accessControlConditions: formattedAccessControlConditions,\n          evmContractConditions: formattedEVMContractConditions,\n          solRpcConditions: formattedSolRpcConditions,\n          unifiedAccessControlConditions:\n            formattedUnifiedAccessControlConditions,\n          resourceId: formattedResourceId,\n          authSig: sigToPassToNode,\n          chain,\n          iat,\n          exp,\n        })\n      );\n    }\n\n    const res = await this.handleNodePromises(nodePromises);\n    if (res.success === false) {\n      this.throwNodeError(res);\n      return;\n    }\n    const signatureShares = res.values;\n    log(\"signatureShares\", signatureShares);\n\n    // sanity check\n    if (\n      !signatureShares.every(\n        (val, i, arr) => val.unsignedJwt === arr[0].unsignedJwt\n      )\n    ) {\n      const msg =\n        \"Unsigned JWT is not the same from all the nodes.  This means the combined signature will be bad because the nodes signed the wrong things\";\n      log(msg);\n      alert(msg);\n    }\n\n    // sort the sig shares by share index.  this is important when combining the shares.\n    signatureShares.sort((a, b) => a.shareIndex - b.shareIndex);\n\n    // combine the signature shares\n\n    const pkSetAsBytes = uint8arrayFromString(this.networkPubKeySet, \"base16\");\n    log(\"pkSetAsBytes\", pkSetAsBytes);\n\n    const sigShares = signatureShares.map((s) => ({\n      shareHex: s.signatureShare,\n      shareIndex: s.shareIndex,\n    }));\n    const signature = wasmBlsSdkHelpers.combine_signatures(\n      pkSetAsBytes,\n      sigShares\n    );\n    log(\"raw sig\", signature);\n    log(\"signature is \", uint8arrayToString(signature, \"base16\"));\n\n    const unsignedJwt = mostCommonString(\n      signatureShares.map((s) => s.unsignedJwt)\n    );\n\n    // convert the sig to base64 and append to the jwt\n    const finalJwt = `${unsignedJwt}.${uint8arrayToString(\n      signature,\n      \"base64url\"\n    )}`;\n\n    return finalJwt;\n  }\n\n  /**\n   * Associated access control conditions with a resource on the web.  After calling this function, users may use the getSignedToken function to request a signed JWT from the LIT network.  This JWT proves that the user meets the access control conditions, and is authorized to access the resource you specified in the resourceId parameter of the saveSigningCondition function.\n   * @param {Object} params\n   * @param {Array.<AccessControlCondition>} params.accessControlConditions The access control conditions that the user must meet to obtain this signed token.  This could be posession of an NFT, for example.  You must pass either accessControlConditions or evmContractConditions or solRpcConditions or unifiedAccessControlConditions.\n   * @param {Array.<EVMContractCondition>} params.evmContractConditions  EVM Smart Contract access control conditions that the user must meet to obtain this signed token.  This could be posession of an NFT, for example.  This is different than accessControlConditions because accessControlConditions only supports a limited number of contract calls.  evmContractConditions supports any contract call.  You must pass either accessControlConditions or evmContractConditions or solRpcConditions or unifiedAccessControlConditions.\n   * @param {Array.<SolRpcCondition>} params.solRpcConditions  Solana RPC call conditions that the user must meet to obtain this signed token.  This could be posession of an NFT, for example.\n   * @param {Array.<AccessControlCondition|EVMContractCondition|SolRpcCondition>} params.unifiedAccessControlConditions  An array of unified access control conditions.  You may use AccessControlCondition, EVMContractCondition, or SolRpcCondition objects in this array, but make sure you add a conditionType for each one.  You must pass either accessControlConditions or evmContractConditions or solRpcConditions or unifiedAccessControlConditions.\n   * @param {string} params.chain The chain name of the chain that you are querying.  See ALL_LIT_CHAINS for currently supported chains.\n   * @param {AuthSig} params.authSig The authentication signature that proves that the user owns the crypto wallet address that meets the access control conditions\n   * @param {ResourceId} params.resourceId The resourceId representing something on the web via a URL\n   * @param {boolean} params.permanent Whether or not the access control condition should be saved permanently.  If false, the access control conditions will be updateable by the creator.  If you don't pass this param, it's set to true by default.\n   * @returns {boolean} Success\n   */\n  async saveSigningCondition({\n    accessControlConditions,\n    evmContractConditions,\n    solRpcConditions,\n    unifiedAccessControlConditions,\n    chain,\n    authSig,\n    resourceId,\n    permanant,\n    permanent = true,\n    sessionSigs,\n  }) {\n    log(\"saveSigningCondition\");\n\n    if (!this.ready) {\n      throwError({\n        message:\n          \"LitNodeClient is not ready.  Please call await litNodeClient.connect() first.\",\n        name: \"LitNodeClientNotReadyError\",\n        errorCode: \"lit_node_client_not_ready\",\n      });\n    }\n\n    // -- validate\n    if (\n      accessControlConditions &&\n      !checkType({\n        value: accessControlConditions,\n        allowedTypes: [\"Array\"],\n        paramName: \"accessControlConditions\",\n        functionName: \"getSignedToken\",\n      })\n    )\n      return;\n    if (\n      evmContractConditions &&\n      !checkType({\n        value: evmContractConditions,\n        allowedTypes: [\"Array\"],\n        paramName: \"evmContractConditions\",\n        functionName: \"getSignedToken\",\n      })\n    )\n      return;\n    if (\n      solRpcConditions &&\n      !checkType({\n        value: solRpcConditions,\n        allowedTypes: [\"Array\"],\n        paramName: \"solRpcConditions\",\n        functionName: \"getSignedToken\",\n      })\n    )\n      return;\n    if (\n      unifiedAccessControlConditions &&\n      !checkType({\n        value: unifiedAccessControlConditions,\n        allowedTypes: [\"Array\"],\n        paramName: \"unifiedAccessControlConditions\",\n        functionName: \"getSignedToken\",\n      })\n    )\n      return;\n    if (\n      !checkType({\n        value: resourceId,\n        allowedTypes: [\"Object\"],\n        paramName: \"resourceId\",\n        functionName: \"getSignedToken\",\n      })\n    )\n      return;\n    if (\n      authSig &&\n      !checkType({\n        value: authSig,\n        allowedTypes: [\"Object\"],\n        paramName: \"authSig\",\n        functionName: \"getSignedToken\",\n      })\n    )\n      return;\n\n    log(\"sessionSigs\", sessionSigs);\n\n    if (\n      sessionSigs &&\n      !checkType({\n        value: sessionSigs,\n        allowedTypes: [\"Object\"],\n        paramName: \"sessionSigs\",\n        functionName: \"getSignedToken\",\n      })\n    )\n      return;\n\n    if (!sessionSigs && !authSig) {\n      throwError({\n        message: \"You must pass either authSig or sessionSigs\",\n        name: \"InvalidArgumentException\",\n        errorCode: \"invalid_argument\",\n      });\n      return;\n    }\n\n    if (\n      authSig &&\n      !checkIfAuthSigRequiresChainParam(authSig, chain, \"getSignedToken\")\n    )\n      return;\n\n    // this is to fix my spelling mistake that we must now maintain forever lol\n    if (typeof permanant !== \"undefined\") {\n      permanent = permanant;\n    }\n\n    // hash the resource id\n    const hashOfResourceId = await hashResourceId(resourceId);\n    const hashOfResourceIdStr = uint8arrayToString(\n      new Uint8Array(hashOfResourceId),\n      \"base16\"\n    );\n\n    let hashOfConditions;\n    // hash the access control conditions\n    if (accessControlConditions) {\n      hashOfConditions = await hashAccessControlConditions(\n        accessControlConditions\n      );\n    } else if (evmContractConditions) {\n      hashOfConditions = await hashEVMContractConditions(evmContractConditions);\n    } else if (solRpcConditions) {\n      hashOfConditions = await hashSolRpcConditions(solRpcConditions);\n    } else if (unifiedAccessControlConditions) {\n      hashOfConditions = await hashUnifiedAccessControlConditions(\n        unifiedAccessControlConditions\n      );\n    } else {\n      throwError({\n        message: `You must provide either accessControlConditions or evmContractConditions or solRpcConditions or unifiedAccessControlConditions`,\n        name: \"InvalidArgumentException\",\n        errorCode: \"invalid_argument\",\n      });\n    }\n\n    const hashOfConditionsStr = uint8arrayToString(\n      new Uint8Array(hashOfConditions),\n      \"base16\"\n    );\n    // create access control conditions on lit nodes\n    const nodePromises = [];\n    for (const url of this.connectedNodes) {\n      let authSigToSend = authSig;\n      if (sessionSigs) {\n        // use a separate authSig for each node\n        authSigToSend = sessionSigs[url];\n      }\n      nodePromises.push(\n        this.storeSigningConditionWithNode({\n          url,\n          key: hashOfResourceIdStr,\n          val: hashOfConditionsStr,\n          authSig: authSigToSend,\n          chain,\n          permanent: permanent ? 1 : 0,\n        })\n      );\n    }\n\n    const res = await this.handleNodePromises(nodePromises);\n    if (res.success === false) {\n      this.throwNodeError(res);\n      return;\n    }\n\n    return true;\n  }\n\n  /**\n   * Retrieve the symmetric encryption key from the LIT nodes.  Note that this will only work if the current user meets the access control conditions specified when the data was encrypted.  That access control condition is typically that the user is a holder of the NFT that corresponds to this encrypted data.  This NFT token address and ID was specified when this LIT was created.\n   * @param {Object} params\n   * @param {Array.<AccessControlCondition>} params.accessControlConditions The access control conditions that the user must meet to obtain this signed token.  This could be posession of an NFT, for example.  You must pass either accessControlConditions or evmContractConditions or solRpcConditions or unifiedAccessControlConditions.\n   * @param {Array.<EVMContractCondition>} params.evmContractConditions  EVM Smart Contract access control conditions that the user must meet to obtain this signed token.  This could be posession of an NFT, for example.  This is different than accessControlConditions because accessControlConditions only supports a limited number of contract calls.  evmContractConditions supports any contract call.  You must pass either accessControlConditions or evmContractConditions or solRpcConditions or unifiedAccessControlConditions.\n   * @param {Array.<SolRpcCondition>} params.solRpcConditions  Solana RPC call conditions that the user must meet to obtain this signed token.  This could be posession of an NFT, for example.\n   * @param {Array.<AccessControlCondition|EVMContractCondition|SolRpcCondition>} params.unifiedAccessControlConditions  An array of unified access control conditions.  You may use AccessControlCondition, EVMContractCondition, or SolRpcCondition objects in this array, but make sure you add a conditionType for each one.  You must pass either accessControlConditions or evmContractConditions or solRpcConditions or unifiedAccessControlConditions.\n   * @param {string} params.toDecrypt The ciphertext that you wish to decrypt encoded as a hex string\n   * @param {string} params.chain The chain name of the chain that you are querying.  See ALL_LIT_CHAINS for currently supported chains.\n   * @param {AuthSig} params.authSig The authentication signature that proves that the user owns the crypto wallet address meets the access control conditions.\n   * @returns {Uint8Array} The symmetric encryption key that can be used to decrypt the locked content inside the LIT.  You should pass this key to the decryptZip function.\n   */\n  async getEncryptionKey({\n    accessControlConditions,\n    evmContractConditions,\n    solRpcConditions,\n    unifiedAccessControlConditions,\n    toDecrypt,\n    chain,\n    authSig,\n    sessionSigs,\n  }) {\n    if (!this.ready) {\n      throwError({\n        message:\n          \"LitNodeClient is not ready.  Please call await litNodeClient.connect() first.\",\n        name: \"LitNodeClientNotReadyError\",\n        errorCode: \"lit_node_client_not_ready\",\n      });\n    }\n\n    // -- validate\n    if (\n      accessControlConditions &&\n      !checkType({\n        value: accessControlConditions,\n        allowedTypes: [\"Array\"],\n        paramName: \"accessControlConditions\",\n        functionName: \"getEncryptionKey\",\n      })\n    )\n      return;\n    if (\n      evmContractConditions &&\n      !checkType({\n        value: evmContractConditions,\n        allowedTypes: [\"Array\"],\n        paramName: \"evmContractConditions\",\n        functionName: \"getEncryptionKey\",\n      })\n    )\n      return;\n    if (\n      solRpcConditions &&\n      !checkType({\n        value: solRpcConditions,\n        allowedTypes: [\"Array\"],\n        paramName: \"solRpcConditions\",\n        functionName: \"getEncryptionKey\",\n      })\n    )\n      return;\n    if (\n      unifiedAccessControlConditions &&\n      !checkType({\n        value: unifiedAccessControlConditions,\n        allowedTypes: [\"Array\"],\n        paramName: \"unifiedAccessControlConditions\",\n        functionName: \"getEncryptionKey\",\n      })\n    )\n      return;\n    if (\n      !checkType({\n        value: toDecrypt,\n        allowedTypes: [\"String\"],\n        paramName: \"toDecrypt\",\n        functionName: \"getEncryptionKey\",\n      })\n    )\n      return;\n    if (\n      authSig &&\n      !checkType({\n        value: authSig,\n        allowedTypes: [\"Object\"],\n        paramName: \"authSig\",\n        functionName: \"getEncryptionKey\",\n      })\n    )\n      return;\n    if (\n      sessionSigs &&\n      !checkType({\n        value: sessionSigs,\n        allowedTypes: [\"Object\"],\n        paramName: \"sessionSigs\",\n        functionName: \"getEncryptionKey\",\n      })\n    )\n      return;\n\n    if (!sessionSigs && !authSig) {\n      throwError({\n        message: \"You must pass either authSig or sessionSigs\",\n        name: \"InvalidArgumentException\",\n        errorCode: \"invalid_argument\",\n      });\n      return;\n    }\n\n    if (\n      authSig &&\n      !checkIfAuthSigRequiresChainParam(authSig, chain, \"getEncryptionKey\")\n    )\n      return;\n\n    let formattedAccessControlConditions;\n    let formattedEVMContractConditions;\n    let formattedSolRpcConditions;\n    let formattedUnifiedAccessControlConditions;\n    if (accessControlConditions) {\n      formattedAccessControlConditions = accessControlConditions.map((c) =>\n        canonicalAccessControlConditionFormatter(c)\n      );\n      log(\n        \"formattedAccessControlConditions: \",\n        JSON.stringify(formattedAccessControlConditions)\n      );\n    } else if (evmContractConditions) {\n      formattedEVMContractConditions = evmContractConditions.map((c) =>\n        canonicalEVMContractConditionFormatter(c)\n      );\n      log(\n        \"formattedEVMContractConditions\",\n        JSON.stringify(formattedEVMContractConditions)\n      );\n    } else if (solRpcConditions) {\n      formattedSolRpcConditions = solRpcConditions.map((c) =>\n        canonicalSolRpcConditionFormatter(c)\n      );\n      log(\n        \"formattedSolRpcConditions\",\n        JSON.stringify(formattedSolRpcConditions)\n      );\n    } else if (unifiedAccessControlConditions) {\n      formattedUnifiedAccessControlConditions =\n        unifiedAccessControlConditions.map((c) =>\n          canonicalUnifiedAccessControlConditionFormatter(c)\n        );\n      log(\n        \"formattedUnifiedAccessControlConditions\",\n        JSON.stringify(formattedUnifiedAccessControlConditions)\n      );\n    } else {\n      throwError({\n        message: `You must provide either accessControlConditions or evmContractConditions or solRpcConditions or unifiedAccessControlConditions`,\n        name: \"InvalidArgumentException\",\n        errorCode: \"invalid_argument\",\n      });\n    }\n\n    // ask each node to decrypt the content\n    const nodePromises = [];\n    for (const url of this.connectedNodes) {\n      let sigToPassToNode = authSig;\n      if (sessionSigs) {\n        // find the sessionSig for this node\n        sigToPassToNode = sessionSigs[url];\n        if (!sigToPassToNode) {\n          throwError({\n            message: `You passed sessionSigs but we could not find session sig for node ${url}`,\n            name: \"InvalidArgumentException\",\n            errorCode: \"invalid_argument\",\n          });\n        }\n      }\n      nodePromises.push(\n        this.getDecryptionShare({\n          url,\n          accessControlConditions: formattedAccessControlConditions,\n          evmContractConditions: formattedEVMContractConditions,\n          solRpcConditions: formattedSolRpcConditions,\n          unifiedAccessControlConditions:\n            formattedUnifiedAccessControlConditions,\n          toDecrypt,\n          authSig: sigToPassToNode,\n          chain,\n        })\n      );\n    }\n    const res = await this.handleNodePromises(nodePromises);\n    if (res.success === false) {\n      this.throwNodeError(res);\n      return;\n    }\n    const decryptionShares = res.values;\n    log(\"decryptionShares\", decryptionShares);\n\n    // // sort the decryption shares by share index.  this is important when combining the shares.\n    // decryptionShares.sort((a, b) => a.shareIndex - b.shareIndex);\n\n    // // combine the decryption shares\n\n    // // set decryption shares bytes in wasm\n    // decryptionShares.forEach((s, idx) => {\n    //   wasmExports.set_share_indexes(idx, s.shareIndex);\n    //   const shareAsBytes = uint8arrayFromString(s.decryptionShare, \"base16\");\n    //   for (let i = 0; i < shareAsBytes.length; i++) {\n    //     wasmExports.set_decryption_shares_byte(i, idx, shareAsBytes[i]);\n    //   }\n    // });\n\n    // // set the public key set bytes in wasm\n    // const pkSetAsBytes = uint8arrayFromString(this.networkPubKeySet, \"base16\");\n    // wasmBlsSdkHelpers.set_mc_bytes(pkSetAsBytes);\n\n    // // set the ciphertext bytes\n    // const ciphertextAsBytes = uint8arrayFromString(toDecrypt, \"base16\");\n    // for (let i = 0; i < ciphertextAsBytes.length; i++) {\n    //   wasmExports.set_ct_byte(i, ciphertextAsBytes[i]);\n    // }\n\n    // const decrypted = wasmBlsSdkHelpers.combine_decryption_shares(\n    //   decryptionShares.length,\n    //   pkSetAsBytes.length,\n    //   ciphertextAsBytes.length\n    // );\n    // log('decrypted is ', uint8arrayToString(decrypted, 'base16'))\n\n    const decrypted = combineBlsDecryptionShares(\n      decryptionShares,\n      this.networkPubKeySet,\n      toDecrypt\n    );\n\n    return decrypted;\n  }\n\n  /**\n   * Securely save the association between access control conditions and something that you wish to decrypt\n   * @param {Object} params\n   * @param {Array.<AccessControlCondition>} params.accessControlConditions The access control conditions that the user must meet to obtain this signed token.  This could be posession of an NFT, for example.  You must pass either accessControlConditions or evmContractConditions or solRpcConditions or unifiedAccessControlConditions.\n   * @param {Array.<EVMContractCondition>} params.evmContractConditions  EVM Smart Contract access control conditions that the user must meet to obtain this signed token.  This could be posession of an NFT, for example.  This is different than accessControlConditions because accessControlConditions only supports a limited number of contract calls.  evmContractConditions supports any contract call.  You must pass either accessControlConditions or evmContractConditions or solRpcConditions or unifiedAccessControlConditions.\n   * @param {Array.<SolRpcCondition>} params.solRpcConditions  Solana RPC call conditions that the user must meet to obtain this signed token.  This could be posession of an NFT, for example.\n   * @param {Array.<AccessControlCondition|EVMContractCondition|SolRpcCondition>} params.unifiedAccessControlConditions  An array of unified access control conditions.  You may use AccessControlCondition, EVMContractCondition, or SolRpcCondition objects in this array, but make sure you add a conditionType for each one.  You must pass either accessControlConditions or evmContractConditions or solRpcConditions or unifiedAccessControlConditions.\n   * @param {string} params.chain The chain name of the chain that you are querying.  See ALL_LIT_CHAINS for currently supported chains.\n   * @param {AuthSig} params.authSig The authentication signature that proves that the user owns the crypto wallet address meets the access control conditions\n   * @param {Uint8Array} params.symmetricKey The symmetric encryption key that was used to encrypt the locked content inside the LIT as a Uint8Array.  You should use zipAndEncryptString or zipAndEncryptFiles to get this encryption key.  This key will be hashed and the hash will be sent to the LIT nodes.  You must pass either symmetricKey or encryptedSymmetricKey.\n   * @param {Uint8Array} params.encryptedSymmetricKey The encrypted symmetric key of the item you with to update.  You must pass either symmetricKey or encryptedSymmetricKey.\n   * @param {boolean} params.permanent Whether or not the access control condition should be saved permanently.  If false, the access control conditions will be updateable by the creator.  If you don't pass this param, it's set to true by default.\n   * @returns {Uint8Array} The symmetricKey parameter that has been encrypted with the network public key.  Save this - you will need it to decrypt the content in the future.\n   */\n\n  async saveEncryptionKey({\n    accessControlConditions,\n    evmContractConditions,\n    solRpcConditions,\n    unifiedAccessControlConditions,\n    chain,\n    authSig,\n    symmetricKey,\n    encryptedSymmetricKey,\n    permanant,\n    permanent = true,\n    sessionSigs,\n  }) {\n    log(\"LitNodeClient.saveEncryptionKey\");\n\n    if (!this.ready) {\n      throwError({\n        message:\n          \"LitNodeClient is not ready.  Please call await litNodeClient.connect() first.\",\n        name: \"LitNodeClientNotReadyError\",\n        errorCode: \"lit_node_client_not_ready\",\n      });\n    }\n\n    // -- validate\n    if (\n      accessControlConditions &&\n      !checkType({\n        value: accessControlConditions,\n        allowedTypes: [\"Array\"],\n        paramName: \"accessControlConditions\",\n        functionName: \"saveEncryptionKey\",\n      })\n    )\n      return;\n    if (\n      evmContractConditions &&\n      !checkType({\n        value: evmContractConditions,\n        allowedTypes: [\"Array\"],\n        paramName: \"evmContractConditions\",\n        functionName: \"saveEncryptionKey\",\n      })\n    )\n      return;\n    if (\n      solRpcConditions &&\n      !checkType({\n        value: solRpcConditions,\n        allowedTypes: [\"Array\"],\n        paramName: \"solRpcConditions\",\n        functionName: \"saveEncryptionKey\",\n      })\n    )\n      return;\n    if (\n      unifiedAccessControlConditions &&\n      !checkType({\n        value: unifiedAccessControlConditions,\n        allowedTypes: [\"Array\"],\n        paramName: \"unifiedAccessControlConditions\",\n        functionName: \"saveEncryptionKey\",\n      })\n    )\n      return;\n\n    if (\n      authSig &&\n      !checkType({\n        value: authSig,\n        allowedTypes: [\"Object\"],\n        paramName: \"authSig\",\n        functionName: \"saveEncryptionKey\",\n      })\n    )\n      return;\n\n    if (\n      sessionSigs &&\n      !checkType({\n        value: sessionSigs,\n        allowedTypes: [\"Object\"],\n        paramName: \"sessionSigs\",\n        functionName: \"saveEncryptionKey\",\n      })\n    )\n      return;\n    if (!sessionSigs && !authSig) {\n      throwError({\n        message: \"You must pass either authSig or sessionSigs\",\n        name: \"InvalidArgumentException\",\n        errorCode: \"invalid_argument\",\n      });\n      return;\n    }\n    if (\n      authSig &&\n      !checkIfAuthSigRequiresChainParam(authSig, chain, \"saveEncryptionKey\")\n    )\n      return;\n    if (\n      symmetricKey &&\n      !checkType({\n        value: symmetricKey,\n        allowedTypes: [\"Uint8Array\"],\n        paramName: \"symmetricKey\",\n        functionName: \"saveEncryptionKey\",\n      })\n    )\n      return;\n    if (\n      encryptedSymmetricKey &&\n      !checkType({\n        value: encryptedSymmetricKey,\n        allowedTypes: [\"Uint8Array\"],\n        paramName: \"encryptedSymmetricKey\",\n        functionName: \"saveEncryptionKey\",\n      })\n    )\n      return;\n\n    // to fix spelling mistake\n    if (typeof permanant !== \"undefined\") {\n      permanent = permanant;\n    }\n\n    if (\n      (!symmetricKey || symmetricKey == \"\") &&\n      (!encryptedSymmetricKey || encryptedSymmetricKey == \"\")\n    ) {\n      throw new Error(\n        \"symmetricKey and encryptedSymmetricKey are blank.  You must pass one or the other\"\n      );\n    }\n\n    if (\n      (!accessControlConditions || accessControlConditions.length == 0) &&\n      (!evmContractConditions || evmContractConditions.length == 0) &&\n      (!solRpcConditions || solRpcConditions.length == 0) &&\n      (!unifiedAccessControlConditions ||\n        unifiedAccessControlConditions.length == 0)\n    ) {\n      throw new Error(\n        \"accessControlConditions and evmContractConditions and solRpcConditions and unifiedAccessControlConditions are blank\"\n      );\n    }\n\n    // encrypt with network pubkey\n    let encryptedKey;\n    if (encryptedSymmetricKey) {\n      encryptedKey = encryptedSymmetricKey;\n    } else {\n      encryptedKey = wasmBlsSdkHelpers.encrypt(\n        uint8arrayFromString(this.subnetPubKey, \"base16\"),\n        symmetricKey\n      );\n      log(\n        \"symmetric key encrypted with LIT network key: \",\n        uint8arrayToString(encryptedKey, \"base16\")\n      );\n    }\n    // hash the encrypted pubkey\n    const hashOfKey = await crypto.subtle.digest(\"SHA-256\", encryptedKey);\n    const hashOfKeyStr = uint8arrayToString(\n      new Uint8Array(hashOfKey),\n      \"base16\"\n    );\n\n    // hash the access control conditions\n    let hashOfConditions;\n    // hash the access control conditions\n    if (accessControlConditions) {\n      hashOfConditions = await hashAccessControlConditions(\n        accessControlConditions\n      );\n    } else if (evmContractConditions) {\n      hashOfConditions = await hashEVMContractConditions(evmContractConditions);\n    } else if (solRpcConditions) {\n      hashOfConditions = await hashSolRpcConditions(solRpcConditions);\n    } else if (unifiedAccessControlConditions) {\n      hashOfConditions = await hashUnifiedAccessControlConditions(\n        unifiedAccessControlConditions\n      );\n    } else {\n      throwError({\n        message: `You must provide either accessControlConditions or evmContractConditions or solRpcConditions or unifiedAccessControlConditions`,\n        name: \"InvalidArgumentException\",\n        errorCode: \"invalid_argument\",\n      });\n    }\n\n    const hashOfConditionsStr = uint8arrayToString(\n      new Uint8Array(hashOfConditions),\n      \"base16\"\n    );\n\n    // create access control conditions on lit nodes\n    const nodePromises = [];\n    for (const url of this.connectedNodes) {\n      let sigToPassToNode = authSig;\n      if (sessionSigs) {\n        // find the sessionSig for this node\n        sigToPassToNode = sessionSigs[url];\n        if (!sigToPassToNode) {\n          throwError({\n            message: `You passed sessionSigs but we could not find session sig for node ${url}`,\n            name: \"InvalidArgumentException\",\n            errorCode: \"invalid_argument\",\n          });\n        }\n      }\n      nodePromises.push(\n        this.storeEncryptionConditionWithNode({\n          url,\n          key: hashOfKeyStr,\n          val: hashOfConditionsStr,\n          authSig: sigToPassToNode,\n          chain,\n          permanent: permanent ? 1 : 0,\n        })\n      );\n    }\n\n    const res = await this.handleNodePromises(nodePromises);\n    if (res.success === false) {\n      this.throwNodeError(res);\n      return;\n    }\n\n    return encryptedKey;\n  }\n\n  /**\n   * Signs a message with Lit threshold ECDSA algorithms.\n   * @param {Object} params\n   * @param {string} params.message The message to be signed - note this message is not currently converted to a digest!!!!!\n   * @param {string} params.chain The chain name of the chain that this contract is deployed on.  See LIT_CHAINS for currently supported chains.\n   * @returns {Object} JSON structure with signed message, signature & public key.\n   */\n  async signWithEcdsa({ message, chain }) {\n    // ask each node to decrypt the content\n    const nodePromises = [];\n    for (const url of this.connectedNodes) {\n      nodePromises.push(\n        this.signECDSA({\n          url,\n          message,\n          chain,\n          iat: 0,\n          exp: 0,\n        })\n      );\n    }\n\n    try {\n      const share_data = await Promise.all(nodePromises);\n      // R_x & R_y values can come from any node (they will be different per node), and will generate a valid signature\n      const R_x = share_data[0].local_x;\n      const R_y = share_data[0].local_y;\n      // the public key can come from any node - it obviously will be identical from each node\n      const public_key = share_data[0].public_key;\n      const valid_shares = share_data.map((s) => s.signature_share);\n      const shares = JSON.stringify(valid_shares);\n      await wasmECDSA.initWasmEcdsaSdk(); // init WASM\n      const signature = wasmECDSA.combine_signature(R_x, R_y, shares);\n      log(\"raw ecdsav sig\", signature);\n      return signature;\n    } catch (e) {\n      log(\"Error - signed_ecdsa_messages \");\n      const signed_ecdsa_message = nodePromises[0];\n      return signed_ecdsa_message;\n    }\n    return throwError(\"some other error?\");\n  }\n\n  /**\n   * Validates a condition, and then signs the condition if the validation returns true.   Before calling this function, you must know the on chain conditions that you wish to validate.\n   * @param {Object} params\n   * @param {Array.<AccessControlCondition>} params.accessControlConditions The on chain control conditions that are to be evaluated and - if valid -  signed.\n   * @param {string} params.chain The chain name of the chain that you are querying.  See ALL_LIT_CHAINS for currently supported chains.\n   * @param {AuthSig} params.authSig The authentication signature that proves that the user owns the crypto wallet address that seeks to evaluate conditions.\n   * @returns {Object} JSON structure with signed message, signature & public key..\n   */\n  async validate_and_sign_ecdsa({ accessControlConditions, chain, auth_sig }) {\n    if (!this.ready) {\n      throwError({\n        message:\n          \"LitNodeClient is not ready.  Please call await litNodeClient.connect() first.\",\n        name: \"LitNodeClientNotReadyError\",\n        errorCode: \"lit_node_client_not_ready\",\n      });\n    }\n\n    // we need to send jwt params iat (issued at) and exp (expiration)\n    // because the nodes may have different wall clock times\n    // the nodes will verify that these params are withing a grace period\n    const now = Date.now();\n    const iat = Math.floor(now / 1000);\n    const exp = iat + 12 * 60 * 60; // 12 hours in seconds\n\n    let formattedAccessControlConditions;\n    let formattedEVMContractConditions;\n    let formattedSolRpcConditions;\n    if (accessControlConditions) {\n      formattedAccessControlConditions = accessControlConditions.map((c) =>\n        canonicalAccessControlConditionFormatter(c)\n      );\n      log(\n        \"formattedAccessControlConditions\",\n        JSON.stringify(formattedAccessControlConditions)\n      );\n    }\n    // else if (evmContractConditions) {\n    //   formattedEVMContractConditions = evmContractConditions.map((c) =>\n    //     canonicalEVMContractConditionFormatter(c)\n    //   );\n    //   log(\n    //     \"formattedEVMContractConditions\",\n    //     JSON.stringify(formattedEVMContractConditions)\n    //   );\n    // } else if (solRpcConditions) {\n    //   formattedSolRpcConditions = solRpcConditions.map((c) =>\n    //     canonicalSolRpcConditionFormatter(c)\n    //   );\n    //   log(\n    //     \"formattedSolRpcConditions\",\n    //     JSON.stringify(formattedSolRpcConditions)\n    //   );\n    // }\n    else {\n      throwError({\n        message: `You must provide either accessControlConditions or evmContractConditions or solRpcConditions`,\n        name: \"InvalidArgumentException\",\n        errorCode: \"invalid_argument\",\n      });\n    }\n\n    // ask each node to sign the content\n    const nodePromises = [];\n    for (const url of this.connectedNodes) {\n      nodePromises.push(\n        this.sign_condition_ecdsa({\n          url,\n          accessControlConditions: formattedAccessControlConditions,\n          evmContractConditions: formattedEVMContractConditions,\n          solRpcConditions: formattedSolRpcConditions,\n          auth_sig,\n          chain,\n          iat,\n          exp,\n        })\n      );\n    }\n\n    try {\n      const share_data = await Promise.all(nodePromises);\n\n      if (share_data[0].result == \"failure\") return \"Condition Failed\";\n\n      // R_x & R_y values can come from any node (they will be different per node), and will generate a valid signature\n      const R_x = share_data[0].local_x;\n      const R_y = share_data[0].local_y;\n\n      // the public key can come from any node - it obviously will be identical from each node\n      const public_key = share_data[0].public_key;\n      const valid_shares = share_data.map((s) => s.signature_share);\n      const shares = JSON.stringify(valid_shares);\n      await wasmECDSA.initWasmEcdsaSdk(); // init WASM\n      const signature = wasmECDSA.combine_signature(R_x, R_y, shares);\n      log(\"raw ecdsa sig\", signature);\n      return signature;\n    } catch (e) {\n      log(\"Error - signed_ecdsa_messages - \", e);\n      const signed_ecdsa_message = nodePromises[0];\n      return signed_ecdsa_message;\n    }\n  }\n\n  async storeSigningConditionWithNode({\n    url,\n    key,\n    val,\n    authSig,\n    chain,\n    permanent,\n  }) {\n    log(\"storeSigningConditionWithNode\");\n    const urlWithPath = `${url}/web/signing/store`;\n    const data = {\n      key,\n      val,\n      authSig,\n      chain,\n      permanant: permanent,\n    };\n    return await this.sendCommandToNode({ url: urlWithPath, data });\n  }\n\n  async storeEncryptionConditionWithNode({\n    url,\n    key,\n    val,\n    authSig,\n    chain,\n    permanent,\n  }) {\n    log(\"storeEncryptionConditionWithNode\");\n    const urlWithPath = `${url}/web/encryption/store`;\n    const data = {\n      key,\n      val,\n      authSig,\n      chain,\n      permanant: permanent,\n    };\n    return await this.sendCommandToNode({ url: urlWithPath, data });\n  }\n\n  async getChainDataSigningShare({ url, callRequests, chain, iat, exp }) {\n    log(\"getChainDataSigningShare\");\n    const urlWithPath = `${url}/web/signing/sign_chain_data`;\n    const data = {\n      callRequests,\n      chain,\n      iat,\n      exp,\n    };\n    return await this.sendCommandToNode({ url: urlWithPath, data });\n  }\n\n  async getSigningShare({\n    url,\n    accessControlConditions,\n    evmContractConditions,\n    solRpcConditions,\n    unifiedAccessControlConditions,\n    resourceId,\n    authSig,\n    chain,\n    iat,\n    exp,\n  }) {\n    log(\"getSigningShare\");\n    const urlWithPath = `${url}/web/signing/retrieve`;\n    const data = {\n      accessControlConditions,\n      evmContractConditions,\n      solRpcConditions,\n      unifiedAccessControlConditions,\n      resourceId,\n      authSig,\n      chain,\n      iat,\n      exp,\n    };\n    return await this.sendCommandToNode({ url: urlWithPath, data });\n  }\n\n  async getDecryptionShare({\n    url,\n    accessControlConditions,\n    evmContractConditions,\n    solRpcConditions,\n    unifiedAccessControlConditions,\n    toDecrypt,\n    authSig,\n    chain,\n  }) {\n    log(\"getDecryptionShare\");\n    const urlWithPath = `${url}/web/encryption/retrieve`;\n    const data = {\n      accessControlConditions,\n      evmContractConditions,\n      solRpcConditions,\n      unifiedAccessControlConditions,\n      toDecrypt,\n      authSig,\n      chain,\n    };\n    return await this.sendCommandToNode({ url: urlWithPath, data });\n  }\n\n  async getJsExecutionShares({\n    url,\n    code,\n    ipfsId,\n    authSig,\n    jsParams,\n    authMethods,\n  }) {\n    log(\"getJsExecutionShares\");\n    const urlWithPath = `${url}/web/execute`;\n    const data = {\n      code,\n      ipfsId,\n      authSig,\n      jsParams,\n      authMethods,\n    };\n    return await this.sendCommandToNode({ url: urlWithPath, data });\n  }\n\n  async handshakeWithSgx({ url }) {\n    const urlWithPath = `${url}/web/handshake`;\n    log(`handshakeWithSgx ${urlWithPath}`);\n    const data = {\n      clientPublicKey: \"test\",\n    };\n    return await this.sendCommandToNode({ url: urlWithPath, data });\n  }\n\n  sendCommandToNode({ url, data }) {\n    log(`sendCommandToNode with url ${url} and data`, data);\n    return fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"lit-js-sdk-version\": version,\n      },\n      body: JSON.stringify(data),\n    }).then(async (response) => {\n      const isJson = response.headers\n        .get(\"content-type\")\n        ?.includes(\"application/json\");\n      const data = isJson ? await response.json() : null;\n\n      if (!response.ok) {\n        // get error message from body or default to response status\n        const error = data || response.status;\n        return Promise.reject(error);\n      }\n\n      return data;\n    });\n  }\n\n  async handleNodePromises(promises) {\n    const responses = await Promise.allSettled(promises);\n    log(\"responses\", responses);\n    const successes = responses.filter((r) => r.status === \"fulfilled\");\n    if (successes.length >= this.config.minNodeCount) {\n      return {\n        success: true,\n        values: successes.map((r) => r.value),\n      };\n    }\n\n    // if we're here, then we did not succeed.  time to handle and report errors.\n    const rejected = responses.filter((r) => r.status === \"rejected\");\n    const mostCommonError = JSON.parse(\n      mostCommonString(rejected.map((r) => JSON.stringify(r.reason)))\n    );\n    log(`most common error: ${JSON.stringify(mostCommonError)}`);\n    return {\n      success: false,\n      error: mostCommonError,\n    };\n  }\n\n  throwNodeError(res) {\n    if (res.error && res.error.errorCode) {\n      if (\n        res.error.errorCode === \"not_authorized\" &&\n        this.config.alertWhenUnauthorized\n      ) {\n        alert(\"You are not authorized to access to this content\");\n      }\n      throwError({ ...res.error, name: \"NodeError\" });\n    } else {\n      throwError({\n        message: `There was an error getting the signing shares from the nodes`,\n        name: \"UnknownError\",\n        errorCode: \"unknown_error\",\n      });\n    }\n  }\n\n  async signECDSA({ url, message, chain, iat, exp }) {\n    log(\"sign_message_ecdsa\");\n    const urlWithPath = `${url}/web/signing/sign_message_ecdsa`;\n    const data = {\n      message,\n      chain,\n      iat,\n      exp,\n    };\n    return await this.sendCommandToNode({ url: urlWithPath, data });\n  }\n\n  async sign_condition_ecdsa({\n    url,\n    accessControlConditions,\n    evmContractConditions,\n    solRpcConditions,\n    auth_sig,\n    chain,\n    iat,\n    exp,\n  }) {\n    log(\"sign_condition_ecdsa\");\n    const urlWithPath = `${url}/web/signing/sign_condition_ecdsa`;\n    const data = {\n      access_control_conditions: accessControlConditions,\n      evmContractConditions,\n      solRpcConditions,\n      auth_sig,\n      chain,\n      iat,\n      exp,\n    };\n    return await this.sendCommandToNode({ url: urlWithPath, data });\n  }\n\n  /**\n   * Connect to the LIT nodes.\n   * @returns {Promise} A promise that resolves when the nodes are connected.\n   */\n  connect() {\n    // handshake with each node\n    for (const url of this.config.bootstrapUrls) {\n      this.handshakeWithSgx({ url }).then((resp) => {\n        this.connectedNodes.add(url);\n        this.serverKeys[url] = {\n          serverPubKey: resp.serverPublicKey,\n          subnetPubKey: resp.subnetPublicKey,\n          networkPubKey: resp.networkPublicKey,\n          networkPubKeySet: resp.networkPublicKeySet,\n        };\n      });\n    }\n\n    return new Promise((resolve) => {\n      const interval = setInterval(() => {\n        if (Object.keys(this.serverKeys).length >= this.config.minNodeCount) {\n          clearInterval(interval);\n          // pick the most common public keys for the subnet and network from the bunch, in case some evil node returned a bad key\n          this.subnetPubKey = mostCommonString(\n            Object.values(this.serverKeys).map(\n              (keysFromSingleNode) => keysFromSingleNode.subnetPubKey\n            )\n          );\n          this.networkPubKey = mostCommonString(\n            Object.values(this.serverKeys).map(\n              (keysFromSingleNode) => keysFromSingleNode.networkPubKey\n            )\n          );\n          this.networkPubKeySet = mostCommonString(\n            Object.values(this.serverKeys).map(\n              (keysFromSingleNode) => keysFromSingleNode.networkPubKeySet\n            )\n          );\n          this.ready = true;\n          log(\"lit is ready\");\n          if (typeof document !== \"undefined\") {\n            document.dispatchEvent(new Event(\"lit-ready\"));\n          }\n\n          resolve();\n        }\n      }, 500);\n    });\n  }\n}\n","// Generated by genversion.\nexport const version = '1.2.24'\n","import \"regenerator-runtime/runtime\";\n\n// polyfill buffer if needed\nimport { Buffer as buf } from \"buffer/\";\nif (typeof Buffer === \"undefined\" || !Buffer) {\n  globalThis.Buffer = buf;\n}\n\n// add window global on nodejs\nimport {\n  listenForChildFrameMessages,\n  listenForFrameParentMessages,\n  inIframe,\n} from \"./utils/frameComms\";\n\nif (typeof window !== \"undefined\") {\n  // only run this in browser\n  if (inIframe()) {\n    listenForFrameParentMessages();\n  } else {\n    listenForChildFrameMessages();\n  }\n}\n\nimport {\n  encryptString,\n  decryptString,\n  zipAndEncryptString,\n  zipAndEncryptFiles,\n  encryptZip,\n  decryptZip,\n  encryptFile,\n  decryptFile,\n  createHtmlLIT,\n  toggleLock,\n  unlockLitWithKey,\n  verifyJwt,\n  encryptFileAndZipWithMetadata,\n  decryptZipFileWithMetadata,\n  humanizeAccessControlConditions,\n  getTokenList,\n  checkAndSignAuthMessage,\n  getSessionSigs,\n} from \"./utils/lit\";\n\nimport {\n  connectWeb3,\n  disconnectWeb3,\n  mintLIT,\n  signAndSaveAuthMessage,\n  findLITs,\n  sendLIT,\n  decimalPlaces,\n  lookupNameServiceAddress,\n  encodeCallData,\n  decodeCallResult,\n  signMessageAsync,\n} from \"./utils/eth\";\n\nimport {\n  decryptWithPrivKey,\n  encryptWithPubKey,\n  canonicalAccessControlConditionFormatter,\n  canonicalEVMContractConditionFormatter,\n  canonicalUnifiedAccessControlConditionFormatter,\n  hashAccessControlConditions,\n  hashEVMContractConditions,\n  hashUnifiedAccessControlConditions,\n  hashResourceId,\n  encryptWithSymmetricKey,\n  decryptWithSymmetricKey,\n  encryptWithBlsPubkey,\n  generateSymmetricKey,\n  importSymmetricKey,\n  hashResourceIdForSigning,\n  hashEncryptionKey,\n} from \"./utils/crypto\";\n\nimport {\n  fileToDataUrl,\n  injectViewerIFrame,\n  downloadFile,\n  uint8arrayFromString,\n  uint8arrayToString,\n  blobToBase64String,\n  base64StringToBlob,\n} from \"./utils/browser\";\n\nimport { LIT_CHAINS, LIT_SVM_CHAINS, ALL_LIT_CHAINS } from \"./lib/constants\";\nimport { printError, log } from \"./lib/utils\";\nimport { initWasmBlsSdk, wasmBlsSdkHelpers } from \"./lib/bls-sdk.js\";\nimport * as wasmECDSA from \"./lib/ecdsa-sdk\";\n\nimport LitNodeClient from \"./utils/litNodeClient\";\n\nimport { litJsSdkLoadedInALIT } from \"./utils/init\";\n\nimport { version } from \"./version\";\n\ninitWasmBlsSdk().then((exports) => {\n  globalThis.wasmExports = exports;\n  log(\"BLS wasmExports loaded\");\n});\n\nwasmECDSA.initWasmEcdsaSdk().then(() => {\n  log(\"wasmECDSA loaded\");\n});\n\nconst functions = {\n  encryptString,\n  decryptString,\n  zipAndEncryptString,\n  zipAndEncryptFiles,\n  encryptZip,\n  decryptZip,\n  encryptFile,\n  decryptFile,\n  connectWeb3,\n  disconnectWeb3,\n  checkAndSignAuthMessage,\n  signAndSaveAuthMessage,\n  createHtmlLIT,\n  mintLIT,\n  toggleLock,\n  encryptWithSymmetricKey,\n  decryptWithSymmetricKey,\n  LIT_CHAINS,\n  LIT_SVM_CHAINS,\n  ALL_LIT_CHAINS,\n  LitNodeClient,\n  encryptWithPubKey,\n  decryptWithPrivKey,\n  fileToDataUrl,\n  findLITs,\n  sendLIT,\n  litJsSdkLoadedInALIT,\n  unlockLitWithKey,\n  injectViewerIFrame,\n  printError,\n  canonicalAccessControlConditionFormatter,\n  canonicalEVMContractConditionFormatter,\n  canonicalUnifiedAccessControlConditionFormatter,\n  verifyJwt,\n  encryptFileAndZipWithMetadata,\n  hashAccessControlConditions,\n  hashEVMContractConditions,\n  hashUnifiedAccessControlConditions,\n  hashResourceId,\n  decryptZipFileWithMetadata,\n  downloadFile,\n  decimalPlaces,\n  humanizeAccessControlConditions,\n  lookupNameServiceAddress,\n  getTokenList,\n  version,\n  encodeCallData,\n  decodeCallResult,\n  uint8arrayFromString,\n  uint8arrayToString,\n  signMessageAsync,\n  wasmBlsSdkHelpers,\n  wasmECDSA,\n  initWasmBlsSdk,\n  encryptWithBlsPubkey,\n  generateSymmetricKey,\n  importSymmetricKey,\n  getSessionSigs,\n  hashResourceIdForSigning,\n  blobToBase64String,\n  base64StringToBlob,\n  hashEncryptionKey,\n};\n\nmodule.exports = functions;\n","import { unlockLitWithKey } from \"./lit\";\n\nexport const listenForChildFrameMessages = async () => {\n  console.log(\"calling listenForChildFrameMessages from \" + window.origin);\n  // listen for requests from child frames\n  window.addEventListener(\n    \"message\",\n    async (event) => {\n      // console.log('onMessage in sdk: ', event)\n\n      let childFrameThatSentMessageIndex = false;\n      for (let i = 0; i < frames.length; i++) {\n        if (frames[i] === event.source) {\n          childFrameThatSentMessageIndex = i;\n        }\n      }\n\n      if (childFrameThatSentMessageIndex !== false) {\n        console.log(\"onMessage in parent: \", event);\n\n        const { command, params } = event.data;\n        if (command === \"LIT_SYN\") {\n          window.frames[childFrameThatSentMessageIndex].postMessage(\n            { response: \"LIT_ACK\" },\n            \"*\"\n          );\n          return;\n        }\n        //       if (command === 'signAndGetEncryptionKey') {\n        //         authSig = await checkAndSignAuthMessage({ chain: params.chain })\n        //         if (authSig.errorCode && authSig.errorCode === 'wrong_chain') {\n        //           alert('You are connected to the wrong blockchain.  Please switch your metamask to ' + params.chain)\n        //         }\n        //\n        //         // get the merkle proof\n        //         const { balanceStorageSlot } = LIT_CHAINS[params.chain]\n        //         try {\n        //           merkleProof = await getMerkleProof({ tokenAddress: params.tokenAddress, balanceStorageSlot, tokenId: params.tokenId })\n        //         } catch (e) {\n        //           console.log(e)\n        //           alert('Error - could not obtain merkle proof.  Some nodes do not support this operation yet.  Please try another ETH node.')\n        //           return\n        //         }\n        //         const encryptionKey = await window.litNodeClient.getEncryptionKey({\n        //           ...params, authSig, merkleProof\n        //         })\n        //         window.frames[childFrameThatSentMessageIndex].postMessage({ respondingToCommand: command, encryptionKey }, '*')\n        //         return\n        //       }\n        if (event.data.target === \"LitNodeClient\") {\n          // forward this on to the nodes\n          if (command === \"getEncryptionKey\") {\n            const encryptionKey = await window.litNodeClient.getEncryptionKey({\n              ...params,\n            });\n            window.frames[childFrameThatSentMessageIndex].postMessage(\n              { respondingToCommand: command, encryptionKey },\n              \"*\"\n            );\n          }\n        }\n      }\n    },\n    false\n  );\n};\n\nexport const listenForFrameParentMessages = async () => {\n  console.log(\"calling listenForFrameParentMessages from \" + window.origin);\n  // listen for requests from child frames\n  window.addEventListener(\n    \"message\",\n    async (event) => {\n      const messageIsFromFrameParent = event.source === window.parent;\n\n      if (messageIsFromFrameParent) {\n        console.log(\"onMessage in frame: \", event);\n      }\n\n      // console.log('messageIsFromFrameParent: ', messageIsFromFrameParent)\n\n      if (messageIsFromFrameParent) {\n        const { response, respondingToCommand } = event.data;\n        if (response === \"LIT_ACK\") {\n          window.useLitPostMessageProxy = true;\n          if (typeof document !== \"undefined\") {\n            document.dispatchEvent(new Event(\"lit-ready\"));\n          }\n          return;\n        }\n        if (respondingToCommand === \"getEncryptionKey\") {\n          const { encryptionKey } = event.data;\n          unlockLitWithKey({ symmetricKey: encryptionKey });\n        }\n      }\n    },\n    false\n  );\n};\n\nexport const inIframe = () => {\n  try {\n    return window.self !== window.top;\n  } catch (e) {\n    return true;\n  }\n};\n","import { sendMessageToFrameParent } from \"./lit\";\nimport LitNodeClient from \"./litNodeClient\";\n\nexport const litJsSdkLoadedInALIT = () => {\n  try {\n    window.localStorage.getItem(\"test\");\n  } catch (e) {\n    console.log(\n      \"Could not use localstorage in a Lit. This usually means we are stuck in the opensea sandbox.\"\n    );\n    window.sandboxed = true;\n    setTimeout(function () {\n      if (typeof document !== \"undefined\") {\n        document.dispatchEvent(new Event(\"lit-ready\"));\n      }\n    }, 1000);\n    return;\n  }\n  sendMessageToFrameParent({ command: \"LIT_SYN\" }, \"*\");\n  setTimeout(function () {\n    if (!window.useLitPostMessageProxy) {\n      // console.log(\n      //   \"inside lit - no parent frame lit node connection.  connecting ourselves.\"\n      // );\n      // we're on our own with no parent frame.  initiate our own connection to lit nodes\n      const litNodeClient = new LitNodeClient();\n      litNodeClient.connect();\n      window.litNodeClient = litNodeClient;\n    } else {\n      // console.log(\n      //   \"inside lit - parent frame is connected to lit nodes.  using that.\"\n      // );\n    }\n  }, 1000);\n};\n","export const version = \"logger/5.7.0\";\n","\"use strict\";\n\nlet _permanentCensorErrors = false;\nlet _censorErrors = false;\n\nconst LogLevels: { [ name: string ]: number } = { debug: 1, \"default\": 2, info: 2, warning: 3, error: 4, off: 5 };\nlet _logLevel = LogLevels[\"default\"];\n\nimport { version } from \"./_version\";\n\nlet _globalLogger: Logger = null;\n\nfunction _checkNormalize(): string {\n    try {\n        const missing: Array<string> = [ ];\n\n        // Make sure all forms of normalization are supported\n        [\"NFD\", \"NFC\", \"NFKD\", \"NFKC\"].forEach((form) => {\n            try {\n                if (\"test\".normalize(form) !== \"test\") {\n                    throw new Error(\"bad normalize\");\n                };\n            } catch(error) {\n                missing.push(form);\n            }\n        });\n\n        if (missing.length) {\n            throw new Error(\"missing \" + missing.join(\", \"));\n        }\n\n        if (String.fromCharCode(0xe9).normalize(\"NFD\") !== String.fromCharCode(0x65, 0x0301)) {\n            throw new Error(\"broken implementation\")\n        }\n    } catch (error) {\n        return error.message;\n    }\n\n    return null;\n}\n\nconst _normalizeError = _checkNormalize();\n\nexport enum LogLevel {\n    DEBUG    = \"DEBUG\",\n    INFO     = \"INFO\",\n    WARNING  = \"WARNING\",\n    ERROR    = \"ERROR\",\n    OFF      = \"OFF\"\n}\n\n\nexport enum ErrorCode {\n\n    ///////////////////\n    // Generic Errors\n\n    // Unknown Error\n    UNKNOWN_ERROR = \"UNKNOWN_ERROR\",\n\n    // Not Implemented\n    NOT_IMPLEMENTED = \"NOT_IMPLEMENTED\",\n\n    // Unsupported Operation\n    //   - operation\n    UNSUPPORTED_OPERATION = \"UNSUPPORTED_OPERATION\",\n\n    // Network Error (i.e. Ethereum Network, such as an invalid chain ID)\n    //   - event (\"noNetwork\" is not re-thrown in provider.ready; otherwise thrown)\n    NETWORK_ERROR = \"NETWORK_ERROR\",\n\n    // Some sort of bad response from the server\n    SERVER_ERROR = \"SERVER_ERROR\",\n\n    // Timeout\n    TIMEOUT = \"TIMEOUT\",\n\n    ///////////////////\n    // Operational  Errors\n\n    // Buffer Overrun\n    BUFFER_OVERRUN = \"BUFFER_OVERRUN\",\n\n    // Numeric Fault\n    //   - operation: the operation being executed\n    //   - fault: the reason this faulted\n    NUMERIC_FAULT = \"NUMERIC_FAULT\",\n\n\n    ///////////////////\n    // Argument Errors\n\n    // Missing new operator to an object\n    //  - name: The name of the class\n    MISSING_NEW = \"MISSING_NEW\",\n\n    // Invalid argument (e.g. value is incompatible with type) to a function:\n    //   - argument: The argument name that was invalid\n    //   - value: The value of the argument\n    INVALID_ARGUMENT = \"INVALID_ARGUMENT\",\n\n    // Missing argument to a function:\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    MISSING_ARGUMENT = \"MISSING_ARGUMENT\",\n\n    // Too many arguments\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    UNEXPECTED_ARGUMENT = \"UNEXPECTED_ARGUMENT\",\n\n\n    ///////////////////\n    // Blockchain Errors\n\n    // Call exception\n    //  - transaction: the transaction\n    //  - address?: the contract address\n    //  - args?: The arguments passed into the function\n    //  - method?: The Solidity method signature\n    //  - errorSignature?: The EIP848 error signature\n    //  - errorArgs?: The EIP848 error parameters\n    //  - reason: The reason (only for EIP848 \"Error(string)\")\n    CALL_EXCEPTION = \"CALL_EXCEPTION\",\n\n    // Insufficient funds (< value + gasLimit * gasPrice)\n    //   - transaction: the transaction attempted\n    INSUFFICIENT_FUNDS = \"INSUFFICIENT_FUNDS\",\n\n    // Nonce has already been used\n    //   - transaction: the transaction attempted\n    NONCE_EXPIRED = \"NONCE_EXPIRED\",\n\n    // The replacement fee for the transaction is too low\n    //   - transaction: the transaction attempted\n    REPLACEMENT_UNDERPRICED = \"REPLACEMENT_UNDERPRICED\",\n\n    // The gas limit could not be estimated\n    //   - transaction: the transaction passed to estimateGas\n    UNPREDICTABLE_GAS_LIMIT = \"UNPREDICTABLE_GAS_LIMIT\",\n\n    // The transaction was replaced by one with a higher gas price\n    //   - reason: \"cancelled\", \"replaced\" or \"repriced\"\n    //   - cancelled: true if reason == \"cancelled\" or reason == \"replaced\")\n    //   - hash: original transaction hash\n    //   - replacement: the full TransactionsResponse for the replacement\n    //   - receipt: the receipt of the replacement\n    TRANSACTION_REPLACED = \"TRANSACTION_REPLACED\",\n\n\n    ///////////////////\n    // Interaction Errors\n\n    // The user rejected the action, such as signing a message or sending\n    // a transaction\n    ACTION_REJECTED = \"ACTION_REJECTED\",\n};\n\nconst HEX = \"0123456789abcdef\";\n\nexport class Logger {\n    readonly version: string;\n\n    static errors = ErrorCode;\n\n    static levels = LogLevel;\n\n    constructor(version: string) {\n        Object.defineProperty(this, \"version\", {\n            enumerable: true,\n            value: version,\n            writable: false\n        });\n    }\n\n    _log(logLevel: LogLevel, args: Array<any>): void {\n        const level = logLevel.toLowerCase();\n        if (LogLevels[level] == null) {\n            this.throwArgumentError(\"invalid log level name\", \"logLevel\", logLevel);\n        }\n        if (_logLevel > LogLevels[level]) { return; }\n        console.log.apply(console, args);\n    }\n\n    debug(...args: Array<any>): void {\n        this._log(Logger.levels.DEBUG, args);\n    }\n\n    info(...args: Array<any>): void {\n        this._log(Logger.levels.INFO, args);\n    }\n\n    warn(...args: Array<any>): void {\n        this._log(Logger.levels.WARNING, args);\n    }\n\n    makeError(message: string, code?: ErrorCode, params?: any): Error {\n        // Errors are being censored\n        if (_censorErrors) {\n            return this.makeError(\"censored error\", code, { });\n        }\n\n        if (!code) { code = Logger.errors.UNKNOWN_ERROR; }\n        if (!params) { params = {}; }\n\n        const messageDetails: Array<string> = [];\n        Object.keys(params).forEach((key) => {\n            const value = params[key];\n            try {\n                if (value instanceof Uint8Array) {\n                    let hex = \"\";\n                    for (let i = 0; i < value.length; i++) {\n                      hex += HEX[value[i] >> 4];\n                      hex += HEX[value[i] & 0x0f];\n                    }\n                    messageDetails.push(key + \"=Uint8Array(0x\" + hex + \")\");\n                } else {\n                    messageDetails.push(key + \"=\" + JSON.stringify(value));\n                }\n            } catch (error) {\n                messageDetails.push(key + \"=\" + JSON.stringify(params[key].toString()));\n            }\n        });\n        messageDetails.push(`code=${ code }`);\n        messageDetails.push(`version=${ this.version }`);\n\n        const reason = message;\n\n        let url = \"\";\n\n        switch (code) {\n            case ErrorCode.NUMERIC_FAULT: {\n                url = \"NUMERIC_FAULT\";\n                const fault = message;\n\n                switch (fault) {\n                    case \"overflow\": case \"underflow\": case \"division-by-zero\":\n                        url += \"-\" + fault;\n                        break;\n                    case \"negative-power\": case \"negative-width\":\n                        url += \"-unsupported\";\n                        break;\n                    case \"unbound-bitwise-result\":\n                        url += \"-unbound-result\";\n                        break;\n                }\n                break;\n            }\n            case ErrorCode.CALL_EXCEPTION:\n            case ErrorCode.INSUFFICIENT_FUNDS:\n            case ErrorCode.MISSING_NEW:\n            case ErrorCode.NONCE_EXPIRED:\n            case ErrorCode.REPLACEMENT_UNDERPRICED:\n            case ErrorCode.TRANSACTION_REPLACED:\n            case ErrorCode.UNPREDICTABLE_GAS_LIMIT:\n                url = code;\n                break;\n        }\n\n        if (url) {\n            message += \" [ See: https:/\\/links.ethers.org/v5-errors-\" + url + \" ]\";\n        }\n\n        if (messageDetails.length) {\n            message += \" (\" + messageDetails.join(\", \") + \")\";\n        }\n\n        // @TODO: Any??\n        const error: any = new Error(message);\n        error.reason = reason;\n        error.code = code\n\n        Object.keys(params).forEach(function(key) {\n            error[key] = params[key];\n        });\n\n        return error;\n    }\n\n    throwError(message: string, code?: ErrorCode, params?: any): never {\n        throw this.makeError(message, code, params);\n    }\n\n    throwArgumentError(message: string, name: string, value: any): never {\n        return this.throwError(message, Logger.errors.INVALID_ARGUMENT, {\n            argument: name,\n            value: value\n        });\n    }\n\n    assert(condition: any, message: string, code?: ErrorCode, params?: any): void {\n        if (!!condition) { return; }\n        this.throwError(message, code, params);\n    }\n\n    assertArgument(condition: any, message: string, name: string, value: any): void {\n        if (!!condition) { return; }\n        this.throwArgumentError(message, name, value);\n    }\n\n    checkNormalize(message?: string): void {\n        if (message == null) { message = \"platform missing String.prototype.normalize\"; }\n        if (_normalizeError) {\n            this.throwError(\"platform missing String.prototype.normalize\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"String.prototype.normalize\", form: _normalizeError\n            });\n        }\n    }\n\n    checkSafeUint53(value: number, message?: string): void {\n        if (typeof(value) !== \"number\") { return; }\n\n        if (message == null) { message = \"value not safe\"; }\n\n        if (value < 0 || value >= 0x1fffffffffffff) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"out-of-safe-range\",\n                value: value\n            });\n        }\n\n        if (value % 1) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"non-integer\",\n                value: value\n            });\n        }\n    }\n\n    checkArgumentCount(count: number, expectedCount: number, message?: string): void {\n        if (message) {\n            message = \": \" + message;\n        } else {\n            message = \"\";\n        }\n\n        if (count < expectedCount) {\n            this.throwError(\"missing argument\" + message, Logger.errors.MISSING_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n\n        if (count > expectedCount) {\n            this.throwError(\"too many arguments\" + message, Logger.errors.UNEXPECTED_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n    }\n\n    checkNew(target: any, kind: any): void {\n        if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n\n    checkAbstract(target: any, kind: any): void {\n        if (target === kind) {\n            this.throwError(\n                \"cannot instantiate abstract class \" + JSON.stringify(kind.name) + \" directly; use a sub-class\",\n                Logger.errors.UNSUPPORTED_OPERATION,\n                { name: target.name, operation: \"new\" }\n            );\n        } else if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n\n    static globalLogger(): Logger {\n        if (!_globalLogger) { _globalLogger = new Logger(version); }\n        return _globalLogger;\n    }\n\n    static setCensorship(censorship: boolean, permanent?: boolean): void {\n        if (!censorship && permanent) {\n            this.globalLogger().throwError(\"cannot permanently disable censorship\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n\n        if (_permanentCensorErrors) {\n            if (!censorship) { return; }\n            this.globalLogger().throwError(\"error censorship permanent\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n\n        _censorErrors = !!censorship;\n        _permanentCensorErrors = !!permanent;\n    }\n\n    static setLogLevel(logLevel: LogLevel): void {\n        const level = LogLevels[logLevel.toLowerCase()];\n        if (level == null) {\n            Logger.globalLogger().warn(\"invalid log level - \" + logLevel);\n            return;\n        }\n        _logLevel = level;\n    }\n\n    static from(version: string): Logger {\n        return new Logger(version);\n    }\n}\n","export const version = \"wallet/5.7.0\";\n","\"use strict\";\n\nimport { getAddress } from \"@ethersproject/address\";\nimport { Provider, TransactionRequest } from \"@ethersproject/abstract-provider\";\nimport { ExternallyOwnedAccount, Signer, TypedDataDomain, TypedDataField, TypedDataSigner } from \"@ethersproject/abstract-signer\";\nimport { arrayify, Bytes, BytesLike, concat, hexDataSlice, isHexString, joinSignature, SignatureLike } from \"@ethersproject/bytes\";\nimport { hashMessage, _TypedDataEncoder } from \"@ethersproject/hash\";\nimport { defaultPath, HDNode, entropyToMnemonic, Mnemonic } from \"@ethersproject/hdnode\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { defineReadOnly, resolveProperties } from \"@ethersproject/properties\";\nimport { randomBytes } from \"@ethersproject/random\";\nimport { SigningKey } from \"@ethersproject/signing-key\";\nimport { decryptJsonWallet, decryptJsonWalletSync, encryptKeystore, ProgressCallback } from \"@ethersproject/json-wallets\";\nimport { computeAddress, recoverAddress, serialize, UnsignedTransaction } from \"@ethersproject/transactions\";\nimport { Wordlist } from \"@ethersproject/wordlists\";\n\n// -- For node.js only (default for debugging) --\n// import * as LitJsSdk from \"lit-js-sdk/build/index.node.js\";\n\n// -- For React etc, use the following instead --\n// @ts-ignore\nimport * as LitJsSdk from \"lit-js-sdk/build/index.js\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\n\nimport { ethers } from 'ethers'\n\nconst logger = new Logger(version);\n\nfunction isAccount(value: any): value is ExternallyOwnedAccount {\n    return (value != null && isHexString(value.privateKey, 32) && value.address != null);\n}\n\nfunction hasMnemonic(value: any): value is { mnemonic: Mnemonic } {\n    const mnemonic = value.mnemonic;\n    return (mnemonic && mnemonic.phrase);\n}\n\nexport interface PKPWalletProp{\n    pkpPubKey: string;\n    controllerAuthSig: any;\n    provider: string;\n    litNetwork?: any;\n    debug?: boolean;\n}\n\nexport interface PKPSigner{\n    initPKP(prop: PKPWalletProp): any;\n    runLitAction(toSign: Uint8Array | BytesLike): Promise<any>\n}\n\nexport class PKPWallet extends Signer implements ExternallyOwnedAccount, TypedDataSigner{\n\n    readonly address: string;\n    readonly provider: Provider;\n    pkpWalletProp: PKPWalletProp;\n    litNodeClient: any;\n    rpcProvider: any;\n\n    // Wrapping the _signingKey and _mnemonic in a getter function prevents\n    // leaking the private key in console.log; still, be careful! :)\n    readonly _signingKey: () => SigningKey;\n    readonly _mnemonic: () => Mnemonic;\n\n    async runLitAction(toSign: Uint8Array | BytesLike, sigName: string): Promise<any> {\n\n        if ( ! this.pkpWalletProp.controllerAuthSig || ! this.pkpWalletProp.pkpPubKey) {\n            throw new Error(\"controllerAuthSig and pkpPubKey are required\");\n        }\n\n        const res = await this.litNodeClient.executeJs({\n            code: `\n            (async () => {\n                const sigShare = await LitActions.signEcdsa({ toSign, publicKey, sigName });\n            })();`,\n            authSig: this.pkpWalletProp.controllerAuthSig,\n            jsParams: {\n                toSign,\n                publicKey: this.pkpWalletProp.pkpPubKey,\n                sigName,\n            },  \n        });\n        \n        return res.signatures[sigName]\n    }\n\n    constructor(prop?: PKPWalletProp) {\n        super();\n\n        this.pkpWalletProp = prop;\n\n        this.litNodeClient = new LitJsSdk.LitNodeClient({ \n            litNetwork: prop.litNetwork ?? 'serrano',\n            debug: prop.debug ?? false,\n        });\n\n        this.rpcProvider = new ethers.providers.JsonRpcBatchProvider(this.pkpWalletProp.provider);\n    }\n\n    get mnemonic() { \n        throw new Error(\"There's no mnemonic for a PKPWallet\");\n    };\n\n    get privateKey(): string {\n        throw new Error(\"There's no private key for a PKPWallet. (Can you imagine!?)\");\n    }\n     \n    get publicKey(): string { \n        return this.pkpWalletProp.pkpPubKey;\n     }\n\n    getAddress(): Promise<string> {\n        const addr = computeAddress(this.publicKey);\n        return Promise.resolve(addr);\n    }\n\n    connect(provider: Provider): Wallet {\n        throw new Error(\"PKPWallet cannot be connected to a provider\");\n        // return new Wallet(this, provider);\n    }\n\n    async init(){\n        await this.litNodeClient.connect();\n    }\n\n    async signTransaction(transaction: TransactionRequest): Promise<string> {\n\n        const addr = await this.getAddress();\n\n        if ( ! transaction['nonce'] ) {\n            transaction.nonce = await this.rpcProvider.getTransactionCount(addr);\n        }\n\n        if ( ! transaction['chainId'] ) {\n            transaction.chainId = (await this.rpcProvider.getNetwork()).chainId;\n        }\n\n        if ( ! transaction['gasPrice'] ) {\n            transaction.gasPrice = await this.rpcProvider.getGasPrice();\n        }\n\n        if ( ! transaction['gasLimit'] ) {\n            transaction.gasLimit = await this.rpcProvider.estimateGas(transaction);\n        }\n\n        return resolveProperties(transaction).then(async (tx) => {\n\n            if (tx.from != null) {\n                if (getAddress(tx.from) !== this.address) {\n                    logger.throwArgumentError(\"transaction from address mismatch\", \"transaction.from\", transaction.from);\n                }\n                delete tx.from;\n            }\n\n            const serializedTx = serialize(<UnsignedTransaction>tx);\n            const unsignedTxn = keccak256(serializedTx);\n\n            // -- lit action --\n            const toSign = arrayify(unsignedTxn);\n            const signature = (await this.runLitAction(toSign, 'pkp-eth-sign-tx')).signature;\n\n            // -- original code --\n            // const signature = this._signingKey().signDigest(unsignedTxn);\n\n            console.log(\"signature\", signature);\n\n            return serialize(<UnsignedTransaction>tx, signature);\n        });\n    }\n\n    async signMessage(message: Bytes | string): Promise<string> {\n\n        // return joinSignature(this._signingKey().signDigest(hashMessage(message)));\n\n        const toSign = arrayify(hashMessage(message));\n\n        const signature = await this.runLitAction(toSign, 'pkp-eth-sign-message');\n\n        return joinSignature({\n            r: '0x' + signature.r,\n            s: '0x' + signature.s,\n            v: signature.recid,\n        });\n;\n    }\n\n    async _signTypedData(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): Promise<string> {\n        // Populate any ENS names\n        const populated = await _TypedDataEncoder.resolveNames(domain, types, value, (name: string) => {\n            if (this.provider == null) {\n                logger.throwError(\"cannot resolve ENS names without a provider\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"resolveName\",\n                    value: name\n                });\n            }\n            return this.provider.resolveName(name);\n        });\n\n        // -- original code --\n        // return joinSignature(this._signingKey().signDigest(_TypedDataEncoder.hash(populated.domain, types, populated.value)));\n        \n        // -- lit action --\n        const toSign = _TypedDataEncoder.hash(populated.domain, types, populated.value);\n        const signature = await this.runLitAction(arrayify(toSign), 'pkp-eth-sign-typed-data');\n        return joinSignature({\n            r: '0x' + signature.r,\n            s: '0x' + signature.s,\n            v: signature.recid,\n        });\n    }\n\n    encrypt(password: Bytes | string, options?: any, progressCallback?: ProgressCallback): Promise<string> {\n        if (typeof(options) === \"function\" && !progressCallback) {\n            progressCallback = options;\n            options = {};\n        }\n\n        if (progressCallback && typeof(progressCallback) !== \"function\") {\n            throw new Error(\"invalid callback\");\n        }\n\n        if (!options) { options = {}; }\n\n        return encryptKeystore(this, password, options, progressCallback);\n    }\n\n    async sendTransaction(transaction: TransactionRequest | any): Promise<any> {\n        return await this.rpcProvider.sendTransaction(transaction);\n    };\n\n\n    /**\n     *  Static methods to create Wallet instances.\n     */\n    static createRandom(options?: any): Wallet {\n        let entropy: Uint8Array = randomBytes(16);\n\n        if (!options) { options = { }; }\n\n        if (options.extraEntropy) {\n            entropy = arrayify(hexDataSlice(keccak256(concat([ entropy, options.extraEntropy ])), 0, 16));\n        }\n\n        const mnemonic = entropyToMnemonic(entropy, options.locale);\n        return Wallet.fromMnemonic(mnemonic, options.path, options.locale);\n    }\n\n    static fromEncryptedJson(json: string, password: Bytes | string, progressCallback?: ProgressCallback): Promise<Wallet> {\n        return decryptJsonWallet(json, password, progressCallback).then((account) => {\n            return new Wallet(account);\n        });\n    }\n\n    static fromEncryptedJsonSync(json: string, password: Bytes | string): Wallet {\n        return new Wallet(decryptJsonWalletSync(json, password));\n    }\n\n    static fromMnemonic(mnemonic: string, path?: string, wordlist?: Wordlist): Wallet {\n        if (!path) { path = defaultPath; }\n        return new Wallet(HDNode.fromMnemonic(mnemonic, null, wordlist).derivePath(path));\n    }\n}\n\n\n\nexport class Wallet extends Signer implements ExternallyOwnedAccount, TypedDataSigner {\n\n    readonly address: string;\n    readonly provider: Provider;\n    pkpWalletProp: PKPWalletProp;\n    litNodeClient: any;\n\n    // Wrapping the _signingKey and _mnemonic in a getter function prevents\n    // leaking the private key in console.log; still, be careful! :)\n    readonly _signingKey: () => SigningKey;\n    readonly _mnemonic: () => Mnemonic;\n\n    constructor(privateKey?: BytesLike | ExternallyOwnedAccount | SigningKey, provider?: Provider) {\n        super();\n\n        if (isAccount(privateKey)) {\n            const signingKey = new SigningKey(privateKey.privateKey);\n            defineReadOnly(this, \"_signingKey\", () => signingKey);\n            defineReadOnly(this, \"address\", computeAddress(this.publicKey));\n\n            if (this.address !== getAddress(privateKey.address)) {\n                logger.throwArgumentError(\"privateKey/address mismatch\", \"privateKey\", \"[REDACTED]\");\n            }\n\n            if (hasMnemonic(privateKey)) {\n                const srcMnemonic = privateKey.mnemonic;\n                defineReadOnly(this, \"_mnemonic\", () => (\n                    {\n                        phrase: srcMnemonic.phrase,\n                        path: srcMnemonic.path || defaultPath,\n                        locale: srcMnemonic.locale || \"en\"\n                    }\n                ));\n                const mnemonic = this.mnemonic;\n                const node = HDNode.fromMnemonic(mnemonic.phrase, null, mnemonic.locale).derivePath(mnemonic.path);\n                if (computeAddress(node.privateKey) !== this.address) {\n                    logger.throwArgumentError(\"mnemonic/address mismatch\", \"privateKey\", \"[REDACTED]\");\n                }\n            } else {\n                defineReadOnly(this, \"_mnemonic\", (): Mnemonic => null);\n            }\n\n\n        } else {\n            if (SigningKey.isSigningKey(privateKey)) {\n                /* istanbul ignore if */\n                if (privateKey.curve !== \"secp256k1\") {\n                    logger.throwArgumentError(\"unsupported curve; must be secp256k1\", \"privateKey\", \"[REDACTED]\");\n                }\n                defineReadOnly(this, \"_signingKey\", () => (<SigningKey>privateKey));\n\n            } else {\n                // A lot of common tools do not prefix private keys with a 0x (see: #1166)\n                if (typeof(privateKey) === \"string\") {\n                    if (privateKey.match(/^[0-9a-f]*$/i) && privateKey.length === 64) {\n                        privateKey = \"0x\" + privateKey;\n                    }\n                }\n\n                const signingKey = new SigningKey(privateKey);\n                defineReadOnly(this, \"_signingKey\", () => signingKey);\n            }\n\n            defineReadOnly(this, \"_mnemonic\", (): Mnemonic => null);\n            defineReadOnly(this, \"address\", computeAddress(this.publicKey));\n        }\n\n        /* istanbul ignore if */\n        if (provider && !Provider.isProvider(provider)) {\n            logger.throwArgumentError(\"invalid provider\", \"provider\", provider);\n        }\n\n        defineReadOnly(this, \"provider\", provider || null);\n    }\n\n    get mnemonic(): Mnemonic { return this._mnemonic(); }\n    get privateKey(): string { return this._signingKey().privateKey; }\n    get publicKey(): string { return this._signingKey().publicKey; }\n\n    getAddress(): Promise<string> {\n        return Promise.resolve(this.address);\n    }\n\n    connect(provider: Provider): Wallet {\n        return new Wallet(this, provider);\n    }\n\n    signTransaction(transaction: TransactionRequest): Promise<string> {\n\n        return resolveProperties(transaction).then(async (tx) => {\n\n            if (tx.from != null) {\n                if (getAddress(tx.from) !== this.address) {\n                    logger.throwArgumentError(\"transaction from address mismatch\", \"transaction.from\", transaction.from);\n                }\n                delete tx.from;\n            }\n\n            const serializedTx = serialize(<UnsignedTransaction>tx);\n            const unsignedTxn = keccak256(serializedTx);\n\n            // -- lit action --\n            // const toSign = arrayify(unsignedTxn);\n            // const signature = (await this.runLitAction(toSign)).signature;\n\n            // -- original code --\n            const signature = this._signingKey().signDigest(unsignedTxn);\n\n            console.log(\"signature\", signature);\n\n            return serialize(<UnsignedTransaction>tx, signature);\n\n        });\n    }\n\n    async signMessage(message: Bytes | string): Promise<string> {\n        return joinSignature(this._signingKey().signDigest(hashMessage(message)));\n    }\n\n    async _signTypedData(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): Promise<string> {\n        // Populate any ENS names\n        const populated = await _TypedDataEncoder.resolveNames(domain, types, value, (name: string) => {\n            if (this.provider == null) {\n                logger.throwError(\"cannot resolve ENS names without a provider\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"resolveName\",\n                    value: name\n                });\n            }\n            return this.provider.resolveName(name);\n        });\n\n        return joinSignature(this._signingKey().signDigest(_TypedDataEncoder.hash(populated.domain, types, populated.value)));\n    }\n\n    encrypt(password: Bytes | string, options?: any, progressCallback?: ProgressCallback): Promise<string> {\n        if (typeof(options) === \"function\" && !progressCallback) {\n            progressCallback = options;\n            options = {};\n        }\n\n        if (progressCallback && typeof(progressCallback) !== \"function\") {\n            throw new Error(\"invalid callback\");\n        }\n\n        if (!options) { options = {}; }\n\n        return encryptKeystore(this, password, options, progressCallback);\n    }\n\n\n    /**\n     *  Static methods to create Wallet instances.\n     */\n    static createRandom(options?: any): Wallet {\n        let entropy: Uint8Array = randomBytes(16);\n\n        if (!options) { options = { }; }\n\n        if (options.extraEntropy) {\n            entropy = arrayify(hexDataSlice(keccak256(concat([ entropy, options.extraEntropy ])), 0, 16));\n        }\n\n        const mnemonic = entropyToMnemonic(entropy, options.locale);\n        return Wallet.fromMnemonic(mnemonic, options.path, options.locale);\n    }\n\n    static fromEncryptedJson(json: string, password: Bytes | string, progressCallback?: ProgressCallback): Promise<Wallet> {\n        return decryptJsonWallet(json, password, progressCallback).then((account) => {\n            return new Wallet(account);\n        });\n    }\n\n    static fromEncryptedJsonSync(json: string, password: Bytes | string): Wallet {\n        return new Wallet(decryptJsonWalletSync(json, password));\n    }\n\n    static fromMnemonic(mnemonic: string, path?: string, wordlist?: Wordlist): Wallet {\n        if (!path) { path = defaultPath; }\n        return new Wallet(HDNode.fromMnemonic(mnemonic, null, wordlist).derivePath(path));\n    }\n}\n\nexport function verifyMessage(message: Bytes | string, signature: SignatureLike): string {\n    return recoverAddress(hashMessage(message), signature);\n}\n\nexport function verifyTypedData(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>, signature: SignatureLike): string {\n    return recoverAddress(_TypedDataEncoder.hash(domain, types, value), signature);\n}","export const version = \"json-wallets/5.7.0\";\n","\"use strict\";\n\nimport { arrayify, Bytes, BytesLike, hexlify } from \"@ethersproject/bytes\";\nimport { toUtf8Bytes, UnicodeNormalizationForm } from '@ethersproject/strings';\n\nexport function looseArrayify(hexString: string): Uint8Array {\n    if (typeof(hexString) === 'string' && hexString.substring(0, 2) !== '0x') {\n        hexString = '0x' + hexString;\n    }\n    return arrayify(hexString);\n}\n\nexport function zpad(value: String | number, length: number): String {\n    value = String(value);\n    while (value.length < length) { value = '0' + value; }\n    return value;\n}\n\nexport function getPassword(password: Bytes | string): Uint8Array {\n    if (typeof(password) === 'string') {\n        return toUtf8Bytes(password, UnicodeNormalizationForm.NFKC);\n    }\n    return arrayify(password);\n}\n\nexport function searchPath(object: any, path: string): string {\n    let currentChild = object;\n\n    const comps = path.toLowerCase().split('/');\n    for (let i = 0; i < comps.length; i++) {\n\n        // Search for a child object with a case-insensitive matching key\n        let matchingChild = null;\n        for (const key in currentChild) {\n             if (key.toLowerCase() === comps[i]) {\n                 matchingChild = currentChild[key];\n                 break;\n             }\n        }\n\n        // Didn't find one. :'(\n        if (matchingChild === null) {\n            return null;\n        }\n\n        // Now check this child...\n        currentChild = matchingChild;\n    }\n\n    return currentChild;\n}\n\n// See: https://www.ietf.org/rfc/rfc4122.txt (Section 4.4)\nexport function uuidV4(randomBytes: BytesLike): string {\n    const bytes = arrayify(randomBytes);\n\n    // Section: 4.1.3:\n    // - time_hi_and_version[12:16] = 0b0100\n    bytes[6] = (bytes[6] & 0x0f) | 0x40;\n\n    // Section 4.4\n    // - clock_seq_hi_and_reserved[6] = 0b0\n    // - clock_seq_hi_and_reserved[7] = 0b1\n    bytes[8] = (bytes[8] & 0x3f) | 0x80;\n\n    const value = hexlify(bytes);\n\n    return [\n       value.substring(2, 10),\n       value.substring(10, 14),\n       value.substring(14, 18),\n       value.substring(18, 22),\n       value.substring(22, 34),\n    ].join(\"-\");\n}\n\n","\"use strict\";\n\nimport aes from \"aes-js\";\n\nimport { ExternallyOwnedAccount } from \"@ethersproject/abstract-signer\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { arrayify, Bytes } from \"@ethersproject/bytes\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { pbkdf2 } from \"@ethersproject/pbkdf2\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\nimport { Description } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { getPassword, looseArrayify, searchPath } from \"./utils\";\n\nexport interface _CrowdsaleAccount {\n    address: string;\n    privateKey: string;\n\n    _isCrowdsaleAccount: boolean;\n}\n\nexport class CrowdsaleAccount extends Description<_CrowdsaleAccount> implements ExternallyOwnedAccount {\n    readonly address: string;\n    readonly privateKey: string;\n    readonly mnemonic?: string;\n    readonly path?: string;\n\n    readonly _isCrowdsaleAccount: boolean;\n\n    isCrowdsaleAccount(value: any): value is CrowdsaleAccount {\n        return !!(value && value._isCrowdsaleAccount);\n    }\n}\n\n// See: https://github.com/ethereum/pyethsaletool\nexport function decrypt(json: string, password: Bytes | string): ExternallyOwnedAccount {\n    const data = JSON.parse(json);\n\n    password = getPassword(password);\n\n    // Ethereum Address\n    const ethaddr = getAddress(searchPath(data, \"ethaddr\"));\n\n    // Encrypted Seed\n    const encseed = looseArrayify(searchPath(data, \"encseed\"));\n    if (!encseed || (encseed.length % 16) !== 0) {\n        logger.throwArgumentError(\"invalid encseed\", \"json\", json);\n    }\n\n    const key = arrayify(pbkdf2(password, password, 2000, 32, \"sha256\")).slice(0, 16);\n\n    const iv = encseed.slice(0, 16);\n    const encryptedSeed = encseed.slice(16);\n\n    // Decrypt the seed\n    const aesCbc = new aes.ModeOfOperation.cbc(key, iv);\n    const seed = aes.padding.pkcs7.strip(arrayify(aesCbc.decrypt(encryptedSeed)));\n\n    // This wallet format is weird... Convert the binary encoded hex to a string.\n    let seedHex = \"\";\n    for (let i = 0; i < seed.length; i++) {\n        seedHex += String.fromCharCode(seed[i]);\n    }\n\n    const seedHexBytes = toUtf8Bytes(seedHex);\n\n    const privateKey = keccak256(seedHexBytes);\n\n    return new CrowdsaleAccount ({\n        _isCrowdsaleAccount: true,\n        address: ethaddr,\n        privateKey: privateKey\n    });\n}\n\n","\"use strict\";\n\nimport { getAddress } from \"@ethersproject/address\";\n\n\nexport function isCrowdsaleWallet(json: string): boolean {\n    let data: any = null;\n    try {\n        data = JSON.parse(json);\n    } catch (error) { return false; }\n\n    return (data.encseed && data.ethaddr);\n}\n\nexport function isKeystoreWallet(json: string): boolean {\n    let data: any = null;\n    try {\n        data = JSON.parse(json);\n    } catch (error) { return false; }\n\n    if (!data.version || parseInt(data.version) !== data.version || parseInt(data.version) !== 3) {\n        return false;\n    }\n\n    // @TODO: Put more checks to make sure it has kdf, iv and all that good stuff\n    return true;\n}\n\n//export function isJsonWallet(json: string): boolean {\n//    return (isSecretStorageWallet(json) || isCrowdsaleWallet(json));\n//}\n\nexport function getJsonWalletAddress(json: string): string {\n    if (isCrowdsaleWallet(json)) {\n        try {\n            return getAddress(JSON.parse(json).ethaddr);\n        } catch (error) { return null; }\n    }\n\n    if (isKeystoreWallet(json)) {\n        try {\n            return getAddress(JSON.parse(json).address);\n        } catch (error) { return null; }\n    }\n\n    return null;\n}\n\n","\"use strict\";\n\nimport aes from \"aes-js\";\nimport scrypt from \"scrypt-js\";\n\nimport { ExternallyOwnedAccount } from \"@ethersproject/abstract-signer\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { arrayify, Bytes, BytesLike, concat, hexlify } from \"@ethersproject/bytes\";\nimport { defaultPath, entropyToMnemonic, HDNode, Mnemonic, mnemonicToEntropy } from \"@ethersproject/hdnode\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { pbkdf2 as _pbkdf2 } from \"@ethersproject/pbkdf2\";\nimport { randomBytes } from \"@ethersproject/random\";\nimport { Description } from \"@ethersproject/properties\";\nimport { computeAddress } from \"@ethersproject/transactions\";\n\nimport { getPassword, looseArrayify, searchPath, uuidV4, zpad } from \"./utils\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n// Exported Types\n\nfunction hasMnemonic(value: any): value is { mnemonic: Mnemonic } {\n    return (value != null && value.mnemonic && value.mnemonic.phrase);\n}\n\nexport interface _KeystoreAccount {\n    address: string;\n    privateKey: string;\n    mnemonic?: Mnemonic;\n\n    _isKeystoreAccount: boolean;\n}\n\nexport class KeystoreAccount extends Description<_KeystoreAccount> implements ExternallyOwnedAccount {\n    readonly address: string;\n    readonly privateKey: string;\n    readonly mnemonic?: Mnemonic;\n\n    readonly _isKeystoreAccount: boolean;\n\n    isKeystoreAccount(value: any): value is KeystoreAccount {\n        return !!(value && value._isKeystoreAccount);\n    }\n}\n\nexport type ProgressCallback = (percent: number) => void;\n\nexport type EncryptOptions = {\n   iv?: BytesLike;\n   entropy?: BytesLike;\n   client?: string;\n   salt?: BytesLike;\n   uuid?: string;\n   scrypt?: {\n       N?: number;\n       r?: number;\n       p?: number;\n   }\n}\n\nfunction _decrypt(data: any, key: Uint8Array, ciphertext: Uint8Array): Uint8Array {\n    const cipher = searchPath(data, \"crypto/cipher\");\n    if (cipher === \"aes-128-ctr\") {\n        const iv = looseArrayify(searchPath(data, \"crypto/cipherparams/iv\"))\n        const counter = new aes.Counter(iv);\n\n        const aesCtr = new aes.ModeOfOperation.ctr(key, counter);\n\n        return arrayify(aesCtr.decrypt(ciphertext));\n    }\n\n    return null;\n}\n\nfunction _getAccount(data: any, key: Uint8Array): KeystoreAccount {\n    const ciphertext = looseArrayify(searchPath(data, \"crypto/ciphertext\"));\n\n    const computedMAC = hexlify(keccak256(concat([ key.slice(16, 32), ciphertext ]))).substring(2);\n    if (computedMAC !== searchPath(data, \"crypto/mac\").toLowerCase()) {\n        throw new Error(\"invalid password\");\n    }\n\n    const privateKey = _decrypt(data, key.slice(0, 16), ciphertext);\n\n    if (!privateKey) {\n        logger.throwError(\"unsupported cipher\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"decrypt\"\n        });\n    }\n\n    const mnemonicKey = key.slice(32, 64);\n\n    const address = computeAddress(privateKey);\n    if (data.address) {\n        let check = data.address.toLowerCase();\n        if (check.substring(0, 2) !== \"0x\") { check = \"0x\" + check; }\n\n        if (getAddress(check) !== address) {\n            throw new Error(\"address mismatch\");\n        }\n    }\n\n    const account: _KeystoreAccount = {\n        _isKeystoreAccount: true,\n        address: address,\n        privateKey: hexlify(privateKey)\n    };\n\n    // Version 0.1 x-ethers metadata must contain an encrypted mnemonic phrase\n    if (searchPath(data, \"x-ethers/version\") === \"0.1\") {\n        const mnemonicCiphertext = looseArrayify(searchPath(data, \"x-ethers/mnemonicCiphertext\"));\n        const mnemonicIv = looseArrayify(searchPath(data, \"x-ethers/mnemonicCounter\"));\n\n        const mnemonicCounter = new aes.Counter(mnemonicIv);\n        const mnemonicAesCtr = new aes.ModeOfOperation.ctr(mnemonicKey, mnemonicCounter);\n\n        const path = searchPath(data, \"x-ethers/path\") || defaultPath;\n        const locale = searchPath(data, \"x-ethers/locale\") || \"en\";\n\n        const entropy = arrayify(mnemonicAesCtr.decrypt(mnemonicCiphertext));\n\n        try {\n            const mnemonic = entropyToMnemonic(entropy, locale);\n            const node = HDNode.fromMnemonic(mnemonic, null, locale).derivePath(path);\n\n            if (node.privateKey != account.privateKey) {\n                throw new Error(\"mnemonic mismatch\");\n            }\n\n            account.mnemonic = node.mnemonic;\n\n        } catch (error) {\n            // If we don't have the locale wordlist installed to\n            // read this mnemonic, just bail and don't set the\n            // mnemonic\n            if (error.code !== Logger.errors.INVALID_ARGUMENT || error.argument !== \"wordlist\") {\n                throw error;\n            }\n        }\n    }\n\n    return new KeystoreAccount(account);\n}\n\ntype ScryptFunc<T> = (pw: Uint8Array, salt: Uint8Array, n: number, r: number, p: number, dkLen: number, callback?: ProgressCallback) => T;\ntype Pbkdf2Func<T> = (pw: Uint8Array, salt: Uint8Array, c: number, dkLen: number, prfFunc: string) => T;\n\nfunction pbkdf2Sync(passwordBytes: Uint8Array, salt: Uint8Array, count: number, dkLen: number, prfFunc: string): Uint8Array {\n    return arrayify(_pbkdf2(passwordBytes, salt, count, dkLen, prfFunc));\n}\n\nfunction pbkdf2(passwordBytes: Uint8Array, salt: Uint8Array, count: number, dkLen: number, prfFunc: string): Promise<Uint8Array> {\n    return Promise.resolve(pbkdf2Sync(passwordBytes, salt, count, dkLen, prfFunc));\n}\n\nfunction _computeKdfKey<T>(data: any, password: Bytes | string, pbkdf2Func: Pbkdf2Func<T>, scryptFunc: ScryptFunc<T>, progressCallback?: ProgressCallback): T {\n    const passwordBytes = getPassword(password);\n\n    const kdf = searchPath(data, \"crypto/kdf\");\n\n    if (kdf && typeof(kdf) === \"string\") {\n        const throwError = function(name: string, value: any): never {\n            return logger.throwArgumentError(\"invalid key-derivation function parameters\", name, value);\n        }\n\n        if (kdf.toLowerCase() === \"scrypt\") {\n            const salt = looseArrayify(searchPath(data, \"crypto/kdfparams/salt\"));\n            const N = parseInt(searchPath(data, \"crypto/kdfparams/n\"));\n            const r = parseInt(searchPath(data, \"crypto/kdfparams/r\"));\n            const p = parseInt(searchPath(data, \"crypto/kdfparams/p\"));\n\n            // Check for all required parameters\n            if (!N || !r || !p) { throwError(\"kdf\", kdf); }\n\n            // Make sure N is a power of 2\n            if ((N & (N - 1)) !== 0) { throwError(\"N\", N); }\n\n            const dkLen = parseInt(searchPath(data, \"crypto/kdfparams/dklen\"));\n            if (dkLen !== 32) { throwError(\"dklen\", dkLen); }\n\n            return scryptFunc(passwordBytes, salt, N, r, p, 64, progressCallback);\n\n        } else if (kdf.toLowerCase() === \"pbkdf2\") {\n\n            const salt = looseArrayify(searchPath(data, \"crypto/kdfparams/salt\"));\n\n            let prfFunc: string = null;\n            const prf = searchPath(data, \"crypto/kdfparams/prf\");\n            if (prf === \"hmac-sha256\") {\n                prfFunc = \"sha256\";\n            } else if (prf === \"hmac-sha512\") {\n                prfFunc = \"sha512\";\n            } else {\n                throwError(\"prf\", prf);\n            }\n\n            const count = parseInt(searchPath(data, \"crypto/kdfparams/c\"));\n\n            const dkLen = parseInt(searchPath(data, \"crypto/kdfparams/dklen\"));\n            if (dkLen !== 32) { throwError(\"dklen\", dkLen); }\n\n            return pbkdf2Func(passwordBytes, salt, count, dkLen, prfFunc);\n        }\n    }\n\n    return logger.throwArgumentError(\"unsupported key-derivation function\", \"kdf\", kdf);\n}\n\n\nexport function decryptSync(json: string, password: Bytes | string): KeystoreAccount {\n    const data = JSON.parse(json);\n\n    const key = _computeKdfKey(data, password, pbkdf2Sync, scrypt.syncScrypt);\n    return _getAccount(data, key);\n}\n\nexport async function decrypt(json: string, password: Bytes | string, progressCallback?: ProgressCallback): Promise<KeystoreAccount> {\n    const data = JSON.parse(json);\n\n    const key = await _computeKdfKey(data, password, pbkdf2, scrypt.scrypt, progressCallback);\n    return _getAccount(data, key);\n}\n\n\nexport function encrypt(account: ExternallyOwnedAccount, password: Bytes | string, options?: EncryptOptions, progressCallback?: ProgressCallback): Promise<string> {\n\n    try {\n        // Check the address matches the private key\n        if (getAddress(account.address) !== computeAddress(account.privateKey)) {\n            throw new Error(\"address/privateKey mismatch\");\n        }\n\n        // Check the mnemonic (if any) matches the private key\n        if (hasMnemonic(account)) {\n            const mnemonic = account.mnemonic;\n            const node = HDNode.fromMnemonic(mnemonic.phrase, null, mnemonic.locale).derivePath(mnemonic.path || defaultPath);\n\n            if (node.privateKey != account.privateKey) {\n                throw new Error(\"mnemonic mismatch\");\n            }\n        }\n\n    } catch (e) {\n        return Promise.reject(e);\n    }\n\n    // The options are optional, so adjust the call as needed\n    if (typeof(options) === \"function\" && !progressCallback) {\n        progressCallback = options;\n        options = {};\n    }\n    if (!options) { options = {}; }\n\n    const privateKey: Uint8Array = arrayify(account.privateKey);\n    const passwordBytes = getPassword(password);\n\n    let entropy: Uint8Array = null\n    let path: string = null;\n    let locale: string = null;\n    if (hasMnemonic(account)) {\n        const srcMnemonic = account.mnemonic;\n        entropy = arrayify(mnemonicToEntropy(srcMnemonic.phrase, srcMnemonic.locale || \"en\"));\n        path = srcMnemonic.path || defaultPath;\n        locale = srcMnemonic.locale || \"en\";\n    }\n\n    let client = options.client;\n    if (!client) { client = \"ethers.js\"; }\n\n    // Check/generate the salt\n    let salt: Uint8Array = null;\n    if (options.salt) {\n        salt = arrayify(options.salt);\n    } else {\n        salt = randomBytes(32);;\n    }\n\n    // Override initialization vector\n    let iv: Uint8Array = null;\n    if (options.iv) {\n        iv = arrayify(options.iv);\n        if (iv.length !== 16) { throw new Error(\"invalid iv\"); }\n    } else {\n       iv = randomBytes(16);\n    }\n\n    // Override the uuid\n    let uuidRandom: Uint8Array = null;\n    if (options.uuid) {\n        uuidRandom = arrayify(options.uuid);\n        if (uuidRandom.length !== 16) { throw new Error(\"invalid uuid\"); }\n    } else {\n        uuidRandom = randomBytes(16);\n    }\n\n    // Override the scrypt password-based key derivation function parameters\n    let N = (1 << 17), r = 8, p = 1;\n    if (options.scrypt) {\n        if (options.scrypt.N) { N = options.scrypt.N; }\n        if (options.scrypt.r) { r = options.scrypt.r; }\n        if (options.scrypt.p) { p = options.scrypt.p; }\n    }\n\n    // We take 64 bytes:\n    //   - 32 bytes   As normal for the Web3 secret storage (derivedKey, macPrefix)\n    //   - 32 bytes   AES key to encrypt mnemonic with (required here to be Ethers Wallet)\n    return scrypt.scrypt(passwordBytes, salt, N, r, p, 64, progressCallback).then((key) => {\n        key = arrayify(key);\n\n        // This will be used to encrypt the wallet (as per Web3 secret storage)\n        const derivedKey = key.slice(0, 16);\n        const macPrefix = key.slice(16, 32);\n\n        // This will be used to encrypt the mnemonic phrase (if any)\n        const mnemonicKey = key.slice(32, 64);\n\n        // Encrypt the private key\n        const counter = new aes.Counter(iv);\n        const aesCtr = new aes.ModeOfOperation.ctr(derivedKey, counter);\n        const ciphertext = arrayify(aesCtr.encrypt(privateKey));\n\n        // Compute the message authentication code, used to check the password\n        const mac = keccak256(concat([macPrefix, ciphertext]))\n\n        // See: https://github.com/ethereum/wiki/wiki/Web3-Secret-Storage-Definition\n        const data: { [key: string]: any } = {\n            address: account.address.substring(2).toLowerCase(),\n            id: uuidV4(uuidRandom),\n            version: 3,\n            crypto: {\n                cipher: \"aes-128-ctr\",\n                cipherparams: {\n                    iv: hexlify(iv).substring(2),\n                },\n                ciphertext: hexlify(ciphertext).substring(2),\n                kdf: \"scrypt\",\n                kdfparams: {\n                    salt: hexlify(salt).substring(2),\n                    n: N,\n                    dklen: 32,\n                    p: p,\n                    r: r\n                },\n                mac: mac.substring(2)\n            }\n        };\n\n        // If we have a mnemonic, encrypt it into the JSON wallet\n        if (entropy) {\n            const mnemonicIv = randomBytes(16);\n            const mnemonicCounter = new aes.Counter(mnemonicIv);\n            const mnemonicAesCtr = new aes.ModeOfOperation.ctr(mnemonicKey, mnemonicCounter);\n            const mnemonicCiphertext = arrayify(mnemonicAesCtr.encrypt(entropy));\n            const now = new Date();\n            const timestamp = (now.getUTCFullYear() + \"-\" +\n                               zpad(now.getUTCMonth() + 1, 2) + \"-\" +\n                               zpad(now.getUTCDate(), 2) + \"T\" +\n                               zpad(now.getUTCHours(), 2) + \"-\" +\n                               zpad(now.getUTCMinutes(), 2) + \"-\" +\n                               zpad(now.getUTCSeconds(), 2) + \".0Z\"\n                              );\n            data[\"x-ethers\"] = {\n                client: client,\n                gethFilename: (\"UTC--\" + timestamp + \"--\" + data.address),\n                mnemonicCounter: hexlify(mnemonicIv).substring(2),\n                mnemonicCiphertext: hexlify(mnemonicCiphertext).substring(2),\n                path: path,\n                locale: locale,\n                version: \"0.1\"\n            };\n        }\n\n        return JSON.stringify(data);\n    });\n}\n","\"use strict\";\n\nimport { Bytes } from \"@ethersproject/bytes\";\nimport { ExternallyOwnedAccount } from \"@ethersproject/abstract-signer\";\n\nimport { decrypt as decryptCrowdsale } from \"./crowdsale\";\nimport { getJsonWalletAddress, isCrowdsaleWallet, isKeystoreWallet } from \"./inspect\";\nimport { decrypt as decryptKeystore, decryptSync as decryptKeystoreSync, encrypt as encryptKeystore, EncryptOptions, ProgressCallback } from \"./keystore\";\n\nfunction decryptJsonWallet(json: string, password: Bytes | string, progressCallback?: ProgressCallback): Promise<ExternallyOwnedAccount> {\n    if (isCrowdsaleWallet(json)) {\n        if (progressCallback) { progressCallback(0); }\n        const account = decryptCrowdsale(json, password)\n        if (progressCallback) { progressCallback(1); }\n        return Promise.resolve(account);\n    }\n\n    if (isKeystoreWallet(json)) {\n        return decryptKeystore(json, password, progressCallback);\n    }\n\n    return Promise.reject(new Error(\"invalid JSON wallet\"));\n}\n\nfunction decryptJsonWalletSync(json: string, password: Bytes | string): ExternallyOwnedAccount {\n    if (isCrowdsaleWallet(json)) {\n        return decryptCrowdsale(json, password)\n    }\n\n    if (isKeystoreWallet(json)) {\n        return decryptKeystoreSync(json, password);\n    }\n\n    throw new Error(\"invalid JSON wallet\");\n}\n\nexport {\n    decryptCrowdsale,\n\n    decryptKeystore,\n    decryptKeystoreSync,\n    encryptKeystore,\n\n    isCrowdsaleWallet,\n    isKeystoreWallet,\n    getJsonWalletAddress,\n\n    decryptJsonWallet,\n    decryptJsonWalletSync,\n\n    ProgressCallback,\n    EncryptOptions,\n};\n","export const version = \"solidity/5.7.0\";\n","\"use strict\";\n\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { arrayify, concat, hexlify, zeroPad } from \"@ethersproject/bytes\";\nimport { keccak256 as hashKeccak256 } from \"@ethersproject/keccak256\";\nimport { sha256 as hashSha256 } from \"@ethersproject/sha2\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\n\nconst regexBytes = new RegExp(\"^bytes([0-9]+)$\");\nconst regexNumber = new RegExp(\"^(u?int)([0-9]*)$\");\nconst regexArray = new RegExp(\"^(.*)\\\\[([0-9]*)\\\\]$\");\n\nconst Zeros = \"0000000000000000000000000000000000000000000000000000000000000000\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n\nfunction _pack(type: string, value: any, isArray?: boolean): Uint8Array {\n    switch(type) {\n        case \"address\":\n            if (isArray) { return zeroPad(value, 32); }\n            return arrayify(value);\n        case \"string\":\n            return toUtf8Bytes(value);\n        case \"bytes\":\n            return arrayify(value);\n        case \"bool\":\n            value = (value ? \"0x01\": \"0x00\");\n            if (isArray) { return zeroPad(value, 32); }\n            return arrayify(value);\n    }\n\n    let match =  type.match(regexNumber);\n    if (match) {\n        //let signed = (match[1] === \"int\")\n        let size = parseInt(match[2] || \"256\")\n\n        if ((match[2] && String(size) !== match[2]) || (size % 8 !== 0) || size === 0 || size > 256) {\n            logger.throwArgumentError(\"invalid number type\", \"type\", type)\n        }\n\n        if (isArray) { size = 256; }\n\n        value = BigNumber.from(value).toTwos(size);\n\n        return zeroPad(value, size / 8);\n    }\n\n    match = type.match(regexBytes);\n    if (match) {\n        const size = parseInt(match[1]);\n\n        if (String(size) !== match[1] || size === 0 || size > 32) {\n            logger.throwArgumentError(\"invalid bytes type\", \"type\", type)\n        }\n        if (arrayify(value).byteLength !== size) {\n            logger.throwArgumentError(`invalid value for ${ type }`, \"value\", value)\n        }\n        if (isArray) { return arrayify((value + Zeros).substring(0, 66)); }\n        return value;\n    }\n\n    match = type.match(regexArray);\n    if (match && Array.isArray(value)) {\n        const baseType = match[1];\n        const count = parseInt(match[2] || String(value.length));\n        if (count != value.length) {\n            logger.throwArgumentError(`invalid array length for ${ type }`, \"value\", value)\n        }\n        const result: Array<Uint8Array> = [];\n        value.forEach(function(value) {\n            result.push(_pack(baseType, value, true));\n        });\n        return concat(result);\n    }\n\n    return logger.throwArgumentError(\"invalid type\", \"type\", type)\n}\n\n// @TODO: Array Enum\n\nexport function pack(types: ReadonlyArray<string>, values: ReadonlyArray<any>) {\n    if (types.length != values.length) {\n        logger.throwArgumentError(\"wrong number of values; expected ${ types.length }\", \"values\", values)\n    }\n    const tight: Array<Uint8Array> = [];\n    types.forEach(function(type, index) {\n        tight.push(_pack(type, values[index]));\n    });\n    return hexlify(concat(tight));\n}\n\nexport function keccak256(types: ReadonlyArray<string>, values: ReadonlyArray<any>) {\n    return hashKeccak256(pack(types, values));\n}\n\nexport function sha256(types: ReadonlyArray<string>, values: ReadonlyArray<any>) {\n    return hashSha256(pack(types, values));\n}\n","\"use strict\";\n\nimport { AbiCoder, checkResultErrors, ConstructorFragment, defaultAbiCoder, ErrorFragment, EventFragment, FormatTypes, Fragment, FunctionFragment, Indexed, Interface, LogDescription, ParamType, Result, TransactionDescription }from \"@ethersproject/abi\";\nimport { getAddress, getCreate2Address, getContractAddress, getIcapAddress, isAddress } from \"@ethersproject/address\";\nimport * as base64 from \"@ethersproject/base64\";\nimport { Base58 as base58 } from \"@ethersproject/basex\";\nimport { arrayify, concat, hexConcat, hexDataSlice, hexDataLength, hexlify, hexStripZeros, hexValue, hexZeroPad, isBytes, isBytesLike, isHexString, joinSignature, zeroPad, splitSignature, stripZeros } from \"@ethersproject/bytes\";\nimport { _TypedDataEncoder, dnsEncode, hashMessage, id, isValidName, namehash } from \"@ethersproject/hash\";\nimport { defaultPath, entropyToMnemonic, getAccountPath, HDNode, isValidMnemonic, mnemonicToEntropy, mnemonicToSeed } from \"@ethersproject/hdnode\";\nimport { getJsonWalletAddress } from \"@ethersproject/json-wallets\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { computeHmac, ripemd160, sha256, sha512 } from \"@ethersproject/sha2\";\nimport { keccak256 as solidityKeccak256, pack as solidityPack, sha256 as soliditySha256 } from \"@ethersproject/solidity\";\nimport { randomBytes, shuffled } from \"@ethersproject/random\";\nimport { checkProperties, deepCopy, defineReadOnly, getStatic, resolveProperties, shallowCopy } from \"@ethersproject/properties\";\nimport * as RLP from \"@ethersproject/rlp\";\nimport { computePublicKey, recoverPublicKey, SigningKey } from \"@ethersproject/signing-key\";\nimport { formatBytes32String, nameprep, parseBytes32String, _toEscapedUtf8String, toUtf8Bytes, toUtf8CodePoints, toUtf8String, Utf8ErrorFuncs } from \"@ethersproject/strings\";\nimport { accessListify, computeAddress, parse as parseTransaction, recoverAddress, serialize as serializeTransaction, TransactionTypes } from \"@ethersproject/transactions\";\nimport { commify, formatEther, parseEther, formatUnits, parseUnits } from \"@ethersproject/units\";\nimport { verifyMessage, verifyTypedData } from \"@ethersproject/wallet\";\nimport { _fetchData, fetchJson, poll } from \"@ethersproject/web\";\n\n////////////////////////\n// Enums\n\nimport { SupportedAlgorithm } from \"@ethersproject/sha2\";\nimport { UnicodeNormalizationForm, Utf8ErrorReason } from \"@ethersproject/strings\";\nimport { UnsignedTransaction } from \"@ethersproject/transactions\";\n\n////////////////////////\n// Types and Interfaces\n\nimport { CoerceFunc } from \"@ethersproject/abi\";\nimport { Bytes, BytesLike, Hexable } from \"@ethersproject/bytes\"\nimport { Mnemonic } from \"@ethersproject/hdnode\";\nimport { EncryptOptions, ProgressCallback } from \"@ethersproject/json-wallets\";\nimport { Deferrable } from \"@ethersproject/properties\";\nimport { Utf8ErrorFunc } from \"@ethersproject/strings\";\nimport { AccessList, AccessListish } from \"@ethersproject/transactions\";\nimport { ConnectionInfo, FetchJsonResponse, OnceBlockable, OncePollable, PollOptions } from \"@ethersproject/web\";\n\n////////////////////////\n// Exports\n\nexport {\n    AbiCoder,\n    defaultAbiCoder,\n\n    Fragment,\n    ConstructorFragment,\n    ErrorFragment,\n    EventFragment,\n    FunctionFragment,\n    ParamType,\n    FormatTypes,\n\n    checkResultErrors,\n    Result,\n\n    Logger,\n\n    RLP,\n\n    _fetchData,\n    fetchJson,\n    poll,\n\n    checkProperties,\n    deepCopy,\n    defineReadOnly,\n    getStatic,\n    resolveProperties,\n    shallowCopy,\n\n    arrayify,\n\n    concat,\n    stripZeros,\n    zeroPad,\n\n    isBytes,\n    isBytesLike,\n\n    defaultPath,\n    HDNode,\n    SigningKey,\n\n    Interface,\n\n    LogDescription,\n    TransactionDescription,\n\n    base58,\n    base64,\n\n    hexlify,\n    isHexString,\n    hexConcat,\n    hexStripZeros,\n    hexValue,\n    hexZeroPad,\n    hexDataLength,\n    hexDataSlice,\n\n    nameprep,\n    _toEscapedUtf8String,\n    toUtf8Bytes,\n    toUtf8CodePoints,\n    toUtf8String,\n    Utf8ErrorFuncs,\n\n    formatBytes32String,\n    parseBytes32String,\n\n    dnsEncode,\n    hashMessage,\n    namehash,\n    isValidName,\n    id,\n\n    _TypedDataEncoder,\n\n    getAddress,\n    getIcapAddress,\n    getContractAddress,\n    getCreate2Address,\n    isAddress,\n\n    formatEther,\n    parseEther,\n\n    formatUnits,\n    parseUnits,\n\n    commify,\n\n    computeHmac,\n    keccak256,\n    ripemd160,\n    sha256,\n    sha512,\n\n    randomBytes,\n    shuffled,\n\n    solidityPack,\n    solidityKeccak256,\n    soliditySha256,\n\n    splitSignature,\n    joinSignature,\n\n    accessListify,\n    parseTransaction,\n    serializeTransaction,\n    TransactionTypes,\n\n    getJsonWalletAddress,\n\n    computeAddress,\n    recoverAddress,\n\n    computePublicKey,\n    recoverPublicKey,\n\n    verifyMessage,\n    verifyTypedData,\n\n    getAccountPath,\n    mnemonicToEntropy,\n    entropyToMnemonic,\n    isValidMnemonic,\n    mnemonicToSeed,\n\n\n    ////////////////////////\n    // Enums\n\n    SupportedAlgorithm,\n\n    UnicodeNormalizationForm,\n    Utf8ErrorReason,\n\n    ////////////////////////\n    // Types\n\n    Bytes,\n    BytesLike,\n    Hexable,\n\n    AccessList,\n    AccessListish,\n    UnsignedTransaction,\n\n    CoerceFunc,\n\n    Indexed,\n\n    Mnemonic,\n\n    Deferrable,\n\n    Utf8ErrorFunc,\n\n    ConnectionInfo,\n    OnceBlockable,\n    OncePollable,\n    PollOptions,\n    FetchJsonResponse,\n\n    EncryptOptions,\n    ProgressCallback\n}\n\n","export const version = \"ethers/5.7.2\";\n","\"use strict\";\n\nimport { BaseContract, Contract, ContractFactory } from \"@ethersproject/contracts\";\n\nimport { BigNumber, FixedNumber } from \"@ethersproject/bignumber\";\n\nimport { Signer, VoidSigner } from \"@ethersproject/abstract-signer\";\nimport { PKPWallet, Wallet } from \"@ethersproject/wallet\";\n\nimport * as constants from \"@ethersproject/constants\";\n\nimport * as providers from \"@ethersproject/providers\";\nimport { getDefaultProvider } from \"@ethersproject/providers\";\n\nimport { Wordlist, wordlists} from \"@ethersproject/wordlists\";\n\nimport * as utils from \"./utils\";\n\nimport { ErrorCode as errors, Logger } from \"@ethersproject/logger\";\n\n////////////////////////\n// Types\n\nimport type { TypedDataDomain, TypedDataField } from \"@ethersproject/abstract-signer\";\nimport { BigNumberish } from \"@ethersproject/bignumber\";\nimport { Bytes, BytesLike, Signature } from \"@ethersproject/bytes\";\nimport { Transaction, UnsignedTransaction } from \"@ethersproject/transactions\";\n\n\n////////////////////////\n// Compile-Time Constants\n\n// This is generated by \"npm run dist\"\nimport { version } from \"./_version\";\n\nconst logger = new Logger(version);\n\n////////////////////////\n// Types\n\nimport {\n    ContractFunction,\n    ContractReceipt,\n    ContractTransaction,\n\n    Event,\n    EventFilter,\n\n    Overrides,\n    PayableOverrides,\n    CallOverrides,\n\n    PopulatedTransaction,\n\n    ContractInterface\n} from \"@ethersproject/contracts\";\n\n\n////////////////////////\n// Exports\n\nexport {\n    PKPWallet,\n    Signer,\n\n    Wallet,\n    VoidSigner,\n\n    getDefaultProvider,\n    providers,\n\n    BaseContract,\n    Contract,\n    ContractFactory,\n\n    BigNumber,\n    FixedNumber,\n\n    constants,\n    errors,\n\n    logger,\n\n    utils,\n\n    wordlists,\n\n\n    ////////////////////////\n    // Compile-Time Constants\n\n    version,\n\n\n    ////////////////////////\n    // Types\n\n    ContractFunction,\n    ContractReceipt,\n    ContractTransaction,\n    Event,\n    EventFilter,\n\n    Overrides,\n    PayableOverrides,\n    CallOverrides,\n\n    PopulatedTransaction,\n\n    ContractInterface,\n\n    TypedDataDomain,\n    TypedDataField,\n\n    BigNumberish,\n\n    Bytes,\n    BytesLike,\n\n    Signature,\n\n    Transaction,\n    UnsignedTransaction,\n\n    Wordlist\n};\n\n","\"use strict\";\n\n// To modify this file, you must update ./misc/admin/lib/cmds/update-exports.js\n\nimport * as ethers from \"./ethers\";\n\ntry {\n    const anyGlobal = (window as any);\n\n    if (anyGlobal._ethers == null) {\n        anyGlobal._ethers = ethers;\n    }\n} catch (error) { }\n\nexport { ethers };\n\nexport {\n    PKPWallet,\n    Signer,\n\n    Wallet,\n    VoidSigner,\n\n    getDefaultProvider,\n    providers,\n\n    BaseContract,\n    Contract,\n    ContractFactory,\n\n    BigNumber,\n    FixedNumber,\n\n    constants,\n    errors,\n\n    logger,\n\n    utils,\n\n    wordlists,\n\n\n    ////////////////////////\n    // Compile-Time Constants\n\n    version,\n\n\n    ////////////////////////\n    // Types\n\n    ContractFunction,\n    ContractReceipt,\n    ContractTransaction,\n    Event,\n    EventFilter,\n\n    Overrides,\n    PayableOverrides,\n    CallOverrides,\n\n    PopulatedTransaction,\n\n    ContractInterface,\n\n    TypedDataDomain,\n    TypedDataField,\n\n    BigNumberish,\n\n    Bytes,\n    BytesLike,\n\n    Signature,\n\n    Transaction,\n    UnsignedTransaction,\n\n    Wordlist\n} from \"./ethers\";\n"],"names":["this","version","_BN","logger","_constructorGuard","throwFault","global","define","NegativeOne","Zero","decode","encode","One","MaxUint256","require$$0","toHex","assert","rotr32","rotl32","sum32","sum32_5","ft_1","shaCommon","BlockHash","sum32_4","ch32","maj32","s0_256","s1_256","g0_256","g1_256","SHA256","rotr64_hi","rotr64_lo","shr64_hi","shr64_lo","sum64","sum64_hi","sum64_lo","sum64_4_hi","sum64_4_lo","sum64_5_hi","sum64_5_lo","SHA512","require$$1","require$$2","require$$3","require$$4","sum32_3","r","minAssert","minUtils","BN","utils","Base","inherits","curve","hash","curves","KeyPair","HmacDRBG","Signature","signature","EC","_ec","allowedTransactionKeys","RLP.encode","RLP.decode","getChecksumAddress","MAX_SAFE_INTEGER","log10","ibanLookup","safeDigits","ibanChecksum","getAddress","isAddress","getIcapAddress","getContractAddress","getCreate2Address","ForkEvent","BlockForkEvent","TransactionForkEvent","TransactionOrderForkEvent","Provider","forwardErrors","Signer","VoidSigner","isHexable","addSlice","isBytesLike","isHexString","isBytes","isInteger","arrayify","concat","stripZeros","zeroPad","HexCharacters","hexlify","hexDataLength","hexDataSlice","hexConcat","hexValue","hexStripZeros","hexZeroPad","splitSignature","joinSignature","id","flat","fromEntries","decode_arithmetic","read_payload","read_compressed_payload","signed","read_counts","read_ascending","read_deltas","read_member_array","read_mapped_map","read_linear_table","read_replacement_table","read_zero_terminated_array","read_transposed","read_emoji_trie","getData","VALID","IGNORED","MAPPED","EMOJI_ROOT","HYPHEN","UNDERSCORE","explode_cp","filter_fe0f","ens_normalize_post_check","ens_normalize","normalize","consume_emoji_reversed","nfc","Zeros","checkComponent","ensNameSplit","ensNormalize","isValidName","namehash","dnsEncode","messagePrefix","hashMessage","padding","hexPadRight","hexTrue","hexFalse","domainFieldTypes","domainFieldNames","checkString","domainChecks","getBaseEncoder","encodeType","TypedDataEncoder","ripemd160","sha256","sha512","en","keccak256","defineReadOnly","getStatic","resolveProperties","checkProperties","shallowCopy","opaque","_isFrozen","_deepCopy","deepCopy","Description","crypto","getNAF","getJSF","BaseCurve","BasePoint","ShortCurve","Point","JPoint","Position","getLength","rmPadding","constructLength","rand","_curve","getCurve","SigningKey","computePublicKey","recoverPublicKey","aes","N","MasterSecret","HardenedBit","getUpperMask","getLowerMask","bytes32","base58check","getWordlist","defaultPath","HDNode","entropyToMnemonic","mnemonicToEntropy","mnemonicToSeed","isValidMnemonic","getAccountPath","getGlobal","anyGlobal","randomBytes","shuffled","_pbkdf2","pbkdf2","decrypt","decryptCrowdsale","decryptKeystore","decryptKeystoreSync","TransactionTypes","handleAddress","handleNumber","transactionFields","computeAddress","recoverAddress","formatNumber","accessSetify","accessListify","formatAccessList","_serializeEip1559","_serializeEip2930","_serialize","serialize","_parseEipSignature","_parseEip1559","_parseEip2930","_parse","parse","isArray","base64","require","base64Encode","base64Decode","parseTransaction","getEventTag","Event","_TypedDataEncoder","WebSocket","defaultApiKey","getResult","checkError","stall","runtime","exports","undefined","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","obj","key","value","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","generator","create","Generator","context","Context","_invoke","state","GenStateSuspendedStart","method","arg","GenStateExecuting","Error","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","done","GenStateSuspendedYield","makeInvokeMethod","fn","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","invoke","resolve","reject","result","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","globalThis","Function","wasm","Uint8arrays","D","t","e","d","jt","Me","get","Oe","j","ee","compare","byteLength","Ie","te","reduce","o","n","_step","Uint8Array","s","_iterator","_createForOfIteratorHelperLoose","set","re","equals","Ut","charCodeAt","c","f","L","Math","log","b","R","u","p","M","C","y","w","l","x","F","E","A","J","ArrayBuffer","isView","buffer","byteOffset","Array","from","repeat","decodeUnsafe","qe","Ne","X","coerce","m","empty","Pe","se","fromHex","It","fromString","oe","isBinary","Lt","Ot","toString","ne","Ve","ke","$e","_e","B","qt","Nt","a","S","padStart","match","map","parseInt","TextEncoder","TextDecoder","g","Te","prefix","baseEncode","codePointAt","prefixCodePoint","baseDecode","_proto2","JSON","stringify","or","decoders","_proto3","RangeError","_ref","_ref2","encoder","decoder","_ref3","_ref4","_qe","alphabet","q","SyntaxError","_ref5","bitsPerChar","ue","identity","Pt","Re","De","base2","Tt","Je","ie","base8","Vt","Xe","ae","base10","kt","Ge","ce","base16","$t","base16upper","_t","Ke","de","base32","P","base32hex","Gt","base32hexpad","Qt","base32hexpadupper","Ht","base32hexupper","Kt","base32pad","Jt","base32padupper","Xt","base32upper","Rt","base32z","Wt","he","fe","base36","Zt","base36upper","Yt","Qe","pe","base58btc","v","base58flickr","er","be","le","tr","base64pad","rr","base64url","sr","base64urlpad","He","me","Dr","nr","ir","_step2","_iterator2","ur","base256emoji","We","ar","Ze","et","fr","Ye","hr","bytes","Ce","tt","pow","br","cr","pr","lr","mr","Cr","Er","gr","wr","yr","xr","vr","k","rt","encodingLength","G","T","encodeTo","O","I","K","Q","Digest","V","U","Ee","ge","$","subarray","code","size","digest","W","Hasher","we","H","ye","_ref6","_this","xe","Sr","Br","st","ot","subtle","_crypto$subtle$digest","ve","Mr","ut","zr","Dt","Ae","Ir","qr","Lr","Or","it","je","Vr","$r","kr","Tr","Nr","Pr","h","_r","Rr","Jr","_","Xr","ct","dt","Z","Y","Kr","Qr","at","ht","_Symbol$toStringTag","_Symbol$for","multihash","asCID","_baseCache","Map","defineProperties","_proto6","toV0","_h","createV0","toV1","_this$multihash","createV1","toJSON","isCID","decodeFirst","inspectBytes","multihashSize","digestSize","multihashCode","codec","_T3","test","console","warn","ft","pt","CID","bases","Hr","codecs","Zr","hasher","hashes","varint","Wr","bt","_extends","raw","json","Se","Qs","Et","lt","mt","Ct","substring","Fe","String","fromCharCode","Yr","utf8","hex","latin1","ascii","binary","gt","Be","es","wt","Ue","rs","yt","ze","xor","xt","z","us","Ds","Le","is","as","cs","ns","eo","vt","ds","LIT_CHAINS","ethereum","contractAddress","chainId","symbol","decimals","rpcUrls","blockExplorerUrls","vmType","polygon","fantom","xdai","bsc","arbitrum","avalanche","fuji","harmony","kovan","mumbai","goerli","ropsten","rinkeby","cronos","optimism","celo","aurora","eluvio","alfajores","xdc","evmos","evmosTestnet","LIT_SVM_CHAINS","solana","solanaDevnet","solanaTestnet","cosmos","kyve","evmosCosmos","evmosCosmosTestnet","ALL_LIT_CHAINS","LIT_COSMOS_CHAINS","LIT_NETWORKS","jalapeno","serrano","localhost","LIT_AUTH_SIG_CHAIN_KEYS","mostCommonString","arr","sort","filter","throwError","message","errorCode","_console","args","arguments","litConfig","debug","unshift","apply","getVarType","checkType","allowedTypes","paramName","functionName","throwOnError","_ref2$throwOnError","includes","join","checkIfAuthSigRequiresChainParam","authSig","chain","convertLitActionsParams","jsParams","convertedParams","entries","_i","_Object$entries","_Object$entries$_i","varType","initWasmEcdsaSdk","input","pako","inflate","base64ToUint8Array","init","imports","wbg","__wbindgen_is_object","arg0","val","getObject","__wbindgen_object_drop_ref","idx","heap","heap_next","dropObject","__wbg_process_5729605ce9d34ea8","addHeapObject","process","__wbg_versions_531e16e1a776ee97","versions","__wbg_node_18b58a160b60d170","node","__wbindgen_is_string","__wbg_require_edfaedd93e302925","handleError","arg1","arg2","getStringFromWasm0","__wbg_crypto_2bc4d5b05161de5b","__wbg_msCrypto_d003eebe62c636a9","msCrypto","__wbg_getRandomValues_99bbe8a65f4aef87","getRandomValues","__wbg_static_accessor_NODE_MODULE_bdc5ca9096c68aeb","__wbg_randomFillSync_378e02b85af41ab6","randomFillSync","getArrayU8FromWasm0","__wbg_new_693216e109162396","__wbg_stack_0ddaca5d1abfb52f","ptr0","passStringToWasm0","stack","__wbindgen_malloc","__wbindgen_realloc","len0","WASM_VECTOR_LEN","getInt32Memory0","__wbg_error_09919627ac0992f5","__wbindgen_free","__wbg_newnoargs_f579424187aa1717","__wbg_self_e23d74ae45fb17d1","__wbg_window_b4be7f48b24ac56e","window","__wbg_globalThis_d61b1f48a57191ae","__wbg_global_e7669da72fd7f239","__wbindgen_is_undefined","__wbg_call_89558c3e96703ca1","__wbg_buffer_5e74a88a1424a2e0","__wbg_new_e3b800e570795b3c","__wbg_newwithlength_5f4ce114a24dfe1e","__wbg_subarray_a68f835ca2af506f","__wbg_length_30803400a8f15c59","__wbg_set_5b8081e9d002f0df","__wbindgen_object_clone_ref","__wbindgen_throw","__wbindgen_memory","memory","_input","load","instance","__wbindgen_wasm_module","_exit2","Response","_temp3","_result2","arrayBuffer","WebAssembly","instantiate","_temp4","instantiateStreaming","body","recover","_await$WebAssembly$in","_catch","headers","Instance","base64abc","base64codes","getBase64Code","charCode","str","index","indexOf","missingOctets","endsWith","fill","cachedTextDecoder","ignoreBOM","fatal","cachegetUint8Memory0","getUint8Memory0","ptr","len","encodeString","cachedTextEncoder","encodeInto","view","buf","read","written","malloc","realloc","_ptr","mem","offset","cachegetInt32Memory0","Int32Array","combine_signature","R_x","R_y","shares","retptr","__wbindgen_add_to_stack_pointer","ptr1","len1","ptr2","r0","r1","__wbindgen_exn_store","initWasmBlsSdk","commitment_sizes_by_threshold","poly_sizes_by_threshold","wasmBlsSdkHelpers","sk_bytes_to_pk_bytes","pkBytes","wasmExports","set_sk_byte","derive_pk_from_sk","pkByte","get_pk_byte","sign_msg","sigBytes","set_msg_byte","_i3","sigByte","get_sig_byte","verify","verified","set_pk_byte","_i4","set_sig_byte","_i5","set_rng_values","msg","alert","RNG_VALUES_SIZE","get_rng_values_size","rngValues","Uint32Array","set_rng_value","encrypt","ctBytes","_i6","ctSize","_i7","ctByte","get_ct_byte","msgBytes","set_ct_byte","msgSize","_i9","msgByte","get_msg_byte","generate_poly","threshold","polySize","polyBytes","polyByte","get_poly_byte","get_msk_bytes","mskBytes","mskByte","get_msk_byte","get_mpk_bytes","mpkBytes","mpkByte","get_mpk_byte","get_mc_bytes","mcBytes","mcSize","mcByte","get_mc_byte","set_mc_bytes","set_mc_byte","get_skshare","skshareBytes","skshareByte","get_skshare_byte","get_pkshare","pkshareBytes","pkshareByte","get_pkshare_byte","combine_signatures","sigshares","shareIndex","share","shareHex","byte","sigIndex","byteIndex","set_signature_share_byte","set_share_indexes","combine_signature_shares","_sigByte","create_decryption_share","uiShareIndex","derivedShareIndex","_i10","dshareBytes","_i11","dshareByte","get_decryption_shares_byte","combine_decryption_shares","totalShares","encryptWithSymmetricKey","symmKey","data","iv","encryptedZipData","Blob","decryptWithSymmetricKey","encryptedBlob","recoveredIv","encryptedZipArrayBuffer","generateSymmetricKey","generateKey","SYMM_KEY_ALGO_PARAMS","importSymmetricKey","importKey","hashUnifiedAccessControlConditions","unifiedAccessControlConditions","conds","canonicalUnifiedAccessControlConditionFormatter","toHash","cond","operator","conditionType","canonicalSolRpcConditionFormatter","canonicalAccessControlConditionFormatter","canonicalEVMContractConditionFormatter","canonicalCosmosConditionFormatter","returnValueTest","path","comparator","solRpcConditions","requireV2Conditions","canonicalReturnValueTest","pdaInterface","params","pdaParams","fields","pdaKey","canonicalResourceIdFormatter","resId","baseUrl","orgId","role","extraData","hashResourceId","resourceId","canonicalAbiParams","param","functionAbi","canonicalAbi","inputs","outputs","constant","stateMutability","functionParams","hashEVMContractConditions","accessControlConditions","standardContractType","parameters","hashAccessControlConditions","combineBlsDecryptionShares","decryptionShares","networkPubKeySet","toDecrypt","shareAsBytes","uint8arrayFromString","decryptionShare","set_decryption_shares_byte","pkSetAsBytes","ciphertextAsBytes","superCtor","super_","TempCtor","number","base","endian","isBN","negative","words","red","_init","Buffer","wordSize","parseHex4Bits","string","parseHexByte","lowerBound","parseBase","start","end","mul","min","move","dest","src","num","max","left","right","cmp","_initNumber","_initArray","replace","_parseHex","_parseBase","toArray","ceil","off","_strip","limbLen","limbPow","total","mod","word","imuln","_iaddn","copy","_move","clone","_expand","_normSign","for","inspect","zeros","groupSizes","groupBases","smallMulTo","out","carry","ncarry","rword","maxJ","groupSize","groupBase","isZero","modrn","idivn","toNumber","ret","toBuffer","toArrayLike","ArrayType","reqLength","res","allocUnsafe","allocate","_toArrayLikeLE","position","shift","_toArrayLikeBE","_countBits","clz32","_zeroBits","bitLength","hi","zeroBits","toTwos","width","abs","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","uor","iuand","iand","and","uand","iuxor","ixor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","iadd","isub","add","sub","comb10MulTo","lo","mid","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","jumboMulTo","mulTo","mulf","isNegNum","muln","sqr","isqr","toBitArray","iushln","bits","carryMask","newCarry","ishln","iushrn","hint","extended","mask","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","_wordDiv","mode","bhi","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","r2","andln","acc","modn","egcd","isEven","yp","xp","im","isOdd","jm","gcd","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gten","gte","ltn","lten","lte","eqn","eq","Red","toRed","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","tmp","_tmp","K256","P224","P192","P25519","prime","_prime","Mont","imod","rinv","minv","ireduce","rlen","split","imulK","strip","output","outLen","mod3","one","nOne","lpow","inv","wnd","current","currentLen","mont","_permanentCensorErrors","_censorErrors","LogLevels","default","warning","_logLevel","_globalLogger","_normalizeError","missing","form","_checkNormalize","LogLevel","ErrorCode","HEX","Logger","_log","logLevel","level","toLowerCase","throwArgumentError","levels","DEBUG","INFO","WARNING","makeError","errors","UNKNOWN_ERROR","messageDetails","reason","url","NUMERIC_FAULT","fault","CALL_EXCEPTION","INSUFFICIENT_FUNDS","MISSING_NEW","NONCE_EXPIRED","REPLACEMENT_UNDERPRICED","TRANSACTION_REPLACED","UNPREDICTABLE_GAS_LIMIT","INVALID_ARGUMENT","argument","condition","assertArgument","checkNormalize","UNSUPPORTED_OPERATION","operation","checkSafeUint53","checkArgumentCount","count","expectedCount","MISSING_ARGUMENT","UNEXPECTED_ARGUMENT","checkNew","target","kind","checkAbstract","static","censorship","permanent","globalLogger","INPUT_ERROR","WINDOW","root","JS_SHA3_NO_WINDOW","WEB_WORKER","JS_SHA3_NO_NODE_JS","COMMON_JS","JS_SHA3_NO_COMMON_JS","ARRAY_BUFFER","JS_SHA3_NO_ARRAY_BUFFER","HEX_CHARS","CSHAKE_PADDING","SHIFT","RC","BITS","SHAKE_BITS","OUTPUT_TYPES","CSHAKE_BYTEPAD","JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW","createOutputMethod","outputType","Keccak","update","createShakeOutputMethod","outputBits","createCshakeOutputMethod","methods","createKmacOutputMethod","createOutputMethods","createMethod","algorithms","bytepad","Kmac","methodNames","algorithm","methodName","newMethodName","blocks","finalized","block","blockCount","byteCount","outputBlocks","extraBytes","notString","lastByteIndex","strs","finalize","array","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","b10","b11","b12","b13","b14","b15","b16","b17","b18","b19","b20","b21","b22","b23","b24","b25","b26","b27","b28","b29","b30","b31","b32","b33","b34","b35","b36","b37","b38","b39","b40","b41","b42","b43","b44","b45","b46","b47","b48","b49","address","chars","expanded","hashed","sha3","keccak_256","toUpperCase","floor","LN10","checksum","lookupNameServiceAddress","decimalPlaces","web3","JsonRpcProvider","contract","Contract","ERC20","signAndSaveAuthMessage","account","resources","uri","expiration","Date","now","preparedMessage","domain","location","host","expirationTime","toISOString","href","SiweMessage","prepareMessage","signMessage","_ref7","_temp18","signMessageAsync","getSigner","verifyMessage","_temp19","connectWeb3","resp","signedResult","sig","derivedVia","signedMessage","localStorage","setItem","commsKeyPair","nacl","box","keyPair","publicKey","naclUtil","encodeBase64","secretKey","checkAndSignEVMAuthMessage","switchChain","selectedChain","_temp12","_exit","_temp10","_result4","_temp8","_temp6","_signAndSaveAuthMessa2","mustResign","parsedSiwe","getItem","_temp7","_signAndSaveAuthMessa","selectedChainId","_temp14","_result","provider","WalletConnectProvider","_temp15","request","switchError","chainName","nativeCurrency","addError","_temp9","_temp11","getNetwork","_temp","_ref3$chainId","walletconnect","package","options","infuraId","rpc","LitConnectModal","providerOptions","dialog","getWalletProvider","Web3Provider","enable","listAccounts","accounts","signer","messageBytes","toUtf8Bytes","JsonRpcSigner","send","_temp21","_result5","_temp20","_await$signer$signMes","AUTH_SIGNATURE_BODY","uint8arrayToString","toBase58","signArbitrary","sorted","encodedSignedMsg","sortedObject","chain_id","account_number","sequence","fee","gas","amount","msgs","memo","digest_hex","sortedKeys","blobToBase64String","uint8arrayToStringFromLib","uint8array","encoding","uint8arrayFromStringFromLib","file","reader","FileReader","onloadend","readAsDataURL","_settle","pact","bind","observer","_Pact","onFulfilled","onRejected","callback","_forTo","check","_cycle","thenable","cosmosConditions","tokenList","myWalletAddress","all","_temp46","_result21","_exit11","humanizeComparator","formatUnits","humanizeCosmosConditions","group","_temp47","promises","evmContractConditions","_temp41","_result20","_exit9","humanizeEvmContractConditions","_temp42","_temp36","_result19","_exit7","humanizeSolRpcConditions","_temp37","humanizeEvmBasicAccessControlConditions","fixedConditions","containsOperator","_temp31","_result7","_exit5","tokenFromList","find","_temp30","_decimalPlaces","formatEther","_temp32","humanizeUnifiedAccessControlConditions","_temp22","_result6","_exit3","unlockLitWithKey","symmetricKey","mediaGridHolder","document","getElementById","fetch","encryptedZipDataUrl","_fetch","blob","encryptedZipBlob","decryptZip","decryptedFiles","mediaGridHtmlBody","innerHTML","lockedHeader","innerText","locked","encryptZip","zip","generateAsync","zipBlob","zipBlobArrayBuffer","exportKey","_crypto$subtle$export2","encryptedZip","importedSymmKey","decryptedZipArrayBuffer","JSZip","loadAsync","unzipped","files","checkAndSignAuthMessage","_ref$switchChain","chainInfo","connectSolProvider","getProvider","connect","_temp2","connectCosmosProvider","_keplr","keplr","offlineSigner","getOfflineSigner","getAccounts","parent","postMessage","parseResource","resource","protocol","config","alertWhenUnauthorized","minNodeCount","bootstrapUrls","litNetwork","connectedNodes","Set","serverKeys","ready","subnetPubKey","networkPubKey","configOverride","executeJs","ipfsId","authMethods","_this2","reqBody","encodedJs","nodePromises","getJsExecutionShares","handleNodePromises","success","responseData","signedData","sigShares","sigType","signatureShare","localX","localY","dataSigned","sigSharesWithEverything","combineBlsShares","validShares","wasmECDSA","combineEcdsaShares","recid","signatures","encodedSig","decryptedData","decryptions","algorithmType","ciphertext","decShares","decrypted","response","mostCommonLogs","logs","returnVal","allNodeLogs","allNodeResponses","rawNodeHTTPResponses","throwNodeError","getSignedChainDataToken","callRequests","_this4","iat","getChainDataSigningShare","exp","signatureShares","goodShares","every","unsignedJwt","getSignedToken","sessionSigs","_this6","formattedSolRpcConditions","formattedUnifiedAccessControlConditions","formattedAccessControlConditions","formattedEVMContractConditions","sigToPassToNode","getSigningShare","formattedResourceId","saveSigningCondition","permanant","_ref4$permanent","_this8","hashOfResourceId","_temp5","_step4","hashOfConditionsStr","hashOfConditions","_iterator4","authSigToSend","storeSigningConditionWithNode","hashOfResourceIdStr","_hashAccessControlCon","hashSolRpcConditions","_hashSolRpcConditions","_hashUnifiedAccessCon","getEncryptionKey","_this10","_step5","getDecryptionShare","saveEncryptionKey","encryptedSymmetricKey","_ref6$permanent","_this12","encryptedKey","hashOfKey","_temp13","storeEncryptionConditionWithNode","hashOfKeyStr","_hashAccessControlCon2","_hashSolRpcConditions2","_temp16","signWithEcdsa","signECDSA","share_data","local_x","local_y","signature_share","valid_shares","validate_and_sign_ecdsa","auth_sig","_this16","_step8","_iterator8","sign_condition_ecdsa","sendCommandToNode","handshakeWithSgx","urlWithPath","clientPublicKey","_ref16","ok","status","_response$headers$get","isJson","allSettled","responses","successes","_this32","rejected","mostCommonError","access_control_conditions","_step9","_this37","serverPubKey","serverPublicKey","subnetPublicKey","networkPublicKey","networkPublicKeySet","_iterator9","interval","setInterval","clearInterval","keysFromSingleNode","dispatchEvent","top","inIframe","origin","addEventListener","event","source","messageIsFromFrameParent","respondingToCommand","useLitPostMessageProxy","encryptionKey","listenForFrameParentMessages","frames","childFrameThatSentMessageIndex","_event$data","command","litNodeClient","listenForChildFrameMessages","encryptString","encodedString","encryptedString","encryptedData","decryptString","encryptedStringBlob","decryptedStringArrayBuffer","zipAndEncryptString","zipAndEncryptFiles","folder","encryptFile","_crypto$subtle$export4","fileAsArrayBuffer","encryptedFile","exportedSymmKey","decryptFile","disconnectWeb3","removeItem","createHtmlLIT","title","htmlBody","css","npmPackages","_ref7$npmPackages","scriptTags","getNpmPackage","packageName","PACKAGE_CACHE","statusText","fileToDataUrl","dataUrl","scriptDataUrl","mintLIT","quantity","_ref9","tokenAddress","LIT","mint","tx","wait","txReceipt","events","txHash","transactionHash","tokenId","mintingAddress","toggleLock","publicContent","sendMessageToFrameParent","LitNodeClient","encryptWithPubKey","receiverPublicKey","pubKeyUInt8Array","ephemeralKeyPair","decodeBase64","msgParamsUInt8Array","decodeUTF8","nonce","nonceLength","encryptedMessage","ephemPublicKey","decryptWithPrivKey","receiverPrivateKey","recieverEncryptionPrivateKey","decryptedMessage","open","encodeUTF8","findLITs","chainHexId","chainHexIdToChainName","_ref11","tokenIds","maxTokenId","balanceOfBatch","balances","tokenIdsWithNonzeroBalances","sendLIT","tokenMetadata","to","_ref12","_ref13","safeTransferFrom","litJsSdkLoadedInALIT","sandboxed","setTimeout","injectViewerIFrame","destinationId","fileUrl","className","URL","iframe","createElement","sandbox","loading","allow","appendChild","printError","verifyJwt","jwt","paraamName","pubKey","jwtParts","Boolean","header","payload","encryptFileAndZipWithMetadata","readme","metadata","_ref10","decryptZipFileWithMetadata","additionalAccessControlConditions","_zip$file$async","decryptedFile","_litNodeClient$getEnc","_litNodeClient$getEnc2","_interrupt2","downloadFile","filename","mimetype","element","setAttribute","style","display","click","removeChild","humanizeAccessControlConditions","_ref15","resolveName","getTokenList","erc721Promise","erc20Promise","tokens","encodeCallData","abi","ethers","Interface","encodeFunctionData","decodeCallResult","decodeFunctionResult","encryptWithBlsPubkey","pubkey","getSessionSigs","_ref2$resources","sessionCapabilities","sessionExpiration","signingTemplate","sessionKey","capabilities","walletSig","issuedAt","nodeAddress","toSign","uint8arrayKey","uint8arrayMessage","sign","detached","algo","siweMessage","sessionKeyUri","needToReSignSessionKey","_loop","_parseResource","some","capability","capabilityParts","waletSig","_checkAndSignAuthMess2","hashResourceIdForSigning","ab","base64StringToBlob","base64String","hashEncryptionKey","hasMnemonic","LitJsSdk.LitNodeClient","ethers.providers.JsonRpcBatchProvider","encryptKeystore","looseArrayify","zpad","getPassword","searchPath","uuidV4","CrowdsaleAccount","isCrowdsaleWallet","isKeystoreWallet","getJsonWalletAddress","KeystoreAccount","_decrypt","_getAccount","pbkdf2Sync","_computeKdfKey","decryptSync","decryptJsonWallet","decryptJsonWalletSync","pack","hashKeccak256","hashSha256"],"mappings":"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AAC,GAAG,CAAC,CAAC;AACtB,IAAI,IAAI,GAAG,GAAG,EAAE,GAAG,MAAM,CAAC;AAC1B,IAAI,IAAI,GAAG,GAAG,EAAE,KAAK,EAAE,CAAC;AACxB,IAAI,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACtB,IAAI,IAAI,GAAG,GAAG,EAAE,GAAG,MAAM,CAAC;AAC1B,IAAI,IAAI,GAAG,GAAG,EAAE,KAAK,EAAE,CAAC;AACxB,IAAI,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACtB,IAAI,IAAI,GAAG,GAAG,EAAE,GAAG,MAAM,CAAC;AAC1B,IAAI,IAAI,GAAG,GAAG,EAAE,KAAK,EAAE,CAAC;AACxB,IAAI,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACtB,IAAI,IAAI,GAAG,GAAG,EAAE,GAAG,MAAM,CAAC;AAC1B,IAAI,IAAI,GAAG,GAAG,EAAE,KAAK,EAAE,CAAC;AACxB,IAAI,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACtB,IAAI,IAAI,GAAG,GAAG,EAAE,GAAG,MAAM,CAAC;AAC1B,IAAI,IAAI,GAAG,GAAG,EAAE,KAAK,EAAE,CAAC;AACxB,IAAI,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACtB,IAAI,IAAI,GAAG,GAAG,EAAE,GAAG,MAAM,CAAC;AAC1B,IAAI,IAAI,GAAG,GAAG,EAAE,KAAK,EAAE,CAAC;AACxB,IAAI,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACtB,IAAI,IAAI,GAAG,GAAG,EAAE,GAAG,MAAM,CAAC;AAC1B,IAAI,IAAI,GAAG,GAAG,EAAE,KAAK,EAAE,CAAC;AACxB,IAAI,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACtB,IAAI,IAAI,GAAG,GAAG,EAAE,GAAG,MAAM,CAAC;AAC1B,IAAI,IAAI,GAAG,GAAG,EAAE,KAAK,EAAE,CAAC;AACxB,IAAI,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACtB,IAAI,IAAI,GAAG,GAAG,EAAE,GAAG,MAAM,CAAC;AAC1B,IAAI,IAAI,GAAG,GAAG,EAAE,KAAK,EAAE,CAAC;AACxB,IAAI,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACtB,IAAI,IAAI,GAAG,GAAG,EAAE,GAAG,MAAM,CAAC;AAC1B,IAAI,IAAI,GAAG,GAAG,EAAE,KAAK,EAAE,CAAC;AACxB,IAAI,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACtB,IAAI,IAAI,GAAG,GAAG,EAAE,GAAG,MAAM,CAAC;AAC1B,IAAI,IAAI,GAAG,GAAG,EAAE,KAAK,EAAE,CAAC;AACxB,IAAI,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACtB,IAAI,IAAI,GAAG,GAAG,EAAE,GAAG,MAAM,CAAC;AAC1B,IAAI,IAAI,GAAG,GAAG,EAAE,KAAK,EAAE,CAAC;AACxB,IAAI,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACtB,IAAI,IAAI,GAAG,GAAG,EAAE,GAAG,MAAM,CAAC;AAC1B,IAAI,IAAI,GAAG,GAAG,EAAE,KAAK,EAAE,CAAC;AACxB,IAAI,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACtB,IAAI,IAAI,GAAG,GAAG,EAAE,GAAG,MAAM,CAAC;AAC1B,IAAI,IAAI,GAAG,GAAG,EAAE,KAAK,EAAE,CAAC;AACxB,IAAI,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACtB,IAAI,IAAI,GAAG,GAAG,EAAE,GAAG,MAAM,CAAC;AAC1B,IAAI,IAAI,GAAG,GAAG,EAAE,KAAK,EAAE,CAAC;AACxB,IAAI,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACtB,IAAI,IAAI,GAAG,GAAG,EAAE,GAAG,MAAM,CAAC;AAC1B,IAAI,IAAI,GAAG,GAAG,EAAE,KAAK,EAAE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GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC9B,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC7B,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CA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,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC7B,IAAI,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC9B,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC7B,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,MAAM,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;AAC3D,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;AACtD,IAAI,EAAE,IAAI,SAAS,CAAC;AACpB;AACA,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC7B,IAAI,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC9B,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC7B,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,MAAM,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;AAC3D,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;AACtD,IAAI,EAAE,IAAI,SAAS,CAAC;AACpB;AACA,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC7B,IAAI,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC9B,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC7B,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,MAAM,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;AAC3D,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;AACtD,IAAI,EAAE,IAAI,SAAS,CAAC;AACpB;AACA,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC7B,IAAI,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC9B,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC7B,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,MAAM,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;AAC3D,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;AACtD,IAAI,EAAE,IAAI,SAAS,CAAC;AACpB;AACA,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC7B,IAAI,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC9B,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC7B,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,MAAM,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;AAC3D,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;AACtD,IAAI,EAAE,IAAI,SAAS,CAAC;AACpB;AACA,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC7B,IAAI,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC9B,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC7B,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,MAAM,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;AAC5D,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;AACvD,IAAI,GAAG,IAAI,SAAS,CAAC;AACrB;AACA,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC7B,IAAI,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC9B,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC7B,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,MAAM,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;AAC5D,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;AACvD,IAAI,GAAG,IAAI,SAAS,CAAC;AACrB;AACA,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC7B,IAAI,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC9B,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC7B,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,MAAM,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;AAC5D,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;AACvD,IAAI,GAAG,IAAI,SAAS,CAAC;AACrB;AACA,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC7B,IAAI,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC9B,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC7B,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,MAAM,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;AAC5D,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;AACvD,IAAI,GAAG,IAAI,SAAS,CAAC;AACrB;AACA,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC7B,IAAI,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC9B,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC7B,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,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G,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;AACrF,IAAI,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE;AAChC,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;AAChD,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;AAChD,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;AAChD,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;AAChD,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;AAChD,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;AAChD,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;AAChD,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;AAChD,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;AAChD,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;AAChD;AACA,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;AACzC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;AACzC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;AAChB,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;AAChB,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;AACjB,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;AACjB,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;AACjB,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;AACjB,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;AACjB,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;AACjB,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;AACjB,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;AACjB,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;AACzC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;AACzC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;AAChB,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;AAChB,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;AACjB,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;AACjB,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;AACjB,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;AACjB,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;AACjB,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;AACjB,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;AACjB,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;AACjB,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;AACzC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;AACzC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;AAChB,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;AAChB,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;AACjB,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;AACjB,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;AACjB,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;AACjB,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;AACjB,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;AACjB,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;AACjB,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;AACjB,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;AACzC,MAAM,CAAC,GAAG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C,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;AAC1C,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;AAC3C,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;AAC3C,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;AAC3C,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;AAC3C,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;AAC1C,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;AAC1C,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;AACxC,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;AACxC,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;AAC1C,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;AAC1C,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;AAC1C,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;AAC1C,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;AAC3C,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;AAC3C,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;AAC1C,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;AAC1C,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;AACxC,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;AACxC,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;AAC1C,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;AAC1C,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;AAC1C,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;AAC1C,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;AAC1C,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;AAC1C,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;AAC1C,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;AAC1C,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;AACxC,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;AACxC,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;AAC3C,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;AAC3C,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;AAC1C,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;AAC1C,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;AAC1C,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;AAC1C,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;AAC1C,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;AAC1C;AACA,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;AAC7B,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;AAC7B,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;AACjC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;AACjC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;AACjC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;AACjC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;AACjC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;AACjC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;AACjC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;AACjC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;AAC7B,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;AAC7B,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;AACjC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;AACjC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;AACjC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;AACjC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;AACjC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;AACjC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;AACjC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;AACjC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;AAC7B,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;AAC7B,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;AACjC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;AACjC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;AACjC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;AACjC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;AACjC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;AACjC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;AACjC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;AACjC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;AAC7B,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;AAC7B,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;AACjC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;AACjC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;AACjC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;AACjC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;AACjC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;AACjC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;AACjC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;AACjC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;AAC7B,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;AAC7B,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;AACjC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;AACjC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;AACjC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,C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C,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE;IAC5B,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAE,EAAE,CAAC,EAAE,EAAE,EAAE;IAC9D,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE;IAC5B,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAE,EAAE,CAAC,EAAE,EAAE,EAAE;IAChD,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAE,EAAE,CAAC,EAAE,EAAE,EAAE;IACzD,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE;IAC5B,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE;IAC5B,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE;IAC5B,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE;IAC5B,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE;IAC5B,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE;IAC5B,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC,EAAE,CAAE,EAAE,CAAE,EAAE,CAAC,EAAE,EAAE,EAAE;IACvC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC,E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UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;AAChD,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;AAChD,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;AAChD,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;AAChD,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;AAChD,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;AAChD,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;AAChD,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;AAChD,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;AAChD,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;AAChD,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;AAChD,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;AAChD,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;AAChD,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;AAChD,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;AAChD,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;AAChD,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;AAChD,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;AAChD,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;AAChD,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;AAChD,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;AAChD,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;AAChD,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;AAChD,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;AAChD,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;AAChD,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;AAChD,EAAE,UAAU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E,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;AACtD,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtD,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE;AACtD,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;AACtD,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE;AACtD,CAAC,CAAC;AACF;AACA,IAAI,EAAE,GAAG;AACT,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE;AACtD,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;AACtD,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE;AACtD,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE;AACtD,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE;AACtD,CAAC,CAAC;AACF;AACA,IAAI,CAAC,GAAG;AACR,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;AACxD,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE;AACxD,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC;AACxD,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE;AACxD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AI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;AACpgggggG,IAAI,IAAI,EAAE,GAAG,CAAC,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;AAC9ggggggG,IAAI,IAAI,EAAE,GAAG,CAAC,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE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C,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;AAC1C,YAAY,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;AAC1C,YAAY,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACzC,YAAY,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACzC,YAAY,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;AAC1C,YAAY,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;AAC1C,YAAY,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACzC,YAAY,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AACzC,YAAY,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;AAC1C,YAAY,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;AAC1C,YAAY,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AACzC,YAAY,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AACzC,YAAY,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;AAC1C,YAAY,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;AAC1C,YAAY,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACzC,YAAY,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACzC,YAAY,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;AAC1C,YAAY,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;AAC1C,YAAY,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACzC,YAAY,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACzC,YAAY,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;AAC1C,YAAY,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EA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AC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE;AACtF,MAAM,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE;AACtF,MAAM,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE;AACtF,MAAM,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE;AACtF,MAAM,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE;AACtF,MAAM,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE;AACtF,MAAM,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE;AACtF,MAAM,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE;AACtF,MAAM,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE;AACtF,MAAM,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE;AACtF,MAAM,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE;AACtF,MAAM,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE;AACtF,MAAM,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,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IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;AAC7B,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;AACtB,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;AAC7B,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;AACtB,IAAI,GAAG,IAAI,CAAC,EAAE,EAAE,GAAG,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;AAC/B,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;AACtB,IAAI,GAAG,IAAI,CAAC,EAAE,EAAE,GAAG,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;AAC/B,GAAG;AACH,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC;AACtB,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC;AACtB,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC;AACtB,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC;AACtB,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC;AACtB,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC;AACtB,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC;AACtB,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC;AACtB,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC;AACtB,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC;AACtB,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;AACtB,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;AACtB,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;AACtB,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;AACtB,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;AACtB,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;AACtB;AACA,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,IAAI,CAAC;AAC3B,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,IAAI,CAAC;AAC3B,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC;AAC3B,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC;AAC3B;AACA,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,IAAI,CAAC;AAC3B,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,IAAI,CAAC;AAC3B,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC;AAC3B,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC;AAC3B;AACA,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,IAAI,CAAC;AAC3B,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,IAAI,CAAC;AAC3B,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC;AAC3B,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC;AAC3B;AACA,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,IAAI,CAAC;AAC3B,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,IAAI,CAAC;AAC3B,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC;AAC3B,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC;AAC3B;AACA,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,IAAI,CAAC;AAC3B,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,IAAI,CAAC;AAC3B,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC;AAC3B,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC;AAC3B;AACA,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,IAAI,CAAC;AAC3B,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,IAAI,CAAC;AAC3B,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC;AAC3B,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC;AAC3B;AACA,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,IAAI,CAAC;AAC3B,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,IAAI,CAAC;AAC3B,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC;AAC3B,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC;AAC3B;AACA,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,IAAI,CAAC;AAC3B,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,IAAI,CAAC;AAC3B,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC;AAC3B,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC;AAC3B;AACA,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,IAAI,CAAC;AAC3B,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,IAAI,CAAC;AAC3B,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC;AAC3B,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC;AAC3B;AACA,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,IAAI,CAAC;AAC3B,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,IAAI,CAAC;AAC3B,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC;AAC3B,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC;AAC3B;AACA,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,IAAI,CAAC;AAC5B,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,IAAI,CAAC;AAC5B,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,KAAK,EAAE,GAAG,IAAI,CAAC;AAC5B,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,KAAK,EAAE,GAAG,IAAI,CAAC;AAC5B;AACA,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,IAAI,CAAC;AAC5B,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,IAAI,CAAC;AAC5B,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,KAAK,EAAE,GAAG,IAAI,CAAC;AAC5B,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,KAAK,EAAE,GAAG,IAAI,CAAC;AAC5B;AACA,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,IAAI,CAAC;AAC5B,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,IAAI,CAAC;AAC5B,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,KAAK,EAAE,GAAG,IAAI,CAAC;AAC5B,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,KAAK,EAAE,GAAG,IAAI,CAAC;AAC5B;AACA,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,IAAI,CAAC;AAC5B,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,IAAI,CAAC;AAC5B,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,KAAK,EAAE,GAAG,IAAI,CAAC;AAC5B,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,KAAK,EAAE,GAAG,IAAI,CAAC;AAC5B;AACA,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,IAAI,CAAC;AAC5B,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,IAAI,CAAC;AAC5B,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,KAAK,EAAE,GAAG,IAAI,CAAC;AAC5B,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,KAAK,EAAE,GAAG,IAAI,CAAC;AAC5B;AACA,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,IAAI,CAAC;AAC5B,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,IAAI,CAAC;AAC5B,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,KAAK,EAAE,GAAG,IAAI,CAAC;AAC5B,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,KAAK,EAAE,GAAG,IAAI,CAAC;AAC5B,CAAC;AACD;AACA,SAAS,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;AAChC,EAAE,IAAI,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE;AACtF,MAAM,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE;AACtF,MAAM,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE;AACtF,MAAM,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE;AACtF,MAAM,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE;AACtF,MAAM,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE;AACtF,MAAM,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE;AACtF,MAAM,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE;AACtF,MAAM,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE;AACtF,MAAM,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE;AACtF,MAAM,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE;AACtF,MAAM,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE;AACtF,MAAM,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE;AACtF,MAAM,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC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AC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,EAAE,yBAAyB,MAAM,CAAC;AAC/F,EAAE,EAAE,GAAG,GAAG,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC,IAAI,MAAM,CAAC;AAC/F,EAAE,EAAE,GAAG,GAAG,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC,IAAI,MAAM,CAAC;AAC/F,EAAE,EAAE,GAAG,GAAG,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,MAAM,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,IAAI,MAAM,CAAC;AAC/F,EAAE,EAAE,GAAG,GAAG,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,MAAM,CAAC,KAAK,EAAE,IAAI,EAAE,CAAC,IAAI,MAAM,CAAC;AAC/F,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,EAAE,MAAM,CAAC,KAAK,MAAM,CAAC;AACrC,EAAE,EAAE,GAAG,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC,IAAI,MAAM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,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC;AAC5C,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC;AAC5C,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC;AAC5C,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC;AAC5C,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC;AAC5C,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC;AAC5C,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC;AAC5C,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC;AAC5C,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC;AAC5C,EAAE,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC;AAC5C,EAAE,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC;AAC5C,EAAE,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC;AAC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AAC,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC;AAC1E,KAAK,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC;AAC1E,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC;AAC1E,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC;AACjE,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;AACb,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;AACb,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;AACb,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;AACb,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;AACb,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;AACb,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;AACb,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;AACb,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;AACb,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;AACb,IAAI,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC;AACf,IAAI,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC;AACf,IAAI,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC;AACf,IAAI,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC;AACf,IAAI,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC;AACf,IAAI,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;AAChB;AACA,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,EAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;AACf,EAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;AACf,EAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;AACf,EAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;AACf,EAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;AACf,EAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;AACf,EAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;AACf,EAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;AACf,EAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;AACf,EAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;AACf,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,EAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;AACf,EAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;AACf,EAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;AACf,EAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;AACf,EAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;AACf,EAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;AACf,EAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;AACf,EAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;AACf,EAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;AACf,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,EAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;AACf,EAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;AACf,EAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;AACf,EAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;AACf,EAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;AACf,EAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;AACf,EAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;AACf,EAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;AACf,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,EAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;AACf,EAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;AACf,EAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;AACf,EAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;AACf,EAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;AACf,EAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;AACf,EAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;AACf,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,EAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;AACf,EAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;AACf,EAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;AACf,EAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;AACf,EAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;AACf,EAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;AACf,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,EAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;AACf,EAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;AACf,EAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;AACf,EAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;AACf,EAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;AACf,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,EAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;AACf,EAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;AACf,EAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;AACf,EAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;AACf,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,EAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;AACf,EAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;AACf,EAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;AACf,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,EAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;AACf,EAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;AACf,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,EAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;AACf,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;AACZ,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;AACZ,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;AACZ,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;AACZ,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;AACZ,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;AACZ,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAChB,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;AACjB;AACA,EAAE,EAAE,KAAK,EAAE,GAAG,GAAG,CAAC;AAClB,EAAE,EAAE,KAAK,EAAE,GAAG,GAAG,CAAC;AAClB,EAAE,EAAE,KAAK,EAAE,GAAG,GAAG,CAAC;AAClB,EAAE,EAAE,KAAK,EAAE,GAAG,GAAG,CAAC;AAClB,EAAE,EAAE,KAAK,EAAE,GAAG,GAAG,CAAC;AAClB,EAAE,EAAE,KAAK,EAAE,GAAG,GAAG,CAAC;AAClB,EAAE,EAAE,KAAK,EAAE,GAAG,GAAG,CAAC;AAClB,EAAE,EAAE,KAAK,EAAE,GAAG,GAAG,CAAC;AAClB,EAAE,EAAE,KAAK,EAAE,GAAG,GAAG,CAAC;AAClB,EAAE,EAAE,KAAK,EAAE,GAAG,GAAG,CAAC;AAClB,EAAE,GAAG,IAAI,EAAE,GAAG,GAAG,CAAC;AAClB,EAAE,GAAG,IAAI,EAAE,GAAG,GAAG,CAAC;AAClB,EAAE,GAAG,IAAI,EAAE,GAAG,GAAG,CAAC;AAClB,EAAE,GAAG,IAAI,EAAE,GAAG,GAAG,CAAC;AAClB,EAAE,GAAG,IAAI,EAAE,GAAG,GAAG,CAAC;AAClB;AACA;AACA;AACA,EAAE,CAAC,GAAG,CAAC,CAAC;AACR,EAAE,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AACtE,EAAE,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AACtE,EAAE,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AACtE,EAAE,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AACtE,EAAE,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AACtE,EAAE,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AACtE,EAAE,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AACtE,EAAE,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AACtE,EAAE,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AACtE,EAAE,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AACtE,EAAE,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AACtE,EAAE,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AACtE,EAAE,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AACtE,EAAE,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AACtE,EAAE,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AACtE,EAAE,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AACtE,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB;AACA;AACA,EAAE,CAAC,GAAG,CAAC,CAAC;AACR,EAAE,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AACtE,EAAE,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AACtE,EAAE,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AACtE,EAAE,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AACtE,EAAE,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AACtE,EAAE,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AACtE,EAAE,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AACtE,EAAE,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AACtE,EAAE,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AACtE,EAAE,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AACtE,EAAE,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AACtE,EAAE,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AACtE,EAAE,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AACtE,EAAE,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AACtE,EAAE,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG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"}